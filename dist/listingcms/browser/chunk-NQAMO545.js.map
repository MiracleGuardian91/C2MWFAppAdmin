{"version":3,"sources":["src/app/admin/data-modeler1/classes/base-object.class.ts","src/app/admin/data-modeler1/classes/bmo.class.ts","src/app/admin/data-modeler1/classes/bmog.class.ts","src/app/admin/data-modeler1/classes/dm-component.class.ts","src/app/admin/data-modeler1/models1/dmog.model.ts","src/app/admin/data-modeler1/models1/bmo.model.ts","src/app/admin/data-modeler1/models1/bmog.model.ts","src/app/admin/data-modeler1/models1/formio.model.ts","src/app/admin/data-modeler1/models1/object-detail.class.ts","src/app/admin/data-modeler1/models1/condition.model.ts","src/app/admin/data-modeler1/models1/status.model.ts","src/app/admin/data-modeler1/classes/dmog.class.ts","src/app/admin/data-modeler1/classes/bm.class.ts","src/app/admin/data-modeler1/classes/object-control.class.ts","src/app/admin/data-modeler1/components1/bm-detail/bm-detail.component.ts","src/app/admin/data-modeler1/components1/bm-detail/bm-detail.component.html","src/app/admin/data-modeler1/services1/data-modeler-api.service1.ts","src/app/admin/data-modeler1/components1/bmo-detail/bmo-detail.component.ts","src/app/admin/data-modeler1/components1/bmo-detail/bmo-detail.component.html","src/app/admin/data-modeler1/components1/bmog-detail/bmog-detail.component.ts","src/app/admin/data-modeler1/components1/bmog-detail/bmog-detail.component.html","src/app/admin/data-modeler1/components1/dm-breadcrumbs/dm-breadcrumbs.component.ts","src/app/admin/data-modeler1/components1/dm-breadcrumbs/dm-breadcrumbs.component.html","src/app/admin/data-modeler1/components1/dm-header/dm-header.component.ts","src/app/admin/data-modeler1/components1/dm-menu/dm-menu.component.ts","src/app/admin/data-modeler1/components1/dm-menu/dm-menu.component.html","src/app/admin/data-modeler1/components1/dmo-condition/dmo-condition.component.ts","src/app/admin/data-modeler1/components1/dmo-condition/dmo-condition.component.html","src/app/admin/data-modeler1/components1/grid-header-mapper/grid-header-mapper.component.ts","src/app/admin/data-modeler1/components1/grid-header-mapper/grid-header-mapper.component.html","src/app/admin/data-modeler1/components1/dependent-fields-mapper/dependent-fields-mapper.component.ts","src/app/admin/data-modeler1/components1/dependent-fields-mapper/dependent-fields-mapper.component.html","src/app/admin/data-modeler1/components1/dmo-detail/dmo-detail.component.ts","src/app/admin/data-modeler1/components1/dmo-detail/dmo-detail.component.html","src/app/admin/data-modeler1/components1/dmo/dmo.component.ts","src/app/admin/data-modeler1/components1/dmo/dmo.component.html","src/app/admin/data-modeler1/components1/dmog-detail/dmog-detail.component.ts","src/app/admin/data-modeler1/components1/dmog-detail/dmog-detail.component.html","src/app/admin/data-modeler1/components1/dmog-form-view/dmog-form-view.component.ts","src/app/admin/data-modeler1/components1/dmog-form-view/dmog-form-view.component.html","src/app/admin/data-modeler1/const1/dmo.ts","src/app/admin/data-modeler1/components1/contextMenu/contextMenu.datatypes.ts","src/app/admin/data-modeler1/components1/share-dmo/share-dmo.component.ts","src/app/admin/data-modeler1/components1/share-dmo/share-dmo.component.html","src/app/admin/data-modeler1/components1/contextMenu/contextMenu.component.ts","src/app/admin/data-modeler1/components1/contextMenu/contextMenu.component.html","src/app/admin/data-modeler1/decorators/skipIfDisabled.decorator.ts","src/app/admin/data-modeler1/directives/resize-columns.directive.ts","node_modules/@angular/material/fesm2022/menu.mjs","src/app/admin/data-modeler1/components1/dmo-form-controls/dmo-form-controls.component.ts","src/app/admin/data-modeler1/components1/dmo-form-controls/dmo-form-controls.component.html","src/app/admin/data-modeler1/components1/dmog-new-design/dmog-container/dmog-container.component.ts","src/app/admin/data-modeler1/components1/dmog-new-design/dmog-container/dmog-container.component.html","src/app/admin/data-modeler1/directives/resizable-directive.directive.ts","node_modules/@angular/material/fesm2022/tabs.mjs","src/app/admin/data-modeler1/components1/dmog-settings/dmog-settings.component.ts","src/app/admin/data-modeler1/components1/dmog-settings/dmog-settings.component.html","src/app/admin/data-modeler1/components1/resizeable-panel/resizeable-panel.component.ts","src/app/admin/data-modeler1/components1/resizeable-panel/resizeable-panel.component.html","src/app/admin/data-modeler1/components1/dmog-new-design/contier-parent-row-settings/contier-parent-row-settings.component.ts","src/app/admin/data-modeler1/components1/dmog-new-design/contier-parent-row-settings/contier-parent-row-settings.component.html","src/app/admin/data-modeler1/components1/dmog-new-design/dmog-shared-dmo/dmog-shared-dmo.component.ts","src/app/admin/data-modeler1/components1/dmog-new-design/dmog-shared-dmo/dmog-shared-dmo.component.html","src/app/admin/data-modeler1/components1/dmog-new-design/dmocontrols/dmocontrols.component.ts","src/app/admin/data-modeler1/components1/dmog-new-design/dmocontrols/dmocontrols.component.html","src/app/admin/data-modeler1/components1/dmog-new-design/container-column-settings/container-column-settings.component.ts","src/app/admin/data-modeler1/components1/dmog-new-design/container-column-settings/container-column-settings.component.html","src/app/admin/data-modeler1/components1/dmog-new-design/dmog-sub-row-settings/dmog-sub-row-settings.component.ts","src/app/admin/data-modeler1/components1/dmog-new-design/dmog-sub-row-settings/dmog-sub-row-settings.component.html","src/app/admin/data-modeler1/components1/dmog-new-design/dmog-sub-column-settings/dmog-sub-column-settings.component.ts","src/app/admin/data-modeler1/components1/dmog-new-design/dmog-sub-column-settings/dmog-sub-column-settings.component.html","src/app/admin/data-modeler1/components1/dmog-new-design/left-side-panel/left-side-panel.component.ts","src/app/admin/data-modeler1/components1/dmog-new-design/left-side-panel/left-side-panel.component.html","src/app/admin/data-modeler1/data-modeler1.component.ts","src/app/admin/data-modeler1/data-modeler1.component.html","src/app/admin/data-modeler1/data-modeler1-routing.module.ts","src/app/admin/data-modeler1/data-modeler1.module.ts"],"sourcesContent":["import { StatusString } from \"@app/admin/BM/models\";\r\nimport { BM } from \"./bm.class\";\r\nimport { ObjectClass } from \"./object-class.type\";\r\n\r\nexport class BaseObject<P, C extends ObjectClass, T = any> {\r\n  public readonly id:                 string;\r\n  public readonly Name:               string;\r\n  public readonly Version:            string;\r\n  public readonly childrenMap?:       Partial<Record<string, C>>;\r\n  public Status:                      StatusString;\r\n  public Children:                    string[];\r\n  public root:                        BM;\r\n\r\n  constructor(obj: any = {}, public parent: P) {\r\n    this.id = obj.id || '';\r\n    this.Name = obj.Name || '';\r\n    this.Version = obj.Version || (parent as any)?.Version || '';\r\n    this.Children = obj.Children || [];\r\n    this.Status = obj.Status || '0';\r\n    this.childrenMap = {};\r\n  }\r\n\r\n  public getChild(guid: string) {\r\n   return this.childrenMap[guid]\r\n  }\r\n\r\n  public addChild(child: C) {\r\n    if (!this.Children.includes(child.id)){\r\n      this.Children.push(child.id);\r\n    }\r\n    this.childrenMap[child.id] = child;\r\n  }\r\n  \r\n  public addChildAt(child: C, index: number) {\r\n    if (!this.Children.includes(child.id)) {\r\n      this.Children = this.Children.slice(0, index).concat(child.id, this.Children.slice(index));\r\n    }\r\n    this.childrenMap[child.id] = child;\r\n  }\r\n\r\n  public removeChild(id: string) {\r\n    this.Children = this.Children.filter(cid => cid !== id);\r\n    delete this.childrenMap[id];\r\n  }\r\n\r\n  public update(obj: Partial<T> = {}) {\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      this[key] = value;\r\n    })\r\n  }\r\n\r\n  public unreference() {\r\n    const {childrenMap, parent, root, ...rest} = this;\r\n    if ('DMOGID' in this) {\r\n      delete rest['formData'];\r\n      delete rest['Children'];\r\n      delete rest['Roles'];\r\n    }\r\n    return rest; \r\n  }\r\n}","import { Share } from \"@app/admin/BM/models\";\r\nimport { BMOType, IBMO } from \"../models1\";\r\nimport { BaseObject } from \"./base-object.class\";\r\nimport { BMOG } from \"./bmog.class\";\r\nimport { DMOG } from \"./dmog.class\";\r\n\r\nexport class BMO extends BaseObject<BMOG, DMOG> {\r\n  BMOID:                number;\r\n  DisplayName:          string;\r\n  ShortDesc:            string;\r\n  LongDesc:             string;\r\n  Parent:               string;\r\n  Share:                Share[];\r\n  GUID:                 string;\r\n  BmoType:              BMOType;\r\n  SubProcessId:         string;\r\n  ChildProcessId:       string;\r\n  ParentProcessDmoGuid: string;\r\n  ChildProcessDmoGuid:  string;\r\n\r\n  constructor(obj: Partial<IBMO>, parent: BMOG) {\r\n    super(obj, parent);\r\n    this.BMOID = obj.BMOID;\r\n    this.DisplayName = obj.DisplayName;       \r\n    this.ShortDesc = obj.ShortDesc;\r\n    this.LongDesc = obj.LongDesc;\r\n    this.Parent = obj.Parent || parent.id;\r\n    this.Share = obj.Share || [];               \r\n    this.GUID = obj.GUID;\r\n    this.BmoType = obj.BmoType;       \r\n    this.SubProcessId = obj.SubProcessId; \r\n    this.ChildProcessId = obj.ChildProcessId;\r\n    this.ParentProcessDmoGuid = obj.ParentProcessDmoGuid;\r\n    this.ChildProcessDmoGuid =  obj.ChildProcessDmoGuid;\r\n    this.root = parent.parent;\r\n  }\r\n\r\n  get shared() {\r\n    return this.parent.Share.some(({value}) => value === this.id);\r\n  }\r\n}","import { Share } from \"@app/admin/BM/models\";\r\nimport { CanvasType, EnableTLCorner, IBMOG } from \"../models1\";\r\nimport { BaseObject } from \"./base-object.class\";\r\nimport { BM } from \"./bm.class\";\r\nimport { BMO } from \"./bmo.class\";\r\n\r\nexport class BMOG extends BaseObject<BM, BMO>  {\r\n  CanvasType: CanvasType;\r\n  LongDesc:   string;\r\n  Parent:     string;\r\n  BMOGID:     number;\r\n  Share:      Share[];\r\n  EnableTLCorner: EnableTLCorner;\r\n\r\n  constructor(obj: Partial<IBMOG>, parent: BM) {\r\n    super(obj, parent);\r\n    this.BMOGID = obj.BMOGID;\r\n    this.CanvasType = obj.CanvasType;\r\n    this.LongDesc = obj.LongDesc;\r\n    this.Parent = obj.Parent || parent.id;\r\n    this.Share = obj.Share || [];\r\n    this.root = parent;\r\n    this.EnableTLCorner = obj.EnableTLCorner;\r\n  }\r\n}","import { nameToGuid } from '@lib/util';\r\nimport { uniqueId } from 'lodash';\r\nimport {\r\n  DataSource,\r\n  DMOType,\r\n  IConditionBody,\r\n  IDMComponent,\r\n  Status,\r\n} from '../models1';\r\nimport { DMOG } from './dmog.class';\r\n\r\nexport class DMComponent implements Partial<IDMComponent> {\r\n  height:'';\r\n  rte=false;\r\n  ApiUrlOptions:\"\";\r\n  _protected = false;\r\n  parentDmo = null;\r\n  // action = 'submit';\r\n  authenticate = false;\r\n  allowCalculateOverride = false;\r\n  allowInput = false;\r\n  autoAdjust = false;\r\n  autofocus = false;\r\n  // block = false;\r\n  calculateValue = '';\r\n  clearOnHide = false;\r\n  clearOnRefresh = false;\r\n  clonedIndex = 0;\r\n  fromApi = true;\r\n  column = 0;\r\n  comparatorSelect = null;\r\n  compareOprator = null;\r\n  conditional = { show: null, when: null, eq: '' };\r\n  conditionNA = false;\r\n  conditions: IConditionBody[] = [];\r\n  customClass = '';\r\n  customDefaultValue = '';\r\n  dataGridLabel = false;\r\n  dataSrc = DataSource.Values;\r\n  dbIndex = false;\r\n  default_Value = '';\r\n  defaultValue = '';\r\n  description = '';\r\n  // disabled = false;\r\n  // disableOnInvalid = false;\r\n  // dmo_dataType = null;\r\n  dmoName: string = null;\r\n  dmoId: number = null;\r\n  enableDate = false;\r\n  enableTime = false;\r\n  errorLabel = '';\r\n  expression = '';\r\n  expressionMessage = '';\r\n  fieldSet = false;\r\n  // filter = '';\r\n  // hidden = false;\r\n  hideChild = false;\r\n  // hideLabel = false;\r\n  id = uniqueId();\r\n  image = false;\r\n  inline = false;\r\n  input = true;\r\n  inputType = null;\r\n  is24hourformat = false;\r\n  isalphanumeric = false;\r\n  isautoCrop = false;\r\n  isEncrypt = false;\r\n  israndom = false;\r\n  // isUploadEnabled = false;\r\n  key = null;\r\n  label = null;\r\n  labelMargin = 3;\r\n  labelPosition = 'top';\r\n  labelWidth = 30;\r\n  // leftIcon = '';\r\n  mask = false;\r\n  minlength = '';\r\n  minSearch = 0;\r\n  multiple = false;\r\n  persistent = false;\r\n  placeholder = '';\r\n  prefix = '';\r\n  protected = false;\r\n  RangeCal = null;\r\n  regxType = null;\r\n  refreshOn = '';\r\n  // rightIcon = '';\r\n  searchEnabled = false;\r\n  searchField = '';\r\n  selectFields = '';\r\n  showtooltip = false;\r\n  // size = 'md';\r\n  startwith = null;\r\n  status = Status.Active;\r\n  suffix = '';\r\n  tabindex = '';\r\n  tableView = true;\r\n  theme = 'info';\r\n  tooltip = '';\r\n  tree = false;\r\n  type = null;\r\n  unique = false;\r\n  // uploadDirectory = null;\r\n  uploadLimit = null;\r\n  uploadOnly = false;\r\n  // uploadOptions = null;\r\n  // uploadStorage = StorageProvider.Base64;\r\n  // uploadUrl = null;\r\n  useLocaleSettings = false;\r\n  validateOn = 'change';\r\n  values = [];\r\n  widget = null;\r\n  data = {\r\n    values: [],\r\n    json: [],\r\n    url: '',\r\n    headers: [],\r\n    resource: '',\r\n    custom: '',\r\n    apiparams: null,\r\n    apiurl: null,\r\n    fieldparams: null,\r\n    endpoint:null,\r\n    methodtype : null,\r\n    toggledepmapper : false,\r\n    dependentdatasrc : null,\r\n    dependentbody : null,\r\n    modelbody: null,\r\n    datasource: null,\r\n    mappings: [],\r\n    emitonstart: false,\r\n    dependencydmos: [],\r\n    dependentdmos: [],\r\n    kvboxmultiselect : false,\r\n  };\r\n  validate = {\r\n    required: false,\r\n    customPrivate: false,\r\n    maxLength: '',\r\n    disabled: false,\r\n    custom: '',\r\n    maxWords: null,\r\n    minLength: '',\r\n    minWords: null,\r\n    pattern: null,\r\n  };\r\n\r\n  guid: string;\r\n\r\n  get shared() {\r\n    return this.parent.Share.some(({ value }) => value === this.guid);\r\n  }\r\n\r\n  constructor(obj: Partial<IDMComponent> = {}, public parent: DMOG) {\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (value && typeof value === 'object' && !Array.isArray(value)) {\r\n        Object.entries(value).forEach(([k, v]) => {\r\n          if (!this[key]) this[key] = {};\r\n          this[key][k] = obj[key] && obj[key][k] ? obj[key][k] : v;\r\n        });\r\n      } else {\r\n        this[key] = obj[key] ?? this[key];\r\n      }\r\n    });\r\n    this.guid = obj.guid;\r\n  }\r\n\r\n  public clone() {\r\n    const cloned = new DMComponent(this, this.parent);\r\n    cloned.label = cloned.label + ` Copy ${this.clonedIndex}`;\r\n    cloned.dmoName = `${cloned.dmoName}_copy_${this.clonedIndex}`;\r\n    cloned.id = `${cloned.id}${this.clonedIndex}`;\r\n    cloned.clonedIndex = 0;\r\n    cloned.fromApi = false;\r\n    cloned.guid = this.guid + `clone + ${this.clonedIndex}`;\r\n    this.clonedIndex++;\r\n    return cloned;\r\n  }\r\n\r\n  public asObject(): Partial<IDMComponent> {\r\n    const { conditions, parent, clonedIndex, ...rest } = this;\r\n    return rest;\r\n  }\r\n\r\n  public dmoListByType(type?: DMOType) {\r\n    const list: { key: string; value: string; parent: string }[] = [];\r\n    Object.values(this.parent.root.childrenMap)\r\n      .flatMap((bmog) => Object.values(bmog.childrenMap))\r\n      .flatMap((bmo) => Object.values(bmo.childrenMap))\r\n      .flatMap((dmog) => Object.values(dmog.childrenMap))\r\n      .forEach((dmo) => {\r\n        if (type) {\r\n          if (dmo.type === type && dmo.dmoName !== this.dmoName) {\r\n            list.push({\r\n              key: dmo.guid,\r\n              value: dmo.label,\r\n              parent: dmo.parent.DisplayName,\r\n            });\r\n          }\r\n        } else {\r\n          if (!list.some((lst) => lst.key === dmo.guid))\r\n            list.push({\r\n              key: dmo.guid,\r\n              value: dmo.label,\r\n              parent: dmo.parent.DisplayName,\r\n            });\r\n        }\r\n      });\r\n    return list;\r\n  }\r\n\r\n  public addCondition(condition: IConditionBody) {\r\n    this.conditions.push(condition);\r\n  }\r\n}\r\n","import { Share, StatusString } from \"@app/admin/BM/models\";\r\nimport { IBaseObject } from \"./base-object.model\";\r\n\r\nexport interface IDMOG extends IBaseObject {\r\n  GUID:         string;\r\n  DMOGID:       number;\r\n  DisplayName:  string;\r\n  IsCollapsed:  StatusString;\r\n  DefCollapsed: StatusString;\r\n  showHelp:     StatusString;\r\n  LongDesc:     string;\r\n  Parent:       string;\r\n  Type:         DMOGType;\r\n  Share:        Share[];\r\n  LnkBmoDmogID: number;\r\n  IsHidden:     StatusString;\r\n  Children:     string[];\r\n  Roles?:       {Key: string, Value: string}[];\r\n  DMOGProps:string;\r\n  PrntDmogIDs:string;\r\n}\r\n\r\nexport enum DMOGType {\r\n  Standard = 'Normal',\r\n  Grid = 'Grid',\r\n  CardGroup='CardGroup'\r\n}\r\n\r\n\r\nexport interface OrderDmogItems {\r\n  lnkDmogId: number;\r\n  Guids: string;\r\n  hasParent: boolean;\r\n  DisplayName:string\r\n}","import { Share } from \"@app/admin/BM/models\";\r\nimport { IBaseObject } from \"./base-object.model\";\r\n\r\nexport interface IBMO extends IBaseObject {\r\n  BMOID:                number;\r\n  DisplayName:          string;\r\n  ShortDesc:            string;\r\n  LongDesc:             string;\r\n  Parent:               string;\r\n  Share:                Share[];\r\n  GUID:                 string;\r\n  BmoType:              BMOType;\r\n  SubProcessId:         string;\r\n  ChildProcessId:       string;\r\n  ParentProcessDmoGuid: string;\r\n  ChildProcessDmoGuid:  string;\r\n  ParentBMId?:          number;\r\n}\r\n\r\nexport enum BMOType {\r\n  Form = 'Forms',\r\n  Contact = 'Contacts',\r\n  Attachment = 'Attachments',\r\n  Document = 'Documents',\r\n  SubProcess = 'Subprocess',\r\n  ChildProcess = 'ChildProcess',\r\n  //SharedChildProcess = 'SharedChildProcess',\r\n}\r\nexport enum FormBmoType {\r\n  Form = 'Forms',\r\n}","import { Share } from \"@app/admin/BM/models\";\r\nimport { IBaseObject } from \"./base-object.model\";\r\n\r\nexport interface IBMOG extends IBaseObject {\r\n  CanvasType: CanvasType;\r\n  LongDesc:   string;\r\n  Parent:     string;\r\n  BMOGID:     number;\r\n  Share:      Share[];\r\n  EnableTLCorner : EnableTLCorner;\r\n}\r\n\r\nexport enum CanvasType {\r\n  Admin = 'AdminView',\r\n  Form = 'Form',\r\n  User = 'UserView',\r\n  View1 = 'View1',\r\n  View2 = 'View2',\r\n  View3 = 'View3',\r\n  View4 = 'View4',\r\n  View5 = 'View5',\r\n  View6 = 'View6',\r\n}\r\n\r\nexport enum EnableTLCorner {\r\n  Yes = '1',\r\n  No = '0',\r\n}\r\nexport const canvasType: Record<string, CanvasType> = {\r\n  'Admin View': CanvasType.Admin,\r\n  'Form View': CanvasType.Form,\r\n  'User View': CanvasType.User,\r\n  'View 1': CanvasType.View1,\r\n  'View 2': CanvasType.View2,\r\n  'View 3': CanvasType.View3,\r\n  'View 4': CanvasType.View4,\r\n  'View 5': CanvasType.View5,\r\n  'View 6': CanvasType.View6,\r\n}","import { KeyValue } from \"@app/admin/BM/models\";\r\nimport { DMOType, Status } from \".\";\r\n\r\nexport interface IFormio {\r\n  display: string;\r\n  components: IDMComponent[];\r\n  _id: string;\r\n}\r\n\r\nexport interface IDMComponent {\r\n  Height:'';\r\n  rte:boolean;\r\n  _protected: boolean;\r\n  action: string;\r\n  allowCalculateOverride: boolean;\r\n  allowInput: boolean;\r\n  authenticate: boolean;\r\n  autoAdjust: boolean;\r\n  autofocus: boolean;\r\n  block: boolean;\r\n  calculateValue: string;\r\n  clearOnHide: boolean;\r\n  clearOnRefresh: boolean;\r\n  conditional: {show: any, when: any, eq: string};\r\n  columns: Column[];\r\n  columns1: Column[];\r\n  comparatorSelect: KeyValue;\r\n  compareOprator: KeyValue;\r\n  components: IDMComponent[];\r\n  conditionNA: boolean;\r\n  customClass: string;\r\n  customDefaultValue: string;\r\n  data: Data;\r\n  dataGridLabel: boolean;\r\n  dbIndex: boolean;\r\n  dataSrc: DataSource;\r\n  datePicker: Datepicker;\r\n  datepickerMode: string;\r\n  default_Value: any;\r\n  defaultDate: string;\r\n  defaultValue: any;\r\n  description: string;\r\n  disabled: boolean;\r\n  disableOnInvalid: boolean;\r\n  displayInTimezone: string;\r\n  dmo_dataType: string;\r\n  dmoName: string;\r\n  enableDate: boolean;\r\n  enableTime: boolean;\r\n  errorLabel: string;\r\n  expression: string;\r\n  expressionMessage: string;\r\n  fieldSet: boolean;\r\n  fileMaxSize: string;\r\n  fileMinSize: string;\r\n  filePattern: string;\r\n  filter: string;\r\n  format: string;\r\n  height: string;\r\n  hidden: boolean;\r\n  hideChild: boolean;\r\n  hideLabel: boolean;\r\n  id: string;\r\n  image: boolean;\r\n  imageSize: string;\r\n  inline: boolean;\r\n  input: boolean;\r\n  inputMask: string;\r\n  inputType: string;\r\n  is24hourformat: boolean;\r\n  isalphanumeric: boolean;\r\n  isautoCrop: boolean;\r\n  isEncrypt: boolean;\r\n  israndom: boolean;\r\n  isUploadEnabled: boolean;\r\n  key: string;\r\n  kickbox: Kickbox;\r\n  label: string;\r\n  labelMargin: number;\r\n  labelPosition: string;\r\n  labelWidth: number;\r\n  leftIcon: string;\r\n  mappings: KeyValue[];\r\n  mask: boolean;\r\n  minlength: string;\r\n  minSearch: number;\r\n  multiple: boolean;\r\n  optionsLabelPosition: string;\r\n  parentDmo: KeyValue;\r\n  persistent: boolean;\r\n  placeholder: string;\r\n  prefix: string;\r\n  protected: boolean;\r\n  RangeCal: string;\r\n  refreshOn: string;\r\n  regxType: RegExType;\r\n  rightIcon: string;\r\n  searchEnabled: boolean;\r\n  searchField: string;\r\n  select: KeyValue[];\r\n  selectFields: string;\r\n  showtooltip: boolean;\r\n  size: string;\r\n  startwith: string;\r\n  status: Status;\r\n  suffix: string;\r\n  tabindex: string;\r\n  tableView: boolean;\r\n  theme: string;\r\n  template: string;\r\n  timePicker: Timepicker;\r\n  timezone: string;\r\n  tooltip: string;\r\n  tree: boolean;\r\n  type: DMOType | 'columns';\r\n  unique: boolean;\r\n  uploadDirectory: string;\r\n  uploadLimit: string;\r\n  uploadOnly: boolean;\r\n  uploadOptions: string;\r\n  uploadStorage: StorageProvider;\r\n  uploadUrl: string;\r\n  useLocaleSettings: boolean;\r\n  validate: Validate;\r\n  validateOn: string;\r\n  valueProperty: string;\r\n  values: Value[];\r\n  widget: Widget;\r\n  dmoId: number;\r\n  guid: string;\r\n  column: number;\r\n  ApiUrlOptions : string;\r\n}\r\n\r\ninterface Column {\r\n  columnId: number;\r\n  _protected: boolean;\r\n  allowInput: boolean;\r\n  autoAdjust: boolean;\r\n  autofocus: boolean;\r\n  dataGridLabel: boolean;\r\n  disabled: boolean;\r\n  enableDate: boolean;\r\n  enableTime: boolean;\r\n  fieldSet: boolean;\r\n  hidden: boolean;\r\n  image: boolean;\r\n  input: boolean;\r\n  mask: boolean;\r\n  multiple: boolean;\r\n  persistent: boolean;\r\n  searchEnabled: boolean;\r\n  tableView: boolean;\r\n  tree: boolean;\r\n  unique: boolean;\r\n  uploadOnly: boolean;\r\n  useLocaleSettings: boolean;\r\n  components: IDMComponent[];\r\n  condition: Condition[];\r\n  columns: Column[];\r\n  data: Data;\r\n  datePicker: Datepicker;\r\n  labelMargin: number;\r\n  labelWidth: number;\r\n  minSearch: number;\r\n  kickbox: Kickbox;\r\n  select: KeyValue[];\r\n  default_Value: any;\r\n  defaultValue: any;\r\n  customClass: string;\r\n  customDefaultValue: string;\r\n  dataSrc: DataSource;\r\n  datepickerMode: string;\r\n  defaultDate: string;\r\n  description: string;\r\n  displayInTimezone: string;\r\n  dmoName: string;\r\n  errorLabel: string;\r\n  fileMaxSize: string;\r\n  fileMinSize: string;\r\n  filePattern: string;\r\n  filter: string;\r\n  format: string;\r\n  height: string;\r\n  id: string;\r\n  imageSize: string;\r\n  inputMask: string;\r\n  inputType: string;\r\n  key: string;\r\n  label: string;\r\n  labelPosition: string;\r\n  optionsLabelPosition: string;\r\n  placeholder: string;\r\n  prefix: string;\r\n  refreshOn: string;\r\n  suffix: string;\r\n  searchField: string;\r\n  selectFields: string;\r\n  tabindex: string;\r\n  template: string;\r\n  theme: string;\r\n  timezone: string;\r\n  tooltip: string;\r\n  type: string;\r\n  validateOn: string;\r\n  valueProperty: string;\r\n  timePicker: Timepicker;\r\n  values: Value[];\r\n  widget: Widget;\r\n  validate: Validate;\r\n  width: number;\r\n  rowIndex: number;\r\n  offset: number;\r\n  push: number;\r\n  pull: number;\r\n  index: number;\r\n  dmoid: string;\r\n}\r\n\r\ninterface Widget {\r\n  type: string;\r\n  displayInTimezone: string;\r\n  language: string;\r\n  useLocaleSettings: boolean;\r\n  allowInput: boolean;\r\n  mode: string;\r\n  enableTime: boolean;\r\n  noCalendar: boolean;\r\n  format: string;\r\n  defaultDate: string;\r\n  hourIncrement: number;\r\n  minuteIncrement: number;\r\n  time_24hr: boolean;\r\n  minDate: any;\r\n  maxDate: any;\r\n}\r\n\r\nexport interface Validate {\r\n  required: boolean;\r\n  custom: string;\r\n  customPrivate: boolean;\r\n  minLength: string;\r\n  maxLength: string;\r\n  minWords: string;\r\n  maxWords: string;\r\n  pattern: string;\r\n  disabled: boolean;\r\n}\r\n\r\ninterface Kickbox {\r\n  enabled: boolean;\r\n}\r\n\r\nexport interface Data {\r\n  values: Value[];\r\n  json: JsonData[] | string;\r\n  url: string;\r\n  headers: KeyValue[];\r\n  resource: string;\r\n  custom: string;\r\n  apiparams: string;\r\n  apiurl: string;\r\n  fieldparams: string;\r\n  endpoint : string;\r\n  methodtype :MethodTypes;\r\n  toggledepmapper : boolean;\r\n  dependentdatasrc : string;\r\n  dependentbody : string;\r\n  modelbody: string;\r\n  datasource: string;\r\n  mappings: ASBMapping[];\r\n  emitonstart: boolean;\r\n  dependencydmos: ASBMapping[];\r\n  dependentdmos: DependentData[];\r\n  kvboxmultiselect : boolean;\r\n}\r\n\r\nexport interface JsonData {\r\n  TextField: string;\r\n  ValueField: string;\r\n  ParentKey: string;\r\n}\r\n\r\ninterface Datepicker {\r\n  showWeeks: boolean;\r\n  startingDay: number;\r\n  initDate: string;\r\n  minMode: string;\r\n  maxMode: string;\r\n  yearRows: number;\r\n  yearColumns: number;\r\n  minDate: any;\r\n  maxDate: any;\r\n}\r\n\r\ninterface Timepicker {\r\n  hourStep: number;\r\n  minuteStep: number;\r\n  showMeridian: boolean;\r\n  readonlyInput: boolean;\r\n  mousewheel: boolean;\r\n  arrowkeys: boolean;\r\n}\r\n\r\nexport interface Value {\r\n  label: string;\r\n  value: string;\r\n  shortcut?: string;\r\n}\r\n\r\n\r\nexport interface DMOConditions {\r\n  condition: Condition[];\r\n}\r\n\r\nexport interface Dmo1 {\r\n  condition: Condition[];\r\n}\r\n\r\nexport interface Condition {\r\n  id: string;\r\n  name: string;\r\n  version: string;\r\n  status: string;\r\n  shortDesc: string;\r\n  conditions: Conditions[];\r\n  executeElse: string;\r\n  action: KeyValue[];\r\n  conditionArea: Conditionarea;\r\n}\r\n\r\nexport enum MethodTypes {\r\n  GET = 'GET',\r\n  POST = 'POST',\r\n}\r\n\r\nexport enum GridViewDataSource{\r\n  WFApi = 'wf_apigetdata',\r\n  WFApiGateway = 'wf_apigateway',  \r\n  CustomApi = 'customapi',\r\n}\r\n\r\nexport enum DataSource {\r\n  Values = 'values',\r\n  WFApi = 'wfapigetdata',\r\n}\r\n\r\nexport enum CustomDataSource {\r\n  Country = 'wf_GetCountry',\r\n  State = 'wf_GetState',\r\n  City = 'wf_GetCity',\r\n  UserByRole = 'WF_API_ROLECONTROLUSER'\r\n}\r\n\r\nexport enum RegExType {\r\n  Alphabetic = 'alphabates',\r\n  Alphanumeric = 'alphanumeric',\r\n  Integer = 'integer',\r\n  Float = 'float',\r\n  Percent = 'percent',\r\n  Dollar = 'dollar',\r\n  Custom = 'custom',\r\n}\r\n\r\nexport enum StorageProvider {\r\n  Base64 = 'base64',\r\n  Dropbox = 'dropbox',\r\n  S3 = 's3',\r\n  Url = 'url',\r\n  Azure = 'azurefileservices',\r\n}\r\n\r\nexport interface Conditionarea {\r\n  key: string;\r\n  value: KeyValue[];\r\n}\r\n\r\nexport interface Conditions {\r\n  conditionId: string;\r\n  dmo: string;\r\n  exp: string;\r\n  value: string;\r\n  logical: string;\r\n  label: string;\r\n}\r\n\r\nexport interface ParentChildDmoData {\r\n  parentProcessId: string;\r\n  childProcessId: string;\r\n  childProcessName: string;\r\n  parentBMId: string;\r\n  parentProcessDmoGuid: string;\r\n  childProcessDmoGuid: string;\r\n}\r\n\r\n\r\nexport interface ASBMapping {\r\n  Name: string;\r\n  GUID: string;\r\n}\r\n\r\nexport interface DepColConfig  {\r\n  Name: string;\r\n  GUID: string;\r\n}\r\n\r\nexport interface DependentData {\r\n  name: string;\r\n}\r\n\r\n\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n} from '@angular/forms';\r\nimport { FormAction } from '@app/admin/wf/wfd/models/element-detail.class';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { DataModelerResponse } from '.';\r\n\r\n@Directive()\r\nexport abstract class ObjectDetail<Data, Parent>\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  @Input() title: string;\r\n  @Input() data: Data | undefined;\r\n  @Input() dmr: DataModelerResponse;\r\n  @Input() parent: Parent | undefined;\r\n  @Input() formActions: FormAction[] = [];\r\n  @Output() output = new EventEmitter<Data>();\r\n\r\n  public form: UntypedFormGroup;\r\n\r\n  public submitted = false;\r\n  public newObject = false;\r\n\r\n  protected componentActive = true;\r\n\r\n  get f() {\r\n    return this.form.controls as Record<keyof Data, AbstractControl>;\r\n  }\r\n\r\n  constructor(public ref: NgbActiveModal, protected fb: UntypedFormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.beforeFormInit();\r\n    this.initForm();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initFormActions();\r\n    this.afterFormInit();\r\n  }\r\n  private initFormActions() {\r\n    this.formActions.forEach((action) => {\r\n      this.form\r\n        .get(action.controlName)\r\n        .valueChanges.pipe(takeWhile((_) => this.componentActive))\r\n        .subscribe((val) => action.handler(val));\r\n    });\r\n  }\r\n\r\n  protected beforeFormInit() {}\r\n\r\n  protected initForm() {}\r\n\r\n  protected afterFormInit() {}\r\n\r\n  public onCancel() {\r\n    this.ref.close();\r\n  }\r\n\r\n  public onSubmit() {}\r\n\r\n  ngOnDestroy() {\r\n    this.componentActive = false;\r\n  }\r\n}\r\n","export interface IConditionBody {\r\n  Id:            string;\r\n  Name:          string;\r\n  Version:       string;\r\n  Status:        string;\r\n  ShortDesc:     string;\r\n  Conditions:    ICondition[];\r\n  ExecuteElse:   string;\r\n  Action:        Action[];\r\n  ConditionArea: ConditionArea;\r\n}\r\n\r\nexport interface Action {\r\n  key:    'Enabled' | 'Visible' | 'Mandatory';\r\n  value?: ActionState;\r\n}\r\n\r\nexport enum ActionState {\r\n  No,\r\n  Yes,\r\n  NA\r\n}\r\n\r\nexport interface ConditionArea {\r\n  key: ConditionAreaKey,\r\n  value: Value[];\r\n}\r\n\r\nexport type ConditionAreaKey =  'BusinessModelObject' | 'DataModelGroup' | 'DataModelObject' | 'Trigger';\r\n\r\ninterface Value {\r\n  Key:   string;\r\n  Value: string;\r\n}\r\n\r\nexport interface ICondition {\r\n  ConditionId: string;\r\n  Dmo:         string;\r\n  Exp:         string;\r\n  Value:       string;\r\n  Logical:     string;\r\n  Label:       string;\r\n}\r\n","export enum Status {\r\n  Active = '1',\r\n  Inactive = '0',\r\n}\r\n\r\nexport enum DMOStatus {\r\n  Active = '1',\r\n  Inactive = '2',\r\n}\r\n//Manish changes\r\nexport enum NotificationOption {\r\n  None = 0,\r\n  Custom_Notification = 1,  \r\n}","import { Share, StatusString } from \"@app/admin/BM/models\";\r\nimport { DMOGType, IDMComponent, IDMOG, IFormio } from \"../models1\";\r\nimport { BaseObject } from \"./base-object.class\";\r\nimport { BMO } from \"./bmo.class\";\r\nimport { DMComponent } from \"./dm-component.class\";\r\n\r\nexport class DMOG extends BaseObject<BMO, any>  {\r\n  GUID:         string;\r\n  DMOGID:       number;\r\n  DisplayName:  string;\r\n  IsCollapsed:  StatusString;\r\n  DefCollapsed: StatusString;\r\n  showHelp:     StatusString;\r\n  LongDesc:     string;\r\n  Parent:       string;\r\n  Type:         DMOGType;\r\n  Share:        Share[];\r\n  LnkBmoDmogID: number;\r\n  IsHidden:     StatusString;\r\n  declare Children:     string[];\r\n  Roles?:       {Key: string, Value: string}[];\r\n  DMOGProps:       string;\r\n  PrntDmogIDs:     string;\r\n  public formData: IFormio;\r\n  public readonly childrenMap: Partial<Record<string, DMComponent>> = {};\r\n\r\n  constructor(obj: Partial<IDMOG>, parent: BMO) {\r\n    super(obj, parent);\r\n    this.GUID = obj.GUID; \r\n    this.DMOGID = obj.DMOGID;\r\n    this.DisplayName = obj.DisplayName;\r\n    this.IsCollapsed = obj.IsCollapsed;\r\n    this.DefCollapsed = obj.DefCollapsed;\r\n    this.showHelp = obj.showHelp;\r\n    this.LongDesc = obj.LongDesc;\r\n    this.Parent = obj.Parent || parent.id;\r\n    this.Type = obj.Type;\r\n    this.Share = obj.Share || [];\r\n    this.LnkBmoDmogID = obj.LnkBmoDmogID;\r\n    this.IsHidden = obj.IsHidden;\r\n    this.Children = obj.Children || [];\r\n    this.Roles = obj.Roles || [];\r\n    this.root = parent.parent.parent;\r\n    this.formData = this.generateFormDataBoilerplate() as any;\r\n    this.DMOGProps=obj.DMOGProps;\r\n    this.PrntDmogIDs=  obj.PrntDmogIDs;\r\n  }\r\n\r\n  get shared() {\r\n    // return Object.values(this.root.childrenMap)\r\n    // .flatMap(bmog => Object.values(bmog.childrenMap))\r\n    // .filter(bmo => bmo.id !== this.parent.id)\r\n    // .some(bmo => bmo.childrenMap[this.id])\r\n    return this.parent.Share.some(({value}) => value === this.id);\r\n  }\r\n\r\n  public addFormData(formData: IFormio) {\r\n    if (formData?.components?.length > 0) {\r\n      this.formData = formData;\r\n    }\r\n  }\r\n\r\n  public addChild(child: DMComponent) {\r\n    if (!this.Children.includes(child.dmoName)){\r\n      this.Children.push(child.dmoName);\r\n    }\r\n    this.childrenMap[child.dmoName] = child;\r\n  }\r\n\r\n  public removeChild(name: string): void {\r\n    this.Children = this.Children.filter(c => c !== name);\r\n    delete this.childrenMap[name];\r\n  }\r\n\r\n  getChild(name: string) {\r\n    return this.childrenMap[name];\r\n  }\r\n\r\n  public findDmo(name: string): FormDataComponentInfo | null {\r\n    if (!name) return null;\r\n    const rows = this.formData.components;\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const dmo = rows[i];\r\n      // for (let j = 0; j < row.columns.length; j++) {\r\n      //   const col = row.columns[j];\r\n      //   for (let k = 0; k < col.components.length; k++) {\r\n      //     const dmo = col.components[k];\r\n          if (dmo.dmoName === name) {\r\n            return {\r\n              rowIndex: i, \r\n             columnIndex:i,\r\n             dmoIndex:i,\r\n              dmo,\r\n            };\r\n          }\r\n    //     }\r\n    //   }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public findDmoAndThen(name: string, cb: (info: FormDataComponentInfo | null) => any) {\r\n    const child = this.findDmo(name);\r\n    cb(child || null);\r\n    return child;\r\n  }\r\n\r\n  public update(obj: Partial<IDMOG> = {}): void {\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      this[key] = value;\r\n    });\r\n  }\r\n\r\n  private generateFormDataBoilerplate() {\r\n    return {\r\n      display: 'form',\r\n      // ROWS\r\n      components: [\r\n        {\r\n          input: false,\r\n          key: 'columns',\r\n          label: 'Columns',\r\n          type: 'columns',\r\n          // COLUMNS\r\n          columns: [\r\n            {\r\n              // DMOS\r\n              components: [\r\n              ],\r\n              width: 50,\r\n              offset: 0,\r\n              push: 0,\r\n              pull: 0,\r\n              type: 'column',\r\n              input: true,\r\n              key: 'column1',\r\n              hideOnChildrenHidden: false,\r\n              tableView: true\r\n            },\r\n            {\r\n              components: [],\r\n              width: 50,\r\n              offset: 0,\r\n              push: 0,\r\n              pull: 0,\r\n              type: 'column',\r\n              input: true,\r\n              key: 'column2',\r\n              hideOnChildrenHidden: false,\r\n              tableView: true\r\n            }\r\n          ],\r\n          tableView: false,\r\n          dataSrc: 2,\r\n          columns1: [\r\n            {\r\n              width: 50\r\n            },\r\n            {\r\n              width: 50\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      _id: this.id,\r\n    }\r\n  }\r\n}\r\n\r\nexport interface FormDataComponentInfo {\r\n  rowIndex: number, \r\n  columnIndex: number, \r\n  dmoIndex: number,\r\n  dmo: IDMComponent,\r\n}","import { Share, StatusString } from '@app/admin/BM/models';\r\nimport { nameToGuid } from '@lib/util';\r\nimport { IBM, ObjectType, DataModelerResponse, BMMode } from '../models1';\r\nimport { BaseObject } from './base-object.class';\r\nimport { BMO } from './bmo.class';\r\nimport { BMOG } from './bmog.class';\r\nimport { DMComponent } from './dm-component.class';\r\nimport { DMOG } from './dmog.class';\r\nimport { ObjectClass } from './object-class.type';\r\n\r\nexport class BM extends BaseObject<undefined, BMOG, IBM> {\r\n  DisplayName: string;\r\n  Mode: BMMode;\r\n  IntegrateWorkspace: string;\r\n  Description: string;\r\n  BMId: number;\r\n  Share: Share[];\r\n  ProcessName: string;\r\n  declare Status: StatusString;\r\n  EnableLoad: string;\r\n  ProcessId: string;\r\n  TypeId: string;\r\n  _selectedBMOG?: BMOG;\r\n  _selectedBMO?: BMO;\r\n  _selectedDMOG?: DMOG;\r\n\r\n  get selectedBMOG() {\r\n    return this._selectedBMOG;\r\n  }\r\n  set selectedBMOG(bmog: BMOG) {\r\n    this._selectedBMOG = bmog;\r\n  }\r\n\r\n  get selectedBMO() {\r\n    return this._selectedBMO;\r\n  }\r\n  set selectedBMO(bmo: BMO) {\r\n    this._selectedBMO = bmo;\r\n  }\r\n\r\n  get selectedDMOG() {\r\n    return this._selectedDMOG;\r\n  }\r\n  set selectedDMOG(bmo: DMOG) {\r\n    this._selectedDMOG = bmo;\r\n  }\r\n\r\n  constructor(obj: Partial<IBM>, parent: undefined) {\r\n    super(obj, parent);\r\n    this.DisplayName = obj.DisplayName;\r\n    this.Mode = obj.Mode;\r\n    this.IntegrateWorkspace = obj.IntegrateWorkspace || '0';\r\n    this.Description = obj.Description;\r\n    this.BMId = obj.BMId;\r\n    this.Share = obj.Share || [];\r\n    this.ProcessName = obj.ProcessName;\r\n    this.Status = obj.Status || '0';\r\n    this.EnableLoad = obj.EnableLoad;\r\n    this.ProcessId = obj.ProcessId;\r\n    this.TypeId = obj.TypeId;\r\n    this.root = this;\r\n  }\r\n\r\n  get published() {\r\n    return this.Mode === 'Published';\r\n  }\r\n\r\n  get payload() {\r\n    const { childrenMap, _selectedBMO, _selectedBMOG, _selectedDMOG, root, ...rest } = this;\r\n    const bmog = this.unreferenceChildren(childrenMap);\r\n    const bmo = {}\r\n    const dmog = {};\r\n    const dmo = {};\r\n    Object.values(this.childrenMap).forEach(bmog => {\r\n      Object.entries(bmog.childrenMap).forEach(([id, bmoClass]) => {\r\n        bmo[id] = bmoClass.unreference();\r\n        Object.entries(bmoClass.childrenMap).forEach(([id, dmogClass]) => {\r\n          dmo[id] = dmogClass.formData;\r\n          dmog[id] = dmogClass.unreference();\r\n        });\r\n      });\r\n    });\r\n    if (_selectedDMOG?.formData) {\r\n      dmo[_selectedDMOG.id] = _selectedDMOG.formData;\r\n    }\r\n    const currentDmo = {};\r\n    return {\r\n      bm: {\r\n        ...rest,\r\n        selectedBMOG: _selectedBMOG?.id,\r\n        selectedBMO: _selectedBMO?.id,\r\n        selectedDMOG: _selectedDMOG?.id,\r\n      },\r\n      bmog,\r\n      bmo,\r\n      dmog,\r\n      dmo,\r\n      currentDmo,\r\n      _BmogName: _selectedBMOG?.id,\r\n      _BmoName: _selectedBMO?.id,\r\n      _DmogName: _selectedDMOG?.id,\r\n    };\r\n  }\r\n\r\n  public unreferenceAll() {\r\n    const { childrenMap, _selectedBMO, _selectedBMOG, _selectedDMOG, root, ...rest } = this;\r\n    return rest;\r\n  }\r\n\r\n  private unreferenceChildren(childrenMap: Record<string, ObjectClass>): Record<string, ObjectType> | ObjectType {\r\n    const children = {};\r\n    Object.entries(childrenMap || {}).forEach(([id, obj]) => {\r\n      children[id] = obj.unreference();\r\n    });\r\n    return children;\r\n  }\r\n\r\n  public updateSelectedObjects(obj: ObjectClass) {\r\n    if (!obj) return;\r\n    if ('BMOGID' in obj) {\r\n      this.selectedBMOG = obj;\r\n    }\r\n    if ('BMOID' in obj) {\r\n      this.selectedBMO = obj;\r\n    }\r\n    if ('DMOGID' in obj) {\r\n      this.selectedDMOG = obj;\r\n    }\r\n    if ('dmoName' in obj) {\r\n      return;\r\n    }\r\n    const childId = obj?.Children[0];\r\n    if (childId) {\r\n      const firstChild = obj.childrenMap[childId];\r\n      this.updateSelectedObjects(firstChild as any);\r\n    } else {\r\n      switch (obj.id) {\r\n        case this.selectedBMOG?.id:\r\n          this.selectedBMO = null;break;\r\n        case this.selectedBMO?.id:\r\n          this.selectedDMOG = null;break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    this.cacheObjectIds();\r\n  }\r\n\r\n  public onRemoveChild(removedObjectId: string) {\r\n    switch (removedObjectId) {\r\n      case this.selectedBMOG?.id:\r\n        this.selectedBMOG = null;break;\r\n      case this.selectedBMO?.id:\r\n        this.selectedBMO = null;break;\r\n      case this.selectedDMOG?.id:\r\n        this.selectedDMOG = null;break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  static fromResponse(res: DataModelerResponse) {\r\n    const bm = new BM(res.Item1, undefined);\r\n    bm.Children.forEach((bmogId) => {\r\n      const bmog = new BMOG(res.Item2[bmogId], bm);\r\n      bm.addChild(bmog);\r\n      bmog.Children.forEach((bmoid) => {\r\n        const bmo = new BMO(res.Item3[bmoid], bmog);\r\n        bmog.addChild(bmo);\r\n        bmo.Children.forEach((dmogid) => {\r\n          const dmog = new DMOG(res.Item4[dmogid], bmo);\r\n          bmo.addChild(dmog);\r\n          res.Item5[dmogid]?.components.forEach((dmoObj) => {\r\n                const guid = dmoObj.guid || nameToGuid(dmoObj.dmoName);\r\n                dmoObj.dmoId = +res?.Item7.dmoIds[guid];\r\n                dmoObj.guid = guid;\r\n                const dmo = new DMComponent(dmoObj, dmog);\r\n                dmog.addChild(dmo);\r\n                res?.Item6[dmo.guid]?.Condition.forEach((cond) => {\r\n                  dmo.addCondition(cond);\r\n                });\r\n              \r\n            \r\n          });\r\n          dmog.addFormData(res.Item5[dmogid]);\r\n        });\r\n      });\r\n    });\r\n    bm.setInitialSelectedObjects();\r\n    return bm;\r\n  }\r\n\r\n  private setInitialSelectedObjects() {\r\n    const { selectedBMOG, selectedBMO, selectedDMOG } = localStorage;\r\n    this._setInitialSelectedObject(this, [{selectedDMOG}, {selectedBMO}, {selectedBMOG}]);\r\n  }\r\n\r\n  /** Recursively go through objects children and set them as selected objects\r\n   * \r\n   *  @param parent is of type ObjectClass excluding DMComponent, \r\n   * \r\n   *  namely {@link BMOG} | {@link BMO} | {@link DMOG}\r\n   */\r\n  private _setInitialSelectedObject(parent: any, ids: Record<string, string>[]) {\r\n    if (ids.length === 0) return;\r\n    const [[key, id]] = Object.entries(ids.pop());\r\n    const child = parent.childrenMap[id];\r\n    if (child) {\r\n      this[key] = child;\r\n      this._setInitialSelectedObject(child, ids);\r\n    } else {\r\n      const firstChildId = parent.Children[0];\r\n      firstChildId && this.updateSelectedObjects(parent.childrenMap[firstChildId])\r\n    }\r\n  }\r\n\r\n  /** Invoked when an {@link ObjectClass} excluding {@link DMComponent} is saved or created */\r\n  public cacheObjectId(obj: ObjectType) {\r\n    if ('BMOGID' in obj) {\r\n      localStorage.selectedBMOG = obj.id;\r\n    }\r\n    if ('BMOID' in obj) {\r\n      localStorage.selectedBMO = obj.id;\r\n    }\r\n    if ('DMOGID' in obj) {\r\n      localStorage.selectedDMOG = obj.id;\r\n    }\r\n  }\r\n\r\n  private cacheObjectIds() {\r\n    localStorage.selectedBMOG = this.selectedBMOG?.id;\r\n    localStorage.selectedBMO = this.selectedBMO?.id;\r\n    localStorage.selectedDMOG = this.selectedDMOG?.id;\r\n  }\r\n}\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { ListConfig } from \"@app/admin/lib/list/list-config.model\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { ObjectControlConfig, ObjectControlType } from \"../models1\";\r\n\r\nexport class ObjectControl<T> implements ObjectControlConfig<T> {\r\n  name: keyof T;\r\n  label?: string;\r\n  type: ObjectControlType;\r\n  show: Observable<boolean>;\r\n  options?: Observable<any[]>;\r\n  multiple?: boolean;\r\n  hint?: string;\r\n  required?: boolean;\r\n  readonly?: boolean;\r\n  class?: string;\r\n  group?: AbstractControl;\r\n  config?: ListConfig<any>;\r\n  groupOptionsBy?: string;\r\n  placeholder?: string;\r\n  \r\n  constructor(config: ObjectControlConfig<T>) {\r\n    this.name = config.name;\r\n    this.label = config?.label || config.name as string;\r\n    this.type = config.type || 'text';\r\n    this.show = config.show || of(true);\r\n    this.options = config.options;\r\n    this.multiple = config.multiple;\r\n    this.hint = config.hint;\r\n    this.required = config.required;\r\n    this.readonly = config.readonly;\r\n    this.class = config.class;\r\n    this.group = config.group;\r\n    this.config = config.config;\r\n    this.groupOptionsBy = config.groupOptionsBy;\r\n    this.placeholder = config.placeholder || '';\r\n  }\r\n}","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { enumToList } from '@app/admin/wf/wfd/util/helpers';\r\nimport { of } from 'rxjs';\r\nimport { BM, ObjectControl } from '../../classes';\r\nimport { IBM, ObjectDetail, Status } from '../../models1';\r\nimport { NgIf, NgFor, AsyncPipe } from '@angular/common';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\n\r\n@Component({\r\n    selector: 'app-bm-detail',\r\n    templateUrl: './bm-detail.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgFor,\r\n        ObjectControlComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class BmDetailComponent extends ObjectDetail<BM, undefined> {\r\n  title = 'Business Model';\r\n\r\n  public controls: ObjectControl<IBM>[];\r\n  \r\n  private status = enumToList(Status);\r\n\r\n  initForm() {\r\n    this.form = this.fb.group({\r\n      Name: [this.data.Name],\r\n      DisplayName: [this.data.DisplayName, [Validators.required]],\r\n      Version: [this.data.Version, [Validators.required]],\r\n      ProcessName: [this.data.ProcessName],\r\n      Status: [this.status.find(s => s.key == this.data.Status), [Validators.required]],\r\n      IntegrateWorkspace: [+this.data.IntegrateWorkspace],\r\n      Description: [this.data.Description],\r\n    });\r\n\r\n    this.controls = [\r\n      new ObjectControl({name: 'Name', readonly: true, required: true}),\r\n      new ObjectControl({name: 'DisplayName', label: 'Friendly Name', required: true}),\r\n      new ObjectControl({name: 'Version', readonly: true}),\r\n      new ObjectControl({name: 'ProcessName', label: 'Process Name', readonly: true}),\r\n      new ObjectControl({\r\n        name: 'Status', type: 'dropdown', \r\n        required: true, options: of(this.status),\r\n      }),\r\n      new ObjectControl({name: 'IntegrateWorkspace', label: 'Integrate Workspace', type: 'switch'}),\r\n      new ObjectControl({name: 'Description', label: 'Long Description', type: 'rich', class: 'span-12'}),\r\n    ];\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const val = this.form.value;\r\n      const payload: IBM = {\r\n        ...this.data.unreferenceAll(),\r\n        ...val,\r\n        Status: val.Status?.key || val.Status,\r\n        IntegrateWorkspace: +val.IntegrateWorkspace,\r\n      };\r\n      this.output.emit(payload as any);\r\n      this.ref.close(payload);\r\n    }\r\n  }\r\n}\r\n","<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newObject\">New {{title}}</h2>\r\n    <h2 *ngIf=\"!newObject\">{{title}} Details</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  \r\n  <form [formGroup]=\"form\">\r\n    <div class=\"double-column\">\r\n      <ng-container *ngFor=\"let control of controls\">\r\n        <app-object-control\r\n          *ngIf=\"control.show | async\"\r\n          [config]=\"control\"\r\n          [parentForm]=\"form\"\r\n          [class]=\"control.class\"\r\n        ></app-object-control>\r\n      </ng-container>\r\n    </div>\r\n  \r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!data.published\">\r\n        <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newObject\">Update</ng-container> \r\n      </button>\r\n    </div>\r\n  \r\n  </form>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseHttpService } from '@app/core/services/base-http.service';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport * as fromModels from '../models1';\r\nimport * as classes from '../classes';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { environment } from '@env/environment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DataModelerApiService extends BaseHttpService {\r\n  private  baseUrl = `${environment.Setting.BaseAPIUrl}/modeler`;\r\n  private wfbaseUrl = `${environment.Setting.WF_Api_Url}/api/v3/modeler`;\r\n  private GatewayAPIUrl = `${environment.Setting.GatewayAPIUrl}/wfapibm/DataModel`;\r\n  public getData(processName: string, bmName: string, version: string) {\r\n    \r\n    let url = `${this.GatewayAPIUrl}/getdatafornewmodelbm/${processName}/${bmName}`;\r\n    return this.get<fromModels.DataModelerResponse>(url, {version})\r\n      .pipe(map(res => classes.BM.fromResponse(res)))\r\n  }\r\n\r\n  public createBMVersion(encryptedBmId: string, timezone: string | number = '') {\r\n    const url = `${this.GatewayAPIUrl}/createBMVersion`;\r\n    return this.post<string>(url, null, {bmId: encryptedBmId, timezone: timezone.toString()})\r\n  }\r\n\r\n  public changeMode(bmId: string | number, mode: fromModels.BMMode) {\r\n    const url = `${this.GatewayAPIUrl}/updateMode/${bmId}/${mode}`;\r\n    return this.post<boolean>(url, null, null);\r\n  }\r\n\r\n  public saveBM(payload: fromModels.IBM, noSpinner?: boolean) {\r\n    const url = `${this.GatewayAPIUrl}/saveBM`;\r\n    return this.post<boolean>(url, {bm: payload}, null, noSpinner && {noSpinner: 'true'});\r\n  }\r\n\r\n  public saveObject(obj: fromModels.ObjectType, bm: classes.BM, noLoading?: boolean) {\r\n    const {url, payload} = this.generateRequestInfo(obj, bm, 'save');\r\n    const headers: any = {processName: bm.ProcessName};\r\n    if (noLoading) {\r\n      headers.noSpinner = 'noSpinner';\r\n    }\r\n    return this.post<string>(url, payload, null, headers);\r\n  }\r\n\r\n  public reorderChildren(obj: classes.ObjectClass) {\r\n    let payload = null;\r\n    let url = '';\r\n    if ('BMOGID' in obj) {\r\n      url = `${this.GatewayAPIUrl}/setBmoOrder`;\r\n      payload = {\r\n        bmogid: obj.BMOGID,\r\n        bmoid: obj.Children.map(guid => obj.getChild(guid).BMOID),\r\n      };\r\n    } else if ('BMOID' in obj) {\r\n      url = `${this.GatewayAPIUrl}/setDmogOrder`;\r\n      payload = {\r\n        bmoid: obj.BMOID,\r\n        dmogId: obj.Children.map(guid => obj.getChild(guid).DMOGID),\r\n      }\r\n    } else if ('DMOGID' in obj) {\r\n      console.log(obj)\r\n      url = `${this.GatewayAPIUrl}/setDmoOrder`;\r\n      payload = {\r\n        dmogid: obj.DMOGID,\r\n        columns: obj.formData.components.flatMap(row => row.columns.map(col => col.components.map(dmo => dmo.dmoId)))\r\n      }\r\n    }\r\n    if (!url) return EMPTY;\r\n    return this.post<any>(url, payload);\r\n    \r\n  }\r\n\r\n  public saveDmoCondition(payload: any) {\r\n    let url = `${this.GatewayAPIUrl}/saveBMCondition`;\r\n    return this.post<boolean>(url, payload);\r\n  }\r\n\r\n  public deleteDmoCondition(id: string) {\r\n    const url = `${this.GatewayAPIUrl}/deleteDmoCondition/${id}`;\r\n    return this.post<boolean>(url, null);\r\n  }\r\n\r\npublic deleteObject(obj: classes.ObjectClass, bm: classes.BM) {\r\n    const unreferenced = obj.unreference();\r\n    const {url, payload} = this.generateRequestInfo(unreferenced, bm, 'delete');\r\n\r\n    const lastSegment = url.split('/').pop();\r\n    const postTo = (endpoint: string, body: any) =>\r\n    this.post<boolean>(`${this.GatewayAPIUrl}/${endpoint}`,null, body);\r\n\r\n    if (lastSegment?.includes('DMOG')) {\r\n        const dmogId = payload?.dmog?.['DMOGID'];\r\n        const bmoId = payload?.bmo?.[payload?._BmoName]?.BMOID;\r\n        const endpoint = \"UnshareDmog\";\r\n        return postTo(endpoint, { dmogId, bmoId });\r\n\r\n      } else if (lastSegment?.includes('BMO')) {\r\n        const bmogId = payload?.bmog?.[payload?._BmogName]?.BMOGID;\r\n        const bmoId = payload?.bmo?.['BMOID'];\r\n        const endpoint = \"UnshareBmo\";\r\n        return postTo(endpoint, { bmoId, bmogId });\r\n\r\n      } else {\r\n        return this.post<boolean>(url, payload, null, { processName: bm.ProcessName });\r\n      }\r\n \r\n  }\r\n\r\n\r\n  public checkNameValidity(type: fromModels.EntityType, id: number, name: string, version: string, processName: string) {\r\n    const url = `${this.GatewayAPIUrl}/checkName/${type}/${id}/${name}/${version}`;\r\n    return this.get<boolean>(url, null, {processName});\r\n  }\r\n\r\n  public checkDmoInBmog(dmoId: string, bmogId: string) {\r\n    const url = `${this.GatewayAPIUrl}/checkDmoInBmog`;\r\n    return this.post<boolean>(url, null, {dmoId, bmogId})\r\n  }\r\n\r\n  public checkDmogInBmo(dmogId: string, bmogId: string) {\r\n    const url = `${this.GatewayAPIUrl}/CheckDmogInBMO`;\r\n    return this.post<boolean>(url, null, {dmogId, bmogId})\r\n  }\r\n  \r\n  public checkBmoInBmog(bmoId: string, bmogId: string) {\r\n    const url = `${this.GatewayAPIUrl}/checkBmoInBmog`;\r\n    return this.post<boolean>(url, null, {bmoId, bmogId})\r\n  }\r\n  \r\n  public getSubprocessList(bmId: string) {\r\n    const url = `${this.GatewayAPIUrl}/getSubprocessList`;\r\n    return this.get<ValueLabel[]>(url, {bmId}, {noSpinner: 'noSpinner'}).pipe(shareReplay(1));\r\n  }\r\n\r\n  public getChildProcessList(bmId: string) {\r\n    const url = `${this.GatewayAPIUrl}/getChildProcessList`;\r\n    return this.get<ValueLabel[]>(url, {bmId}, {noSpinner: 'noSpinner'}).pipe(shareReplay(1));\r\n  }\r\n\r\n  public getProcessDmos(processId: string) {\r\n    const url = `${this.GatewayAPIUrl}/getProcessDmoListByProcId`;\r\n    return this.get<ValueLabel[]>(url, {processId}, {noSpinner: 'noSpinner'}).pipe(shareReplay(1));\r\n  }\r\n\r\n  public getRoles(processName: string) {\r\n    const url = `${this.GatewayAPIUrl}/role`;\r\n    return this.get<{value: string, label: string}[]>(url, null, {processName, noSpinner: 'noSpinner'}).pipe(shareReplay(1));\r\n  }\r\n\r\n  public getColorCodes() {\r\n    const url = `${this.GatewayAPIUrl}/getColorCode`;\r\n    return this.get<fromModels.Value>(url);\r\n  }\r\n\r\n  public getCountriesList() {\r\n    const url = `${this.GatewayAPIUrl}/getCountry`;\r\n    return this.get<fromModels.Value>(url);\r\n  }\r\n\r\n  public getTriggers(processName: string) {\r\n    const url = `${this.GatewayAPIUrl}/trigger`;\r\n    return this.get<{Key: string, Value: string}[]>(url, null, {processName});\r\n  }\r\n\r\n  public encode(s: string) {\r\n    const url = `${this.GatewayAPIUrl}/encode?str=${s}`;\r\n    return this.get<string>(url);\r\n  }\r\n\r\n  public saveSharedDmos(payload: ShareDmoPayload) {\r\n    const url = `${this.GatewayAPIUrl}/saveDMOGColumns`;\r\n    return this.post<boolean>(url, payload);\r\n  }\r\n  \r\n   public unshareDmo(dmoId: string, dmogId: string) {\r\n    const url = `${this.GatewayAPIUrl}/unshareDmo`\r\n    return this.post<boolean>(url, null, {dmoId, dmogId})\r\n  }\r\n\r\n  public deleteDmo(dmoId: string, bmId: string) {\r\n    const url = `${this.GatewayAPIUrl}/DeleteDataModelObject`\r\n    return this.post<boolean>(url, null, {dmoId, bmId})\r\n  }\r\n\r\n   public deleteDmog(processName: string, dmogName : string) {\r\n    const url = `${this.GatewayAPIUrl}/deletecard`\r\n    return this.post<boolean>(url, null, {dmogName}, {processName});\r\n  }\r\n   public deleteBmo(processName: string, bmoNames : string, version:string) {\r\n    const url = `${this.GatewayAPIUrl}/deletesection`\r\n    return this.post<boolean>(url, null, {bmoNames,version}, {processName});\r\n  }\r\n\r\n  public saveSharedDmogs(bmoId: string, dmogIds: string) {    \r\n    const url = `${this.GatewayAPIUrl}/SaveBmoDmogLinking`;\r\n    return this.post<boolean>(url, null, {bmoId, dmogIds});\r\n  }\r\n  public saveSharedBmos(bmogId: string, bmoIds: string) {    \r\n    const url = `${this.GatewayAPIUrl}/SaveBmogBmoLinking`;\r\n    return this.post<boolean>(url, null, {bmogId, bmoIds});\r\n  }\r\n\r\n  public GetAvailableDmoToShare(bmogId: any, bmId: any) { \r\n    let url = `${this.GatewayAPIUrl}/GetAvailableDmoToShare`;\r\n    return this.get<any>(url,{bmogId, bmId}, null, true)\r\n  }\r\n\r\n  public GetAvailableDmogToShare(bmogId: any, bmId: any) { \r\n    const url = `${this.GatewayAPIUrl}/GetAvailableDmogToShare`;\r\n    return this.get<any>(url,{bmogId, bmId})\r\n  }\r\n\r\n  public GetAvailableBmoToShare(bmogId: any, bmId: any) { \r\n    const url = `${this.GatewayAPIUrl}/GetAvailableBmoToShare`;\r\n    return this.get<any>(url,{bmogId, bmId})\r\n  }\r\n  public SaveDmogProps(model) {\r\n    const url = `${this.GatewayAPIUrl}/SaveDmogProps`;\r\n    \r\n    return this.post<boolean>(url,model);\r\n  }\r\n  private generateRequestInfo(obj: fromModels.ObjectType, bm: classes.BM, action: 'save' | 'delete') {\r\n    const payload = bm.payload;\r\n    let path = '';\r\n    if ('BMOGID' in obj) {\r\n      path = `${action}BMOG`;\r\n      payload.bmog = obj;\r\n    }\r\n    else if ('BMOID' in obj) {\r\n      path = `${action}BMO`;\r\n      payload.bmo = obj;\r\n    }\r\n    else if ('DMOGID' in obj) {\r\n      path = `${action}DMOG${action === 'save' ? 'All' : ''}`;\r\n      payload.dmog = obj;\r\n    } \r\n    else if ('dmoName' in obj) {\r\n      path = `${action}DMO`;\r\n      payload.currentDmo = obj;\r\n    }\r\n    const url = `${this.GatewayAPIUrl}/${path}`;\r\n    return {payload, url};\r\n  }\r\n  public checkCanvasType(type: fromModels.EntityType, id: number, name: string, version: string, processName: string) {\r\n    const url = `${this.GatewayAPIUrl}/checkCanvasTy/${type}/${id}/${name}/${version}`;\r\n    return this.get<boolean>(url, null, {processName});\r\n  }\r\n\r\n  public saveReorderDmogs(bmoId: string, dmogIds: string) {    \r\n    const url = `${this.GatewayAPIUrl}/SaveBmoDmogLinking?bmoId=${bmoId}&dmogIds=${dmogIds}`;\r\n    return this.postReorderDmogs<boolean>(url, bmoId, dmogIds);\r\n  }\r\n\r\n  public saveupdatePrntDmogIDs(model) {    \r\n    const url = `${this.GatewayAPIUrl}/updatePrntDmogIDs`;\r\n    return this.updatePrntDmogIDs<boolean>(url, model);\r\n  }\r\n\r\n  public callDynamicApi(dataSource: string, endpoint: string, methodtype: string, body: any) : Observable<any> {\r\n    let baseurl: string | null = null;\r\n  \r\n    switch (dataSource?.toLowerCase()) {\r\n      case 'wfapi':\r\n        baseurl = environment.Setting.BaseAPIUrl;\r\n        break;\r\n      case 'wfapigateway':\r\n        baseurl = environment.Setting.GatewayAPIUrl;\r\n        break;\r\n      case 'customapi':\r\n        baseurl = environment.Setting.CustomAPIUrl;\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  \r\n    const url = `${baseurl}/${endpoint}`;\r\n    switch (methodtype?.toUpperCase()) {\r\n      case 'GET':\r\n        return this.get(url, { params: body });\r\n      case 'POST':\r\n        return this.post(url, body);\r\n      case 'DELETE':\r\n        return this.delete(url, { body });\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\npublic getdmobybmid(bmid: string){\r\n    const url = `${environment.Setting.BaseAPIUrl}/formview/getdmobybmid`;\r\n    return this.post<any>(url,null,{bmid});\r\n  }\r\n}  \r\n\r\n  \r\n\r\n\r\ntype ValueLabel = {Value: string, Label: string};\r\nexport interface ShareDmoPayload {\r\n  processName:   string;\r\n  bmName:        string;\r\n  bmVersion:     string;\r\n  dmogName:      string;\r\n  leftDMOGuids:  string;\r\n  rightDMOGuids: string;\r\n  groupKey?:     string;\r\n}","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { KeyValue } from '@app/admin/BM/models';\r\nimport { arrayToList, enumToList, KeyValueList } from '@app/admin/wf/wfd/util/helpers';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { DMOG, BMO, BMOG, ObjectControl } from '../../classes';\r\nimport { BMOType, FormBmoType, IBMO, ObjectDetail, Status } from '../../models1';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\nimport { checkNameValidatorSync } from '../../validators1';\r\nimport { NgIf, NgFor, AsyncPipe } from '@angular/common';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\nimport { MessageService } from '@app/core';\r\n\r\n@Component({\r\n    selector: 'app-bmo-detail',\r\n    templateUrl: './bmo-detail.component.html',\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgFor,\r\n        ObjectControlComponent,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class BmoDetailComponent extends ObjectDetail<IBMO | BMO, BMOG> {\r\n  dmogSharing:boolean=true;\r\n  public title = 'Section';\r\n  public controls: ObjectControl<IBMO>[];\r\n  private bmoTypeList = enumToList(BMOType);\r\n  private FormBmoType=enumToList(FormBmoType);\r\n  private status = enumToList(Status);\r\n  \r\n  private subprocessList$: Observable<KeyValueList<string, string>>;\r\n  private childProcessList$: Observable<KeyValueList<string, string>>;\r\n  private parentProcessDmos$: Observable<KeyValueList<string, string>>;\r\n  private availableDmogToShare = [];\r\n  private removedDmogs =[];\r\n  allDmogs = [];\r\n  associatedSharedItems = [];\r\n  allAssociatedSharedItems = [];\r\n  sharedChanged = false;\r\n\r\n  constructor(\r\n    ref: NgbActiveModal, \r\n    fb: UntypedFormBuilder, \r\n    private api: DataModelerApiService,\r\n    private readonly toastr: ToastrService,\r\n    private readonly msg: MessageService,\r\n    private dmApi: DataModelerApiService,\r\n  ) { \r\n    super(ref, fb);\r\n    this.formActions = [\r\n      {controlName: 'BmoType', handler: (type: BMOType) => this.onBmoTypeChange(type)},\r\n      {controlName: 'ChildProcessId', handler: (processId: string) => this.onChildProcessIdChange(processId)}\r\n    ];\r\n  }\r\n\r\n  beforeFormInit() {\r\n    this.allDmogs = this.getSharedItems();    \r\n    this.associatedSharedItems = this.allDmogs.filter(item => item.selected).sort((a, b) => a.DMOGID - b.DMOGID)\r\n\r\n    this.subprocessList$ = this.api.getSubprocessList(this.parent.parent.BMId.toString())\r\n      .pipe(this.handleApiResponse('SubProcessId'));\r\n    this.childProcessList$ = this.api.getChildProcessList(this.parent.parent.BMId.toString())\r\n      .pipe(this.handleApiResponse('ChildProcessId'));\r\n    this.parentProcessDmos$ = this.api.getProcessDmos(this.parent.parent.ProcessId)\r\n      .pipe(this.handleApiResponse('ParentProcessDmoGuid'));\r\n  }\r\n\r\n  initForm() {\r\n    const validators = [...NAME_VALIDATORS]\r\n    if (this.newObject) {\r\n      const allBmos = Object.values(this.parent.root.childrenMap)\r\n        .flatMap(bmog => Object.values(bmog.childrenMap));\r\n      //validators.push(checkNameValidatorSync(Object.values(allBmos), 'Name'));\r\n    };\r\n    this.form = this.fb.group({\r\n      Name: [this.data.Name, {validators, updateOn: 'blur'}],\r\n      DisplayName: [this.data.DisplayName, [Validators.required]],\r\n      Version: [this.data.Version || this.parent.Version, [Validators.required]],\r\n      BmoType: [this.bmoTypeList.find(t => t.key === this.data.BmoType), [Validators.required]],\r\n      Status: [this.status.find(s => s.key == (this.data.Status || Status.Active)), [Validators.required]],\r\n      ShortDesc: [this.data.ShortDesc, [Validators.required]],\r\n      LongDesc: [this.data.LongDesc],\r\n      SubProcessId: [this.data.SubProcessId],\r\n      ChildProcessId: [this.data.ChildProcessId],\r\n      ChildProcessDmoGuid: [this.data.ChildProcessDmoGuid],\r\n      ParentProcessDmoGuid: [this.data.ParentProcessDmoGuid],   \r\n    });\r\n\r\n    this.controls = [\r\n      new ObjectControl({name: 'Name', readonly: !this.newObject, required: true}),\r\n      new ObjectControl({name: 'DisplayName', label: 'Friendly Name', required: true}),\r\n      new ObjectControl({name: 'Version', readonly: true}),\r\n      new ObjectControl({\r\n        name: 'BmoType', label: 'Type', type: 'dropdown',\r\n        required: true, options: of(this.parent.CanvasType==='Form'? this.FormBmoType :this.bmoTypeList)\r\n      }),\r\n      new ObjectControl({\r\n        name: 'Status', type: 'dropdown', \r\n        required: true, options: of(this.status),\r\n      }),\r\n      // new ObjectControl({\r\n      //   name: 'Share', type: 'dropdown', options: of(this.sharedItems), multiple: true,\r\n      //   show: this.show('BmoType', BMOType.Form), groupOptionsBy: 'parent',  \r\n      // }),\r\n      new ObjectControl({\r\n        name: 'SubProcessId', label: 'Subprocess List', type: 'dropdown', required: true,\r\n        options: this.subprocessList$, show: this.show('BmoType', BMOType.SubProcess),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'ChildProcessId', label: 'Child Process List', type: 'dropdown', required: true,\r\n        options: this.childProcessList$, show: this.show('BmoType', BMOType.ChildProcess), \r\n      }),\r\n      new ObjectControl({\r\n        name: 'ParentProcessDmoGuid', label: 'Parent Process DMOs', type: 'dropdown', required: true,\r\n        options: this.parentProcessDmos$, show: this.show('BmoType', BMOType.ChildProcess), \r\n      }),\r\n      new ObjectControl({\r\n        name: 'ChildProcessDmoGuid', label: 'Child Process DMOs', type: 'dropdown', required: true,\r\n        options: of([]), show: this.show('BmoType', BMOType.ChildProcess), \r\n      }),\r\n      new ObjectControl({name: 'ShortDesc', label: 'Short Description', required: true}),\r\n      new ObjectControl({name: 'LongDesc', label: 'Long Description', type: 'rich', class: 'span-12'}),\r\n    ];\r\n\r\n    this.api.GetAvailableDmogToShare(this.parent.root.selectedBMOG.BMOGID, this.parent.root.BMId).subscribe(x=>{\r\n      this.availableDmogToShare= x.AvaliableItems?.sort((a, b) => a.DMOGID - b.DMOGID);\r\n     // this.allAssociatedSharedItems = x.AssociatedItems.sort((a, b) => a.DMOGID - b.DMOGID);\r\n      const avDmogs = this.getAllDmog();\r\n      this.allDmogs= avDmogs;\r\n      // const assocDmogs = this.getAllAssocaitedDmog();\r\n      // this.associatedSharedItems = assocDmogs;\r\n    });\r\n\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => Start\r\n    this.form.get(\"Name\").valueChanges.subscribe(name=>{\r\n      if(this.newObject && name && name.length>=4  && !this.form.get('Name').hasError(\"maxlength\")\r\n      && !this.form.get('Name').hasError(\"pattern\")){\r\n        this.api.checkNameValidity('bmo',0,name,this.parent.root.Version,this.parent.root.ProcessName).subscribe(IsExits=>{\r\n          if(IsExits){\r\n              const nameControl = this.form.get('Name');\r\n              nameControl.setErrors({\r\n              nameExists: true,\r\n              message: 'Duplicate name'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => End\r\n\r\n  }\r\n\r\n  private getSharedItems() {\r\n    let list: KeyValue[] = [];\r\n    const share = this.data.Share || [];\r\n    \r\n    Object.values(this.parent.root.childrenMap).forEach(bmog => {\r\n      Object.values(bmog.childrenMap).filter(bmo => !bmo.shared).forEach(bmo => {\r\n        Object.values(bmo.childrenMap)\r\n          .filter(dmog => !dmog.shared)\r\n          .forEach(dmog => {\r\n            const selected = share.some((item) => item.value === dmog.id) || this.data?.Children?.some(guid => guid === dmog.id);\r\n            // parent is responsible for grouping items\r\n            // parent id is used later on submit and replaces bmo id in key property\r\n            const item = {\r\n              key: dmog.id,\r\n              dmogId: dmog.DMOGID, \r\n              value: `${dmog.DisplayName} (${dmog.Name})` , \r\n              bmogId: this.parent.BMOGID,\r\n              parent: `${bmog.Name} / ${bmo.DisplayName}`, \r\n              parentId: bmo.id,\r\n              selected, disabled: selected,};\r\n            list.push(item);\r\n        })\r\n      });\r\n    });\r\n    return list;\r\n  }\r\n\r\n  private getAllDmog() {\r\n    let list: KeyValue[] = [];\r\n    const share = this.data.Share || [];\r\n       \r\n    this.availableDmogToShare?.forEach((dmog, i) =>{\r\n      const check = share.some((item) => item.value === dmog.dmogGuid) || this.data?.Children?.some(guid => guid === dmog.dmogGuid); \r\n      const item = {\r\n        key: dmog.dmogGuid,\r\n        value: dmog.NAME,\r\n        dmogId: dmog.DMOGID,\r\n        bmogId: this.parent.BMOGID,\r\n        parent: `${this.parent.Name} / ${this.parent.parent.selectedBMOG.Name}`, \r\n        parentId: this.parent.parent.selectedBMOG.id,\r\n        selected: check,\r\n        disabled: check,\r\n      };   \r\n      \r\n      list.push(item);\r\n    });\r\n\r\n    return list;\r\n  }\r\n\r\n   private getAllAssocaitedDmog() {\r\n    let list: KeyValue[] = [];\r\n    const share = this.data.Share || [];\r\n       \r\n    this.allAssociatedSharedItems.forEach((dmog, i) =>{\r\n\r\n      const check = share.some((item) => item.value === dmog.dmogGuid) || this.data?.Children?.some(guid => guid === dmog.dmogGuid); \r\n      const item = {\r\n        key: dmog.dmogGuid,\r\n        value: dmog.NAME,\r\n        dmogId: dmog.DMOGID,\r\n        bmogId: this.parent.BMOGID,\r\n        parent: `${this.parent.Name} / ${this.parent.parent.selectedBMOG.Name}`, \r\n        parentId: this.parent.parent.selectedBMOG.id,\r\n        selected: true,\r\n        disabled: true,\r\n      };   \r\n      \r\n      list.push(item);\r\n    });\r\n\r\n    return list;\r\n  }\r\n\r\n\r\n  afterFormInit() {\r\n    // Force patch the control to activate form action on start\r\n    setTimeout(() => {\r\n      const val = this.bmoTypeList.find(({key}) => key === this.data.BmoType);\r\n      this.f.BmoType.patchValue(val);\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const val = this.form.value;\r\n      const payload: IBMO = {\r\n        ...val,\r\n        Parent: this.parent.id,\r\n        BMOID: this.data.BMOID,\r\n        BmoType: val.BmoType?.key || val.BmoType,\r\n        Status: val.Status?.key || val.Status,\r\n        Children: this.data?.Children || [],\r\n        id: this.data?.id || val.Name,\r\n        GUID: this.data?.GUID || val.Name,\r\n        SubProcessId: val.SubProcessId?.key || val.SubProcessId,\r\n        ChildProcessId: val.ChildProcessId?.key || val.ChildProcessId,\r\n        ChildProcessDmoGuid: val.ChildProcessDmoGuid?.key || val.ChildProcessDmoGuid,\r\n        ParentProcessDmoGuid: val.ParentProcessDmoGuid?.key || val.ParentProcessDmoGuid,\r\n        ParentBMId: this.parent.root.BMId,\r\n      };\r\n\r\n      const shared = {         \r\n        bmoid:this.data.BMOID,\r\n        dmogIds: this.sharedChanged ? this.associatedSharedItems.map(({ dmogId }) => dmogId).toString() : '-1',\r\n      };\r\n      const removedItems = {\r\n          bmoid:this.data.BMOID,\r\n          domgNames : this.removedDmogs.length > 0 ? this.removedDmogs.join(',')?.toString() : '-1',\r\n      }\r\n      this.output.emit(payload);\r\n      this.ref.close({ payload, shared , removedItems  });\r\n    }\r\n  }\r\n\r\n  private onBmoTypeChange(val: any) {\r\n    val = val?.key || val;\r\n    this.dmogSharing=false;\r\n    if (val === BMOType.SubProcess) {\r\n      this.f.SubProcessId.setValidators(Validators.required);\r\n      this.f.ChildProcessId.clearValidators();\r\n      this.f.ChildProcessDmoGuid.clearValidators();\r\n      this.f.ParentProcessDmoGuid.clearValidators();\r\n      \r\n    } else if (val === BMOType.ChildProcess) {\r\n      this.f.SubProcessId.clearValidators();\r\n      this.f.ChildProcessId.setValidators(Validators.required);\r\n      this.f.ChildProcessDmoGuid.setValidators(Validators.required);\r\n      this.f.ParentProcessDmoGuid.setValidators(Validators.required);\r\n      \r\n      \r\n    }\r\n    if(val===BMOType.Form){\r\n      this.dmogSharing=true;\r\n    }\r\n    this.form.updateValueAndValidity();\r\n  }\r\n\r\n  private onChildProcessIdChange(processId: any) {\r\n    processId = processId?.key || processId;\r\n    const control = this.controls.find(c => c.name === 'ChildProcessDmoGuid');\r\n    control.options = this.api.getProcessDmos(processId)\r\n      .pipe(this.handleApiResponse('ChildProcessDmoGuid'));\r\n    this.f.ChildProcessDmoGuid.reset();\r\n  }\r\n\r\n  private handleApiResponse(control: keyof IBMO) {\r\n    return (source: Observable<any[]>) => {\r\n      return source.pipe(\r\n        map(list => arrayToList(list, 'Value', 'Label')),\r\n        tap(list => {\r\n          const val = list.find(({key}) => key === this.data[control]);\r\n          this.f[control].patchValue(val);\r\n        }),\r\n      )\r\n    }\r\n  }\r\n\r\n  private show(controlName: keyof IBMO, compareTo: any) {\r\n    return this.form.get(controlName).valueChanges.pipe(\r\n      startWith(this.form.get(controlName).value),\r\n      map(v => v?.key || v),\r\n      map(v => v === compareTo)\r\n    )\r\n  }\r\n\r\n  displayShare = (item: SharedItem) => item.value;\r\n  uniqueShare = (item: SharedItem) => item.value;\r\n\r\n  shouldAdd = (item: SharedItem) =>\r\n  this.api.checkDmogInBmo(item.dmogId.toString(), item.bmogId.toString()).pipe(\r\n    tap((success) => {\r\n      if (!success) {\r\n        this.toastr.warning('This card cannot be shared');\r\n      }\r\n    })\r\n  );\r\n\r\n  onShareAdd(item: SharedItem) {\r\n    this.associatedSharedItems = this.associatedSharedItems.concat(item);\r\n    this.sharedChanged = true;\r\n    this.refreshAllDmogs();\r\n  }\r\n  onShareRemove(item: SharedItem) {\r\n    this.associatedSharedItems = this.associatedSharedItems.filter((dmog) => dmog.dmogId !== item.dmogId);\r\n    this.sharedChanged = true;\r\n    this.refreshAllDmogs();\r\n  }  \r\n\r\n  onShareReorder = (items: SharedItem[]) => {\r\n    this.associatedSharedItems = items;\r\n    this.sharedChanged = true;\r\n  };  \r\n\r\n  refreshAllDmogs = () => {\r\n    this.allDmogs.forEach((dmog) => {\r\n      const rightCheck = this.associatedSharedItems.some((item) => item.key === dmog.key);      \r\n      dmog.selected = rightCheck;\r\n      dmog.disabled = rightCheck;\r\n    });\r\n    this.allDmogs = this.allDmogs;\r\n  };\r\n\r\n  onItemRemoved(item: any){\r\n        const nameMatch = item.value.match(/\\(([^)]+)\\)/);\r\n        const Name = nameMatch ? nameMatch[1].trim() : '';\r\n        const DispName = item.value.split('(')[0].trim();\r\n        this.removedDmogs.push(Name);\r\n        this.allDmogs = this.allDmogs.filter((dmog) => dmog.dmogId !== item.dmogId);\r\n        this.sharedChanged = true;\r\n  }\r\n}\r\ntype SharedItem = KeyValue & { selected?: boolean; disabled?: boolean; dmogId: number; bmogId: number, parentId: number };\r\n","<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newObject\">New {{title}}</h2>\r\n    <h2 *ngIf=\"!newObject\">{{title}} Details</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  \r\n  <form [formGroup]=\"form\">\r\n    <div class=\"double-column\">\r\n      <ng-container *ngFor=\"let control of controls\">\r\n        <app-object-control\r\n          *ngIf=\"control.show | async\"\r\n          [config]=\"control\"\r\n          [parentForm]=\"form\"\r\n          [class]=\"control.class\"\r\n        ></app-object-control>\r\n      </ng-container>\r\n\r\n      <div class=\"span-12\" *ngIf=\"dmogSharing\">\r\n        <div class=\"double-column\" style=\"margin: 0\">\r\n          <label class=\"span-6\" for=\"\">Available Cards</label>\r\n          <label class=\"span-6\" for=\"\">Selected Cards</label>\r\n        </div>\r\n        \r\n        <app-association\r\n          [items]=\"allDmogs\"\r\n          [associatedItems]=\"associatedSharedItems\"\r\n          [displayWith]=\"displayShare\"\r\n          [uniqueWith]=\"uniqueShare\"\r\n          [checkAll]=\"false\"\r\n          checkBy=\"selected\"\r\n          disableBy=\"disabled\"\r\n          [shouldAdd]=\"shouldAdd\"\r\n          (add)=\"onShareAdd($event)\"\r\n          (remove)=\"onShareRemove($event)\"\r\n          (reorder)=\"onShareReorder($event)\"\r\n          (itemRemoved)=\"onItemRemoved($event)\"\r\n          [canDelete]=\"true\"\r\n        >\r\n        </app-association>\r\n      </div>\r\n\r\n    </div>\r\n  \r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!parent.root.published\">\r\n        <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newObject\">Update</ng-container> \r\n      </button>\r\n    </div>\r\n  \r\n  </form>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { KeyValue, Share } from '@app/admin/BM/models';\r\nimport { enumToList } from '@app/admin/wf/wfd/util/helpers';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { of, tap } from 'rxjs';\r\nimport { BM, BMOG, ObjectControl } from '../../classes';\r\nimport { canvasType, EnableTLCorner, IBMOG, ObjectDetail, Status } from '../../models1';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\nimport { checkNameValidatorSync } from '../../validators1';\r\nimport { NgIf, NgFor, AsyncPipe } from '@angular/common';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\nimport { MessageService } from '@app/core';\r\n\r\n@Component({\r\n    selector: 'app-bmog-detail',\r\n    templateUrl: './bmog-detail.component.html',\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgFor,\r\n        ObjectControlComponent,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class BmogDetailComponent extends ObjectDetail<IBMOG | BMOG, BM> {\r\n  public title = 'View';\r\n  public canvasTypeList = enumToList(canvasType);\r\n  private status = enumToList(Status);\r\n  \r\n  private enableTLValues = enumToList(EnableTLCorner);\r\n  public controls: ObjectControl<IBMOG>[];\r\n  private availableBmoToShare = [];\r\n  private removedBMOs = [];\r\n  allBMOs = [];\r\n  associatedSharedItems = [];\r\n  sharedChanged = false;\r\n\r\n  constructor(\r\n    ref: NgbActiveModal, \r\n    fb: UntypedFormBuilder, \r\n    private readonly api: DataModelerApiService,\r\n    private readonly toastr: ToastrService,\r\n    private readonly msg: MessageService,\r\n    ) {\r\n    super(ref, fb);\r\n  }\r\n  \r\n  protected beforeFormInit(): void {\r\n    this.allBMOs = this.getSharedItems() || [];\r\n    this.associatedSharedItems = this.allBMOs.filter(item => item.selected);\r\n  }\r\n\r\n  initForm() {\r\n    const validators = [...NAME_VALIDATORS]\r\n    // if (this.newObject) {\r\n    //   validators.push(checkNameValidatorSync(Object.values(this.parent.childrenMap), 'Name'));\r\n    // };\r\n    this.form = this.fb.group({\r\n      Name: [this.data.Name, {validators, updateOn: 'blur'}],\r\n      Version: [this.data.Version || this.parent.Version, [Validators.required]],\r\n      CanvasType: [this.canvasTypeList.find(t => t.key === this.data.CanvasType), [Validators.required]],\r\n      Status: [this.status.find(s => s.key == this.data.Status), [Validators.required]],\r\n      LongDesc: [this.data.LongDesc],\r\n      EnableTLCorner : [this.enableTLValues?.find(s =>s?.key == this.data?.EnableTLCorner)?.key , [Validators.required]]\r\n   });\r\n\r\n    this.controls = [\r\n      new ObjectControl({name: 'Name', label: 'Name', readonly: !this.newObject, required: true}),\r\n      new ObjectControl({name: 'Version', label: 'Version', readonly: true}),\r\n      new ObjectControl({\r\n        name: 'CanvasType', label: 'Canvas Type', type: 'dropdown',\r\n        required: true, options: of(this.canvasTypeList),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'Status', label: 'Status', type: 'dropdown', required: true,  \r\n        options: of(this.status),\r\n      }),\r\n      new ObjectControl({name: 'LongDesc', label: 'Long Description', type: 'rich', class: 'span-12'}),\r\n      new ObjectControl({name:'EnableTLCorner', label:'Enable Top Left Corner', type:'radio', required: true,  \r\n      options: of(this.enableTLValues)})\r\n    ];\r\n\r\n    this.api.GetAvailableBmoToShare(this.data.BMOGID, this.parent.BMId).subscribe(x=>{\r\n      this.availableBmoToShare= x;\r\n      const avBmos = this.getAllBmo();\r\n      this.allBMOs= avBmos;\r\n    });\r\n\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => Start\r\n    this.form.get(\"Name\").valueChanges.subscribe(name=>{\r\n      if(this.newObject && name && name.length>=4  && !this.form.get('Name').hasError(\"maxlength\")\r\n      && !this.form.get('Name').hasError(\"pattern\")){\r\n        this.api.checkNameValidity('bmog',0,name,this.parent.root.Version,this.parent.root.ProcessName).subscribe(IsExits=>{\r\n          if(IsExits){\r\n              const nameControl = this.form.get('Name');\r\n              nameControl.setErrors({\r\n              nameExists: true,\r\n              message: 'Duplicate name'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => End\r\n    this.form.get(\"CanvasType\").valueChanges.subscribe(CT=>{\r\n      if(CT[\"key\"].length>0){\r\n        this.api.checkCanvasType(\r\n          'bmog',\r\n          this.data.BMOGID ?? 0,  // Replacing the ternary with nullish coalescing\r\n          CT[\"key\"],\r\n          this.parent.root.Version,\r\n          this.parent.root.ProcessName\r\n        ).subscribe(IsExits => {\r\n          if (IsExits) {\r\n            const nameControl = this.form.get('CanvasType');\r\n            nameControl?.setErrors({\r\n              nameExists: true,\r\n              message: 'Duplicate Canvas Type'\r\n            });\r\n          }\r\n        });        \r\n    }\r\n    if(CT?.key==='Form'){\r\n      const nameControl = this.form.get('EnableTLCorner');\r\n       nameControl.setErrors(null);\r\n       nameControl.setValue(null);\r\n      nameControl.disable();\r\n    }else{\r\n      const nameControl = this.form.get('EnableTLCorner');\r\n      nameControl.enable();\r\n    }\r\n    })\r\n    if(this.form.value.CanvasType !=null){\r\n      if(this.form.value.CanvasType.key==='Form'){\r\n       const nameControl = this.form.get('EnableTLCorner');\r\n          nameControl.setErrors(null);\r\n         nameControl.disable();\r\n      }\r\n     }\r\n     else\r\n     {\r\n       const nameControl = this.form.get('EnableTLCorner');\r\n          nameControl.setErrors(null);\r\n         nameControl.disable();\r\n     }\r\n      this.form.get(\"CanvasType\").valueChanges.subscribe(name=>{\r\n       if(name?.key==='Form'){\r\n         const nameControl = this.form.get('EnableTLCorner');\r\n          nameControl.setErrors(null);\r\n          nameControl.setValue(null);\r\n         nameControl.disable();\r\n       }else{\r\n         const nameControl = this.form.get('EnableTLCorner');\r\n         nameControl.enable();\r\n       }\r\n      })\r\n\r\n  }\r\n\r\n  private getSharedItems() {\r\n    let list: KeyValue[] = [];\r\n    Object.values(this.parent.childrenMap).forEach(bmog => {\r\n      Object.values(bmog.childrenMap).filter(bmo => !bmo.shared).forEach(bmo => {\r\n        const selected = this.data?.Share?.some((item) => item.value === bmo.GUID) || this.data?.Children?.some(guid => bmo.GUID === guid)\r\n        // parent is responsible for grouping items\r\n        // parent id is used later on submit and replaces bmo id in key property\r\n        const item = {key: bmo.BMOID.toString(),selected,disabled: selected, GUID: bmo.GUID , type:bmo.BmoType,\r\n          value:`${bmo.DisplayName} (${bmo.Name})`, \r\n          parent: bmog.Name, parentId: bmog.id};\r\n        list.push(item);\r\n      });\r\n    });\r\n    return list;\r\n  }\r\n\r\n  private getAllBmo() {\r\n    let list: KeyValue[] = [];\r\n    const share = this.data.Share || [];\r\n       \r\n    this.availableBmoToShare.forEach((bmo, i) =>{\r\n      const check = this.data?.Share?.some((item) => item.value === bmo.bmoGuid) || this.data?.Children?.some(guid => bmo.bmoGuid === guid)\r\n      const item = {\r\n        key: bmo.bmoid,\r\n        GUID:bmo.bmoGuid,\r\n        value: bmo.NAME,              \r\n        parent: this.data.Name, \r\n        parentId: this.data.id,\r\n        selected: check,\r\n        disabled: check,\r\n        type:bmo.BMOTYP,\r\n      };   \r\n      \r\n      list.push(item);\r\n    });\r\n\r\n    return list;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const val = this.form.value;\r\n      const payload: IBMOG = {\r\n        ...val,\r\n        Parent: this.parent.id,\r\n        BMOGID: this.data.BMOGID,\r\n        Children: this.data?.Children || [],\r\n        id: this.data?.id || val.Name,\r\n        CanvasType: val.CanvasType?.key || val.CanvasType,\r\n        Status: val.Status?.key || val.Status,\r\n        enableTLCorner : val.enableTLValues?.key, \r\n      };\r\n      const shared = {         \r\n        bmogId: this.data.BMOGID || '-1',\r\n        bmoIds: this.sharedChanged ? this.associatedSharedItems.map(({ key }) => key).toString() : '-1',\r\n      };\r\n       const removedItems = {\r\n           bmogId: this.data.BMOGID || '-1',\r\n           bmoNames : this.removedBMOs.length > 0 ? this.removedBMOs.join(',')?.toString() : '-1',\r\n      }\r\n\r\n      this.output.emit(payload);\r\n      this.ref.close({payload, shared,removedItems});\r\n    }\r\n  }\r\n  \r\n  \r\n  displayShare = (item: SharedItem) => item.value;\r\n  uniqueShare = (item: SharedItem) => item.value + item.key;\r\n\r\n  shouldAdd = (item: SharedItem) =>{\r\n    const val = this.form.value;\r\n    if(val.CanvasType?.key==undefined){\r\n      this.toastr.warning('Please select canvas type before shared');  \r\n      return of(false);\r\n    }\r\n    if(val.CanvasType?.key==='Form' && item.type!=\"Forms\"){\r\n      this.toastr.warning('Only form type section can be shared in case of form type view');  \r\n      return of(false);\r\n    }\r\n    \r\n   return this.api.checkBmoInBmog(item.key.toString(), (this.data.BMOGID || -1).toString()).pipe(\r\n      tap((success) => {\r\n        if (!success) {\r\n          this.toastr.warning('This section cannot be shared');\r\n        }\r\n      })\r\n   );\r\n  };\r\n\r\n  onShareAdd(item: SharedItem) {\r\n    this.associatedSharedItems = this.associatedSharedItems.concat(item);\r\n    this.sharedChanged = true;\r\n    this.refreshAllBMOs();\r\n  }\r\n  onShareRemove(item: SharedItem) {\r\n    this.associatedSharedItems = this.associatedSharedItems.filter((bmo) => bmo.key !== item.key.toString());\r\n    this.sharedChanged = true;\r\n    this.refreshAllBMOs();\r\n  }  \r\n\r\n  onShareReorder = (items: SharedItem[]) => {\r\n    this.associatedSharedItems = items;\r\n    this.sharedChanged = true;\r\n    this.refreshAllBMOs();\r\n  };  \r\n\r\n  refreshAllBMOs = () => {\r\n    this.allBMOs.forEach((dmog) => {\r\n      const rightCheck = this.associatedSharedItems.some((item) => item.GUID === dmog.GUID);      \r\n      dmog.selected = rightCheck;\r\n      dmog.disabled = rightCheck;\r\n    });\r\n    this.allBMOs = this.allBMOs;\r\n  };\r\n\r\n   onItemRemoved(item: any){\r\n    \r\n        const nameMatch = item.value.match(/\\(([^)]+)\\)/);\r\n        const Name = nameMatch ? nameMatch[1].trim() : '';\r\n        const DispName = item.value.split('(')[0].trim();\r\n        this.removedBMOs.push(Name);\r\n        this.allBMOs=this.allBMOs.filter((bmo) => bmo.key !== item.key);\r\n        this.sharedChanged = true;\r\n  }\r\n\r\n\r\n}\r\ntype SharedItem = KeyValue & { selected?: boolean; disabled?: boolean; dmogId: number; bmogId: number, parentId: number,type:string };","<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newObject\">New {{title}}</h2>\r\n    <h2 *ngIf=\"!newObject\">{{title}} Details</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  \r\n  <form [formGroup]=\"form\">\r\n    <div class=\"double-column\">\r\n      <ng-container *ngFor=\"let control of controls\">\r\n        <app-object-control \r\n          *ngIf=\"control.show | async\"\r\n          [parentForm]=\"form\" \r\n          [config]=\"control\"\r\n          [class]=\"control.class\" >\r\n        </app-object-control>\r\n      </ng-container>\r\n      <div class=\"span-12\">\r\n        <div class=\"double-column\" style=\"margin: 0\">\r\n          <label class=\"span-6\" for=\"\">Available Sections</label>\r\n          <label class=\"span-6\" for=\"\">Selected Sections</label>\r\n        </div>\r\n        <app-association\r\n          [items]=\"allBMOs\"\r\n          [associatedItems]=\"associatedSharedItems\"\r\n          [displayWith]=\"displayShare\"\r\n          [uniqueWith]=\"uniqueShare\"\r\n          [checkAll]=\"false\"\r\n          checkBy=\"selected\"\r\n          disableBy=\"disabled\"\r\n          [shouldAdd]=\"shouldAdd\"\r\n          (add)=\"onShareAdd($event)\"\r\n          (remove)=\"onShareRemove($event)\"\r\n          (reorder)=\"onShareReorder($event)\"\r\n          (itemRemoved)=\"onItemRemoved($event)\"\r\n          [canDelete]=\"true\"\r\n        >\r\n        </app-association>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!parent.published\">\r\n        <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newObject\">Update</ng-container> \r\n      </button>\r\n    </div>\r\n  \r\n  </form>\r\n</div>\r\n\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { BM, ObjectClass } from '../../classes';\r\nimport { NgFor, NgIf } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-dm-breadcrumbs',\r\n    templateUrl: './dm-breadcrumbs.component.html',\r\n    standalone: true,\r\n    imports: [NgFor, NgIf],\r\n})\r\nexport class DmBreadcrumbsComponent {\r\n  @Output() readonly select = new EventEmitter<ObjectClass>();\r\n  @Input()\r\n  set bm(bm: BM) {\r\n    this._bm = bm;\r\n  }\r\n  get bm() {\r\n    return this._bm;\r\n  }\r\n\r\n  private _bm: BM;\r\n}\r\n","<nav aria-label=\"breadcrumb\" style=\"position: fixed; z-index: 9999; width: 100%; margin-top: 43px;\">\r\n\t<ul class=\"breadcrumb\" style=\"margin: 0; padding-top: 0; padding-bottom: 0; font-size: 0.8rem; gap: 10px;\">\r\n\t\t<ng-container *ngFor=\"let obj of [bm, bm.selectedBMOG, bm.selectedBMO, bm.selectedDMOG]\">\r\n\t\t\t<li class=\"breadcrumb-item\" *ngIf=\"obj\" (click)=\"select.emit(obj)\">\r\n\t\t\t\t<a class=\"link\">{{obj.DisplayName || obj.Name}}</a>\r\n\t\t\t</li>\r\n\t\t</ng-container>\r\n\t</ul>\r\n</nav>","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { UtilService } from '@app/shared/services/util.service';\r\n\r\n@Component({\r\n    selector: 'app-dm-header',\r\n    template: `\r\n    <header>\r\n      <img [src]=\"imgUrl\" alt=\"C2M Logo\" style=\"height: 45px\" />\r\n      <span>Data Modeler</span>\r\n    </header>\r\n  `,\r\n    styles: [`\r\n      header {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 10px;\r\n      color: #fff;\r\n      background: #aaadaa;\r\n      text-transform: uppercase;\r\n      padding: 0.2rem 1rem;\r\n      display:none;\r\n    }\r\n  `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true\r\n})\r\nexport class DmHeaderComponent {\r\n  readonly imgUrl = UtilService.getUrlForImage('/assets/styles/images/datamodeler-icon.png');\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, Output, EventEmitter, Input } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BmEntryComponent } from '@app/admin/BM/components/bm-entry/bm-entry.component';\r\nimport { BmService } from '@app/admin/core/services/bm.service';\r\nimport { CompanyAssociationComponent } from '@app/admin/Shared/company-association/company-association.component';\r\nimport { BMAssociatedCompaniesPayload, ICompanyAssociatedBMObject, MessageService } from '@app/core';\r\nimport { FormViewApiService } from '@app/core/services/form-view-api.service';\r\nimport { NgbModal, NgbDropdown, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\r\nimport { NgIf, NgFor } from '@angular/common';\r\n\r\ntype Mode = 'Edit' | 'Published';\r\n\r\n@Component({\r\n    selector: 'app-dm-menu',\r\n    templateUrl: './dm-menu.component.html',\r\n    styleUrls: ['./dm-menu.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true,\r\n    imports: [NgbDropdown, NgbDropdownToggle, NgIf, NgbDropdownMenu, NgFor, NgbDropdownItem]\r\n})\r\nexport class DmMenuComponent implements OnInit {\r\n  @Output() readonly newVersion = new EventEmitter();\r\n  @Output() readonly generateXml = new EventEmitter();\r\n  @Output() readonly modeChange = new EventEmitter<Mode>();\r\n  ProcessName : any; \r\n  TransactionIDs : any;\r\n  dataSource: any;\r\n  BMSaveUpdateForm: UntypedFormGroup;\r\n  submitted: boolean = false;\r\n  isEdit = 'edit';\r\n  bmid: string;\r\n  @Input() businessModel: any = null;\r\n  typeId: string;\r\n  \r\n  @Input()\r\n  set mode(mode: Mode) {\r\n    this._mode = mode;\r\n  }\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n  \r\n  private _mode: Mode;\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    readonly formView: FormViewApiService,\r\n    readonly toastr: ToastrService,\r\n    readonly msg: MessageService,\r\n    readonly bmService: BmService,\r\n    readonly fb: UntypedFormBuilder,\r\n    private route : ActivatedRoute,\r\n  ) {}\r\n  ngOnInit() {\r\n    this.bmid = this.route.snapshot.queryParamMap.get('BMID');\r\n    this.typeId = this.route.snapshot.queryParamMap.get('TypeID');\r\n  }\r\n\r\n   async onCompanyAssociation() {\r\n        const obj = '';\r\n        const modal = this.msg.showComponent(CompanyAssociationComponent, {\r\n          displayWith: (item: ICompanyAssociatedBMObject) => `${item.BMODISPNAME} > ${item.DMOGDISPNAME} > ${item.DMODISPNAME}`,\r\n          uniqueWith: (item: ICompanyAssociatedBMObject) => `${item.BMOID}${item.DMOGID}${item.DMOID}`,\r\n          getAssociationsWith: (groupId: string) => this.formView.getBMObjectsForCompanyAssociation(groupId, this.typeId, this.bmid), \r\n          checkBy: 'ISDMOSELECTED',\r\n        },{ size: 'lg', centered: true });\r\n        const res = await modal.result;\r\n        if (res) {\r\n          const success = await this.updateCompanyAssociatedRecords(obj, res) === 1;\r\n          if (success) {\r\n           this.toastr.success('Success');\r\n          }\r\n        }\r\n    }\r\n  \r\n    private updateCompanyAssociatedRecords(bm: any, res: any) {\r\n\r\n  const bmoGuids = new Set(), dmogGuids = new Set(), dmoGuids = new Set();\r\n\r\n  const selectedItems = res?.selectedItems;\r\n\r\n  if (Array.isArray(selectedItems)) {\r\n    (selectedItems as ICompanyAssociatedBMObject[]).forEach(item => {\r\n      bmoGuids.add(item.BMOGUID);\r\n      dmogGuids.add(item.DMOGGUID);\r\n      dmoGuids.add(item.DMOGUID);\r\n    });\r\n  } else {\r\n    console.warn('selectedItems is not an array:', selectedItems);\r\n  }\r\n\r\n  const payload: BMAssociatedCompaniesPayload = {\r\n    BMId: this.bmid,\r\n    ProcessId: this.typeId,\r\n    CompanyId: res?.companyId ?? null,\r\n    groupName: res?.groupName ?? '',\r\n    BMOGUIDS: [...bmoGuids].toString(),\r\n    DMOGGUIDS: [...dmogGuids].toString(),\r\n    DMOGUIDS: [...dmoGuids].toString(),\r\n    IsAllComp: res?.IsAllComp ?? false\r\n  };\r\n\r\n  return lastValueFrom(this.formView.updatetBMObjectsForCompanyAssociation(payload));\r\n}\r\n\r\n  \r\n\r\n async CreateNewRecord() {\r\n  this.bmid = this.route.snapshot.queryParamMap.get('BMID');\r\n  this.ProcessName = sessionStorage.getItem('AppName');\r\n  try {\r\n    const response = await firstValueFrom(this.bmService.GetBmData(this.ProcessName, this.bmid));\r\n    this.dataSource = response[0];\r\n    const modalRef = this.modalService.open(BmEntryComponent, { backdrop: 'static', size: 'lg', keyboard: false });\r\n    const modalInstance: BmEntryComponent = modalRef.componentInstance;\r\n    const item = this.dataSource;\r\n    modalInstance.bmid = this.bmid;\r\n    modalInstance.dataList = item;\r\n    modalInstance.isEdit = true;\r\n    modalInstance.currentMode = item?.MOD;\r\n    const result = await modalRef.result;\r\n    if (result) {\r\n      this.toastr.success('Data saved successfully.');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n  }\r\n}\r\n}\r\n","<div class=\"header-row col-sm-12 pt-2 pb-2\">\r\n\t<!-- <button class=\"btn btn-outline-white btn-sm\" (click)=\"newVersion.emit()\"><i class=\"fas fa-code-branch\" ></i> New Version</button> -->\r\n\t<div class=\"heading-section\">\r\n\t\t<div class=\"buss-heading\">{{ businessModel?.DisplayName || 'Business Model' }} ({{ businessModel?.Version || 'Version' }})</div>\r\n\t\t<div class=\"gear-icon\" (click)=\"CreateNewRecord()\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\">\r\n\t\t\t<path d=\"M18.3469 11.6609L16.7453 10.7283C16.907 9.8488 16.907 8.94657 16.7453 8.06708L18.3469 7.13451C18.5311 7.02837 18.6138 6.8085 18.5536 6.60379C18.1363 5.25423 17.4258 4.03356 16.4972 3.01759C16.3543 2.86217 16.1212 2.82426 15.9407 2.9304L14.3392 3.86297C13.6662 3.27917 12.8917 2.82805 12.0533 2.53236V0.671025C12.0533 0.458735 11.9067 0.272981 11.6999 0.22749C10.3202 -0.0833643 8.90658 -0.0682007 7.59449 0.22749C7.38771 0.272981 7.24109 0.458735 7.24109 0.671025V2.53615C6.40646 2.83563 5.63199 3.28675 4.95527 3.86676L3.35745 2.93419C3.17323 2.82805 2.94389 2.86217 2.80103 3.02139C1.87241 4.03356 1.16185 5.25423 0.744541 6.60758C0.680628 6.81229 0.767098 7.03216 0.951317 7.13831L2.5529 8.07087C2.39123 8.95036 2.39123 9.85259 2.5529 10.7321L0.951317 11.6646C0.767098 11.7708 0.684387 11.9907 0.744541 12.1954C1.16185 13.5449 1.87241 14.7656 2.80103 15.7816C2.94389 15.937 3.17699 15.9749 3.35745 15.8688L4.95902 14.9362C5.63199 15.52 6.40646 15.9711 7.24485 16.2668V18.1319C7.24485 18.3442 7.39147 18.53 7.59825 18.5755C8.97801 18.8863 10.3916 18.8711 11.7037 18.5755C11.9105 18.53 12.0571 18.3442 12.0571 18.1319V16.2668C12.8917 15.9673 13.6662 15.5162 14.3429 14.9362L15.9445 15.8688C16.1287 15.9749 16.3581 15.9408 16.5009 15.7816C17.4295 14.7694 18.1401 13.5487 18.5574 12.1954C18.6138 11.9869 18.5311 11.767 18.3469 11.6609ZM9.64722 12.4304C7.98924 12.4304 6.63956 11.0695 6.63956 9.39768C6.63956 7.7259 7.98924 6.36496 9.64722 6.36496C11.3052 6.36496 12.6549 7.7259 12.6549 9.39768C12.6549 11.0695 11.3052 12.4304 9.64722 12.4304Z\" fill=\"#EB583B\"/>\r\n\t\t  </svg></div>\r\n\t</div>\r\n\t<div class=\"btn-section\">\r\n\t\t<button class=\"btn btn-outline-white btn-sm\" (click)=\"generateXml.emit()\">\r\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\">\r\n\t\t\t\t<path d=\"M10.8497 0.35862L12.77 0.742681L9.14066 17.6414L7.22036 17.2573L10.8497 0.35862ZM17.2828 9L13.8358 5.55305V2.83582L20 9L13.8358 15.1546V12.4374L17.2828 9ZM0 9L6.15458 2.83582V5.55305L2.70763 9L6.15458 12.4374V15.1546L0 9Z\" fill=\"white\"/>\r\n\t\t\t\t</svg>\r\n\t\t\t Generate JSON</button>\r\n\t\t\t <button class=\"btn btn-outline-white btn-sm compAssContainer\" type=\"button\" (click)=\"onCompanyAssociation()\"><i class=\"fa fa-link\"></i>Company Association</button>\r\n\t\t<div class=\"mode d-none\" ngbDropdown>\r\n\t\t<button class=\"btn btn-sm\" [class]=\"mode === 'Edit' ? 'btn-outline-white-edit' : 'btn-primary'\" ngbDropdownToggle>\r\n\t\t\t<i class=\"fas fa-edit\" *ngIf=\"mode === 'Edit'\"></i>\r\n\t\t\t<i class=\"fas fa-lock\" *ngIf=\"mode === 'Published'\"></i>\r\n\t\t\t{{mode}}\r\n\t\t</button>\r\n\t\t<ul ngbDropdownMenu style=\"min-width: auto !important;\">\r\n\t\t\t<li ngbDropdownItem *ngFor=\"let mode of ['Edit', 'Published']\" (click)=\"modeChange.emit(mode)\">\r\n\t\t\t{{mode}}\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\r\n</div>\r\n","import { Component, Input, } from '@angular/core';\r\nimport { KeyValue, NgFor, NgIf, AsyncPipe } from '@angular/common'\r\nimport { UntypedFormArray, UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { ListColumnType, ListConfig } from '@app/admin/lib/list/list-config.model';\r\nimport { arrayToList, enumToList, primitiveArrayToList, toFormArray, toFormGroup } from '@app/admin/wf/wfd/util/helpers';\r\nimport { WF } from '@lib/models';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { intersectionWith } from 'lodash';\r\nimport { BehaviorSubject, of } from 'rxjs';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { DMComponent, ObjectControl } from '../../classes';\r\nimport { ActionState, ConditionArea, ConditionAreaKey, DMOUI, ICondition, IConditionBody, ObjectDetail, Status } from '../../models1';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\nimport { checkNameValidatorSync } from '../../validators1';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { MatExpansionPanel, MatExpansionPanelHeader } from '@angular/material/expansion';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\n@Component({\r\n    selector: 'app-dmo-condition',\r\n    templateUrl: './dmo-condition.component.html',\r\n    styleUrls: ['./dmo-condition.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        MatExpansionPanel,\r\n        MatExpansionPanelHeader,\r\n        NgFor,\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        ObjectControlComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class DmoConditionComponent extends ObjectDetail<IConditionBody, DMComponent> {\r\n  @Input() uiData: DMOUI;\r\n  @Input() readonly = false;\r\n  @Input() currentDmog:any;\r\n  public newObject = true;\r\n  public controls: ObjectControl<IConditionBody>[];\r\n  public conditions: IConditionBody[] = [];\r\n  private readonly deletedConditions: IConditionBody[] = [];\r\n  private dmoList = [];\r\n  private readonly status = enumToList(Status);\r\n  private readonly availableItems$ = new BehaviorSubject<KeyValue<string, string>[]>([]);\r\n  private conditionsConfig: ListConfig<ICondition>;\r\n  private editedCondition: IConditionBody;\r\n  private allConditions: IConditionBody[] = [];\r\n  private bmoConditionItems = [];\r\n  private dmogConditionItems = [];\r\n  private dmoConditionItems = [];\r\n  private triggersConditionItems: any[];\r\n  readonly #areas: KeyValue<WF.ConditionArea, string>[] = [\r\n    { key: 'BusinessModelObject', value: 'Section' },\r\n    { key: 'DataModelGroup', value: 'Card' },\r\n    { key: 'DataModelObject', value: 'Data Model Object' },\r\n    { key: 'Trigger', value: 'Trigger' },\r\n  ];\r\n\r\n  constructor(ref: NgbActiveModal, fb: UntypedFormBuilder, private readonly api: DataModelerApiService) {\r\n    super(ref, fb);\r\n  }\r\n\r\n  beforeFormInit() {\r\n    this.conditions = [...this.parent.conditions];\r\n    this.dmoList = this.parent.dmoListByType().map((item) => ({...item, disabled: (item.key === this.parent.guid)}));\r\n    this.createConditionsConfig();\r\n    this.generateConditionAreaItems();\r\n  }\r\n\r\n  initForm() {\r\n    const validators = [...NAME_VALIDATORS];\r\n    // if (this.newObject) {\r\n    //   validators.push(checkNameValidatorSync(this.allConditions, 'Name'));\r\n    // }\r\n    this.form = this.fb.group({\r\n      Name: ['', { validators, updateOn: 'blur' }],\r\n      Version: [this.parent.parent.Version, [Validators.required]],\r\n      Status: [this.status[0]],\r\n      ShortDesc: ['', [Validators.required]],\r\n      ExecuteElse: [true],\r\n      Conditions: toFormArray([], { addCheckbox: true }),\r\n      ConditionArea: this.fb.group({\r\n        key: [''],\r\n        value: [[]],\r\n      }),\r\n      Action: this.fb.group({\r\n        Enabled: '',\r\n        Mandatory: '',\r\n        Visible: [],\r\n      }),\r\n    });\r\n    this.defaultCondition();\r\n\r\n    this.controls = [\r\n      new ObjectControl({ name: 'Name', label: 'Condition Name', required: true, readonly: !this.newObject }),\r\n      new ObjectControl({ name: 'Version', readonly: true, required: true }),\r\n      new ObjectControl({ name: 'Status', options: of(this.status), type: 'dropdown' }),\r\n      new ObjectControl({ name: 'ShortDesc', label: 'Short Description', required: true }),\r\n      new ObjectControl({ name: 'ExecuteElse', label: 'Execute else?', type: 'switch' }),\r\n      new ObjectControl({ name: 'Conditions', type: 'list', config: this.conditionsConfig, class: 'span-12' }),\r\n      new ObjectControl({\r\n        name: 'key' as any,\r\n        label: 'Condition Area',\r\n        type: 'radio',\r\n        group: this.f.ConditionArea,\r\n        options: of(this.#areas),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'value' as any,\r\n        label: 'Available Items',\r\n        type: 'dropdown',\r\n        group: this.f.ConditionArea,\r\n        options: this.availableItems$,\r\n        multiple: true,\r\n        groupOptionsBy: 'parent',\r\n      }),\r\n      new ObjectControl<any>({\r\n        name: 'Enabled',\r\n        type: 'radio',\r\n        class: 'span-4',\r\n        options: of([ActionState[0], ActionState[2], ActionState[1]]),\r\n        group: this.f.Action,\r\n      }),\r\n      new ObjectControl<any>({\r\n        name: 'Mandatory',\r\n        type: 'radio',\r\n        class: 'span-4',\r\n        options: of([ActionState[0], ActionState[2], ActionState[1]]),\r\n        group: this.f.Action,\r\n      }),\r\n      new ObjectControl<any>({\r\n        name: 'Visible',\r\n        type: 'radio',\r\n        class: 'span-4',\r\n        options: of([ActionState[0], ActionState[2], ActionState[1]]),\r\n        group: this.f.Action,\r\n      }),\r\n    ];\r\n\r\n  this.form.get(\"Name\").valueChanges.subscribe(name=>{\r\n    if (this.newObject && name && name.length>=4 && !this.form.get('Name').hasError(\"maxlength\")\r\n        && !this.form.get('Name').hasError(\"pattern\")) {\r\n      this.api.checkNameValidity('condition',0,name,this.parent.parent.Version,this.parent.parent.root.ProcessName).subscribe(IsExits=>{\r\n        if(IsExits){\r\n          const nameControl = this.form.get('Name');\r\n          nameControl.setErrors({\r\n            nameExists: true,\r\n            message: 'Duplicate name'\r\n          });\r\n        }\r\n      });\r\n    }\r\n })\r\n\r\n  }\r\n  afterFormInit() {\r\n    this.f.ConditionArea.get('key')\r\n      .valueChanges.pipe(takeWhile((_) => this.componentActive))\r\n      .subscribe((val) => this.conditionAreaHandler(val));\r\n  }\r\n\r\n  public editCondition(condition: IConditionBody) {\r\n    this.editedCondition = condition;\r\n    this.submitted = false;\r\n    this.newObject = false;\r\n    if (this.controls) {\r\n      this.controls[0].readonly = !this.newObject;\r\n    }\r\n\r\n    const selfAdded = condition.Conditions.some(cond => cond.Dmo === this.parent.guid);\r\n    const dmo = this.dmoList.find(dmo => dmo.key === this.parent.guid);\r\n    dmo.disabled = selfAdded;\r\n\r\n    const validators = [...NAME_VALIDATORS]\r\n    this.f.Name.clearValidators();\r\n    this.f.Name.setValidators(validators);\r\n    this.form.patchValue({\r\n      ...condition,\r\n      ConditionArea: {\r\n        ...condition.ConditionArea,\r\n        value: this.parseConditionArea(condition.ConditionArea),\r\n      },\r\n      Status: this.status.find((s) => s.key == condition.Status),\r\n      ExecuteElse:condition.ExecuteElse==\"0\" ? false : true,\r\n      Action: {\r\n        Enabled: ActionState[condition.Action[0].value || 2],\r\n        Mandatory: ActionState[condition.Action[1].value || 2],\r\n        Visible: ActionState[condition.Action[2].value || 2],\r\n      },\r\n    });\r\n    (this.f.Conditions as UntypedFormArray).clear();\r\n    condition.Conditions\r\n      .map(cond => ({...cond, Dmo: {key: cond.Dmo, value: this.dmoList.find(dmo => dmo.key === cond.Dmo).value}}))\r\n      .map(cond => toFormGroup(cond, {addCheckbox: cond.Dmo.key !== this.parent.guid, deletable: cond.Dmo.key !== this.parent.guid}))\r\n      .forEach(group => (this.f.Conditions as UntypedFormArray).push(group))\r\n    if (!selfAdded) {\r\n      this.defaultCondition();\r\n    }\r\n\r\n    this.form.updateValueAndValidity();\r\n  }\r\n\r\n  private defaultCondition() {\r\n    const first: Partial<ICondition> = {\r\n      Dmo: {key: this.parent.guid, value: this.parent.label, parent: this.parent.parent.DisplayName} as any,\r\n      Exp: 'equal',\r\n      Logical: 'AND',\r\n      Label: this.parent.dmoName,\r\n      Value: '',\r\n    };\r\n    (this.f.Conditions as UntypedFormArray).push(toFormGroup(first, {addCheckbox: false, deletable: false}));\r\n  }\r\n\r\n  public deleteCondition(i: number) {\r\n    this.deletedConditions.push(this.conditions[i]);\r\n    this.conditions = this.conditions.filter((_, idx) => idx !== i);\r\n  }\r\n\r\n  public updateCondition() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const f = this.form.value;\r\n      const condition: IConditionBody = {\r\n        ...f,\r\n        Action: Object.entries(f.Action).map(([key, v]) => ({ key, value: v ? ActionState[v as string].toString() : ActionState.NA })),\r\n        Status: f.Status?.key || f.Status || 0,\r\n        Conditions: this.f.Conditions.value.map(cond => ({...cond, Dmo: cond.Dmo?.key || cond.Dmo})),\r\n        ExecuteElse: +f.ExecuteElse,\r\n        ConditionArea: {\r\n          key: f.ConditionArea.key || '',\r\n          value: this.sanitizeConditionArea(f.ConditionArea.value || []),\r\n        },\r\n      };\r\n      const idx = this.conditions.findIndex((c) => c.Name === condition.Name);\r\n      if (idx !== -1) this.conditions[idx] = condition;\r\n      else this.conditions.push(condition);\r\n      this.onReset();\r\n    }\r\n  }\r\n\r\n  private generateConditionAreaItems() {\r\n    const bm = this.parent.parent.root;\r\n    const { selectedBMO, selectedDMOG } = bm;\r\n    Object.values(bm.childrenMap).forEach((bmog) => {\r\n      Object.values(bmog.childrenMap)\r\n        .filter((bmo) => !bmo.shared)\r\n        .forEach((bmo) => {\r\n          if (bmo.id !== selectedBMO.id) {\r\n            const bmoItem = { key: bmo.id, value: bmo.DisplayName, parent: bmog.Name, parentId: bmog.id };\r\n            this.bmoConditionItems.push(bmoItem);\r\n          }\r\n          Object.values(bmo.childrenMap)\r\n            .filter((dmog) => !dmog.shared)\r\n            .forEach((dmog) => {\r\n              if (dmog.id !== selectedDMOG.id) {\r\n                const dmogItem = { key: dmog.id, value: dmog.DisplayName, parent: `${bmog.Name} / ${bmo.DisplayName}`, parentId: bmo.id };\r\n                this.dmogConditionItems.push(dmogItem);\r\n              }\r\n              Object.values(dmog.childrenMap).forEach((dmo) => {\r\n                const dmoItem = {\r\n                  key: dmo.guid,\r\n                  value: dmo.label,\r\n                  parent: `${bmog.Name} / ${bmo.DisplayName} / ${dmog.DisplayName}`,\r\n                  parentId: dmog.id,\r\n                };\r\n                this.dmoConditionItems.push(dmoItem);\r\n                this.allConditions.push(...dmo.conditions);\r\n              });\r\n            });\r\n        });\r\n    });\r\n  }\r\n\r\n  private conditionAreaHandler(val: ConditionAreaKey) {\r\n    let list: KeyValue<string, string>[] = [];\r\n    this.f.ConditionArea.get('value').reset([]);\r\n    if (val == 'BusinessModelObject') {\r\n      list = this.bmoConditionItems;\r\n    } else if (val === 'DataModelGroup') {\r\n      list = this.dmogConditionItems;\r\n    } else if (val === 'DataModelObject') {\r\n      list = this.dmoConditionItems;\r\n    } else if (val === 'Trigger') {\r\n      if (!this.triggersConditionItems) {\r\n        this.api.getTriggers(this.parent.parent.root.ProcessName).subscribe((res) => {\r\n          this.triggersConditionItems = arrayToList(res, 'Key', 'Value');\r\n\r\n          this.availableItems$.next(this.triggersConditionItems);\r\n          this.f.ConditionArea.get('value').patchValue(this.parseConditionArea(this.editedCondition?.ConditionArea));\r\n        });\r\n      } else {\r\n        this.availableItems$.next(this.triggersConditionItems);\r\n      }\r\n      return;\r\n    }\r\n    this.availableItems$.next(list);\r\n  }\r\n\r\n  public onReset() {\r\n    this.form.reset({ Version: this.parent.parent.Version });\r\n    if (this.controls) {\r\n      this.controls[0].readonly = false;\r\n    }\r\n    (this.f.Conditions as UntypedFormArray).clear();\r\n    this.defaultCondition();\r\n    this.newObject = true;\r\n  }\r\n\r\n  onSubmit() {\r\n    const bm = this.parent.parent.root;\r\n    const dmo = this.currentDmog.formData;\r\n    const dmogName = this.currentDmog.Name;\r\n\r\n    if (this.parent.parent.PrntDmogIDs) {\r\n      bm.selectedDMOG.formData._id = this.currentDmog.GUID;\r\n    }\r\n    const payload = {\r\n      BMName: bm.Name,\r\n      BMOGName: bm.selectedBMOG.Name,\r\n      BMOName: bm.selectedBMO.Name,\r\n      DMOGName: dmogName,\r\n      CanvasType: bm.selectedBMOG.CanvasType,\r\n      ProcessName: bm.ProcessName,\r\n      Version: bm.Version,\r\n      dmo:dmo,\r\n      dmoCondition: {\r\n        [this.parent.guid]: {\r\n          Condition: this.conditions.map((obj) => {\r\n            return {\r\n              ...obj,\r\n              Conditions: this.sanitizeConditions(obj),\r\n            };\r\n          }),\r\n        },\r\n      },\r\n    };\r\n    const res = { payload, deletedConditions: this.deletedConditions };\r\n    this.output.emit(res as any);\r\n    this.ref.close(res);\r\n  }\r\n\r\n  private sanitizeConditions = (body) => {\r\n    return body.Conditions.map((c) => {\r\n      return {\r\n        ...c,\r\n        Dmo: c.Dmo?.key || c.Dmo,\r\n        Exp: c.Exp?.key || c.Exp,\r\n        Logical: c.Logical?.key || c.Logical,\r\n        Value: c.Dmo?.Value || c.Value,\r\n      };\r\n    });\r\n  };\r\n\r\n  private sanitizeConditionArea(items: any[]) {\r\n    return items.map((area) => ({ Key: area.parentId, Value: area.key }));\r\n  }\r\n\r\n  private parseConditionArea(area: ConditionArea) {\r\n    if (!area) return [];\r\n    const selectedList = (list: any[]) => intersectionWith(list, area.value, (a, b) => a.key === b.Value);\r\n    switch (area.key) {\r\n      case 'BusinessModelObject':\r\n        return selectedList(this.bmoConditionItems);\r\n      case 'DataModelGroup':\r\n        return selectedList(this.dmogConditionItems);\r\n      case 'DataModelObject':\r\n        return selectedList(this.dmoConditionItems);\r\n      case 'Trigger':\r\n        return selectedList(this.triggersConditionItems);\r\n      default: return [];\r\n    }\r\n  }\r\n\r\n  private createConditionsConfig() {\r\n    const operators = ['AND', 'OR'];\r\n    const expressions = ['equal', 'not equal'];\r\n    this.conditionsConfig = {\r\n      columns: [\r\n        { key: 'Dmo', displayValue: 'Data Model Object', type: ListColumnType.Dropdown, validators: [Validators.required] },\r\n        { key: 'Exp', displayValue: 'Expression', type: ListColumnType.Dropdown, validators: [Validators.required] },\r\n        { key: 'Value', displayValue: 'Value', validators: [Validators.required] },\r\n        { key: 'Logical', displayValue: 'Operator', type: ListColumnType.Dropdown },\r\n      ],\r\n      defaultValues: {\r\n        Exp: primitiveArrayToList(expressions),\r\n        Logical: primitiveArrayToList(operators),\r\n        Dmo: this.dmoList,\r\n      },\r\n      actions: { add: true, edit: true, delete: true },\r\n      checkbox: true,\r\n    };\r\n  }\r\n}\r\n","<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2><i [class]=\"uiData.class\" style=\"margin-right: 5px\"> </i>{{ uiData.name }} Conditions</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  \r\n  <mat-expansion-panel [expanded]=\"false\">\r\n    <mat-expansion-panel-header>\r\n    Conditions\r\n    </mat-expansion-panel-header>\r\n    <table class=\"stripped table table-bordered text-muted\">\r\n      <thead class=\"text-muted\">\r\n        <tr class=\"span-row\">\r\n          <th>\r\n            <span>Condition</span>\r\n          </th>\r\n          <th style=\"width:100px;\">\r\n            <span>Status</span>\r\n          </th>\r\n          <th>\r\n            <span>Sort Description</span>\r\n          </th>\r\n          <th class=\"text-center\" style=\"width: 60px;\">\r\n            <span>Actions</span>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          <tr *ngFor=\"let condition of conditions; let i = index\">\r\n            <td><span>{{condition.Name}}</span></td>\r\n            <td><span>{{condition.Status === '1'?'Active' : 'Inactive'}}</span></td>\r\n            <td><span>{{condition.ShortDesc}}</span></td>\r\n            <td class=\"d-flex align-items-center justify-content-around\">\r\n              <a title=\"Open\" class=\"save-btn\" (click)=\"editCondition(condition); formPanel.open()\"\r\n                style=\"cursor: pointer;\"><i class=\"fas fa-pencil-alt\"></i>\r\n              </a>\r\n              <a title=\"Delete\" class=\"save-btn\" (click)=\"deleteCondition(i)\" *ngIf=\"!readonly\"\r\n                style=\"cursor: pointer;\"><i class=\"far fa-trash-alt\"></i>\r\n              </a>\r\n            </td>\r\n          </tr>\r\n      </tbody>\r\n    </table>\r\n  </mat-expansion-panel>\r\n  \r\n  <mat-expansion-panel #formPanel [hidden]=\"!conditions.length && readonly\">\r\n    <mat-expansion-panel-header>\r\n    {{readonly ? 'Select Condition' : newObject ? 'Create Condition' : 'Update Condition'}}\r\n    </mat-expansion-panel-header>\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"double-column\">\r\n        <ng-container *ngFor=\"let control of controls\">\r\n          <app-object-control [parentForm]=\"form\" [config]=\"control\" *ngIf=\"control.show | async\"></app-object-control>\r\n        </ng-container> \r\n      </div>\r\n      <div class=\"actions\">\r\n        <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onReset()\">Cancel</button>\r\n        <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"updateCondition()\" *ngIf=\"!readonly\">\r\n          <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n          <ng-container *ngIf=\"!newObject\">Update</ng-container>\r\n        </button>\r\n      </div>\r\n      \r\n    </form>\r\n  </mat-expansion-panel>\r\n  \r\n  <div class=\"popup__actions\">\r\n    <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n    <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!readonly\">Save</button>\r\n  </div>\r\n</div>","import { Component, inject, Input } from '@angular/core';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormGroup } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-grid-header-mapper',\r\n  templateUrl: './grid-header-mapper.component.html',\r\n  styleUrls: ['./grid-header-mapper.component.scss'],\r\n  imports: [CommonModule,NgSelectModule, FormsModule, ReactiveFormsModule]\r\n  \r\n})\r\nexport class GridHeaderMapperComponent {\r\n  @Input() parentForm!: UntypedFormGroup;\r\n  readonly #ApiService = inject(DataModelerApiService);\r\n  columnNames = [];\r\n  allAvaliableColumns =[];\r\n  dataTypes = ['DropDown', 'Text', 'Number', 'Date'];\r\n  @Input() headerMapping;\r\n  newRow = { objectKey: null, displayName: '', dataType: null, width: '' };\r\n  masterSelected: boolean = false;\r\n  constructor( private readonly toastr: ToastrService,) { }\r\n\r\n ngOnInit(): void {\r\n  if(this.shouldAllowCallAPI){\r\n   this.getColumnsName(); \r\n  }\r\n }\r\n\r\n  addRow() {\r\n    const hasInvalidValue  = Object.values(this.newRow).some(val => val === '' || val === null || val === undefined);\r\n    if (hasInvalidValue) {\r\n      return;\r\n    }\r\n    const totalWidth = this.getTotalWidth() +  Number(this.newRow.width) || 0;;\r\n    if (totalWidth > 100) {\r\n        this.toastr.error('Total width cannot be greater than 100%');  \r\n        return;\r\n     }\r\n    this.headerMapping.push({\r\n      ...this.newRow,\r\n      isEditing: false,\r\n      selected: false\r\n    });\r\n    this.newRow = { objectKey: null, displayName: '', dataType: null, width: '' };\r\n    this.filterAvailableColumns();\r\n  }\r\n\r\n  editRow(row: any) {\r\n   \r\n    row.isEditing = true;\r\n  }\r\n\r\n  saveRow(row: any) {\r\n    const totalWidth = this.getTotalWidth();\r\n    if (totalWidth > 100) {\r\n        this.toastr.error('Total width cannot be greater than 100%');  \r\n       return;\r\n    }\r\n    this.filterAvailableColumns();\r\n    row.isEditing = false;\r\n  }\r\n\r\n  deleteRow(index: number) {\r\n    this.headerMapping.splice(index, 1);\r\n  }\r\n\r\n  deleteSelectedRows() {\r\n    this.headerMapping = this.headerMapping.filter(row => !row.selected);\r\n  }\r\n\r\n  cancelEdit(row: any) {\r\n    row.isEditing = false;\r\n  }\r\n\r\n  checkUncheckAll() {\r\n    this.headerMapping.forEach(row => {\r\n      row.selected = this.masterSelected;\r\n    });\r\n  }\r\n\r\n  isAllSelected() {\r\n    this.masterSelected = this.headerMapping.length > 0 && this.headerMapping.every(row => row.selected);\r\n  }\r\n\r\n  shouldAllowCallAPI(): boolean {\r\n    const { dataSrc, data } = this.parentForm?.value || {};\r\n    const requestBody = data?.dependentbody;\r\n    return !!(dataSrc?.value && data?.endpoint && data?.methodtype && requestBody && Object.keys(requestBody).length);\r\n  }\r\n\r\n\r\n  getColumnsName() {\r\n    const { dataSrc, data } = this.parentForm?.value || {};\r\n    const requestBody = data?.dependentbody;\r\n    const dataSource = dataSrc?.value;\r\n    const endpoint = data?.endpoint;\r\n    const methodtype = data?.methodtype.key || data?.methodtype;\r\n    const body = JSON.parse(requestBody);\r\n\r\n    this.#ApiService.callDynamicApi(dataSource, endpoint, methodtype, body).subscribe((response) => {\r\n      if (Array.isArray(response.Data)) {\r\n        this.columnNames = response.Data;\r\n        const firstItem = response.Data[0];\r\n        if (firstItem) {\r\n          this.columnNames = Object.keys(firstItem);\r\n          this.allAvaliableColumns = this.columnNames;\r\n          if(this.columnNames){\r\n            this.filterAvailableColumns();\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n filterAvailableColumns() {\r\n  this.columnNames = this.allAvaliableColumns.filter(\r\n    col => !this.headerMapping.some(h => h.objectKey === col)\r\n  );\r\n}\r\n\r\n\r\n  \r\ngetTotalWidth(): number {\r\n  return this.headerMapping\r\n    .map(row => Number(row.width) || 0)\r\n    .reduce((a, b) => a + b, 0);\r\n }\r\n preventIfTotalWidthExceeds(event: KeyboardEvent, currentRow: any): void {\r\n  const key = event.key;\r\n\r\n  const allowedKeys = ['Backspace', 'Tab', 'ArrowLeft', 'ArrowRight', 'Delete'];\r\n  if (allowedKeys.includes(key)) {\r\n    return;\r\n  }\r\n\r\n  if (!/^\\d$/.test(key)) {\r\n    event.preventDefault();\r\n    return;\r\n  }\r\n\r\n  const currentValue = String(currentRow.width ?? '');\r\n  const selectionStart = (event.target as HTMLInputElement).selectionStart ?? currentValue.length;\r\n  const selectionEnd = (event.target as HTMLInputElement).selectionEnd ?? currentValue.length;\r\n\r\n  const newValue =\r\n    currentValue.substring(0, selectionStart) +\r\n    key +\r\n    currentValue.substring(selectionEnd);\r\n\r\n  const updatedWidth = parseInt(newValue, 10) || 0;\r\n\r\n  const otherWidths = this.headerMapping\r\n    .filter(row => row !== currentRow)\r\n    .map(row => Number(row.width) || 0);\r\n\r\n  const total = otherWidths.reduce((a, b) => a + b, 0) + updatedWidth;\r\n\r\n  if (total > 100) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\n\r\n}\r\n","<ng-container *ngIf=\"parentForm\" >\r\n    <div class=\"actions deleteContainer d-flex justify-content-end mt-1 mb-3\">\r\n        <button type=\"button\" class=\"btn btn-outline-primary\" [disabled]=\"!shouldAllowCallAPI()\"\r\n            (click)=\"getColumnsName()\">Call API</button>\r\n    </div>\r\n\r\n    <table class=\"table table-bordered\" [ngStyle]=\"{ 'margin-bottom': '10px' }\">\r\n        <thead class=\"thead-light\">\r\n            <tr>\r\n                <th scope=\"col\">Actions</th>\r\n                <th scope=\"col\">Column</th>\r\n                <th scope=\"col\">Display Name</th>\r\n                <th scope=\"col\">Data Type</th>\r\n                <th scope=\"col\">Width (%)</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <tr *ngFor=\"let row of headerMapping; let i = index\">\r\n                <td class=\"actions\">\r\n                    <ng-container *ngIf=\"!row.isEditing; else editMode\">\r\n                        <a (click)=\"editRow(row)\"><i class=\"fas fa-edit ml-1\" title=\"Edit\"></i></a>\r\n                        <a (click)=\"deleteRow(i)\"><i class=\"fas fa-trash-alt ml-3\" title=\"Delete\" ></i></a>\r\n                    </ng-container>\r\n                    <ng-template #editMode>\r\n                        <a (click)=\"saveRow(row)\"><i class=\"fas fa-save ml-1\" title=\"Edit\"></i></a>\r\n                        <a (click)=\"cancelEdit(row)\"><i class=\"fas fa-times ml-3\" title=\"Delete\"></i></a>\r\n                    </ng-template>\r\n                </td>\r\n                <td>\r\n                \r\n                    <ng-container *ngIf=\"row.isEditing; else objectKeyView\">\r\n                        <ng-select [items]=\"columnNames\" [(ngModel)]=\"row.objectKey\" [readonly]=\"!row.isEditing\" [searchable]=\"true\"\r\n                            placeholder=\"Select...\">\r\n                        </ng-select>\r\n                    </ng-container>\r\n                \r\n                    <ng-template #objectKeyView>\r\n                        <span>{{ row.objectKey }}</span>\r\n                    </ng-template>\r\n                \r\n                \r\n                </td>\r\n\r\n                <td>\r\n                    <input class=\"form-control\" [(ngModel)]=\"row.displayName\" [readonly]=\"!row.isEditing\" />\r\n                </td>\r\n                <td>\r\n\r\n                    <ng-container *ngIf=\"row.isEditing; else dataTypesView\">\r\n                        <ng-select [items]=\"dataTypes\" [(ngModel)]=\"row.dataType\" [disabled]=\"!row.isEditing\"\r\n                        [searchable]=\"true\" placeholder=\"Select...\">\r\n                      </ng-select>\r\n                    </ng-container>\r\n                \r\n                    <ng-template #dataTypesView>\r\n                        <span>{{ row.dataType }}</span>\r\n                    </ng-template>\r\n\r\n                   \r\n                </td>\r\n\r\n                <td>\r\n                    <input class=\"form-control\" [(ngModel)]=\"row.width\" [readonly]=\"!row.isEditing\" \r\n                    (keydown)=\"preventIfTotalWidthExceeds($event, row)\" />\r\n                </td>\r\n            </tr>\r\n\r\n           <tr>\r\n                <td class=\"actions text-end align-middle\">\r\n                    <a (click)=\"addRow()\">\r\n                    <i class=\"fas fa-plus ml-2\" title=\"Add\" [ngStyle]=\"{ 'font-size': '10px', 'margin-left' : '10px' }\"></i>\r\n                    </a>\r\n                </td>\r\n\r\n                <td>\r\n                    <ng-select\r\n                    [items]=\"columnNames\"\r\n                    [(ngModel)]=\"newRow.objectKey\"\r\n                    [searchable]=\"true\"\r\n                    placeholder=\"Select...\"\r\n                    >\r\n                    </ng-select>\r\n                </td>\r\n\r\n                <td>\r\n                    <input\r\n                    class=\"form-control\"\r\n                    [(ngModel)]=\"newRow.displayName\"\r\n                    placeholder=\"\"\r\n                    />\r\n                </td>\r\n\r\n                <td>\r\n                    <ng-select\r\n                    [closeOnSelect]=\"true\"\r\n                    [items]=\"dataTypes\"\r\n                    [(ngModel)]=\"newRow.dataType\"\r\n                    [searchable]=\"true\"\r\n                    placeholder=\"Select...\"\r\n                    >\r\n                    </ng-select>\r\n                </td>\r\n\r\n                <td>\r\n                    <input\r\n                    class=\"form-control\"\r\n                    [(ngModel)]=\"newRow.width\"\r\n                    />\r\n                </td>\r\n        </tr>\r\n\r\n\r\n        </tbody>\r\n    </table>\r\n\r\n    \r\n</ng-container>","import { Component, inject, Input, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormGroup } from '@angular/forms';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n@Component({\r\n  selector: 'app-dependent-fields-mapper',\r\n  templateUrl: './dependent-fields-mapper.component.html',\r\n  styleUrls: ['./dependent-fields-mapper.component.scss'],\r\n  standalone : true,\r\n  imports : [CommonModule,NgSelectModule, FormsModule, ReactiveFormsModule]\r\n})\r\nexport class DependentFieldsMapperComponent implements OnInit {\r\n @Input() parentForm!: UntypedFormGroup;\r\n readonly #ApiService = inject(DataModelerApiService);\r\n  columnNames = [];\r\n  dataTypes = ['Text', 'number']\r\n  @Input() mappingDmos;\r\n  newRow = { objectKey: null, mapDmoName : null};\r\n  masterSelected: boolean = false;\r\n  avaliableDMOs: any[] = [];\r\n  constructor(private readonly route: ActivatedRoute) { }\r\n \r\n  private readonly bmId = this.route.snapshot.queryParams.BMID;\r\n  ngOnInit(): void {\r\n    this.parentForm.valueChanges.subscribe(() => {\r\n              this.shouldAllowCallAPI();\r\n   });\r\n  }\r\n\r\n  addRow() {\r\n    const shouldAdd = Object.values(this.newRow).every(val => val === '' || val === null || val === undefined);\r\n    if (shouldAdd) {\r\n      return;\r\n    }\r\n    this.mappingDmos.push({\r\n      ...this.newRow,\r\n      isEditing: false,\r\n      selected: false\r\n    });\r\n    this.newRow = { objectKey: null, mapDmoName: null };\r\n  }\r\n\r\n  editRow(row: any) {\r\n    row.isEditing = true;\r\n  }\r\n\r\n  saveRow(row: any) {\r\n    row.isEditing = false;\r\n  }\r\n\r\n  deleteRow(index: number) {\r\n    this.mappingDmos.splice(index, 1);\r\n  }\r\n\r\n  deleteSelectedRows() {\r\n    this.mappingDmos = this.mappingDmos.filter(row => !row.selected);\r\n  }\r\n\r\n  cancelEdit(row: any) {\r\n    row.isEditing = false;\r\n  }\r\n\r\n  checkUncheckAll() {\r\n    this.mappingDmos.forEach(row => {\r\n      row.selected = this.masterSelected;\r\n    });\r\n  }\r\n\r\n  isAllSelected() {\r\n    this.masterSelected = this.mappingDmos.length > 0 && this.mappingDmos.every(row => row.selected);\r\n  }\r\n\r\n  shouldAllowCallAPI(): boolean {\r\n    const { data } = this.parentForm?.value || {};\r\n    const requestBody = data?.dependentbody;\r\n    return !!(data?.dependentdatasrc && data?.endpoint && data?.methodtype && requestBody && Object.keys(requestBody).length);\r\n  }\r\n\r\n\r\n\r\ngetColumnsNames() {\r\n  const { data } = this.parentForm?.value || {};\r\n  const requestBody = data?.dependentbody;\r\n  const dataSource = data?.dependentdatasrc?.value || data?.dependentdatasrc;\r\n  const endpoint = data?.endpoint;\r\n  const methodtype = data?.methodtype?.key || data?.methodtype;\r\n  const body = JSON.parse(requestBody);\r\n  body.GridFilters = []\r\n\r\n  const columnsApi$ = this.#ApiService.callDynamicApi(dataSource, endpoint, methodtype, body);\r\n  const dmosApi$ = this.#ApiService.getdmobybmid(this.bmId);\r\n\r\n  forkJoin([columnsApi$, dmosApi$]).subscribe(([columnsResponse, dmosResponse]) => {\r\n\r\n    columnsResponse =  columnsResponse.Data;\r\n    if (Array.isArray(columnsResponse.Data)) {\r\n      const firstItem = columnsResponse.Data[0];\r\n      if (firstItem) {\r\n         this.columnNames = Object.keys(firstItem);\r\n      }\r\n    }\r\n    this.avaliableDMOs = dmosResponse.Data || [];\r\n  });\r\n}\r\n\r\ngetDmoDisplayName(nam: string): string {\r\n  const dmo = this.avaliableDMOs?.find(d => d.NAM === nam);\r\n  return dmo ? `${dmo.DISPNAME} (${dmo.NAM})` : nam;\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<ng-container *ngIf=\"parentForm\">\r\n    <div class=\"col-lg-12\" [ngStyle]=\"{ 'transform': 'translateY(-15px)' }\">\r\n        <button type=\"button\" class=\"btn btn-outline-primary\" [ngStyle]=\"{ 'float': 'right', 'margin-bottom': '10px' }\"\r\n            [disabled]=\"!shouldAllowCallAPI()\" (click)=\"getColumnsNames()\">Call API</button>\r\n        <table class=\"table\">\r\n            <thead class=\"thead-light\">\r\n                <tr>\r\n                    <th class=\"actions-cell\">Actions</th>\r\n                    <th>Column Name</th>\r\n                    <th>DMO Name</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <tr *ngFor=\"let row of mappingDmos; let i = index\">\r\n                    <td class=\"actions\">\r\n                        <ng-container *ngIf=\"!row.isEditing; else editMode\">\r\n                            <a (click)=\"editRow(row)\"><i class=\"fas fa-edit ml-1\" title=\"Edit\" ></i></a>\r\n                            <a (click)=\"deleteRow(i)\"><i class=\"fas fa-trash-alt ml-3\" title=\"Delete\"></i></a>\r\n                        </ng-container>\r\n                        <ng-template #editMode>\r\n                            <a (click)=\"saveRow(row)\"><i class=\"fas fa-save ml-1\" title=\"Edit\"></i></a>\r\n                            <a (click)=\"cancelEdit(row)\"><i class=\"fas fa-times ml-3\" title=\"Delete\"></i></a>\r\n                        </ng-template>\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngIf=\"row.isEditing; else objectKeyView\">\r\n                            <ng-select [items]=\"columnNames\" [(ngModel)]=\"row.objectKey\" [readonly]=\"!row.isEditing\"\r\n                                [searchable]=\"true\" placeholder=\"Select...\">\r\n                            </ng-select>\r\n                        </ng-container>\r\n\r\n                        <ng-template #objectKeyView>\r\n                            <span>{{ row.objectKey }}</span>\r\n                        </ng-template>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <ng-container *ngIf=\"row.isEditing; else mapDmoNameView\">\r\n                            <ng-select [items]=\"avaliableDMOs\" [bindLabel]=\"'DISPNAME'\" [bindValue]=\"'NAM'\"\r\n                                [(ngModel)]=\"row.mapDmoName\" [readonly]=\"!row.isEditing\" [searchable]=\"true\"\r\n                                placeholder=\"Select...\">\r\n                            </ng-select>\r\n                        </ng-container>\r\n\r\n                        <ng-template #mapDmoNameView>\r\n                            <span>{{ getDmoDisplayName(row.mapDmoName)}}</span>\r\n                        </ng-template>\r\n                    </td>\r\n\r\n                </tr>\r\n\r\n\r\n                <tr class=\"add_new\">\r\n                    <td class=\"actions d-flex justify-content-end align-items-center\">\r\n                        <a (click)=\"addRow()\"><i class=\"fas fa-plus ml-2\" title=\"Add\"\r\n                            [ngStyle]=\"{ 'font-size': '10px' }\"></i></a>\r\n                    </td>\r\n                    <td>\r\n                        <ng-select [items]=\"columnNames\" [(ngModel)]=\"newRow.objectKey\" [searchable]=\"true\"\r\n                            placeholder=\"Select...\">\r\n                        </ng-select>\r\n                    </td>\r\n                    <td>\r\n                        <ng-select [items]=\"avaliableDMOs\" [bindLabel]=\"'DISPNAME'\" [bindValue]=\"'NAM'\"\r\n                            [(ngModel)]=\"newRow.mapDmoName\" [searchable]=\"true\" placeholder=\"Select...\">\r\n                        </ng-select>\r\n\r\n                    </td>\r\n                </tr>\r\n\r\n\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n</ng-container>","import { Component, Input, ViewChild } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ReactiveFormsModule,\r\n  UntypedFormBuilder,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Data } from '@angular/router';\r\nimport { KeyValue } from '@app/admin/BM/models';\r\nimport { ListColumnType, ListConfig } from '@app/admin/lib/list/list-config.model';\r\nimport {\r\n  arrayToList,\r\n  enumToList,\r\n  KeyValueList,\r\n  listToTypeArray,\r\n  primitiveArrayToList,\r\n  toFormArray,\r\n} from '@app/admin/wf/wfd/util/helpers';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport {\r\n  map,\r\n  startWith,\r\n  takeWhile,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { DMComponent, DMOG, ObjectControl } from '../../classes';\r\nimport {\r\n  ASBMapping,\r\n  CustomDataSource,\r\n  DMOType,\r\n  DMOUI,\r\n  IDMComponent,\r\n  JsonData,\r\n  ObjectDetail,\r\n  RegExType,\r\n  StorageProvider,\r\n  Validate,\r\n  DataSource,\r\n  DMOStatus,\r\n  GridViewDataSource,\r\n  MethodTypes,\r\n} from '../../models1';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\nimport { GridHeaderMapperComponent } from '../grid-header-mapper/grid-header-mapper.component';\r\nimport { DependentFieldsMapperComponent } from '../dependent-fields-mapper/dependent-fields-mapper.component';\r\nimport { NgIf, NgTemplateOutlet, NgFor, AsyncPipe } from '@angular/common';\r\nimport { TabsComponent } from '../../../Shared/tabs/tabs.component';\r\nimport { TabComponent } from '../../../Shared/tab/tab.component';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\n\r\ntype FormType = IDMComponent & Data & Validate;\r\ntype DmoDetailControls = ObjectControl<FormType>[];\r\n@Component({\r\n    selector: 'app-dmo-detail',\r\n    templateUrl: './dmo-detail.component.html',\r\n    styles: [`\r\n    ::ng-deep li.form-invalid a::after {\r\n          content: \" ⚠️\";\r\n      color: #ea485b; \r\n    }\r\n  `],\r\n    standalone: true,\r\n    imports: [NgIf, ReactiveFormsModule, TabsComponent, TabComponent,GridHeaderMapperComponent, NgTemplateOutlet, NgFor, ObjectControlComponent, AsyncPipe,DependentFieldsMapperComponent]\r\n})\r\nexport class DmoDetailComponent extends ObjectDetail<IDMComponent, DMOG> {\r\n @ViewChild(GridHeaderMapperComponent)\r\n  headerMapperComponent: GridHeaderMapperComponent;\r\n  @ViewChild(DependentFieldsMapperComponent)\r\n  DependentFieldsMapperComponent: DependentFieldsMapperComponent;\r\n\r\n  @Input() uiData: DMOUI;\r\n  @Input() readonly = false;\r\n\r\n  public displayControls: DmoDetailControls;\r\n  public dataControls: DmoDetailControls;\r\n  public validationControls: DmoDetailControls;\r\n\r\n  public displayTabHasErrors = false;\r\n  public dataTabHasErrors = false;\r\n  public validationTabHasErrors = false;\r\n\r\n  public dataClass: DMComponent;\r\n\r\n  private colorCodes$: Observable<KeyValueList<string, string>>;\r\n  private roles$: Observable<KeyValueList<string, string>>;\r\n\r\n  private readonly dataSources = enumToList(DataSource);\r\n  private readonly GridViewDataSource =  enumToList(GridViewDataSource);\r\n  private readonly customDataSources = enumToList(CustomDataSource);\r\n  private readonly regexTypes = enumToList(RegExType);\r\n  private readonly storageProviders = enumToList(StorageProvider);\r\n  private readonly status = enumToList(DMOStatus);\r\n  private readonly uploadLimit = primitiveArrayToList([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\r\n  dropDownTypeDMO: Array<{ key: string; dmoName: string; value: string }> = [];\r\n  managedDDLTypedmo: Array<{ key: string; dmoName: string; value: string }> = [];\r\n  gridHeaderMapper : [] = [];  \r\n  private readonly keyValueConfig: ListConfig<KeyValue> = {\r\n    columns: [\r\n      {\r\n        key: 'value',\r\n        displayValue: 'Value',\r\n        validators: [Validators.required],\r\n      },\r\n    ],\r\n    checkbox: true,\r\n    actions: { add: true, edit: true, delete: true },\r\n  };\r\n\r\n  private readonly jsonConfig: ListConfig<JsonData> = {\r\n    columns: [\r\n      {\r\n        key: 'TextField',\r\n        displayValue: 'Text Field',\r\n        validators: [Validators.required],\r\n      },\r\n      {\r\n        key: 'ValueField',\r\n        displayValue: 'Value Field',\r\n        validators: [Validators.required],\r\n      },\r\n      {\r\n        key: 'ParentKey',\r\n        displayValue: 'Parent Key',\r\n        validators: [Validators.required],\r\n      },\r\n    ],\r\n    checkbox: true,\r\n    actions: { add: true, edit: true, delete: true },\r\n  };\r\n\r\n  private readonly mappingConfig: ListConfig<ASBMapping> = {\r\n    columns: [\r\n      { key: 'Name', displayValue: 'Name', validators: [Validators.required] },\r\n      { key: 'GUID', displayValue: 'GUID', validators: [Validators.required] },\r\n    ],\r\n    checkbox: true,\r\n    actions: { add: true, edit: true, delete: true },\r\n  };\r\n\r\n  private readonly depConfig: ListConfig<ASBMapping> = {\r\n    columns: [\r\n      { key: 'Name', type: ListColumnType.Dropdown,  displayValue: 'DMO Name', validators: [Validators.required] },\r\n       { key: 'Name', displayValue: 'Column Name', validators: [Validators.required] },\r\n    ],\r\n    checkbox: true,\r\n    actions: { add: true, edit: true, delete: true },\r\n  };\r\n\r\n constructor(\r\n    ref: NgbActiveModal,\r\n    fb: UntypedFormBuilder,\r\n    private readonly api: DataModelerApiService,\r\n    private readonly toastr: ToastrService\r\n  ) {\r\n    super(ref, fb);\r\n  }\r\n  get f_form() {\r\n    return this.form.controls;\r\n  }\r\n  beforeFormInit() {\r\n    this.dataClass = new DMComponent(this.data, this.parent);\r\n    console.log(this.data, this.dataClass);\r\n    this.dataClass.type = this.uiData.type;\r\n    this.colorCodes$ = this.api\r\n      .getColorCodes()\r\n      .pipe(map((list: any) => arrayToList(list, 'value', 'value')));\r\n    const { ProcessName } = this.parent.root;\r\n    this.roles$ = this.api\r\n      .getRoles(ProcessName)\r\n      .pipe(map((list: any) => arrayToList(list, 'value', 'label')));\r\n   \r\n    this.parent?.formData?.components.forEach((dmo) => {\r\n        if (dmo.type === 'select') {\r\n          if (dmo.guid != this.dataClass.guid)\r\n            this.dropDownTypeDMO.push({\r\n              key: dmo.guid,\r\n              dmoName: dmo.dmoName,\r\n              value: dmo.label,\r\n            });\r\n        }\r\n        if (dmo.type === 'manageddropdown') {\r\n          if (dmo.guid != this.dataClass.guid)\r\n            this.managedDDLTypedmo.push({\r\n              key: dmo.guid,\r\n              dmoName: dmo.dmoName,\r\n              value: dmo.label,\r\n            });\r\n        }\r\n      \r\n    });\r\n  }\r\n\r\n  initForm() {\r\n    this.form = this.toFormGroup();\r\n    this.runDynamicValidation();\r\n    if( ['datagrd','keyvaluesearchbox'].includes(this.uiData.type) && !this.newObject && this.data.regxType ){\r\n      try{\r\n         this.gridHeaderMapper = JSON.parse(this.data.regxType);\r\n      }catch{\r\n          this.gridHeaderMapper = [];\r\n     }\r\n    }\r\n   \r\n    this.displayControls = [\r\n      new ObjectControl({\r\n        name: 'dmoName',\r\n        label: 'Data Model Object Name',\r\n        required: true,\r\n        hint: '25 characters max',\r\n        readonly: !this.newObject,\r\n      }),\r\n      new ObjectControl({\r\n        name: 'label',\r\n        label: 'Friendly Name',\r\n        hint: 'The label for this field that will appear next to it',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'description',\r\n        label: 'Short Description',\r\n        type: 'text',\r\n        hint: 'The description is text that will appear below the input field',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'defaultValue',\r\n        label: 'Default Value',\r\n        hint: `The will be the value for this field, before user interaction. \r\n        Having a default value will override the placeholder text. \r\n        Current Date for Date With Calendar DMO use xxxCurrentDatexxx in Default Value`,\r\n      }),\r\n      new ObjectControl({\r\n        name: 'tooltip',\r\n        label: 'Long Description',\r\n        class: 'span-12',\r\n        hint: 'The description is text that will appear below the input field',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'searchField',\r\n        label: 'Parent Control',\r\n        show: of(this.uiData.type === 'keyvaluesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'customDefaultValue',\r\n        label: 'Child Control',\r\n        show: of(this.uiData.type === 'keyvaluesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'compareOprator',\r\n        label: 'Operator',\r\n        type: 'dropdown',\r\n        options: of(\r\n          ['GT', 'GE', 'LT', 'LE'].map((key) => ({ key, value: key }))\r\n        ),\r\n        show: of(['datetime', 'staticdatebox'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'comparatorSelect',\r\n        label: 'Comparator',\r\n        type: 'dropdown',\r\n        options: of(this.dataClass.dmoListByType(this.uiData.type)),\r\n        hint: 'Allow to load data on the basis of comparator control',\r\n        show: of(['datetime', 'staticdatebox'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'RangeCal',\r\n        label: 'Range',\r\n        placeholder: '_-_',\r\n        hint: 'Put range to allow date before and after from current date',\r\n        show: of(['datetime', 'staticdatebox'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'showtooltip',\r\n        label: 'Show Long Description as Help',\r\n        type: 'switch',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'is24hourformat',\r\n        label: '24 Hour Format',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'datetimebox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'parentDmo',\r\n        label: 'Parent Control',\r\n        type: 'dropdown',\r\n        options: of(this.dropDownTypeDMO),\r\n        show: of(['select', 'multiselect'].includes(this.uiData.type)),\r\n      }),\r\n      (() => {\r\n        const ctrl = new ObjectControl({\r\n          name: 'parentDmo',\r\n          label: 'Parent Control',\r\n          type: 'dropdown',\r\n          options: of(this.managedDDLTypedmo),\r\n          show: of(this.uiData.type === 'manageddropdown'),\r\n        });\r\n        (ctrl as any).clearable = true;\r\n        return ctrl;\r\n      })(),\r\n      new ObjectControl({\r\n        name: 'status',\r\n        label: 'Status',\r\n        type: 'dropdown',\r\n        options: of(this.status),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'rte',\r\n        label: 'RTE Enabled',\r\n        type: 'switch',\r\n        show: of(\r\n          ['textarea'].includes(\r\n            this.uiData.type\r\n          )\r\n        ),\r\n      }),  \r\n      new ObjectControl({\r\n        name: 'Height',\r\n        label: 'No of Rows',\r\n        required:true,\r\n        hint:'No of lines',\r\n        type: 'text',\r\n        show: this.form\r\n    ? this.form.get('rte')!.valueChanges.pipe(\r\n        startWith(this.form.get('rte')!.value),\r\n        map(rte => rte === true && this.uiData.type === 'textarea')\r\n      )\r\n    : of(false),\r\n      }),\r\n    ];\r\n\r\n    this.dataControls = [\r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Options',\r\n        type: 'list',\r\n        required: true,\r\n        config: this.keyValueConfig,\r\n        show: of(['selectboxes', 'radio'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Options',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.keyValueConfig,\r\n        required: this.uiData.type === 'list',\r\n        show: of(['datetimezone', 'list'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'dataSrc',\r\n        label: 'Data Source',\r\n        type: 'dropdown',\r\n        options: this.uiData.type ==='datagrd' ?  of(enumToList(GridViewDataSource)) : of(enumToList(DataSource)),\r\n        show: of(['select', 'multiselect','datagrd'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Options',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.keyValueConfig,\r\n        required: true,\r\n        show: this.show(this.form, 'dataSrc', DataSource.Values, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'fieldparams',\r\n        label: 'Response Parameter',\r\n        group: this.f.data,\r\n        show: this.show(this.form, 'dataSrc', DataSource.WFApi, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n   \r\n      new ObjectControl({\r\n        name: 'modelbody',\r\n        label: 'Model Body',\r\n        type: 'textarea',\r\n        group: this.f.data,\r\n        show: this.show(this.form, 'dataSrc', DataSource.WFApi, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n \r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Color Codes',\r\n        type: 'dropdown',\r\n        group: this.f.data,\r\n        multiple: true,\r\n        options: this.colorCodes$,\r\n        show: of(this.uiData.type === 'colorpicker'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'startwith',\r\n        label: 'Start With',\r\n        show: of(this.uiData.type === 'id'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'minlength',\r\n        label: 'Number of digits/characters',\r\n        show: of(this.uiData.type === 'id'),\r\n        required: true,\r\n      }),\r\n      new ObjectControl({\r\n        name: 'israndom',\r\n        label: 'Random (incremental if unchecked)',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'id'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'isalphanumeric',\r\n        label: 'Alphanumeric (numeric if unchecked)',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'id'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Data Source',\r\n        type: 'dropdown',\r\n        multiple: true,\r\n        group: this.f.data,\r\n        options: this.roles$,\r\n        show: of(this.uiData.type === 'roletype'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'regxType',\r\n        label: 'Regular Expression',\r\n        type: 'dropdown',\r\n        options: of(enumToList(RegExType)),\r\n        show: of(\r\n          ['textarea', 'textfield', 'url', 'rangebox'].includes(\r\n            this.uiData.type\r\n          )\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'expression',\r\n        label: 'Expression',\r\n        hint: 'Create your own regular expression',\r\n        show: this.show(this.form, 'regxType', RegExType.Custom, [\r\n          'textarea',\r\n          'textfield',\r\n          'url',\r\n          'rangebox',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'expressionMessage',\r\n        label: 'Validation Message',\r\n        hint: 'Write your custom validation message if expression fail',\r\n        show: of(\r\n          ['textarea', 'textfield', 'url', 'rangebox'].includes(\r\n            this.uiData.type\r\n          )\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'isEncrypt',\r\n        label: 'Encrypt',\r\n        type: 'switch',\r\n        show: of(\r\n          [\r\n            'textarea',\r\n            'textfield',\r\n            'file',\r\n            'uploadimage',\r\n            'url',\r\n            'rangebox',\r\n          ].includes(this.uiData.type)\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'conditionNA',\r\n        label: 'Condition NA',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'file'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'isautoCrop',\r\n        label: 'Auto Crop',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'uploadimage'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'uploadLimit',\r\n        label: 'Number of files to be uploaded',\r\n        type: 'dropdown',\r\n        options: of(this.uploadLimit),\r\n        show: of(this.uiData.type === 'uploadimage'),\r\n        required: true,\r\n      }),\r\n      new ObjectControl({\r\n        name: 'datasource',\r\n        label: 'Data Source',\r\n        group: this.f.data,\r\n        show: of(\r\n          [\r\n            'keyvaluesearchbox',\r\n            'keyvaluedropdownlist',\r\n            'autocompletesearchbox',\r\n          ].includes(this.uiData.type)\r\n        ),\r\n        required: true,\r\n        hint: 'LMKAPI/WFAPI/ICEAPI/MethodName',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'fieldparams',\r\n        label: 'Response Parameter',\r\n        group: this.f.data,\r\n        required: true,\r\n        show: of(\r\n          [\r\n            'keyvaluesearchbox',\r\n            'keyvaluedropdownlist',\r\n            'autocompletesearchbox',\r\n          ].includes(this.uiData.type)\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'modelbody',\r\n        label: 'Model Body',\r\n        type: 'textarea',\r\n        required: true,\r\n        group: this.f.data,\r\n        show: of(\r\n          [\r\n            'keyvaluesearchbox',\r\n            'keyvaluedropdownlist',\r\n            'autocompletesearchbox',\r\n          ].includes(this.uiData.type)\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'resource',\r\n        label: 'Display Value',\r\n        group: this.f.data,\r\n        required: true,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'mappings',\r\n        label: 'Mappings',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.mappingConfig,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'dependencydmos',\r\n        label: 'Dependency Dmos',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.mappingConfig,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'dependentdmos',\r\n        label: 'Dependent Dmos',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.depConfig,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'emitonstart',\r\n        label: 'Emit On Start',\r\n        type: 'switch',\r\n        group: this.f.data,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'kvboxmultiselect',\r\n        label: 'Multi-Select',\r\n        type: 'switch',\r\n        group: this.f.data,\r\n        show: of(this.uiData.type === 'keyvaluesearchbox' || this.uiData.type==='roletype'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'toggledepmapper',\r\n        label: 'Define Dependent Fields',\r\n        type: 'switch',\r\n        group: this.f.data,\r\n        show: of(this.uiData.type === 'keyvaluesearchbox'),\r\n      }),\r\n       new ObjectControl({\r\n        name: 'dependentdatasrc',\r\n        label: 'Data Source',\r\n        type: 'dropdown',\r\n        group: this.f.data,\r\n        options: of(enumToList(GridViewDataSource)),\r\n        show: this.toggledepMapper(),\r\n      }),\r\n        new ObjectControl({\r\n        name: 'endpoint',\r\n        label: 'Api Endpoint',\r\n        group: this.f.data,\r\n        show: this.checkVisibilityCondition()\r\n      }),\r\n      new ObjectControl({\r\n        name: 'methodtype',\r\n        label: 'Method Type',\r\n        type: 'dropdown',\r\n        group: this.f.data,\r\n        options: of(enumToList(MethodTypes)),\r\n        show: this.checkVisibilityCondition(),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'dependentbody',\r\n        label: 'Request Body',\r\n        type: 'textarea',\r\n        group: this.f.data,\r\n        show: this.checkVisibilityCondition()\r\n      }),\r\n    \r\n    ];\r\n\r\n    this.validationControls = [\r\n      new ObjectControl({\r\n        name: 'required',\r\n        label: 'Required',\r\n        type: 'switch',\r\n        hint: 'A required field must be filled in before the form can be submitted',\r\n        group: this.f.validate,\r\n        show: of(!!this.uiData.validate),\r\n      }),\r\n\r\n      new ObjectControl({\r\n        name: 'disabled',\r\n        label: 'Read Only',\r\n        type: 'switch',\r\n        group: this.f.validate,\r\n        show: of(!!this.uiData.validate),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'minLength',\r\n        label: 'Minimum Length',\r\n        group: this.f.validate,\r\n        hint: 'The minimum length requirement this field must meet',\r\n        show: of(this.uiData.validate?.minLength),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'maxLength',\r\n        label: 'Maximum Length',\r\n        group: this.f.validate,\r\n        hint: 'The maximum length requirement this field must meet',\r\n        required: true,\r\n        show: of(this.uiData.validate?.maxLength),\r\n      }),\r\n    ];\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => Start\r\n    this.checkDmoNameValidity();\r\n    this.form.get(\"dmoName\").valueChanges.subscribe(() => {\r\n      this.checkDmoNameValidity();\r\n    });\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => End \r\n    let cntrlRequired = this.form.controls['validate']['controls'].required;\r\n    let cntrlReadOnly = this.form.controls['validate']['controls'].disabled;\r\n\r\n    cntrlRequired.valueChanges.subscribe((val) => {\r\n      if (val && cntrlReadOnly.value) {\r\n        cntrlReadOnly.setValue(false);\r\n      }\r\n    });\r\n\r\n    cntrlReadOnly.valueChanges.subscribe((val) => {\r\n      if (val && cntrlReadOnly.value) {\r\n        cntrlRequired.setValue(false);\r\n      }\r\n    });\r\n\r\n    this.form.statusChanges.subscribe(() => {\r\n      if (this.submitted) {\r\n        this.checkTabErrors();\r\n      }\r\n    });\r\n  }\r\n  async checkDmoNameValidity() {\r\n    const name = this.form.get(\"dmoName\").value;\r\n  \r\n    if (\r\n      this.newObject &&\r\n      name &&\r\n      name.length >= 4 &&\r\n      !this.form.get(\"dmoName\")?.hasError(\"maxlength\") &&\r\n      !this.form.get(\"dmoName\")?.hasError(\"pattern\")\r\n    ) {\r\n      this.api\r\n      .checkNameValidity(\r\n        \"dmo\",\r\n        0,\r\n        name,\r\n        this.parent.root.Version,\r\n        this.parent.root.ProcessName\r\n      )\r\n      .subscribe((IsExits) => {\r\n        if (IsExits) {\r\n          this.form.get(\"dmoName\")?.setErrors({\r\n            nameExists: true,\r\n            message: \"Duplicate name\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  private show(\r\n    group: AbstractControl,\r\n    name: keyof IDMComponent,\r\n    compareTo: any,\r\n    type: DMOType | DMOType[]\r\n  ) {\r\n    return group.get(name).valueChanges.pipe(\r\n      startWith(group.get(name).value),\r\n      map((v) => v?.key || v),\r\n      map((v) => {\r\n        const types = Array.isArray(type) ? type : [type];\r\n        return v === compareTo && types.includes(this.uiData.type);\r\n      })\r\n    );\r\n  }\r\ntoggledepMapper(): Observable<boolean> {\r\n  const toggleControl = this.f.data.get('toggledepmapper');\r\n  if (!toggleControl) {\r\n    return of(false); \r\n  }\r\n\r\n  return toggleControl.valueChanges.pipe(\r\n    startWith(toggleControl.value),\r\n    map(value => value === true)\r\n  );\r\n}\r\n\r\n\r\nshouldShowDepMapper(): boolean {\r\n  return this.f.data.get('toggledepmapper')?.value === true;\r\n}\r\n\r\ncheckVisibilityCondition(): Observable<boolean> {\r\n  const toggleControl = this.f.data.get('toggledepmapper');\r\n  if (toggleControl == null) {\r\n    console.log('toggledepmapper control not found');\r\n    return of(false); \r\n  }\r\n  return toggleControl.valueChanges.pipe(\r\n    startWith(toggleControl.value),\r\n    map(toggleValue => {\r\n      if (this.uiData.type === 'datagrd') {\r\n        return true; \r\n      }\r\n      if (this.uiData.type === 'keyvaluesearchbox') {\r\n        return toggleValue === true; \r\n      }\r\n      return false;\r\n    })\r\n  );\r\n}\r\n\r\n\r\n  private toFormGroup() {\r\n    const group: Partial<Record<keyof IDMComponent, AbstractControl>> = {};\r\n    Object.entries(this.dataClass).forEach(([key, value]) => {\r\n      if (key === 'dataSrc' && this.uiData.type !=='datagrd') {\r\n        value = this.dataSources.find(({ key }) => key === value);\r\n      }else if(key ==='dataSrc' && this.uiData.type ==='datagrd'){\r\n        value = this.GridViewDataSource.find(({ key }) => key === value);\r\n      } else if (key === 'regxType') {\r\n        value = this.regexTypes.find(({ key }) => key === value);\r\n      } else if (key === 'uploadStorage') {\r\n        value = this.storageProviders.find(({ key }) => key === value);\r\n      }\r\n      group[key] = this.fb.control(value);\r\n    });\r\n    const validators = [...NAME_VALIDATORS];   \r\n    group.dmoName = this.fb.control(this.dataClass.dmoName, {\r\n      validators,\r\n      updateOn: 'blur',\r\n    });\r\n    group.rte = this.fb.control(this.dataClass.rte ?? false);\r\n    group.Height=this.fb.control(this.dataClass.height??'')\r\n    group.values = toFormArray(this.dataClass.values, { addCheckbox: true });\r\n    group.status = this.fb.control(\r\n      this.status.find((s) => s.key == this.dataClass.status)\r\n    );\r\n    if (this.uiData.type === 'uploadimage') {\r\n      group.uploadLimit = this.fb.control(\r\n        this.uploadLimit.find(\r\n          (limit) => limit.key === +this.dataClass.uploadLimit\r\n        ) || null,\r\n        [Validators.required]\r\n      );\r\n    }\r\n\r\n    const data = {};\r\n    Object.entries(this.dataClass.data).forEach(([key, value]) => {\r\n      if (\r\n        [\r\n          'apiurl',\r\n          'apiparams',\r\n          'fieldparams',\r\n          'modelbody',\r\n          'resource',\r\n        ].includes(key)\r\n      ) {\r\n        data[key] = this.fb.control(value);\r\n        return;\r\n      }\r\n      if (key === 'values') {\r\n        if (this.uiData.type === 'roletype') {\r\n          value = arrayToList(value, 'value', 'label');\r\n        } else {\r\n          value = value.map(({ value }) => ({ key: value, value }));\r\n        }\r\n        if (\r\n          ['datetimezone', 'select', 'list', 'multiselect'].includes(\r\n            this.uiData.type\r\n          )\r\n        ) {\r\n          data[key] = toFormArray(value, { addCheckbox: true });\r\n          return;\r\n        }\r\n      }else if (key === 'resource' || this.uiData.type === 'select') {\r\n        value = this.customDataSources.find(({ key }) => key === value);\r\n      }else if (['json', 'dependencydmos', 'dependentdmos', 'mappings'].includes(key)) {\r\n        data[key] = toFormArray(value, { addCheckbox: true });\r\n        return;\r\n      }\r\n\r\n      data[key] = this.fb.control(value);\r\n    });\r\n    group.data = this.fb.group(data);\r\n\r\n    const validate = {};\r\n    Object.entries(this.dataClass.validate).forEach(([key, value]) => {\r\n      if (key === 'maxLength' && this.uiData.validate?.maxLength) {\r\n        validate[key] = this.fb.control(value, [Validators.required]);\r\n      } else {\r\n        validate[key] = this.fb.control(value);\r\n      }\r\n    });\r\n    group.validate = this.fb.group(validate);\r\n\r\n    group.rte.valueChanges.subscribe(() => {\r\n  group.Height.reset('');\r\n});\r\n\r\n    return this.fb.group(group);\r\n  }\r\n\r\n  private runDynamicValidation() {\r\n    if (['textarea'].includes(this.uiData.type)) {\r\n  const rteControl = this.f.rte;\r\n  const heightControl = this.f.Height;\r\n\r\n  if (rteControl && heightControl) {\r\n    this.validateControl({\r\n      trackedControl: rteControl,\r\n      addValidation: (val) => val === true,\r\n      validatedControl: heightControl,\r\n      validators: Validators.required,\r\n    }).subscribe();\r\n  }\r\n}\r\n\r\n    if (['select', 'list', 'multiselect'].includes(this.uiData.type)) {\r\n      this.validateControl({\r\n        trackedControl: this.f.dataSrc,\r\n        addValidation: (src) => (src?.key || src) === DataSource.Values,\r\n        validatedControl: this.f.data.get('values'),\r\n        validators: Validators.required,\r\n      }).subscribe();\r\n    }\r\n    if (['selectboxes', 'radio'].includes(this.uiData.type)) {\r\n      this.validateControl({\r\n        trackedControl: this.f.type,\r\n        addValidation: (type) => type === this.uiData.type,\r\n        validatedControl: this.f.values,\r\n        validators: Validators.required,\r\n      }).subscribe();\r\n    }\r\n    if (['id'].includes(this.uiData.type)) {\r\n        const controlsToValidate = ['minlength']; \r\n        controlsToValidate.forEach((controlName) => {\r\n       const control = this.f[controlName];\r\n      if (control) {\r\n        this.validateControl({\r\n          trackedControl: this.f.type,\r\n          addValidation: (type) => type === this.uiData.type,\r\n          validatedControl: control,\r\n          validators: Validators.required,\r\n        }).subscribe();\r\n      }\r\n    });\r\n    }\r\n    if (['autocompletesearchbox'].includes(this.uiData.type)) {\r\n      const controlsToValidate = ['resource', 'datasource', 'fieldparams','modelbody']; \r\n      controlsToValidate.forEach((controlName) => {\r\n      const control = this.f.data.get(controlName);\r\n      if (control) {\r\n        this.validateControl({\r\n          trackedControl: this.f.type,\r\n          addValidation: (type) => type === this.uiData.type,\r\n          validatedControl: control,\r\n          validators: Validators.required,\r\n        }).subscribe();\r\n      }\r\n    });\r\n   }\r\n    if (['keyvaluesearchbox','keyvaluedropdownlist'].includes(this.uiData.type)) {\r\n      const controlsToValidate = ['datasource', 'fieldparams','modelbody']; \r\n      controlsToValidate.forEach((controlName) => {\r\n      const control = this.f.data.get(controlName);\r\n      if (control) {\r\n        this.validateControl({\r\n          trackedControl: this.f.type,\r\n          addValidation: (type) => type === this.uiData.type,\r\n          validatedControl: control,\r\n          validators: Validators.required,\r\n        }).subscribe();\r\n      }\r\n    });\r\n   }\r\n  }\r\n\r\n  private readonly validateControl = (config: ControlValidation) => {\r\n    const { trackedControl, addValidation, validatedControl, validators } =\r\n      config;\r\n    return trackedControl.valueChanges.pipe(\r\n      takeWhile((_) => this.componentActive),\r\n      startWith(trackedControl.value),\r\n      tap((val) => {\r\n        if (addValidation(val)) {\r\n          validatedControl.setValidators(validators);\r\n        } else {\r\n          validatedControl.clearValidators();\r\n        }\r\n        validatedControl.updateValueAndValidity();\r\n      })\r\n    );\r\n  };\r\n\r\n  private checkTabErrors() {\r\n    this.displayTabHasErrors = this.displayControls.some(control => {\r\n      const controlName = control.name as string;\r\n      const formControl = this.form.get(controlName);\r\n      return formControl?.invalid;\r\n    });\r\n\r\n    if (this.uiData.hasData) {\r\n      this.dataTabHasErrors = this.dataControls.some(control => {\r\n        let formControl;\r\n        const controlName = control.name as string;\r\n        if (control.group) {\r\n          formControl = control.group.get(controlName);\r\n        } else if (controlName.includes('.')) {\r\n          formControl = this.form.get(controlName);\r\n        } else {\r\n          formControl = this.form.get(controlName);\r\n        }\r\n        return formControl?.invalid;\r\n      });\r\n    }\r\n\r\n    if (this.uiData.validate) {\r\n      this.validationTabHasErrors = this.validationControls.some(control => {\r\n        let formControl;\r\n        const controlName = control.name as string;\r\n        if (control.group) {\r\n          formControl = control.group.get(controlName);\r\n        } else if (controlName.includes('.')) {\r\n          formControl = this.form.get(controlName);\r\n        } else {\r\n          formControl = this.form.get(controlName);\r\n        }\r\n        return formControl?.invalid;\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n  if (this.isGridTypeWithInvalidUpload()) {\r\n    this.toastr.warning(\r\n      \"You can't create file upload and image upload type dmo for Grid type dmog\",\r\n      'Warning'\r\n    );\r\n    return false;\r\n  }\r\n\r\n  this.submitted = true;\r\n  this.checkTabErrors();\r\n\r\n  if (!this.form.valid) return;\r\n\r\n  const { parent, ...f } = this.form.value;\r\n  const dataValues = this.getDataValues(f);\r\n  const dataResource = this.getDataResource(f);\r\n\r\n  let APIURLOptions = '';\r\n  if (this.uiData.type === 'datagrd' && this.headerMapperComponent) {\r\n    APIURLOptions = this.buildApiOptions(f, this.headerMapperComponent.headerMapping);\r\n  } else if (this.uiData.type === 'keyvaluesearchbox' && this.DependentFieldsMapperComponent) {\r\n    APIURLOptions = this.buildApiOptionsForKeyVal(f, this.DependentFieldsMapperComponent.mappingDmos);\r\n  }else if(this.uiData.type === 'textarea'){\r\n    const jsonPayload = {\r\n    RTE: this.form.get('rte')!.value === true ? 'Yes' : 'No',\r\n    Rows: this.form.get('rte')!.value === false ?'':this.form.get('Height')!.value\r\n  };\r\n\r\n  APIURLOptions = JSON.stringify(jsonPayload);\r\n  }\r\n\r\n  const formValue: IDMComponent = this.buildFormValue(f, dataValues, dataResource, APIURLOptions);\r\n  this.output.emit(formValue);\r\n  this.ref.close(formValue);\r\n}\r\n\r\n  private isGridTypeWithInvalidUpload(): boolean {\r\n  return (\r\n    this.form?.value?.parent?.Type === 'Grid' &&\r\n    ['uploadimage', 'file'].includes(this.uiData.type)\r\n  );\r\n}\r\n\r\nprivate getDataValues(f: any): any[] {\r\n  if (['roletype', 'colorpicker'].includes(this.uiData.type)) {\r\n    return listToTypeArray(f.data.values, 'value', 'label');\r\n  }\r\n  return f.data.values.map(({ value, key }) => ({\r\n    label: value,\r\n    value,\r\n  }));\r\n}\r\n\r\nprivate getDataResource(f: any): string {\r\n  return f.data.resource?.key || f.data.resource || '';\r\n}\r\n\r\nprivate buildFormValue(f: any, dataValues: any[], dataResource: string, APIURLOptions: string): IDMComponent {\r\n  return {\r\n    ...f,\r\n    type: this.uiData.type,\r\n    default_Value: f.defaultValue,\r\n    values: f.values.map(({ value }) => ({ label: value, value })),\r\n    ApiUrlOptions: APIURLOptions,\r\n    data: {\r\n      ...f.data,\r\n      values: dataValues,\r\n      resource: dataResource,\r\n      json: f.data.json?.key || f.data.json,\r\n      methodtype: f.data?.methodtype?.key,\r\n      toggledepmapper: f.data?.toggledepmapper || false,\r\n      dependentdatasrc: f.data?.dependentdatasrc?.value || f.data?.dependentdatasrc,\r\n      dependentbody: f.data?.dependentbody || \"\",\r\n    },\r\n    dataSrc: f.dataSrc?.key || f.dataSrc,\r\n    regxType: f.regxType?.key || f.regxType,\r\n    status: f.status?.key || f.status,\r\n    uploadLimit: f.uploadLimit?.key || f.uploadLimit,\r\n    parentGuid: f.parentDmo?.key,\r\n  };\r\n}\r\n\r\n\r\n  buildApiOptions(formData: any, headerMapping: any): string {\r\n    headerMapping.forEach(item => {\r\n         delete item.isEditing;\r\n         delete item.selected;\r\n    });\r\n    const apiOptions = {\r\n      Method_Type: formData.data?.methodtype?.key || formData.data?.methodtype || '',\r\n      Api_Type: formData.dependentdatasrc?.value || formData.data?.dependentdatasrc || '',\r\n      Api_Endpoint: formData.data?.endpoint || '',\r\n      Header_Mapping: headerMapping || {},\r\n      Request_Body: formData.data?.dependentbody || {}\r\n    };\r\n    return JSON.stringify(apiOptions);\r\n  }\r\n\r\n   buildApiOptionsForKeyVal(formData: any, json: any): string {\r\n    json.forEach(item => {\r\n         delete item.isEditing;\r\n         delete item.selected;\r\n    });\r\n    const apiOptions = {\r\n      Is_DependentField: formData.data?.toggledepmapper || false,\r\n      Method_Type: formData.data?.methodtype?.key || formData.data?.methodtype || '',\r\n      Api_Type: formData.data?.dependentdatasrc?.value || formData.data?.dependentdatasrc || '',\r\n      Api_Endpoint: formData.data?.endpoint || '',\r\n      Column_Mapping: json || {},\r\n      Request_Body: formData.data?.dependentbody || {}\r\n    };\r\n    return JSON.stringify(apiOptions);\r\n  }\r\n\r\n}\r\n\r\ntype ControlValidation = {\r\n  trackedControl: AbstractControl;\r\n  validatedControl: AbstractControl;\r\n  addValidation: (val: any) => boolean;\r\n  validators: ValidatorFn | ValidatorFn[];\r\n};\r\n","<ng-container *ngIf=\"dataClass\">\r\n  <div class=\"popup\">\r\n    <div class=\"popup__header\">\r\n      <h2 *ngIf=\"newObject\"><i [class]=\"uiData.class\" style=\"margin-right: 5px\"></i>New {{ uiData.name }}</h2>\r\n      <h2 *ngIf=\"!newObject\"><i [class]=\"uiData.class\" style=\"margin-right: 5px\"> </i>{{ uiData.name }} Details</h2>\r\n      <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n    </div>\r\n    \r\n    <form [formGroup]=\"form\">\r\n      <app-tabs>\r\n        <app-tab [title]=\"'Display'\" [hasInvalidForm]=\"submitted && displayTabHasErrors\">\r\n          <ng-container *ngTemplateOutlet=\"renderControls; context: {controls: displayControls}\"></ng-container>\r\n        </app-tab>\r\n      <app-tab *ngIf=\"uiData.hasData && uiData.type !== 'textarea'\" [title]=\"'Data'\" [hasInvalidForm]=\"submitted && dataTabHasErrors\">\r\n          <ng-container *ngTemplateOutlet=\"renderControls; context: {controls: dataControls}\"></ng-container>\r\n          <ng-container *ngIf=\"uiData.type === 'datagrd'\">\r\n            <ng-container *ngTemplateOutlet=\"gridHeaderMapping\"></ng-container>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"uiData.type === 'keyvaluesearchbox' && shouldShowDepMapper()\">\r\n            <ng-container *ngTemplateOutlet=\"dependentFieldsMapper\"></ng-container>\r\n          </ng-container>  \r\n        </app-tab>\r\n        <app-tab *ngIf=\"uiData.validate\" [title]=\"'Validation'\" [hasInvalidForm]=\"submitted && validationTabHasErrors\">\r\n          <ng-container *ngTemplateOutlet=\"renderControls; context: {controls: validationControls}\"></ng-container>\r\n        </app-tab>\r\n      </app-tabs>\r\n    \r\n      <div class=\"popup__actions\">\r\n        <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n        <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!parent.root.published && !readonly\">\r\n          <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n          <ng-container *ngIf=\"!newObject\">Update</ng-container>\r\n        </button>\r\n      </div>\r\n      <!-- </div> -->\r\n    </form>\r\n  </div>\r\n \r\n</ng-container>\r\n\r\n\r\n<ng-template #renderControls let-controls=\"controls\">\r\n  <div class=\"double-column mt-3\" [formGroup]=\"form\">\r\n    <ng-container *ngFor=\"let control of controls\">\r\n      <app-object-control [submitted]=\"submitted\" [parentForm]=\"form\" [config]=\"control\" *ngIf=\"control.show | async\"></app-object-control>\r\n    </ng-container> \r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #gridHeaderMapping>\r\n  <app-grid-header-mapper  [parentForm]=\"form\" [headerMapping]=\"gridHeaderMapper\"></app-grid-header-mapper>\r\n</ng-template>\r\n\r\n<ng-template #dependentFieldsMapper>\r\n  <app-dependent-fields-mapper  [parentForm]=\"form\" [mappingDmos]=\"gridHeaderMapper\"></app-dependent-fields-mapper>\r\n</ng-template>\r\n\r\n\r\n","import { Component, ElementRef, Input } from '@angular/core';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbDateFRParserFormatter } from '@app/core';\r\nimport { DmoImageControlService } from '@app/core/services/dmo-image-control.service';\r\nimport { environment } from '@env/environment';\r\nimport { NgbDateParserFormatter, NgbProgressbar, NgbInputDatepicker } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IDatePickerConfig } from 'ng2-date-picker';\r\nimport { IDMComponent } from '../../models1';\r\nimport { NgIf, NgStyle, NgSwitch, NgSwitchCase, NgFor, NgSwitchDefault } from '@angular/common';\r\nimport { NgSelectComponent, NgLabelTemplateDirective, NgOptionTemplateDirective, NgOptionComponent } from '@ng-select/ng-select';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { UtilService } from '@app/shared/services/util.service';\r\nimport { MatRadioButton } from '@angular/material/radio';\r\n\r\n@Component({\r\n    selector: 'app-dmo',\r\n    templateUrl: './dmo.component.html',\r\n    providers: [{ provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter }],\r\n    styleUrls: ['./dmo.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        NgStyle,\r\n        NgSwitch,\r\n        NgSwitchCase,\r\n        NgSelectComponent,\r\n        NgLabelTemplateDirective,\r\n        NgOptionTemplateDirective,\r\n        NgFor,\r\n        NgOptionComponent,\r\n        ReactiveFormsModule,\r\n        NgbProgressbar,\r\n        NgbInputDatepicker,\r\n        MatInput,\r\n        MatAutocomplete,\r\n        MatSelect,\r\n        NgSwitchDefault,\r\n        MatRadioButton\r\n    ],\r\n})\r\nexport class DmoComponent {\r\n  @Input() dmo: IDMComponent;\r\n  \r\n  @Input() containerStyle: any;\r\n  fileList = [];\r\n  galleryImageUrl = UtilService.getUrlForImage('/assets/styles/images/dmo_gallery.png');\r\n  gridViewImageUrl = UtilService.getUrlForImage('/assets/styles/images/gridView.jpg');\r\n  maxDate = { year: 2199, month: 12, day: 31 };\r\n  minDate = { year: 1990, month: 1, day: 1 };\r\n  selectedDate: NgbDateStruct | null = null;\r\n  get getFileList() {\r\n    if (this.dmoimage.ImagesRemoveFileList.length > 0) {\r\n      this.dmoimage.ImagesRemoveFileList.forEach((element) => {\r\n        if (this.fileList.length > 0) {\r\n          const index = this.fileList.findIndex((x) => x['FileName'] === element.FileName);\r\n          if (index !== -1) {\r\n            this.fileList.splice(index, 1);\r\n          }\r\n        } else {\r\n          if (this.fileInfoList.length > 0 && element.imgId !== undefined) {\r\n            const index = this.fileInfoList.findIndex((x) => x['FileName'] === element.FileName);\r\n            if (index !== -1) {\r\n              this.fileInfoList.splice(index, 1);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return this.fileList.length > 0 ? this.fileList : this.fileInfoList;\r\n  }\r\n  fileInfoList: Array<object> = [];\r\n  dateTimePickerConfig: IDatePickerConfig = {\r\n    format: 'DD/MM/YYYY HH:mm:ss',\r\n    showTwentyFourHours: environment.Setting.dateTimeFormat24,\r\n    showSeconds: true,\r\n    disableKeypress: true,\r\n  };\r\n\r\n  constructor(public elRef: ElementRef, private dmoimage: DmoImageControlService, public ngbDateParserFormatter: NgbDateParserFormatter) {\r\n    this.maxDate = { year: 2199, month: 12, day: 31 };\r\n    this.minDate = { year: 1990, month: 1, day: 1 };\r\n  }\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n  displayWith(lookup) {\r\n    return lookup ? lookup.ddOptionValue + ' (' + lookup.ddOptionKey + ')' : null;\r\n  }\r\n\r\n  getColor(color: { label: string }): string {\r\n    return color.label.toLowerCase();\r\n  }\r\n  BindStyle(){\r\n   if(this.containerStyle){\r\n    if(this.containerStyle.dmolabel && this.containerStyle.dmolabel.label_position==\"Left\"){\r\n      return {\r\n         'display': 'flex'\r\n        };\r\n    }\r\n   }\r\n  }\r\n  labelControlStyle1(){\r\n    if(this.containerStyle){\r\n     if(this.containerStyle.dmolabel && this.containerStyle.dmolabel.label_position==\"Left\"){\r\n\r\n      const labelProps = this.containerStyle.dmolabel;\r\n      if (labelProps.label_position === \"Left\") {\r\n        const style = {\r\n          width: '25%',\r\n        };\r\n       \r\n        switch (labelProps.label_align) {\r\n          case \"Left\":\r\n            style['text-align'] = 'Left';\r\n            break;\r\n          case \"Right\":\r\n            style['text-align'] = 'Right';\r\n            break;\r\n          case \"Center\":\r\n            style['text-align'] = 'Center';\r\n            break;\r\n        }\r\n  \r\n        return style;\r\n      }\r\n     }\r\n    if(this.containerStyle.dmolabel && this.containerStyle.dmolabel.label_position==\"Top\"){\r\n\r\n      const labelProps = this.containerStyle.dmolabel;\r\n      if (labelProps.label_position === \"Top\") {\r\n        const style = {\r\n          width: '100% !important',\r\n        };\r\n       \r\n        switch (labelProps.label_align) {\r\n          case \"Left\":\r\n            style['text-align'] = 'Left';\r\n            break;\r\n          case \"Right\":\r\n            style['text-align'] = 'Right';\r\n            break;\r\n          case \"Center\":\r\n            style['text-align'] = 'Center';\r\n            break;\r\n        }\r\n  \r\n        return style;\r\n      }\r\n     ;\r\n    }};\r\n   }\r\n\r\n\r\n   labelControlStyle() {\r\n    let style = {};\r\n    if (this.containerStyle && this.containerStyle.dmolabel) {\r\n      const labelProps = this.containerStyle.dmolabel;\r\n      if (labelProps.label_position === \"Left\") {\r\n        style['width'] = '25%';  \r\n      }\r\n        if (labelProps.label_position === \"Top\") {\r\n        style['width'] = '100%';  \r\n      }\r\n    }\r\n  \r\n   \r\n    if (this.containerStyle && this.containerStyle.dmolabel) {\r\n      const labelProps = this.containerStyle.dmolabel;\r\n  \r\n      switch (labelProps.label_align) {\r\n        case \"Left\":\r\n          style['text-align'] = 'left';\r\n          break;\r\n        case \"Right\":\r\n          style['text-align'] = 'right';\r\n          break;\r\n        case \"Center\":\r\n          style['text-align'] = 'center';break;\r\n          case \"justify\":\r\n          style['text-align'] = 'justify';\r\n          break;\r\n      }\r\n      if (labelProps.label_color) {\r\n        style['color'] = labelProps.label_color;\r\n      }\r\n    }\r\n  \r\n    return style;  // Return the final style object\r\n  }\r\n  \r\n\r\n\r\n\r\n  labelControlStyle2() {\r\n    let style = {};\r\n    if (this.containerStyle && this.containerStyle.dmolabel) {\r\n      const labelProps = this.containerStyle.dmolabel;\r\n  \r\n      switch (labelProps.label_align) {\r\n        case \"Left\":\r\n          style['text-align'] = 'left';\r\n          break;\r\n        case \"Right\":\r\n          style['text-align'] = 'right';\r\n          break;\r\n        case \"Center\":\r\n          style['text-align'] = 'center';break;\r\n          case \"justify\":\r\n          style['text-align'] = 'justify';\r\n          break;\r\n      }\r\n      if (labelProps.label_color) {\r\n        style['color'] = labelProps.label_color;\r\n      }\r\n    }\r\n    return style; \r\n  }\r\n\r\n\r\n  formControlStyle(){\r\n    if(this.containerStyle){\r\n     if(this.containerStyle.dmolabel && this.containerStyle.dmolabel.label_position==\"Left\"){\r\n       return {\r\n        width: '75%',\r\n         };\r\n     }\r\n     \r\n     return {\r\n      width: '100%',\r\n       };\r\n    }\r\n   }\r\n\r\n  \r\n\r\n  mask(rawValue) {\r\n    if (rawValue && rawValue.replace(/\\D+/g, '').length > 11) {\r\n      return ['+', /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\r\n    } else if (rawValue && rawValue.replace(/\\D+/g, '').length > 10) {\r\n      return ['+', /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\r\n    } else {\r\n      return ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\r\n    }\r\n  }\r\n\r\n  upload(UploadEvent: any, dmoGUID: string, dmoName: any, modal: any = undefined, cropedFile = undefined) {\r\n    let fileName = '';\r\n\r\n    this.dmoimage.index = this.dmoimage.index + 1;\r\n    if (cropedFile) {\r\n      fileName = cropedFile.ImgFileName;\r\n      this.dmoimage.ImagesFileList.push({\r\n        file: cropedFile.file,\r\n        ImgFileName: cropedFile.ImgFileName,\r\n        Guid: dmoGUID,\r\n        imgId: this.dmoimage.index,\r\n        dmoName: dmoName,\r\n      });\r\n    } else {\r\n      fileName = UploadEvent.target.files[0].name;\r\n      if (UploadEvent.currentTarget['files'].length === 0) {\r\n        return;\r\n      }\r\n      if (UploadEvent.currentTarget['files']['files'] != undefined) {\r\n        this.dmoimage.ImagesFileList.push({\r\n          file: { file: UploadEvent.currentTarget['files']['files'][0] },\r\n          ImgFileName: '',\r\n          Guid: dmoGUID,\r\n          imgId: this.dmoimage.index,\r\n          dmoName: dmoName,\r\n        });\r\n      } else {\r\n        this.dmoimage.ImagesFileList.push({\r\n          file: { file: UploadEvent.currentTarget['files'][0] },\r\n          ImgFileName: '',\r\n          Guid: dmoGUID,\r\n          imgId: this.dmoimage.index,\r\n          dmoName: dmoName,\r\n        });\r\n      }\r\n    }\r\n    const img = {\r\n      FileName: fileName,\r\n      FileSize: '0 Kb',\r\n      OldFileName: fileName,\r\n      CreatedOn: null,\r\n      CreatedBy: null,\r\n      DISPNAME: null,\r\n      UserFullName: null,\r\n      IsEncrypted: false,\r\n      Id: null,\r\n      uId: this.dmoimage.index,\r\n      dmoName: dmoName,\r\n    };\r\n    this.fileInfoList.push(img);\r\n    this.fileList.push(img);\r\n    if (modal) {\r\n      modal.dismiss('Cross click');\r\n    }\r\n  }\r\n\r\n  uploadImage(event: any) {\r\n    if (+this.dmo.uploadLimit < this.fileList.length) {\r\n      return;\r\n    }\r\n    const file = event.target.files.item(0);\r\n    const ext = file.name.split('.').pop().toLowerCase();\r\n    if (!['jpg', 'jpeg', 'png'].includes(ext)) {\r\n      return;\r\n    }\r\n    this.upload(event, this.dmo.id, this.dmo.dmoName);\r\n  }\r\n\r\n  DeleteFile(objfile: any) {\r\n    if (objfile.uId) {\r\n      let ind = this.fileInfoList.findIndex((x) => x['uId'] === objfile.uId);\r\n      if (ind > -1) {\r\n        this.fileInfoList.splice(ind, 1);\r\n      }\r\n      ind = -1;\r\n      ind = this.fileList.indexOf(objfile);\r\n      if (ind > -1) {\r\n        this.fileList.splice(ind, 1);\r\n      }\r\n      ind = -1;\r\n      ind = this.dmoimage.ImagesFileList.findIndex((x) => x['imgId'] === objfile.uId);\r\n      if (ind > -1) {\r\n        this.dmoimage.ImagesFileList.splice(ind, 1);\r\n      }\r\n      return;\r\n    }\r\n    this.dmoimage.ImagesRemoveFileList.push({\r\n      ...objfile,\r\n      IsPermanentFileDeletion: environment.Setting.IsPermanentFileDeletion.toString(),\r\n    });\r\n    const index = this.fileList.indexOf(objfile);\r\n    const index1 = this.fileInfoList.indexOf(objfile);\r\n    if (index > -1) {\r\n      this.fileList.splice(index, 1);\r\n      this.dmoimage.ImagesFileList.splice(index, 1);\r\n    }\r\n    if (index1 > -1) {\r\n      this.fileInfoList.splice(index, 1);\r\n    }\r\n  }\r\n  dateFormat = environment.Setting.dateFormat;\r\n  dateTimeFormat = environment.Setting.dateTimeFormat;\r\n  onDateSelect(date: NgbDateStruct) {\r\n    this.selectedDate = date;\r\n  }\r\n\r\n  formatDate(date: NgbDateStruct | null): string {\r\n    if (!date) return '';\r\n    const mm = String(date.month).padStart(2, '0');\r\n    const dd = String(date.day).padStart(2, '0');\r\n    const yyyy = date.year;\r\n    return `${mm}/${dd}/${yyyy}`;\r\n  }\r\n}\r\n","<div *ngIf=\"dmo\" [id]=\"'control_' + dmo?.dmoName\" class=\"form-group\" style=\"width: 100%\" [ngStyle]=\"BindStyle()\">\r\n  <label [ngStyle]=\"labelControlStyle()\" [id]=\"'label_' + dmo?.dmoName\" class=\"input-label dragtitle\" [hidden]=\"['button', 'roletypehidden'].includes(dmo?.type)\">\r\n    <i [ngStyle]=\"labelControlStyle2()\" class=\"fas fa-grip-lines dragicon\"></i>\r\n    {{ dmo.label }}\r\n    <span *ngIf=\"dmo.validate?.required\" style=\"color: red\">*</span>\r\n  </label>\r\n \r\n  <ng-container [ngSwitch]=\"dmo.type\">\r\n    <ng-container *ngSwitchCase=\"'button'\">\r\n      <button class=\"btn btn-primary btn-sm btn-mb\">{{ dmo.label }}</button>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'mediagallery'\">\r\n      <img [src]=\"galleryImageUrl\"\r\n       alt=\"dmo.name\"\r\n       [id]=\"dmo.dmoName\"\r\n       [ngStyle]=\"formControlStyle()\"\r\n       >\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'textfield'\">\r\n      <input\r\n        type=\"text\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        [placeholder]=\"dmo.placeholder\"\r\n        [maxlength]=\"dmo.Length == null || dmo.Length === 0 ? null : dmo.Length\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'colorpicker'\">\r\n      <ng-select\r\n        [items]=\"dmo?.data?.values\"\r\n        [searchable]=\"true\"\r\n        class=\"form-control\"\r\n        [id]=\"dmo.dmoName\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n      >\r\n        <ng-template ng-label-tmp let-item=\"item\" let-label=\"label\">\r\n          <span class=\"color-code-option\" [style.background-color]=\"getColor(item)\"></span>\r\n          <span class=\"ml-1\">{{ label }}</span>\r\n        </ng-template>\r\n        <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\r\n          <span class=\"color-code-option\" [style.background-color]=\"getColor(item)\"></span>\r\n          <span class=\"ml-1\">{{ item.label }}</span>\r\n        </ng-template>\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'countrylist'\">\r\n      <ng-select\r\n        [searchable]=\"true\"\r\n        [placeholder]=\"'Select...'\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        class=\"form-control\"\r\n      >\r\n        <ng-option *ngFor=\"let op of dynamicOptions\" [value]=\"op.label\">{{ op.label }}</ng-option>\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'select'\">\r\n      <ng-select [ngStyle]=\"formControlStyle()\" [searchable]=\"true\" [virtualScroll]=\"true\" class=\"form-control\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\">\r\n        <ng-option *ngFor=\"let op of dmo?.data?.values\" [value]=\"op.value\">{{ op.label }}</ng-option>\r\n      </ng-select>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'manageddropdown'\">\r\n      <ng-select [ngStyle]=\"formControlStyle()\" [searchable]=\"true\" [virtualScroll]=\"true\" class=\"form-control\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\">\r\n      </ng-select>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container *ngSwitchCase=\"'list'\" >\r\n      <select  [id]=\"dmo.dmoName\" [disabled]=\"dmo.validate?.disabled\"class=\"form-control\" [ngStyle]=\"formControlStyle()\" multiple style=\"height: auto;\">\r\n        <option  *ngFor=\"let op of dmo?.data?.values\">{{ op.value }}</option>\r\n      </select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'progressbar'\">\r\n      <p>\r\n        <ngb-progressbar\r\n          [id]=\"dmo.dmoName\"\r\n          [readonly]=\"dmo.validate?.disabled\"\r\n          [animated]=\"true\"\r\n          [striped]=\"true\"\r\n          [value]=\"dmo?.defaultValue\"\r\n          showValue=\"true\"\r\n          type=\"success\"\r\n        ></ngb-progressbar>\r\n      </p>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'roletype'\">\r\n      <ng-select\r\n        [items]=\"dmo?.data?.values\"\r\n        [multiple]=\"dmo.multiple\"\r\n        [closeOnSelect]=\"false\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n        placeholder=\"Select...\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n      >\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'file'\">\r\n      <div class=\"custom-file\">\r\n        <input type=\"file\" [disabled]=\"dmo.validate?.disabled\" [disabled]=\"true\" (change)=\"upload($event, dmo.id, dmo.dmoName)\" class=\"custom-file-input\" />\r\n        <input type=\"hidden\" name=\"fileHidden\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" />\r\n        <label class=\"custom-file-label\" for=\"{{ 'TextBox_' + dmo.id }}\"></label>\r\n      </div>\r\n      <div class=\"uploadList\" *ngIf=\"fileList.length > 0\">\r\n        <ul>\r\n          <li *ngFor=\"let file of getFileList\">\r\n            <span (click)=\"DownloadFile(file)\" title=\"{{ file.OldFileName }}\">{{ file.OldFileName }}</span\r\n            ><a href=\"javascript:void(0)\" (click)=\"DeleteFile(file)\" title=\"Delete\"><i class=\"fas fa-trash-alt\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"uploadList\" *ngIf=\"fileList.length === 0\">\r\n        <ul>\r\n          <li *ngFor=\"let file of fileInfoList\">\r\n            <span (click)=\"DownloadFile(file)\" title=\"{{ file.OldFileName }}\">{{ file.OldFileName }}</span\r\n            ><a href=\"javascript:void(0)\" (click)=\"DeleteFile(file)\" title=\"Delete\"><i class=\"fas fa-trash-alt\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'uploadimage'\">\r\n      <div class=\"custom-file\">\r\n        <input type=\"file\" #fileInput [disabled]=\"true\" (click)=\"fileInput.value = null\" class=\"custom-file-input\" (change)=\"uploadImage($event)\" />\r\n        <input type=\"text\" [id]=\"dmo.dmoName\" [disabled]=\"dmo.validate?.disabled\" style=\"display: none\" />\r\n        <label class=\"custom-file-label\" for=\"{{ 'liUploadDiv_' + dmo.id }}\"></label>\r\n      </div>\r\n\r\n      <div class=\"uploadList\">\r\n        <ul>\r\n          <li *ngFor=\"let file of fileList\">\r\n            <span (click)=\"DownloadFile(file)\" title=\"{{ file.OldFileName }}\">{{ file.OldFileName }}</span\r\n            ><a href=\"javascript:void(0)\" (click)=\"DeleteFile(file)\" title=\"Delete\"><i class=\"fas fa-trash-alt\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"uploadList\" *ngIf=\"fileList.length === 0\">\r\n        <ul>\r\n          <li *ngFor=\"let file of fileInfoList\">\r\n            <span (click)=\"DownloadFile(file)\" title=\"{{ file.OldFileName }}\">{{ file.OldFileName }}</span\r\n            ><a href=\"javascript:void(0)\" (click)=\"DeleteFile(file)\" title=\"Delete\"><i class=\"fas fa-trash-alt\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'usstatelist'\">\r\n      <ng-select\r\n        [searchable]=\"true\"\r\n        [placeholder]=\"'Select...'\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n      >\r\n        <ng-option *ngFor=\"let op of dynamicOptions\" [value]=\"op.label\">{{ op.label }}</ng-option>\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'autocompletesearchbox'\">\r\n      <ng-select [searchable]=\"true\" [virtualScroll]=\"true\" class=\"form-control\" [ngStyle]=\"formControlStyle()\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\">\r\n        <ng-option *ngFor=\"let op of dmo?.data?.values\" [value]=\"op.value\">{{ op.label }}</ng-option>\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'rangebox'\">\r\n      <div>\r\n        <span class=\"range-control\">\r\n          <input\r\n            type=\"text\"\r\n            [id]=\"dmo.dmoName\"\r\n            [readonly]=\"dmo.validate?.disabled\"\r\n            class=\"form-control range-control__input\"\r\n            [value]=\"dmo.default_Value\"\r\n            [ngStyle]=\"formControlStyle()\"\r\n            appRange\r\n          />\r\n        </span>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'phoneNumber'\">\r\n      <input\r\n        type=\"tel\"\r\n        [textMask]=\"{ mask: mask }\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [value]=\"dmo.default_Value\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        [maxlength]=\"dmo.Length == null ? null : dmo.Length\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'roletypehidden'\">\r\n      <input\r\n        type=\"text\"\r\n        readonly\r\n        [id]=\"dmo.dmoName\"\r\n        class=\"form-control\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        style=\"border: 2px dashed lightgrey\"\r\n        [placeholder]=\"dmo.placeholder || 'hidden'\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'email'\">\r\n      <input\r\n        type=\"email\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        [value]=\"dmo.default_Value\"\r\n        [maxlength]=\"dmo.validate.maxLength == null ? null : dmo.validate.maxLength\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'usergroup'\">\r\n      <input\r\n        type=\"text\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        [value]=\"dmo.default_Value\"\r\n        [value]=\"dmo.default_Value\"\r\n        [maxlength]=\"dmo.validate.maxLength == null ? null : dmo.validate.maxLength\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'url'\">\r\n      <input\r\n        type=\"text\"\r\n        [id]=\"dmo.dmoName\"\r\n        [disabled]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        [value]=\"dmo.default_Value\"\r\n        [value]=\"dmo.default_Value\"\r\n        [maxlength]=\"dmo.Length == null ? null : dmo.Length\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'textarea'\">\r\n      <textarea\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control textareaHeight\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        [value]=\"dmo.default_Value\"\r\n        [value]=\"dmo.default_Value\"\r\n        [maxlength]=\"dmo.Length == null || dmo.Length === 0 ? null : dmo.Length\"\r\n      ></textarea>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'id'\">\r\n      <input type=\"text\" [id]=\"dmo.dmoName\" [ngStyle]=\"formControlStyle()\" class=\"form-control\" readonly [maxLength]=\"dmo.Length == null ? null : dmo.Length\" />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'multiselect'\">\r\n      <ng-select\r\n        [items]=\"dmo.data?.values\"\r\n        [multiple]=\"true\"\r\n        [closeOnSelect]=\"false\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n        placeholder=\"Select...\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n      >\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'radio'\">\r\n      <div class=\"d-flex input-group\">\r\n        <ng-container *ngFor=\"let option of dmo?.values; let i = index\">\r\n          <label class=\"radio-container\"\r\n            >{{ option.label }}\r\n            <input type=\"radio\" [disabled]=\"dmo.disabled\" [value]=\"option.value\" [id]=\"dmo.id + i\" [name]=\"dmo.dmoName\" />\r\n            <span class=\"checkmark\"  [style.background-color]=\"dmo.disabled?'#e9ecef':'transparent'\"></span>\r\n          </label>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'selectboxes'\">\r\n      <div class=\"d-flex input-group\">\r\n        <ng-container *ngFor=\"let control of dmo?.values; let i = index\">\r\n          <label class=\"form-checkbox mr-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              [value]=\"control.value\"\r\n              [checked]=\"control.value === dmo.default_Value\"\r\n              [id]=\"dmo.dmoName\"\r\n              [disabled]=\"dmo.validate?.disabled\"             \r\n            />\r\n            <i class=\"skin\"   [style.background-color]=\"dmo.validate?.disabled ?'#e9ecef':'transparent'\"></i>\r\n            <span>{{ control.value }}</span>\r\n          </label>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'staticdatebox'\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\" [style.background-color]=\"dmo.validate?.disabled?'#e9ecef':'transparent'\">\r\n          <button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" disabled=\"dmo.validate?.disabled\">\r\n            <i class=\"far fa-calendar-alt\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          [placeholder]=\"dateFormat\"\r\n          [id]=\"dmo.dmoName\"\r\n          [readonly]=\"dmo.validate?.disabled\"\r\n          class=\"form-control\"\r\n          ngbDatepicker\r\n          #d=\"ngbDatepicker\"\r\n          [minDate]=\"minDate\"\r\n          [value]=\"formatDate(selectedDate)\"\r\n          (dateSelect)=\"onDateSelect($event)\"\r\n          [maxDate]=\"maxDate\"\r\n          [ngStyle]=\"formControlStyle()\"\r\n          (keyup)=\"dateMasks($event)\"\r\n        />\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'day'\">\r\n      <input\r\n        type=\"text\"\r\n        [textMask]=\"{ mask: dateMask, keepCharPositions: true, pipe: autoCorrectedDatePipe }\"\r\n        pattern=\"\\d{2}/\\d{2}/\\d{4}\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        class=\"form-control\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'datetime'\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\" [style.background-color]=\"dmo.validate?.disabled?'#e9ecef':'transparent'\">\r\n          <button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" disabled=\"dmo.validate?.disabled\">\r\n              <i class=\"far fa-calendar-alt\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          [placeholder]=\"dateFormat\"\r\n          [id]=\"dmo.dmoName\"\r\n          class=\"form-control\"\r\n          ngbDatepicker\r\n          #d=\"ngbDatepicker\" \r\n          [value]=\"formatDate(selectedDate)\"\r\n          (dateSelect)=\"onDateSelect($event)\"\r\n          [minDate]=\"minDate\" \r\n          [maxDate]=\"maxDate\"\r\n          [ngStyle]=\"formControlStyle()\"\r\n\t\t  [readonly]=\"dmo.validate?.disabled\"\r\n        />\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'datetimezone'\">\r\n      <div [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" class=\"d-flex date-tz-picker\">\r\n        <div class=\"input-group flex-nowrap\">\r\n          <div class=\"input-group-prepend\" [style.background-color]=\"dmo.validate?.disabled?'#e9ecef':'transparent'\">\r\n            <button class=\"btn btn-sm btn-outline-secondary\"  type=\"button\" disabled=\"dmo.validate?.disabled\">\r\n              <i class=\"far fa-calendar-alt\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            [ngStyle]=\"formControlStyle()\"\r\n            [placeholder]=\"dateFormat\"\r\n            class=\"form-control date-picker\"\r\n            ngbDatepicker\r\n            #d=\"ngbDatepicker\"\r\n            [value]=\"formatDate(selectedDate)\"\r\n            (dateSelect)=\"onDateSelect($event)\"\r\n            [readonly]=\"dmo.validate?.disabled\"\r\n          />\r\n        </div>\r\n        <ng-select [readonly]=\"dmo.validate?.disabled\" [items]=\"timeOptions\" [ngStyle]=\"formControlStyle()\" [readonly]=\"dmo.validate?.disabled\" class=\"form-control\"></ng-select>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'datagrd'\">\r\n      <img\r\n        name=\"dmo.dmoName\"\r\n        type=\"img\"\r\n        class=\"img-responsive\"\r\n        lang=\"en\"\r\n        id=\"dmo.dmoName\"\r\n        [src]=\"gridViewImageUrl\"\r\n        disabled=\"true\"\r\n        style=\"height: 30px; width: 100%\"\r\n      />\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'jsonstaticgrid'\">\r\n      <img\r\n        name=\"dmo.dmoName\"\r\n        type=\"img\"\r\n        class=\"img-responsive\"\r\n        lang=\"en\"\r\n        id=\"dmo.dmoName\"\r\n        [src]=\"gridViewImageUrl\"\r\n        disabled=\"true\"\r\n        style=\"height: 30px; width: 100%\"\r\n      />\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'datetimebox'\">\r\n    <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <button class=\"btn btn-sm btn-outline-secondary\" type=\"button\">\r\n            <i class=\"far fa-calendar-alt\" style=\"user-select: none;\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          [placeholder]=\"dateTimeFormat\"\r\n          [id]=\"dmo.dmoName\"\r\n          [readonly]=\"dmo.validate?.disabled\"\r\n          class=\"form-control\"\r\n          ngbDatepicker\r\n          #d=\"ngbDatepicker\"\r\n          [minDate]=\"minDate\"\r\n          [value]=\"formatDate(selectedDate)\"\r\n          (dateSelect)=\"onDateSelect($event)\"\r\n          [maxDate]=\"maxDate\"\r\n          [ngStyle]=\"formControlStyle()\"\r\n          (keyup)=\"dateMasks($event)\"\r\n        />\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'hidden'\">\r\n      <div class=\"custom-file\">\r\n        <input type=\"hidden\" name=\"fileHidden\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" />\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'createdby'\">\r\n      <input type=\"text\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" [ngStyle]=\"formControlStyle()\" class=\"form-control\" disabled [value]=\"dmo.default_Value\" />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'createddate'\">\r\n      <input type=\"text\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" [ngStyle]=\"formControlStyle()\" class=\"form-control\" disabled [value]=\"dmo.default_Value\" />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'keyvaluesearchbox'\">\r\n      <input\r\n        type=\"text\"\r\n        [id]=\"dmo.dmoName\"\r\n        [disabled]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [ngStyle]=\"formControlStyle()\"\r\n        [value]=\"dmo.default_Value\"\r\n        matInput\r\n      />\r\n      <mat-autocomplete [displayWith]=\"displayWith\" showPanel=\"true\"> </mat-autocomplete>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'keyvaluedropdownlist'\">\r\n      <mat-select class=\"form-control input-group\" [id]=\"dmo.dmoName\" [ngStyle]=\"formControlStyle()\" [disabled]=\"dmo.validate?.disabled\"> </mat-select>\r\n    </ng-container>\r\n     \r\n    <ng-container *ngSwitchCase=\"'notificationflag'\">\r\n      <div class=\"d-flex input-group\">\r\n        <mat-radio-group>\r\n          <mat-radio-button value=\"On\">\r\n            <span style=\"font-size: 12px\">On</span>\r\n          </mat-radio-button>\r\n          <mat-radio-button value=\"Off\">\r\n            <span style=\"font-size: 12px\">Off</span>\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchDefault></ng-container>\r\n  </ng-container>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { KeyValue } from '@app/admin/BM/models';\r\nimport { arrayToList, enumToList, KeyValueList, listToTypeArray } from '@app/admin/wf/wfd/util/helpers';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { BMO, DMOG, ObjectControl } from '../../classes';\r\nimport { DMOGType, IDMOG, ObjectDetail, Status } from '../../models1';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\nimport { checkNameValidatorSync } from '../../validators1';\r\nimport { AfterViewChecked, ChangeDetectorRef } from '@angular/core'\r\nimport { NgIf, NgFor, AsyncPipe, SlicePipe } from '@angular/common';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\n@Component({\r\n    selector: 'app-dmog-detail',\r\n    templateUrl: './dmog-detail.component.html',\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgFor,\r\n        ObjectControlComponent,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n        SlicePipe,\r\n    ],\r\n})\r\nexport class DmogDetailComponent extends ObjectDetail<IDMOG | DMOG, BMO> {\r\n  public title = 'Card';\r\n  public controls: ObjectControl<IDMOG>[];\r\n\r\n  //private dmogTypeList = enumToList(DMOGType);\r\n  private dmogTypeList = enumToList(DMOGType).filter(x => x.key !== 'CardGroup');\r\n  private status = enumToList(Status);\r\n  private roles$: Observable<KeyValueList<string, string>>;\r\n  private availableDmoToShare = [];\r\n  IsReordring = false;\r\n  allDmos = [];\r\n\r\n  allNormalDmogs= [];\r\n  \r\n\r\n  leftSelectedSharedItems = [];\r\n  rightSelectedSharedItems = [];\r\n\r\n  leftSharedChanged = false;\r\n  rightSharedChanged = false;\r\n\r\n\r\n  allDmogs = [];\r\n  associatedSharedItems = [];\r\n  sharedChanged = false;\r\n  updatedlistDmogGroups = [];\r\n\r\n  constructor(ref: NgbActiveModal, fb: UntypedFormBuilder, private api: DataModelerApiService, private readonly toastr: ToastrService,private readonly changeDetectorRef: ChangeDetectorRef) {\r\n    super(ref, fb);\r\n    this.formActions = [{ controlName: 'Type', handler: (type: DMOGType) => this.onDmogTypeChange(type) }];\r\n  }\r\n\r\n \r\n  \r\n \r\n\r\n  ngAfterViewChecked(): void {\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n  beforeFormInit() {\r\n    if(this.data.Type ==='CardGroup'){\r\n      this.title =  'Card Group';\r\n      this.allNormalDmogs = this.getNormalRootDMOGs();    \r\n      this.associatedSharedItems = this.allNormalDmogs.filter(dmog =>\r\n        dmog.PrntDmogIDs?.split(',').includes(this.data.DMOGID.toString())\r\n      );\r\n      this.updatedlistDmogGroups= this.associatedSharedItems;\r\n    }\r\n    const { ProcessName } = this.parent.root;\r\n    this.roles$ = this.api.getRoles(ProcessName).pipe(map((list) => arrayToList(list, 'value', 'label')));\r\n   \r\n  }\r\n \r\n\r\n  private getChildDMOGs(): any[] {\r\n    const result: any[] = [];\r\n  \r\n    Object.values(this.parent.childrenMap).forEach((dmog: any) => {\r\n      const isNormal = dmog.Type === \"Normal\";\r\n      const matchesSelf = dmog.PrntDmogIDs?.split(',').includes(this.data.DMOGID.toString());\r\n  \r\n      if (isNormal && matchesSelf) {\r\n        result.push({\r\n          key: dmog.id,\r\n          dmogId: dmog.DMOGID,\r\n          value: `${dmog.DisplayName} (${dmog.Name})`,\r\n          bmogId: this.parent.parent.BMOGID,\r\n          parent: `${this.parent.Name} / ${this.parent.DisplayName}`,\r\n          parentId: this.parent.id,\r\n          selected: true,\r\n          disabled: true,\r\n        });\r\n      }\r\n    });\r\n  \r\n    return result;\r\n  }\r\n  \r\n\r\n  private getNormalRootDMOGs(): any[] {\r\n    const result: any[] = [];\r\n  \r\n      Object.values(this.parent.childrenMap).forEach((dmog: any) => {\r\n        const isNormal = dmog.Type === \"Normal\";\r\n\r\n        const hasNoParent =\r\n          dmog.PrntDmogIDs === null ||\r\n          dmog.PrntDmogIDs === \"\" ||\r\n          typeof dmog.PrntDmogIDs === \"undefined\";\r\n\r\n        if (isNormal && hasNoParent) {\r\n          const item = {\r\n            key: dmog.id,\r\n            dmogId: dmog.DMOGID, \r\n            value: `${dmog.DisplayName} (${dmog.Name})` , \r\n            bmogId: this.parent.parent.BMOGID,\r\n            parent: `${this.parent.Name} / ${this.parent.DisplayName}`, \r\n            parentId: this.parent.id,\r\n\r\n           };\r\n          result.push(item);\r\n        }\r\n        const parentId = dmog.PrntDmogIDs?.trim(); // null/undefined safe\r\n        if(parentId){\r\n        let parentIds=parentId.split(',');\r\n        const matchesSelf = parentIds.includes(this.data.DMOGID.toString());\r\n\r\n\r\n          if (isNormal && matchesSelf) {\r\n            const item = {\r\n              key: dmog.id,\r\n              dmogId: dmog.DMOGID, \r\n              value: `${dmog.DisplayName} (${dmog.Name})` , \r\n              bmogId: this.parent.parent.BMOGID,\r\n              parent: `${this.parent.Name} / ${this.parent.DisplayName}`, \r\n              parentId: this.parent.id,\r\n              PrntDmogIDs: dmog.PrntDmogIDs,\r\n              isAdded: true,\r\n              selected: true,\r\n            };\r\n            \r\n            result.push(item);\r\n          }\r\n        }\r\n\r\n\r\n      });\r\n    \r\n  \r\n    return result;\r\n  }\r\n  \r\n\r\n  initForm() {\r\n    const validators = [...NAME_VALIDATORS];\r\n    if (this.newObject) {\r\n      const allDmogs = Object.values(this.parent.root.childrenMap).flatMap((bmog) =>\r\n        Object.values(bmog.childrenMap).flatMap((bmo) => Object.values(bmo.childrenMap))\r\n      );\r\n     // validators.push(checkNameValidatorSync(allDmogs, 'Name'));\r\n    }\r\n    this.form = this.fb.group({\r\n      Name: [this.data.Name, { validators, updateOn: 'blur' }],\r\n      DefCollapsed: [+this.data.DefCollapsed || 0],\r\n      DisplayName: [this.data.DisplayName, [Validators.required]],\r\n      IsCollapsed: [+this.data.IsCollapsed || 0],\r\n      IsHidden: [+this.data.IsHidden || 0],\r\n      LongDesc: [this.data.LongDesc],\r\n      Roles: [arrayToList(this.data.Roles, 'Value', 'Key')],\r\n      // Share: [this.selectedSharedItems()],\r\n      Status: [this.status.find((s) => s.key == this.data.Status), [Validators.required]],\r\n      Type: [this.dmogTypeList.find((t) => t.key === this.data.Type), [Validators.required]],\r\n      Version: [this.data.Version || this.parent.Version, [Validators.required]],\r\n      showHelp: [+this.data.showHelp || 0],\r\n    });\r\n\r\n    this.controls =\r\n        this.data.Type === 'CardGroup'\r\n    ? [\r\n        new ObjectControl({ name: 'Name', label: 'Name', readonly: !this.newObject, required: true }),\r\n        new ObjectControl({ name: 'DisplayName', label: 'Friendly Name', required: true }),\r\n      ]\r\n    : [\r\n        new ObjectControl({ name: 'Name', label: 'Name', readonly: !this.newObject, required: true }),\r\n        new ObjectControl({ name: 'DisplayName', label: 'Friendly Name', required: true }),\r\n        new ObjectControl({ name: 'Version', label: 'Version', readonly: true }),\r\n        new ObjectControl({ name: 'Status', label: 'Status', type: 'dropdown', required: true, options: of(this.status) }),\r\n        new ObjectControl({ name: 'Type', label: 'Type', type: 'dropdown', required: true, options: of(this.dmogTypeList) }),\r\n        new ObjectControl({\r\n          name: 'Roles',\r\n          label: 'Roles',\r\n          type: 'dropdown',\r\n          required: true,\r\n          options: this.roles$,\r\n          show: this.show('Type', DMOGType.Grid),\r\n          multiple: true,\r\n        }),\r\n        new ObjectControl({ name: 'LongDesc', label: 'Long Description', type: 'rich', class: 'span-12' }),\r\n        new ObjectControl({ name: 'showHelp', label: 'Show Long Description as Help', type: 'switch' }),\r\n        new ObjectControl({ name: 'IsCollapsed', label: 'Is Collapsible', type: 'switch' }),\r\n        new ObjectControl({\r\n          name: 'DefCollapsed',\r\n          label: 'Is Collapsed',\r\n          type: 'switch',\r\n          show: this.show('IsCollapsed', true),\r\n        }),\r\n        new ObjectControl({ name: 'IsHidden', label: 'Is Hidden', type: 'switch' }),\r\n      ];\r\n\r\n\r\n  \r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => Start\r\n    this.form.get(\"Name\").valueChanges.subscribe(name=>{\r\n      if(this.newObject && name && name.length>=4 && !this.form.get('Name').hasError(\"maxlength\")\r\n      && !this.form.get('Name').hasError(\"pattern\")){\r\n        this.api.checkNameValidity('dmog',0,name,this.parent.root.Version,this.parent.root.ProcessName).subscribe(IsExits=>{\r\n          if(IsExits){\r\n              const nameControl = this.form.get('Name');\r\n              nameControl.setErrors({\r\n              nameExists: true,\r\n              message: 'Duplicate name'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => End\r\n\r\n\r\n  }\r\n\r\n  afterFormInit() {\r\n    // Force patch the control to activate form action on start\r\n    const val = this.dmogTypeList.find(({ key }) => this.data.Type === key);\r\n    this.f.Type.patchValue(val);\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.data.Type ==='CardGroup'){\r\n    \r\n          const val = this.form.value;\r\n          const model = {\r\n            Name: val.Name,\r\n            DisplayName: val.DisplayName,\r\n            BMOID: this.parent.BMOID,\r\n            DMOGID: this.data.DMOGID,\r\n            DmogIds: this.updatedlistDmogGroups.map(item => item.dmogId).join(','),\r\n            IsAdded: this.updatedlistDmogGroups.map(item => item.isAdded ? 'true' : 'false').join(','),\r\n            PrntDmogIds: this.updatedlistDmogGroups.map(item => item.PrntDmogIDs ?? 'NULL').join(','), \r\n            Orders: \"1,2,3,4\",\r\n            IsPopupOrdering: this.IsReordring\r\n          };\r\n          this.ref.close({\"model\":model,\"Type\":this.data.Type});\r\n       \r\n    }\r\n    else{\r\n      this.submitted = true;\r\n      if (this.form.valid) {\r\n        const val = this.form.value;\r\n        const payload: IDMOG = {\r\n          ...val,\r\n          Parent: this.data.Parent || this.parent.id,\r\n          DMOGID: this.data.DMOGID,\r\n          id: this.data.id || val.Name,\r\n          GUID: (this.data.GUID || (val.Name as string)).replace('`', ''),\r\n          LnkBmoDmogID: this.data.LnkBmoDmogID,\r\n          Type: val.Type?.key || val.Type,\r\n          Status: val.Status?.key || val.Status,\r\n          DefCollapsed: (+val.DefCollapsed).toString(),\r\n          IsCollapsed: (+val.IsCollapsed).toString(),\r\n          IsHidden: (+val.IsHidden).toString(),\r\n          showHelp: (+val.showHelp).toString(),\r\n          Roles: listToTypeArray(val.Roles, 'value', 'key'),\r\n          PrntDmogIDs: this.data.PrntDmogIDs || \"\",\r\n        };\r\n        const shared = {\r\n          processName: this.parent.root.ProcessName,\r\n          bmName: this.parent.root.Name,\r\n          bmVersion: this.parent.root.Version,\r\n          dmogName: val.Name,\r\n          leftDMOGuids: this.leftSharedChanged ? this.leftSelectedSharedItems.map(({ key }) => key).toString() : '-1',\r\n          rightDMOGuids: this.rightSharedChanged ? this.rightSelectedSharedItems.map(({ key }) => key).toString() : '-1',\r\n        };\r\n  \r\n        this.output.emit(payload);\r\n        this.ref.close({ payload, shared });\r\n      }\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  private onDmogTypeChange(val: any) {\r\n    val = val?.key || val;\r\n    if (val === DMOGType.Grid) {\r\n      this.f.Roles.setValidators(Validators.required);\r\n    } else {\r\n      this.f.Roles.clearValidators();\r\n    }\r\n     this.f.Roles.updateValueAndValidity();\r\n  }\r\n\r\n  private show(controlName: keyof IDMOG, compareTo: any) {\r\n    return this.form.get(controlName).valueChanges.pipe(\r\n      startWith(this.form.get(controlName).value),\r\n      map((v) => v?.key || v),\r\n      map((v) => v == compareTo)\r\n    );\r\n  }\r\n\r\n displayShare = (item: SharedItem) => item.value;\r\n  uniqueShare = (item: SharedItem) => item.value;\r\n  \r\nshouldAdd = (item: SharedItem) =>\r\n  this.api.checkDmogInBmo(item.dmogId.toString(), item.bmogId.toString()).pipe(\r\n    tap((success) => {\r\n      if (!success) {\r\n        this.toastr.warning('This card cannot be shared');\r\n      }\r\n    })\r\n  );\r\n\r\n  onShareAdd(item: SharedItem) {\r\n    item.isAdded= true;\r\n    item.PrntDmogIDs = this.data.DMOGID.toString();\r\n    this.updatedlist(item);\r\n    this.associatedSharedItems = this.associatedSharedItems.concat(item);\r\n    this.sharedChanged = true;\r\n    this.refreshAllDmogs();\r\n  }\r\n\r\n  onShareRemove(item: SharedItem) {\r\n    item.isAdded= false;\r\n    item.PrntDmogIDs = this.data.DMOGID.toString();\r\n    this.updatedlist(item);\r\n    this.associatedSharedItems = this.associatedSharedItems.filter((dmog) => dmog.dmogId !== item.dmogId);\r\n   this.sharedChanged = true;\r\n    this.refreshAllDmogs();\r\n  }  \r\n\r\n\r\n  updatedlist(item: SharedItem) {\r\n    const updatedItem = { ...item, isAdded: item.isAdded, PrntDmogIDs: this.data.DMOGID.toString() };\r\n  \r\n    const index = this.updatedlistDmogGroups.findIndex(dmog => dmog.dmogId === item.dmogId);\r\n  \r\n    if (index > -1) {\r\n      this.updatedlistDmogGroups[index] = updatedItem;\r\n    } else {\r\n      this.updatedlistDmogGroups = [...this.updatedlistDmogGroups, updatedItem];\r\n    }\r\n  }\r\n  \r\n\r\n  onShareReorder = (items: SharedItem[]) => {\r\n    this.updatedlistDmogGroups = items\r\n    this.sharedChanged = true;\r\n    this.IsReordring = true;\r\n  };  \r\n\r\n  refreshAllDmogs = () => {\r\n    this.allDmogs.forEach((dmog) => {\r\n      const rightCheck = this.associatedSharedItems.some((item) => item.key === dmog.key);      \r\n      dmog.selected = rightCheck;\r\n      dmog.disabled = rightCheck;\r\n    });\r\n  };\r\n\r\n\r\n}\r\n\r\ntype SharedItem = KeyValue & { selected?: boolean; disabled?: boolean; dmogId: number; bmogId: number, parentId?: number, isAdded?: boolean, PrntDmogIDs?:string };","<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newObject\">New {{ title }}</h2>\r\n    <h2 *ngIf=\"!newObject\">{{ title }} Details</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr />\r\n\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"double-column\">\r\n      <ng-container *ngFor=\"let control of controls | slice: 0:7\">\r\n        <app-object-control *ngIf=\"control.show | async\" [config]=\"control\" [parentForm]=\"form\" [class]=\"control.class\">\r\n        </app-object-control>\r\n      </ng-container>\r\n\r\n      <ng-container *ngFor=\"let control of controls | slice: 7\">\r\n        <app-object-control *ngIf=\"control.show | async\" [config]=\"control\" [parentForm]=\"form\" [class]=\"control.class\">\r\n        </app-object-control>\r\n      </ng-container>\r\n\r\n      <div class=\"span-12\" *ngIf=\"data.Type ==='CardGroup'\">\r\n        <div class=\"double-column\" style=\"margin: 0\">\r\n          <label class=\"span-6\" for=\"\">Available Cards</label>\r\n          <label class=\"span-6\" for=\"\">Selected Cards</label>\r\n        </div>\r\n        \r\n        <app-association \r\n          [items]=\"allNormalDmogs\"\r\n          [associatedItems]=\"associatedSharedItems\"\r\n          [displayWith]=\"displayShare\"\r\n          [uniqueWith]=\"uniqueShare\"\r\n          [checkAll]=\"false\"\r\n          checkBy=\"selected\"\r\n          disableBy=\"disabled\"\r\n          (add)=\"onShareAdd($event)\"\r\n          (remove)=\"onShareRemove($event)\"\r\n          (reorder)=\"onShareReorder($event)\"\r\n        >\r\n        </app-association>\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!parent.root.published\">\r\n        <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newObject\">Update</ng-container>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import {\r\n    CdkDragDrop,\r\n    CdkDragEnd,\r\n    CdkDropList,\r\n    moveItemInArray,\r\n    transferArrayItem,\r\n} from '@angular/cdk/drag-drop';\r\nimport { ChangeDetectorRef, Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { ApiService, MessageService } from '@app/core';\r\nimport { intersectionBy } from 'lodash';\r\nimport { ComponentType, ToastrService } from 'ngx-toastr';\r\nimport { EMPTY, from, Observable, of, Subject } from 'rxjs';\r\nimport {\r\n    catchError,\r\n    filter,\r\n    finalize,\r\n    map,\r\n    mergeAll,\r\n    switchMap,\r\n    takeWhile\r\n} from 'rxjs/operators';\r\nimport { DMComponent, DMOG, FormDataComponentInfo } from '../../classes';\r\nimport { DMOS, DMOSLayout } from '../../const1';\r\nimport { DataModeler1Component } from '../../data-modeler1.component';\r\nimport {\r\n    DMOUI,\r\n    IConditionBody,\r\n    IDMComponent,\r\n    PanelMainRow,\r\n    PanelMainContainer,\r\n  SideNavModel,\r\n  IDMOG,\r\n  DMOGType\r\n} from '../../models1';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\nimport { DmoConditionComponent } from '../dmo-condition/dmo-condition.component';\r\nimport { DmoDetailComponent } from '../dmo-detail/dmo-detail.component';\r\nimport { ServiceProviderService } from '../../services1/service-provider.service';\r\nimport * as classes from '../../classes';\r\nimport * as components from '../../components1';\r\nimport * as models from '../../models1';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgFor, NgIf, NgStyle } from '@angular/common';\r\nimport { DmogContainerComponent } from '../dmog-new-design/dmog-container/dmog-container.component';\r\nimport { ResizableDirectiveDirective } from '../../directives/resizable-directive.directive';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\n\r\ntype ObjectClass = classes.ObjectClass;\r\n@Component({\r\n    selector: 'app-dmog-form-view',\r\n    templateUrl: './dmog-form-view.component.html',\r\n    styleUrls: ['./dmog-form-view.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        NgFor,\r\n        NgIf,\r\n        DmogContainerComponent,\r\n        ResizableDirectiveDirective,\r\n        NgStyle,\r\n        NgbTooltip,\r\n    ],\r\n})\r\nexport class DmogFormViewComponent implements OnInit, OnDestroy {\r\n    private scrolling = false;\r\n    private scrollingInterval: any;\r\n    private readonly SCROLL_THRESHOLD = 160; // pixels from edge to trigger scrolling\r\n    private readonly SCROLL_SPEED = 3; // pixels per interval\r\n    draggedItemId: string | null = null;\r\n    targetItemId: string | null = null;\r\n    isInnerDragging = false;\r\n    dragStartPrntDmogIDs;\r\n    isFromGroup;\r\n    targetParentGroupId;\r\n\r\n    IsDroppedOnEmptyArea = false;\r\n    IsDroppedOnCard=  false;\r\n    IsDropppedOnGroup = false;\r\n\r\n    isChildDragging =  false;\r\n    IsNotDraggingCradAndGroups =  false;\r\n    isDraggingStart = false;\r\n    @Output() DraggingStatus = new EventEmitter<any>();\r\n    @Output() sideNavModelEmitter = new EventEmitter<any>();\r\n    @Output() isDrawerOpenEmitter = new EventEmitter<any>();\r\n    @Output() updatedbmo = new EventEmitter<any>();\r\n    @Output() updatedbmEmitter = new EventEmitter<any>();\r\n    @Input() SideNavModelData: any;\r\n    SharedDmosList = [];\r\n    isDrawerOpen = false;\r\n    @Input() dmoMode: any;\r\n    UpdatedData: any;\r\n    UpdatedDataSideNavModel:any;\r\n    private readonly saveDmog = new Subject<void>();\r\n    private componentActive = true;\r\n    private IsJsonStaticGridDmo: boolean = false;\r\n    public stylecontainer;\r\n    showContainer = true;\r\n    dmoToAnotherdmog: any;\r\n    sideNavModel: SideNavModel;\r\n    UpdatededWith: any;\r\n    tempWidthforpercent\r\n    tempWidthforpix\r\n    tempid\r\n    //public bm: classes.BM;\r\n    @Input()\r\n    set dmog(dmog: DMOG) {\r\n        this._dmog = dmog;\r\n    }\r\n    get dmog() {\r\n        return this._dmog;\r\n    }\r\n\r\n    @Input()\r\n    set readonly(readonly: boolean) {\r\n        this._readonly = readonly;\r\n    }\r\n    get readonly() {\r\n        return this._readonly;\r\n    }\r\n    readonly formsControls = Object.values(DMOS).sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n    readonly panelControls = Object.values(DMOSLayout);\r\n    private _dmog: DMOG;\r\n    private _readonly = false;\r\n\r\n    @Input() bmo;\r\n    @Input() selectedBMO;\r\n    @Input() bm;\r\n    @Input() UpdatedDataFromSideNav: any;\r\n    rows: PanelMainRow[] = [];\r\n    panelMainContainer: PanelMainContainer;\r\n    isResizing = false;\r\n    resizingId: string | null = null;\r\n    startX = 0;\r\n    startWidth = 0;\r\n    UpdatedDataForContainer: any;\r\n    grabber: boolean = false;\r\n    selectedItemFromchild: any;\r\n    newlyCreatedConatiner: any;\r\n    private scrollSpeed = 0;\r\n     customorderDmogItem=[];\r\n    private animationFrameId: number | null = null;\r\n    constructor(\r\n        private dmApi: DataModelerApiService,\r\n        private msg: MessageService,\r\n        private toast: ToastrService,\r\n        private dm: DataModeler1Component,\r\n        private dataProvider: ServiceProviderService,\r\n        private readonly route: ActivatedRoute,\r\n        private apiService: ApiService,\r\n        private readonly cdref: ChangeDetectorRef    ) {\r\n\r\n        this.dataProvider.getNewlyBmog().subscribe(data => {\r\n            this.onDropLayout(data);\r\n        })\r\n\r\n        this.dataProvider.getreloadParent().subscribe(data => {\r\n            this.reloadParent();\r\n        })\r\n\r\n        this.dataProvider.getSidebarclose().subscribe(data => {\r\n            if (data) {\r\n                this.isDrawerOpen = false;\r\n            }\r\n        });\r\n        this.dataProvider.getOpenSidebarNav().subscribe(data => {\r\n            console.log(data);\r\n            this.sideNavModel = data;\r\n            this.isDrawerOpen = true;\r\n            this.isDrawerOpen = true;\r\n\r\n        })\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.processChildren();\r\n    }\r\n    ngAfterContentChecked() {\r\n        this.cdref.detectChanges();\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.selectedBMO?.currentValue && changes.selectedBMO.currentValue !== changes.selectedBMO.previousValue) {\r\n           this.bm.selectedBMO.Children = changes.selectedBMO.currentValue.Children;\r\n            this.bm._selectedBMO = changes.selectedBMO.currentValue;\r\n            this.processChildren();\r\n        }\r\n        if (changes.sideNavModel && changes.sideNavModel.currentValue == null) {\r\n            this.isDrawerOpen = false;\r\n        }\r\n        this.sideNavModelEmitter.emit(this.sideNavModel);\r\n        this.isDrawerOpenEmitter.emit(this.isDrawerOpen);\r\n\r\n        if (this.UpdatedDataFromSideNav) {\r\n            this.UpdatedData = this.UpdatedDataFromSideNav;\r\n        }\r\n    }\r\n    \r\n      onKeyDown($event){\r\n        return;\r\n      }\r\n      processChildren() {\r\n        this.customorderDmogItem = [];\r\n        const orderDmogItem: models.OrderDmogItems[] = [];\r\n        const childrenKeys = this.bm?.selectedBMO?.Children || [];\r\n        const childrenMap = this.bm?.selectedBMO?.childrenMap || {};\r\n         \r\n        // Collect and sort items\r\n        for (const childKey of childrenKeys) {\r\n            const dmog = childrenMap[childKey];\r\n            if (dmog) {\r\n                orderDmogItem.push({\r\n                    lnkDmogId: dmog.LnkBmoDmogID,\r\n                    Guids: dmog.GUID,\r\n                    hasParent: !!dmog.PrntDmogIDs,\r\n                    DisplayName: dmog.DisplayName\r\n                });\r\n            }\r\n        }\r\n\r\n        // Sort by parent status first, then by lnkDmogId\r\n        orderDmogItem.sort((a, b) => {\r\n            if (a.hasParent !== b.hasParent) {\r\n                return a.hasParent ? 1 : -1;\r\n            }\r\n            return a.lnkDmogId - b.lnkDmogId;\r\n        });\r\n\r\n        // Directly map sorted GUIDs to customorderDmogItem\r\n        this.customorderDmogItem = orderDmogItem.map(item => item.Guids);\r\n        this.updatedbmEmitter.emit(this.bm);\r\n    }\r\n      onMouseOver(event: MouseEvent): void {\r\n        const target = event.target as HTMLElement;\r\n        if (target.closest('.child-card')) {\r\n          this.hideAllPopups();\r\n          const card = target.closest('.child-card');\r\n          const cardPopup = card.querySelector('.default-popup');\r\n          if (cardPopup) {\r\n            (cardPopup as HTMLElement).style.display = 'block';\r\n          }\r\n          return;\r\n        }\r\n      \r\n        if (target.closest('.show-group-popup')) {\r\n          this.hideAllPopups();\r\n          const group = target.closest('.show-group-popup');\r\n          const groupPopup = group.querySelector('.group-popup');\r\n          if (groupPopup) {\r\n            (groupPopup as HTMLElement).style.display = 'block';\r\n          }\r\n        }\r\n\r\n\r\n        if (target.closest('.show-default-popup')) {\r\n            this.hideAllPopups();\r\n            const group = target.closest('.show-default-popup');\r\n            const groupPopup = group.querySelector('.default-popup');\r\n            if (groupPopup) {\r\n              (groupPopup as HTMLElement).style.display = 'block';\r\n            }\r\n          }\r\n      }\r\n      \r\n      onMouseOut(event: MouseEvent): void {\r\n        const relatedTarget = event.relatedTarget as HTMLElement;\r\n        const currentTarget = event.currentTarget as HTMLElement;\r\n        if (currentTarget.contains(relatedTarget)) {\r\n          return;\r\n        }\r\n        if (currentTarget.classList.contains('show-group-popup') || currentTarget.classList.contains('child-card')) {\r\n          this.hideAllPopups();\r\n        }\r\n      }\r\n      \r\n      hideAllPopups(): void {\r\n        document.querySelectorAll('.group-popup, .default-popup').forEach(el => {\r\n          (el as HTMLElement).style.display = 'none';\r\n        });\r\n      }\r\n      \r\n    drop(event: CdkDragDrop<string[]>) {\r\n        this.cdref.detectChanges();\r\n        console.log('Previous Index:', event.previousIndex);\r\n        console.log('Current Index:', event.currentIndex);\r\n        const items = this.bm.selectedBMO.Children;\r\n        if (event.previousIndex === event.currentIndex) {\r\n            return; // No change\r\n        }\r\n\r\n        moveItemInArray(items, event.previousIndex, event.currentIndex);\r\n        this.bm.selectedBMO.Children = [...items];\r\n        this.cdref.detectChanges();\r\n       \r\n\r\n    }\r\n\r\n    dragEndedWithTarget(event: CdkDragEnd, targetDmogId: string) {\r\n        const draggedDmogId = event.source.data;\r\n\r\n        const items = [...this.bm.selectedBMO.Children];\r\n        const draggedIndex = items.findIndex(id => id === draggedDmogId);\r\n        const targetIndex = items.findIndex(id => id === targetDmogId);\r\n        if (draggedIndex === -1 || targetIndex === -1) return;\r\n        items.splice(draggedIndex, 1);\r\n        items.splice(targetIndex, 0, draggedDmogId);\r\n        this.bm.selectedBMO.Children = items;\r\n\r\n        this.cdref.detectChanges();\r\n    }\r\n   \r\n     \r\n\r\ndragMoved(event: MouseEvent) {\r\n  const scrollContainer = document.querySelector('.form-view');\r\n  if (!(scrollContainer instanceof HTMLElement)) return;\r\n\r\n  const containerRect = scrollContainer.getBoundingClientRect();\r\n  const mouseY = event.clientY;\r\n  const threshold = 100; // Reduced threshold for quicker response\r\n\r\n  const distanceFromTop = mouseY - containerRect.top;\r\n  const distanceFromBottom = containerRect.bottom - mouseY;\r\n\r\n  let newScrollSpeed = 0;\r\n  if (distanceFromTop < threshold) {\r\n    newScrollSpeed = -Math.max(10, (threshold - distanceFromTop) / 2);\r\n  } else if (distanceFromBottom < threshold) {\r\n    newScrollSpeed = Math.max(10, (threshold - distanceFromBottom) / 2);\r\n  }\r\n\r\n  if (this.scrollSpeed !== newScrollSpeed) {\r\n    this.stopScrolling();\r\n    this.scrollSpeed = newScrollSpeed;\r\n    if (this.scrollSpeed !== 0) {\r\n      this.startScrolling(scrollContainer);\r\n    }\r\n  }\r\n}\r\n\r\nprivate startScrolling(container: HTMLElement, speed?: number) {\r\n  const scroll = () => {\r\n    container.scrollTop += this.scrollSpeed;\r\n    this.animationFrameId = requestAnimationFrame(scroll);\r\n  };\r\n  this.animationFrameId = requestAnimationFrame(scroll);\r\n}\r\n\r\nprivate stopScrolling() {\r\n  if (this.animationFrameId) {\r\n    cancelAnimationFrame(this.animationFrameId);\r\n    this.animationFrameId = null;\r\n  }\r\n  this.scrollSpeed = 0;\r\n}\r\n   \r\n\r\n      onDragOver(event: DragEvent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        \r\n        const scrollContainer = document.querySelector('.form-view');\r\n        if (!(scrollContainer instanceof HTMLElement)) return;\r\n    \r\n        const containerRect = scrollContainer.getBoundingClientRect();\r\n        const mouseY = event.clientY;\r\n        const distanceFromTop = mouseY - containerRect.top;\r\n        const distanceFromBottom = containerRect.bottom - mouseY;\r\n        const threshold = 160;\r\n    \r\n        scrollContainer.classList.remove('scroll-top', 'scroll-bottom');\r\n        this.stopScrolling();\r\n    \r\n        if (distanceFromTop < threshold) {\r\n            scrollContainer.classList.add('scroll-top');\r\n            this.startScrolling(scrollContainer, -8);\r\n        } else if (distanceFromBottom < threshold) {\r\n            scrollContainer.classList.add('scroll-bottom');\r\n            this.startScrolling(scrollContainer, 8);\r\n        }\r\n    }\r\n    \r\n\r\n    OnDragStarted(event: any, dmog:any) {\r\n        this.closeSideBarAndMenusWhileDragging();\r\n        this.isDrawerOpen = false;\r\n        this.isDraggingStart= true;\r\n       \r\n        this.DraggingStatus.emit(this.isDraggingStart);\r\n        if (dmog.PrntDmogIDs) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        let model = {\r\n            type: 'CardGroup',\r\n            Guid: dmog.GUID, \r\n            PrntDmogIDs: dmog.PrntDmogIDs\r\n          };\r\n        event.dataTransfer.setData('cardGroupDmog',JSON.stringify(model));\r\n        this.draggedItemId = dmog.GUID;\r\n        event.stopPropagation();\r\n    }\r\n\r\n    OnChildDragStarted(event: any, dmog:any) {\r\n        this.isDraggingStart= true;\r\n        this.DraggingStatus.emit(this.isDraggingStart);\r\n        if (this.readonly || this.dmoMode === 'Published') {\r\n            event.preventDefault(); \r\n            return;\r\n        }\r\n        this.closeSideBarAndMenusWhileDragging();\r\n        this.isDrawerOpen = false;\r\n        if (!dmog.PrntDmogIDs) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        let model = {\r\n            type: 'CardGroup',\r\n            Guid: dmog.GUID, \r\n            PrntDmogIDs: dmog.PrntDmogIDs\r\n          };\r\n        event.dataTransfer.setData('cardGroupDmog',JSON.stringify(model));\r\n        this.draggedItemId = dmog.GUID;\r\n        event.stopPropagation();\r\n    }\r\n\r\n    handleContainerDrop(event: DragEvent) {\r\n        event.preventDefault();\r\n    }\r\n    handleChildDrop(event: DragEvent) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    DraggingItemsModel(event:any){\r\n        if(event){\r\n           this.draggedItemId = event.model.Guid;\r\n        }\r\n    }\r\n    closeSideBarAndMenusWhileDragging() {\r\n        document.querySelectorAll('.popup-div').forEach(popup => {\r\n          if (popup instanceof HTMLElement) {\r\n            popup.style.display = 'none';\r\n          }\r\n        });\r\n      \r\n        document.querySelectorAll('.contextMenuContainer').forEach(popup => {\r\n          if (popup instanceof HTMLElement) {\r\n            popup.style.display = 'none';\r\n          }\r\n        });\r\n      }\r\n      \r\n\r\n    \r\n      dragEnded(event: any) {\r\n        this.isDraggingStart = false;\r\n        this.DraggingStatus.emit(this.isDraggingStart);\r\n    \r\n        const scrollContainer = document.querySelector('.form-view');\r\n        if (scrollContainer instanceof HTMLElement) {\r\n            scrollContainer.classList.remove('scroll-top', 'scroll-bottom');\r\n        }\r\n    \r\n        const mouseX = event.clientX;\r\n        const mouseY = event.clientY;\r\n        const elementsAtPoint = document.elementsFromPoint(mouseX, mouseY);\r\n    \r\n        const droppedOnCard = elementsAtPoint.some(el => el.id?.startsWith('resizeableComponent_'));\r\n        const droppedOnCardGroup = elementsAtPoint.some(el => el.classList.contains('card-group-inner-children'));\r\n        const droppedOnEmptyArea = !droppedOnCard && !droppedOnCardGroup;\r\n    \r\n        const cardElement = elementsAtPoint.find(el => el.id?.startsWith('resizeableComponent_'));\r\n    \r\n        if (cardElement) {\r\n            const dmogId = cardElement.id.replace('resizeableComponent_', '');\r\n            console.log('Dropped on specific card with ID:', dmogId);\r\n            const DmogType = this.bm.selectedBMO.childrenMap[dmogId].Type;\r\n    \r\n            if (DmogType === 'CardGroup') {\r\n                this.IsDropppedOnGroup = true;\r\n            } else if (DmogType === 'Normal') {\r\n                this.IsDroppedOnCard = true;\r\n            }\r\n        }\r\n    \r\n        if (droppedOnEmptyArea) {\r\n            this.IsDroppedOnEmptyArea = true;\r\n        }\r\n    \r\n        if (this.draggedItemId && this.targetItemId) {\r\n            const isMovingToGroup = !!this.targetParentGroupId;\r\n            this.moveItem(this.draggedItemId, this.targetItemId, this.targetParentGroupId, isMovingToGroup);\r\n        }\r\n    \r\n        event.dataTransfer.clearData('cardGroupDmog');\r\n        this.draggedItemId = null;\r\n        this.targetItemId = null;\r\n        this.targetParentGroupId = null;\r\n        this.dragStartPrntDmogIDs = null;\r\n        this.IsDroppedOnCard = false;\r\n        this.IsDropppedOnGroup = false;\r\n        this.IsDroppedOnEmptyArea = false;\r\n    \r\n        this.stopScrolling();\r\n    }\r\n    \r\n\r\n    OnChildDragEnded(event: DragEvent) {\r\n        this.isDraggingStart= false;\r\n        this.DraggingStatus.emit(this.isDraggingStart);\r\n        const scrollContainer = document.querySelector('.form-view');\r\n        if (scrollContainer) {\r\n            scrollContainer.classList.remove('scroll-top', 'scroll-bottom');\r\n        }\r\n        this.isChildDragging = false;\r\n        const mouseX = event.clientX;\r\n        const mouseY = event.clientY;\r\n        const elementsAtPoint = document.elementsFromPoint(mouseX, mouseY);\r\n        const droppedOnCard = elementsAtPoint.some(el => el.id?.startsWith('resizeableComponent_'));\r\n\r\n\r\n        const droppedOnCardGroup = elementsAtPoint.some(el => el.classList.contains('card-group-inner-children'));\r\n        const droppedOnEmptyArea = !droppedOnCard && !droppedOnCardGroup;\r\n        const cardElement = elementsAtPoint.find(el => el.id?.startsWith('resizeableComponent_'));\r\n       \r\n        if (cardElement && cardElement !=undefined) {\r\n            const dmogId = cardElement.id.replace('resizeableComponent_', '');\r\n            console.log('Dropped on specific card with ID:', dmogId);\r\n            const DmogType =  this.bm.selectedBMO.childrenMap[dmogId].Type;\r\n            if (DmogType === 'CardGroup'){\r\n                this.IsDropppedOnGroup = true;\r\n            }\r\n            if (DmogType ==='Normal'){\r\n                this.IsDroppedOnCard = true;\r\n            }\r\n        }\r\n        if (droppedOnEmptyArea) {\r\n            this.IsDroppedOnEmptyArea= true;\r\n        } \r\n\r\n\r\n        if (this.draggedItemId && this.targetItemId) {\r\n            const isMovingToGroup = !!this.targetParentGroupId;\r\n            this.moveItem(this.draggedItemId, this.targetItemId, this.targetParentGroupId, isMovingToGroup);\r\n        }\r\n        event.dataTransfer.clearData('cardGroupDmog');\r\n        this.draggedItemId = null;\r\n        this.targetItemId = null;\r\n        this.targetParentGroupId = null;\r\n        this.dragStartPrntDmogIDs = null;\r\n        this.IsDroppedOnCard= false;\r\n        this.IsDropppedOnGroup = false;\r\n        this.IsDroppedOnEmptyArea = false;\r\n        this.stopScrolling();\r\n    }\r\n\r\n    dragHover(dmogId: string, event: MouseEvent, parentGroupId?: string) {\r\n        this.closeSideBarAndMenusWhileDragging();\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.draggedItemId && this.draggedItemId !== dmogId) {\r\n            this.targetItemId = dmogId;\r\n            this.targetParentGroupId = parentGroupId || null;\r\n        }\r\n        \r\n        this.dragMoved(event);\r\n    }\r\n    \r\n    OnChilddragHover(dmogId: string, event: MouseEvent, parentGroupId?: string) {\r\n        this.closeSideBarAndMenusWhileDragging();\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        \r\n        if (this.draggedItemId && this.draggedItemId !== dmogId) {\r\n            this.targetItemId = dmogId;\r\n            this.targetParentGroupId = parentGroupId || null;\r\n        }\r\n        \r\n        this.applyHoverEffect(dmogId);\r\n        this.dragMoved(event);\r\n    }\r\n    \r\n    private applyHoverEffect(dmogId: string) {\r\n        const element = document.getElementById(dmogId);\r\n        if (element) {\r\n            element.classList.add('hover-effect');\r\n        }\r\n    }\r\n    \r\n\r\n    globalMouse(event){\r\n        event.stopPropagation();\r\n       if(this.draggedItemId){\r\n        let currentElement = event.srcElement as HTMLElement;\r\n        console.log(\"globalMouseLeave\",currentElement)\r\n       }\r\n    }\r\n    OnDropMainPanel(event:any){\r\n        if(event){\r\n            if (this.draggedItemId && this.targetItemId) {\r\n                const isMovingToGroup = !!this.targetParentGroupId;\r\n                this.moveItem(this.draggedItemId, this.targetItemId, this.targetParentGroupId, isMovingToGroup);\r\n              }\r\n        }\r\n       \r\n    }\r\n    OnDropOverMainPanel(event:any){\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n    moveItem(sourceId: string, targetId: string, targetParentGroupId: string, isMovingToGroup?: boolean) {\r\n        const items = this.reorderItems(sourceId, targetId);\r\n        this.bm.selectedBMO.Children = items;\r\n    \r\n        const dmogIds = this.collectDmogIds();\r\n        const shared = this.createSharedData(dmogIds);\r\n        this.processChildren();\r\n        if (shared) {\r\n            this.saveReorderDmogs(shared);\r\n        }\r\n    \r\n        this.handleItemMove(sourceId, targetParentGroupId, isMovingToGroup);\r\n    \r\n\r\n        this.cdref.detectChanges();\r\n    }\r\n    \r\n    private reorderItems(sourceId: string, targetId: string) {\r\n        const items = [... this.customorderDmogItem];\r\n        const sourceIndex = items.findIndex(id => id === sourceId);\r\n        const targetIndex = items.findIndex(id => id === targetId);\r\n    \r\n        if (sourceIndex === -1 || targetIndex === -1 || sourceIndex === targetIndex) {\r\n            return items;\r\n        }\r\n    \r\n        const [movedItem] = items.splice(sourceIndex, 1);\r\n        const insertIndex = targetIndex;\r\n        items.splice(insertIndex, 0, movedItem);\r\n        this.customorderDmogItem =items;\r\n        return items;\r\n    }\r\n    \r\n    private collectDmogIds() {\r\n        const data = this.bm._selectedBMO as ObjectClass;\r\n        const dmogIds: any[] = [];\r\n        this.customorderDmogItem.forEach(element => {\r\n            Object.values(data.childrenMap).forEach(bmog => {\r\n                if (bmog.GUID === element) {\r\n                    dmogIds.push(bmog.DMOGID);\r\n                }\r\n            });\r\n        });\r\n        return dmogIds;\r\n    }\r\n    \r\n    private createSharedData(dmogIds: any[]) {\r\n        return {\r\n            bmoid: this.bm._selectedBMO.BMOID,\r\n            dmogIds: dmogIds.join(',')\r\n        };\r\n    }\r\n    \r\n    private saveReorderDmogs(shared: { bmoid: string, dmogIds: string }) {\r\n        this.dmApi.saveReorderDmogs(shared.bmoid.toString(), shared.dmogIds)\r\n            .subscribe({\r\n                next: (response) => {\r\n                    if(response){\r\n                        this.getBM();\r\n                        this.cdref.detectChanges();\r\n                    }\r\n                   \r\n                },\r\n                error: (error) => {\r\n                    console.error('Reorder HTTP Error:', error);\r\n                }\r\n            });\r\n    }\r\n    \r\n    private handleItemMove(sourceId: string, targetParentGroupId: string, isMovingToGroup?: boolean) {\r\n        if (sourceId && this.bm.selectedBMO.childrenMap[sourceId]) {\r\n            const getdmogId = this.bm.selectedBMO.childrenMap[sourceId].DMOGID;\r\n            const getdmogType = this.bm.selectedBMO.childrenMap[sourceId].Type;\r\n    \r\n            if (getdmogType !== 'CardGroup') {\r\n                const dmog = this.bm.selectedBMO.childrenMap[targetParentGroupId];\r\n                if (dmog && targetParentGroupId) {\r\n                    this.moveLogic(getdmogId, isMovingToGroup, dmog, targetParentGroupId);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    private moveLogic(getdmogId: string, isMovingToGroup: boolean | undefined, dmog: any, targetParentGroupId: string) {\r\n        if (this.IsDroppedOnCard || this.IsDropppedOnGroup) {\r\n            if (dmog.Type === 'CardGroup') {\r\n                isMovingToGroup = true;\r\n                const movePayloadList = [{\r\n                    dmogId: getdmogId,\r\n                    prntDmogId: isMovingToGroup ? dmog.DMOGID.toString() : '123',\r\n                    isAdded: true\r\n                }];\r\n                const model = this.createMoveModel(movePayloadList);\r\n                this.UpdateGrouping(model, targetParentGroupId, getdmogId, dmog.DMOGID.toString());\r\n            } else {\r\n                const movePayloadList = [{\r\n                    dmogId: getdmogId,\r\n                    prntDmogId: '123',\r\n                    isAdded: false\r\n                }];\r\n                const model = this.createMoveModel(movePayloadList);\r\n                this.UpdateGrouping(model, targetParentGroupId, getdmogId, \"\");\r\n            }\r\n        } else {\r\n            const movePayloadList = [{\r\n                dmogId: getdmogId,\r\n                prntDmogId: '123',\r\n                isAdded: false\r\n            }];\r\n            const model = this.createMoveModel(movePayloadList);\r\n            this.UpdateGrouping(model, targetParentGroupId, getdmogId, \"\");\r\n        }\r\n    }\r\n    \r\n    private createMoveModel(movePayloadList: any[]) {\r\n        return {\r\n            DmogIds: movePayloadList.map(item => item.dmogId).join(','),\r\n            IsAdded: movePayloadList.map(item => item.isAdded ? 'true' : 'false').join(','),\r\n            PrntDmogIds: movePayloadList.map(item => item.prntDmogId ?? 'NULL').join(','),\r\n            Orders: \"1\"\r\n        };\r\n    }\r\n    \r\n    \r\n   \r\n    UpdateGrouping(model:any,dmogId,sourceId,pgId){\r\n      let dmogP  =  this.bm.selectedBMO.childrenMap[sourceId];\r\n      if(dmogP){\r\n        this.bm.selectedBMO.childrenMap[sourceId].PrntDmogIDs = pgId.toString();\r\n        this.cdref.detectChanges();\r\n      }\r\n       \r\n        this.dmApi.saveupdatePrntDmogIDs(model)\r\n        .subscribe({\r\n            \r\n            next: (response) => {\r\n                if(response){\r\n                    this.getBM();\r\n                }\r\n                this.cdref.detectChanges();\r\n                console.log('Move Success:', response);\r\n            },\r\n            error: (error) => {\r\n                console.error('Move HTTP Error:', error);\r\n            }\r\n        });\r\n    }\r\n    \r\n\r\n    private startScrolling1(element: HTMLElement, direction: number) {\r\n        if (this.scrolling) {\r\n            return; // Prevent multiple scroll intervals\r\n        }\r\n        \r\n        this.scrolling = true;\r\n        this.scrollingInterval = setInterval(() => {\r\n            if (element) {\r\n                element.scrollTop += direction * this.SCROLL_SPEED;\r\n            }\r\n        }, 16); // ~60fps\r\n    }\r\n\r\n    private stopScrolling1() {\r\n        if (this.scrollingInterval) {\r\n            clearInterval(this.scrollingInterval);\r\n            this.scrollingInterval = null;\r\n        }\r\n        this.scrolling = false;\r\n    }\r\n\r\n    private handleScrollIndicator(event: MouseEvent, scrollContainer: HTMLElement) {\r\n        if (!scrollContainer) return;\r\n\r\n        const containerRect = scrollContainer.getBoundingClientRect();\r\n        const mouseY = event.clientY;\r\n        const distanceFromTop = mouseY - containerRect.top;\r\n        const distanceFromBottom = containerRect.bottom - mouseY;\r\n        \r\n        // Remove existing scroll indicators\r\n        scrollContainer.classList.remove('scroll-top', 'scroll-bottom');\r\n        \r\n        if (distanceFromTop < this.SCROLL_THRESHOLD) {\r\n            scrollContainer.classList.add('scroll-top');\r\n            this.startScrolling(scrollContainer, -1);\r\n        } else if (distanceFromBottom < this.SCROLL_THRESHOLD) {\r\n            scrollContainer.classList.add('scroll-bottom');\r\n            this.startScrolling(scrollContainer, 1);\r\n        } else {\r\n            this.stopScrolling();\r\n        }\r\n    }\r\n\r\n    trackByDmogId(index: number, dmogId: string): string {\r\n        return dmogId;\r\n    }\r\n\r\n\r\n    SelectdItem(event) {\r\n        if (event.SelectdItem) {\r\n            this.selectedItemFromchild = event.SelectdItem;\r\n        }\r\n    }\r\n\r\n    setStyle(data) {\r\n\r\n        if (data && data.DMOGProps) {\r\n            let panelMainContainer = JSON.parse(data.DMOGProps);\r\n            let width = panelMainContainer.width;\r\n            if (!width) {\r\n                width = 100 - 0.3 \r\n            }\r\n            return {\r\n                width: `${width - 0.3}%`, \r\n            };\r\n        }\r\n        return {\r\n            width: `${100 - 0.3}%`, \r\n\r\n        };\r\n    }\r\n\r\n    setResizeDiv(data) {\r\n        if (data && data.DMOGProps) {\r\n            let panelMainContainer = JSON.parse(data.DMOGProps);\r\n            let width = panelMainContainer.width;\r\n            if (!width) {\r\n                width = 100\r\n            }\r\n            return {\r\n                width: `${width}%`,\r\n            };\r\n        }\r\n        return {\r\n            width: `${100}%`,\r\n\r\n        };\r\n    }\r\n\r\n\r\n    GetAvailableDmoToShare() {\r\n        if (!this.bm?._selectedBMOG?.BMOGID || !this.bm?.BMId) {\r\n            return; // Exit if required properties are missing\r\n        }\r\n        this.dmApi.GetAvailableDmoToShare(this.bm._selectedBMOG.BMOGID, this.bm.BMId).subscribe(x => {\r\n            this.SharedDmosList = x.components;\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //Resizing Logic start \r\n    saveWidth(event, id) {\r\n        const targetedElement = event.target as HTMLElement;\r\n        if (targetedElement.classList.contains('resizableinnerdiv')) {\r\n\r\n            if (this.tempid == id) {\r\n                let looped = document.getElementById(\"resizeableComponent_\" + id);\r\n                if (!this.tempWidthforpix) {\r\n\r\n                    this.tempWidthforpix = looped.clientWidth;\r\n                    //  setTimeout(() => {\r\n                    this.SaveWidthWidth(id, this.tempWidthforpercent);\r\n                    // }, 200);\r\n                }\r\n                if (this.tempWidthforpix != looped.clientWidth) {\r\n                    this.tempWidthforpix = looped.clientWidth;\r\n                    //setTimeout(() => {\r\n                    this.SaveWidthWidth(id, this.tempWidthforpercent);\r\n                    //}, 200);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getWidthInPercentage(event, id: any) {\r\n        event.stopPropagation();\r\n        let looped = document.getElementById(\"resizeableComponent_\" + id);\r\n        this.tempid = id;\r\n        // let resizeableComponent_=document.getElementById(\"resizeableComponent_\"+id);\r\n\r\n        const parentWidth = looped.parentElement?.clientWidth || window.innerWidth; // Get parent width or window width\r\n        const divWidth = looped.clientWidth; // Get div width\r\n        let width = Math.floor((divWidth / parentWidth) * 100);\r\n        if (!this.tempWidthforpercent) {\r\n            this.tempWidthforpercent = width;\r\n        }\r\n        if (width != this.tempWidthforpercent) {\r\n            // resizeableComponent_.style.width=looped.style.width;\r\n\r\n            this.tempWidthforpercent = width;\r\n        }\r\n\r\n    }\r\n    SaveWidthWidth(id: any, width) {\r\n        console.log(width);\r\n        if (width > 100 || width < 0)\r\n            width = 100;\r\n        if (this.bm.selectedBMO.childrenMap[id]) {\r\n            const data = this.bm.selectedBMO.childrenMap[id];\r\n            this.panelMainContainer = JSON.parse(data.DMOGProps);\r\n            if (this.panelMainContainer) {\r\n                this.panelMainContainer.width = width\r\n            }\r\n            var model = {};\r\n            model = {\r\n                \"DMOGID\": data.DMOGID,\r\n                \"DMOGProps\": JSON.stringify(this.panelMainContainer)\r\n            }\r\n            const url = `wfapibm/DataModel/SaveDmogProps`;\r\n            this.apiService.postgateway('',url, model).subscribe(r => {\r\n                data.DMOGProps = JSON.stringify(this.panelMainContainer)\r\n                setTimeout(() => {\r\n                    this.setUpdatedWidth(width);\r\n                    this.UpdatedData = data;\r\n                }, 200);\r\n\r\n            }, error => {\r\n                console.log(error)\r\n            });\r\n        }\r\n    }\r\n    setUpdatedWidth(width) {\r\n        this.dataProvider.setUpdatedContainerWidth(width)\r\n    }\r\n    //Resizing Logic End\r\n\r\n    private onSaveDmog() {\r\n        const message = \"Don't close the window while saving\";\r\n        const title = 'Save in progress';\r\n        this.saveDmog\r\n            .pipe(\r\n                takeWhile((_) => this.componentActive),\r\n                switchMap((_) => {\r\n                    let activeToast = this.toast.findDuplicate(\r\n                        title,\r\n                        message,\r\n                        true,\r\n                        false\r\n                    );\r\n                    if (activeToast) {\r\n                        this.toast.remove(activeToast.toastId);\r\n                    }\r\n                    activeToast = this.toast.info(message, title, {\r\n                        timeOut: 10000,\r\n                        tapToDismiss: false,\r\n                    });\r\n                    return this.dmApi\r\n                        .saveObject(this.dmog.unreference(), this.dmog.root, true)\r\n                        .pipe(\r\n                            catchError((_) => of(false)),\r\n                            finalize(() => this.toast.remove(activeToast.toastId))\r\n                        );\r\n                })\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    public async onDrop(e: CdkDragDrop<DMOUI[] | Partial<IDMComponent>[]>) {\r\n        if (this.IsJsonStaticGridDmo) {\r\n            this.toast.warning(\r\n                'More than one json static grid not allowed.',\r\n                'Warning'\r\n            );\r\n            return;\r\n        }\r\n        const from = e.previousContainer;\r\n        const to = e.container as CdkDropList<IDMComponent[]>;\r\n        const fromIdx = e.previousIndex;\r\n        const toIdx = e.currentIndex;\r\n        if (from.id === 'form-controls') {\r\n            const uiData = from.data[fromIdx] as DMOUI;\r\n            const res = await this.getDmoDetails(uiData);\r\n            if (!res) {\r\n                return;\r\n            }\r\n            transferArrayItem([res], to.data as Partial<IDMComponent>[], 0, toIdx);\r\n            const dmoId = await this.saveDmoDetails(res);\r\n            if (!dmoId) {\r\n                to.data = to.data.filter((dmo) => dmo.dmoName !== res.dmoName);\r\n            }\r\n            res.dmoId = +dmoId;\r\n            this.dmApi.reorderChildren(this.dmog).subscribe(() => this.dm.getBM());\r\n            return;\r\n        } else if (from.id !== to.id) {\r\n            transferArrayItem(from.data as any[], to.data, fromIdx, toIdx);\r\n        } else {\r\n            if (from.id === to.id && fromIdx === toIdx) return;\r\n            moveItemInArray(from.data as any[], fromIdx, toIdx);\r\n        }\r\n        this.dmApi.reorderChildren(this.dmog).subscribe();\r\n        // this.saveDmog.next();\r\n    }\r\n\r\n    async OnBMOSave(data) {\r\n\r\n        if (this.IsJsonStaticGridDmo) {\r\n            this.toast.warning(\r\n                'More than one json static grid not allowed.',\r\n                'Warning'\r\n            );\r\n            return;\r\n        }\r\n        this._dmog = data.data;\r\n\r\n        const uiData = data.type as DMOUI;\r\n        const res = await this.getDmoDetails(uiData);\r\n        if (!res) {\r\n            return;\r\n        }\r\n        //this.bm.selectedDMOG=data.data;\r\n\r\n\r\n        const dmoId = await this.saveDmoDetails(res, data);\r\n        if (dmoId && dmoId != \"false\") {\r\n            this.dataProvider.setDmoStates(dmoId);\r\n            this.dm.getBM()\r\n\r\n        }\r\n\r\n        return;\r\n\r\n\r\n    }\r\n    dragDmoToAnotherdmog(data) {\r\n        this.dmoToAnotherdmog = data;\r\n        this.isInnerDragging = data.InnerDragging;\r\n    }\r\n    dropDmoToAnotherdmog(data) {\r\n        if (this.dmoToAnotherdmog && this.dmoToAnotherdmog.dmogId != data.dmogId) {\r\n            this.dataProvider.setMoveDmo({ \"prevdmogId\": this.dmoToAnotherdmog.dmogId, \"dmogId\": data.dmogId, \"targetId\": data.targetId, \"dmoguid\": this.dmoToAnotherdmog.dmoguid });\r\n            // setTimeout(() => {\r\n            //     window.location.reload();\r\n            // }, 500);\r\n        }\r\n    }\r\n    public async onDmoEdit(emitData) {\r\n\r\n        let data = emitData.dmo as DMComponent\r\n\r\n        let dmog = emitData.dmog\r\n        const uiData = DMOS[data.type];\r\n        const res = await this.getDmoDetails(uiData, data, dmog);\r\n        if (res) {\r\n            const dmoId = await this.saveDmoDetails(res, dmog, true);\r\n            if (dmoId) {\r\n                res.dmoId = +dmoId;\r\n                //this.dmApi.reorderChildren(this.dmog).subscribe();\r\n\r\n                this.toast.success('Data was saved successfully', 'Success');\r\n                this.dm.getBM()\r\n            } else {\r\n                this.toast.warning('Data was not saved', 'Warning');\r\n            }\r\n        }\r\n    }\r\n\r\n    public async onDmoClone(emitData) {\r\n\r\n        let data = emitData.dmo as DMComponent;\r\n        let dmog = emitData.dmog\r\n\r\n        this.dmog.findDmoAndThen(data.dmoName, async (info) => {\r\n            // if (!info) return;\r\n            // const { rowIndex: r, columnIndex: c, dmoIndex: d } = info;\r\n            // const rows = this.dmog.formData.components;\r\n            // let col = rows[r];\r\n            const cloned = dmog.childrenMap[data.dmoName].clone();\r\n            const newComponents = cloned.asObject() as IDMComponent\r\n            // .slice(0, d + 1)\r\n            // .concat(cloned.asObject() as IDMComponent, col.components.slice(d + 1));\r\n            //  col = newComponents;\r\n            //this.dmog.addChild(cloned);\r\n            const uiData = DMOS[data.type];\r\n            const res = await this.getDmoDetails(uiData, cloned, dmog);\r\n            if (!res) {\r\n                //  this.dmog.removeChild(cloned.dmoName);\r\n                // col.components = newComponents.filter(\r\n                //   (dmo) => dmo.dmoName !== cloned.dmoName\r\n                // );\r\n                return;\r\n            }\r\n\r\n            // const cloneInfo = { ...info, dmoIndex: info.dmoIndex + 1 };\r\n            // this.replaceDmo(cloneInfo, res);\r\n\r\n            const dmoId = await this.saveDmoDetails(res, dmog, null, true);\r\n            if (dmoId) {\r\n                res.dmoId = +dmoId;\r\n                this.dataProvider.setDmoStates(dmoId);\r\n                this.dm.getBM()\r\n                // this.dmApi.reorderChildren(this.dmog).subscribe();\r\n                this.toast.success('Data was saved successfully', 'Success');\r\n                this.cdref.detectChanges();\r\n            } else {\r\n                this.toast.warning('Data was not saved', 'Warning');\r\n            }\r\n        });\r\n    }\r\n\r\n    public onDmoClone_new(event) {\r\n        let data: IDMComponent;\r\n        if (event) {\r\n            data = event.dmo;\r\n        }\r\n        this.dmog.findDmoAndThen(data.dmoName, (info) => {\r\n            if (!info) return;\r\n            const { rowIndex: r, columnIndex: c, dmoIndex: d } = info;\r\n            const rows = this.dmog.formData.components;\r\n            const col = rows[r];\r\n            const cloned = this.dmog.childrenMap[data.dmoName].clone();\r\n            // const newComponents = col\r\n            //   .slice(0, d + 1)\r\n            //   .concat(cloned.asObject() as IDMComponent, col.slice(d + 1));\r\n            // col.components = newComponents;\r\n            this.dmog.addChild(cloned);\r\n            //below two lins is Cnommented \r\n            //  this.dmApi.saveObject(cloned.asObject() as any, this.dmog.root).subscribe(success => success && this.dm.getBM())\r\n            // this.saveDmog.next();\r\n        });\r\n    }\r\n\r\n    public onDmoDelete(emitData) {\r\n        let data = emitData.dmo as DMComponent\r\n        let dmog = emitData.dmog\r\n        let dmoguid = emitData.dmoguid;\r\n        const modal = this.msg.showMessage('Warning', {\r\n            header: 'Unshare DMO',\r\n            body: `Are you sure you want to Unshare ${emitData?.dmo?.dmoName}?`,\r\n            btnText: 'Unshare',\r\n            checkboxText: 'Yes, Unshare this object',\r\n            isDelete: true,\r\n            undoable : true,\r\n            isNewDesign: true,\r\n            callback: () => {\r\n                this.dmApi\r\n                    .unshareDmo(data?.dmoId?.toString(),dmog.DMOGID?.toString())\r\n                    .subscribe(\r\n                        (success) => {\r\n                            if (success) {\r\n                                this.dataProvider.setDeleteDmo({ \"dmogId\": dmog?.GUID, \"dmoguid\": dmoguid });\r\n                                setTimeout(() => {\r\n                                    this.dm.getBM();\r\n                                }, 200);\r\n                                this.cdref.detectChanges();\r\n                            }\r\n                        }\r\n                    );\r\n            },\r\n        });\r\n    }\r\n    \r\n   \r\n\r\n    private async getDmoDetails(uiData: DMOUI, data: Partial<DMComponent> = {}, currentDmog?:any) {\r\n        const newObject = Object.keys(data).length === 0 || data.fromApi === false;\r\n        const modal = this.msg.showComponent(DmoDetailComponent, {\r\n            newObject,\r\n            data: data as IDMComponent,\r\n            uiData,\r\n            parent: currentDmog ?? this._dmog,\r\n            readonly: this.readonly,\r\n        });\r\n\r\n        return (await modal.result) as IDMComponent;\r\n    }\r\n\r\n    formClick() {\r\n        this.dataProvider.setHideContextMenu(false);\r\n    }\r\n\r\n\r\n    private async saveDmoDetails(res: IDMComponent, selectedDmog?, isEdit?, iscloned?) {\r\n\r\n        try {\r\n            let url = `wfapibm/DataModel/saveDmoforNewDM`\r\n            let data\r\n            if (isEdit) {\r\n                data = selectedDmog;\r\n            } else {\r\n                data = selectedDmog.data;\r\n            }\r\n            if (iscloned) {\r\n                data = selectedDmog;\r\n            }\r\n            let dmog = {\r\n                \"DMOGProps\": data!.DMOGProps,\r\n                \"id\": data!.DMOGID,\r\n                \"ProcessName\": data!.root!.ProcessName,\r\n                \"Version\": data!.Version\r\n            }\r\n\r\n\r\n            let model = { \"dmo\": res, \"dmog\": dmog }\r\n            return await this.apiService.postgateway('',url, model, null).toPromise();\r\n        } catch (error) {\r\n            console.log(error);\r\n            // if (originalDmoData) {\r\n            // this._dmog.findDmoAndThen(originalDmoData.dmo.dmoName, (info) =>\r\n            //   this.replaceDmo(info, originalDmoData.dmo)\r\n            // );\r\n            //}\r\n        }\r\n        return false;\r\n    }\r\n    private replaceDmo(\r\n        info: FormDataComponentInfo,\r\n        replaceWith: IDMComponent | null\r\n    ) {\r\n        if (!info) return;\r\n        const { rowIndex: r, columnIndex: c, dmoIndex: d } = info;\r\n        const rows = this.dmog.formData.components;\r\n        let newComponents = rows[r].columns[c].components.slice();\r\n        if (replaceWith === null) {\r\n            newComponents = newComponents.filter(\r\n                (dmo) => dmo.dmoName !== info.dmo.dmoName\r\n            );\r\n            this.dmog.removeChild(info.dmo.dmoName);\r\n        } else {\r\n            newComponents[d] = replaceWith;\r\n            this.dmog.addChild(new DMComponent(replaceWith, this.dmog));\r\n        }\r\n        rows[r].columns[c].components = newComponents;\r\n    }\r\n\r\n    async openConditionPopup(emitData,event) {\r\n        if(event){\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        let item = emitData.dmo as DMComponent\r\n        this._dmog = emitData.dmog\r\n\r\n        const uiData = this.formsControls.find((c) => c.type === item.type);\r\n        const parent = this._dmog.childrenMap[item.dmoName];\r\n        const modal = this.msg.showComponent(DmoConditionComponent, {\r\n            uiData,\r\n            parent,\r\n            readonly: this.readonly,\r\n            currentDmog: this._dmog\r\n        });\r\n        const res = await modal.result;\r\n        if (!res) {\r\n            return;\r\n        }\r\n        const { payload, deletedConditions } = res as {\r\n            payload: any;\r\n            deletedConditions: IConditionBody[];\r\n        };\r\n        this.dmApi.saveDmoCondition(payload).subscribe((success) => {\r\n            if (success) {\r\n                const deleteCondition = (id: string) =>\r\n                    this.dmApi.deleteDmoCondition(id).pipe(\r\n                        filter((success) => success),\r\n                        map((_) => id)\r\n                    );\r\n                const actualDeletingConditions = intersectionBy(\r\n                    parent.conditions,\r\n                    deletedConditions,\r\n                    'Id'\r\n                );\r\n\r\n                from(actualDeletingConditions.map((c) => deleteCondition(c.Id)))\r\n                    .pipe(\r\n                        mergeAll(),\r\n                        finalize(\r\n                            () =>\r\n                            (parent.conditions =\r\n                                payload.dmoCondition[parent.guid].Condition)\r\n                        )\r\n                    )\r\n                    .subscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.componentActive = false;\r\n    }\r\n\r\n    // ****************Layout\r\n\r\n    reloadParent() {\r\n        this.getBM()\r\n    }\r\n    onRightClick(event: MouseEvent) {\r\n        event.preventDefault();\r\n        this.AddDmog();\r\n\r\n    }\r\n    handleKeyDown(event: KeyboardEvent): void {\r\n        if (event.key === 'Enter' || event.key === ' ') {\r\n            event.preventDefault();\r\n            this.AddDmog();\r\n        }\r\n    }\r\n\r\n\r\n    AddDmog(onAddAbove?) {\r\n\r\n        this.rows = [];\r\n        let column = [];\r\n        column.push({ \"colIndex\": 0, \"dmoguid\": [], \"width\": 99.5, \"rows\": [] })\r\n        let letNextRow = {\r\n            rowIndex: 0,\r\n            columns: column\r\n        } as PanelMainRow\r\n        this.rows.push(letNextRow);\r\n\r\n        this.panelMainContainer = {\r\n            width: 100,\r\n            rows: this.rows\r\n        }\r\n\r\n        this.getObjectDetails(this.selectedBMO).then((res) => {\r\n\r\n            if (res != null) {\r\n                this.rows = [];\r\n            }\r\n        });\r\n\r\n        return;\r\n\r\n    }\r\n    public async onDropLayout(e: CdkDragDrop<DMOUI[] | Partial<IDMComponent>[]>) {\r\n\r\n        const from = e.previousContainer;\r\n        const to = e.container as CdkDropList<IDMComponent[]>;\r\n        const fromIdx = e.previousIndex;\r\n        const toIdx = e.currentIndex;\r\n        if (from.id === 'form-controls') {\r\n\r\n            let column = [];\r\n            column.push({ \"colIndex\": 0, \"dmoguid\": [], \"width\": 99.5, \"rows\": [] })\r\n            let letNextRow = {\r\n                rowIndex: 0,\r\n                columns: column\r\n            } as PanelMainRow\r\n            this.rows.push(letNextRow);\r\n\r\n            this.panelMainContainer = {\r\n                width: 100,\r\n                rows: this.rows\r\n            }\r\n            this.getObjectDetails(this.selectedBMO).then((res) => {\r\n\r\n                if (res != null) {\r\n                    this.rows = [];\r\n                }\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n    OnAddDmogInGroup(event) {\r\n        this.rows = [];\r\n        let column = [];\r\n        column.push({\"colIndex\": 0, \"dmoguid\": [], \"width\": 99.5, \"rows\": []});\r\n    \r\n        let letNextRow = { rowIndex: 0, columns: column } as PanelMainRow;\r\n        this.rows.push(letNextRow);\r\n    \r\n        this.panelMainContainer = {\r\n            width: 100,\r\n            rows: this.rows\r\n        };\r\n    \r\n        this.getObjectDetails(this.selectedBMO, undefined, event.data.DMOGID).then((res) => {\r\n            if (res != null) {\r\n                this.rows = [];\r\n            }\r\n        });\r\n    }\r\n    \r\n    AddDmogGroup(onAddAbove?) {\r\n        this.panelMainContainer = {\r\n            width: 100,\r\n            rows: []\r\n        };\r\n    \r\n        this.getObjectDetailsForGroup(this.selectedBMO).then((res) => {\r\n            if (res != null) {\r\n                this.rows = [];\r\n            }\r\n        });\r\n    }\r\n    \r\n    public saveObjectDetails(\r\n        parent: ObjectClass,\r\n        obj: Partial<ObjectClass> = {},\r\n        payload: models.ObjectType,\r\n        finalize?: (id: string) => Observable<any>\r\n    ) {\r\n        const newObject = Object.keys(obj).length === 0;\r\n        // Store data in case optimistic update fails\r\n        const original = { ...obj };\r\n\r\n        // Optimistic ui update\r\n        if (newObject) {\r\n            const { childClass } = this.determineClassAndComponent(parent);\r\n            const child = new childClass(payload, parent);\r\n            parent.addChild(child);\r\n        } else {\r\n            obj.update(payload);\r\n        }\r\n\r\n        // Rollback optimistic update if something goes wrong\r\n        const rollback = () => {\r\n            if (newObject) {\r\n                parent.removeChild(payload.id);\r\n            } else {\r\n                obj.update(original);\r\n            }\r\n        };\r\n\r\n        let existbm = this.bm as classes.BM;\r\n        if (!existbm?._selectedBMO?.Children?.includes(payload.id)) {\r\n            existbm?._selectedBMO?.Children?.push(payload.id);\r\n        }\r\n        this.dmApi\r\n            .saveObject(payload, this.bm)\r\n            .pipe(\r\n                switchMap((id) => {\r\n                    if (finalize) {\r\n                        return finalize(id).pipe(map(() => id));\r\n                    }\r\n                    return of(id);\r\n                })\r\n            )\r\n            .subscribe({\r\n                next: (success) => {\r\n                    if (!success) rollback();\r\n                    else {\r\n                        this.bm.cacheObjectId(payload);\r\n                    }\r\n                },\r\n                error: (_) => rollback(),\r\n                complete: () => this.getBM(),\r\n            });\r\n\r\n    }\r\n    public getBM() {\r\n        const { ProcessName, Name, Version } = this.route.snapshot.data\r\n            ?.bm as models.IBM;\r\n        this.dmApi\r\n            .getData(ProcessName, Name, Version)\r\n            .subscribe((bm) => {\r\n                this.bm = bm;\r\n               setTimeout(() => {\r\n                this.processChildren();\r\n               }, 300);\r\n                \r\n            });\r\n    }\r\n    private determineClassAndComponent(\r\n        parent: ObjectClass,\r\n        data: Partial<ObjectClass> = {}\r\n    ) {\r\n        let component: ComponentType<\r\n            models.ObjectDetail<models.ObjectType, models.ObjectType>\r\n        >;\r\n        let childClass: any;\r\n        if (parent instanceof classes.BM) {\r\n            component = components.BmogDetailComponent;\r\n            childClass = classes.BMOG;\r\n        } else if (parent instanceof classes.BMOG) {\r\n            component = components.BmoDetailComponent;\r\n            childClass = classes.BMO;\r\n        } else if (parent instanceof classes.BMO) {\r\n            component = components.DmogDetailComponent;\r\n            childClass = classes.DMOG;\r\n        } else if (parent === undefined && data instanceof classes.BM) {\r\n            component = components.BmDetailComponent;\r\n            childClass = undefined;\r\n        }\r\n        return { component, childClass };\r\n    }\r\n\r\n    setPanelStyle(obj) {\r\n        return {\r\n            position: 'fixed',\r\n            left: `${obj.left}px`,\r\n            top: `${obj.top}px`,\r\n            width: `${obj.width}px`,\r\n            height: `${obj.height}px`,\r\n        };\r\n    }\r\n    // Working for BMOG/BMO/DMOG in DataModeler1\r\n    public onTabRemove(tab: any) {\r\n        const obj = tab.data;\r\n        let className = this.getClassName(obj);\r\n        let message:string;\r\n        switch (className) {\r\n            case 'Card Group':\r\n                message='Yes, delete this card group'\r\n                break;\r\n                case 'Card':\r\n                    message='Yes, Unshare this card'\r\n                    break;\r\n            default:\r\n                message='Yes, delete this object';\r\n                break;\r\n        }\r\n        const isCard = className === 'Card';\r\n        const name = (obj as any)?.DisplayName || obj.Name;\r\n        const btnText = className === 'Card' ? 'Unshare' : 'Delete';\r\n        this.msg.showMessage('Warning', {\r\n            header: `${btnText} ${className}`,\r\n            body: `Are you sure you want to ${btnText.toLowerCase()} ${name}?`,\r\n            btnText: `${btnText}`,\r\n            checkboxText: message,\r\n            isNewDesign: true,\r\n            isDelete : true,\r\n            undoable : isCard,\r\n            callback: () => this.deleteObject(obj),\r\n        });\r\n    }\r\n\r\n    private getClassName(obj: any): string {\r\n        if (obj instanceof classes.BM) {\r\n            return 'BM';\r\n        } else if (obj instanceof classes.BMOG) {\r\n            return 'View';\r\n        } else if (obj instanceof classes.BMO) {\r\n            return 'Section';\r\n        } else if (obj instanceof classes.DMOG) {\r\n            return obj.Type =='CardGroup' ? 'Card Group': 'Card';\r\n        }\r\n        return '';\r\n    }\r\n    public onTabEdit(tab: any) {\r\n        if(tab.data.DMOGProps){\r\n            this.panelMainContainer  = JSON.parse(tab.data.DMOGProps);\r\n        }\r\n        this.openObjectDetails(tab.data);\r\n       \r\n    }\r\n\r\n    public openObjectDetails(obj: ObjectClass) {\r\n        this.getObjectDetails(obj.parent as ObjectClass, obj);\r\n    }\r\n    // keep it\r\nprivate async getObjectDetails(parent: ObjectClass, data: Partial<ObjectClass> = {}, parentGroupId?) {\r\n    const newObject = Object.keys(data).length === 0;\r\n    const { component } = this.determineClassAndComponent(parent, data);\r\n\r\n    const modal = this.msg.showComponent(component, { data: data as ObjectClass, parent, newObject });\r\n    const res = await modal.result;\r\n    if (!res) return;\r\n\r\n    if (this.isCardGroupType(res)) return;\r\n\r\n    if (this.isTopLevelBM(parent, data)) {\r\n        this.saveBMDetails(res);\r\n        return;\r\n    }\r\n\r\n    const payload = this.preparePayload(parent, res, parentGroupId);\r\n\r\n    const saveShared = this.getSaveSharedFunction(parent, res, newObject);\r\n\r\n    if (saveShared) {\r\n        this.saveObjectDetails(parent, data, payload, saveShared);\r\n        if (parent instanceof classes.BMO && res.payload?.GUID) {\r\n            this.newlyCreatedConatiner = res.payload.GUID;\r\n        }\r\n    } else {\r\n        this.saveObjectDetails(parent, data, res);\r\n    }\r\n}\r\n\r\n\r\nprivate isCardGroupType(res: any): boolean {\r\n    if (res.Type === 'CardGroup') {\r\n        this.handleCardGroup(res);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nprivate isTopLevelBM(parent: ObjectClass, data: Partial<ObjectClass>): boolean {\r\n    return parent === undefined && data instanceof classes.BM;\r\n}\r\n\r\nprivate preparePayload(parent: ObjectClass, res: any, parentGroupId?: any): any {\r\n    const payload = res.payload ?? {};\r\n\r\n    if (parent instanceof classes.BMO && this) {\r\n        payload.DMOGProps = JSON.stringify(this.panelMainContainer);\r\n        if (parentGroupId) {\r\n            payload.PrntDmogIDs = parentGroupId;\r\n        }\r\n    }\r\n\r\n    return payload;\r\n}\r\n\r\nprivate getSaveSharedFunction(parent: ObjectClass, res: any, newObject: boolean): ((id: string) => any) | null {\r\n    if (parent instanceof classes.BM) {\r\n        return (id: string) => {\r\n            if (res.shared.bmoIds === '-1' && !newObject) return EMPTY;\r\n            return this.dmApi.saveSharedBmos(res.shared.bmogId || id, res.shared.bmoIds);\r\n        };\r\n    }\r\n\r\n    if (parent instanceof classes.BMOG) {\r\n        return (id: string) => {\r\n            if (res.shared.dmogIds === '-1' && !newObject) return EMPTY;\r\n            return this.dmApi.saveSharedDmogs(res.shared.bmoId || id, res.shared.dmogIds);\r\n        };\r\n    }\r\n\r\n    if (parent instanceof classes.BMO) {\r\n        return (_: string) => {\r\n            if (res.shared.leftDMOGuids === '-1' && res.shared.rightDMOGuids === '-1' && !newObject) return EMPTY;\r\n            return this.dmApi.saveSharedDmos(res.shared);\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    private handleCardGroup(res) {\r\n        const dmogP = this.bm.selectedBMO.childrenMap[res.model.Name];\r\n        if (dmogP) {\r\n            this.bm.selectedBMO.childrenMap[res.model.Name].DisplayName = res.model.DisplayName;\r\n            this.cdref.detectChanges();\r\n        }\r\n        this.saveDmogGrouping(res.model);\r\n    }\r\n    \r\nsaveDmogGrouping(model:any){\r\n    this.dmApi.saveupdatePrntDmogIDs(model).subscribe(response => {\r\n         if(response){\r\n            this.getBM();\r\n         }\r\n      });\r\n}\r\n\r\n\r\nshouldShowAsMainCard(dmog: any): boolean {\r\n  if (!dmog) return false;\r\n  \r\n  // If it's a CardGroup, always show it as a main card\r\n//   if (dmog.Type === 'CardGroup') {\r\n//     return true;\r\n//   }\r\n  \r\n  // For Normal type, it's a main card if it has no parent\r\n  return !dmog.PrntDmogIDs || dmog.PrntDmogIDs === '' || typeof dmog.PrntDmogIDs === 'undefined';\r\n}\r\n\r\n// Get all children for a CardGroup\r\ngetChildrenForCardGroup(parentDmogId: string | number): string[] {\r\n  if (!parentDmogId) return [];\r\n  \r\n  const parentIdStr = parentDmogId.toString();\r\n  const children: string[] = [];\r\n  \r\n  this.bm.selectedBMO.Children.forEach(dmogId => {\r\n    const dmog = this.bm.selectedBMO.childrenMap[dmogId];\r\n    if (!dmog) return;\r\n    \r\n    if (dmog.PrntDmogIDs) {\r\n      const parentIds = dmog.PrntDmogIDs.toString().split(',').map(id => id.trim());\r\n      if (parentIds.includes(parentIdStr)) {\r\n        children.push(dmogId);\r\n      }\r\n    }\r\n  });\r\n  \r\n  return children;\r\n}\r\n\r\n// Set  styling for child cards\r\nsetChildStyle(dmog: any): any {\r\n  const baseStyle = this.setStyle(dmog);\r\n  \r\n  return {\r\n    ...baseStyle,\r\n    marginLeft: '20px',\r\n    borderLeft: '3px solid #e0e0e0',\r\n    paddingLeft: '10px'\r\n  };\r\n}\r\n\r\n\r\nloadgroupChild(Children,groupId){\r\n let filter=Children.filter(a=>a.PrntDmogIDs.includes(groupId.toString()))\r\n return filter;\r\n}\r\n\r\nremoveGroupChild(Children){\r\nlet filter=Children.filter(a=>a.PrntDmogIDs==null || a.PrntDmogIDs==undefined)\r\n return filter; \r\n}\r\n\r\n\r\nprivate isGroupNameExists(name: string): boolean {\r\n    if (!this.bm?.childrenMap) {\r\n        return false;\r\n    }\r\n    \r\n    const normalizedName = name.trim().toLowerCase();\r\n    \r\n    return this.bm.selectedBMO.Children.some(dmogId => {\r\n        const dmog = this.bm.selectedBMO.childrenMap[dmogId];\r\n        if (!dmog?.Type || !dmog?.DisplayName) return false;\r\n        \r\n        const existingName = dmog.DisplayName.trim().toLowerCase();\r\n        return dmog.Type === 'CardGroup' && existingName === normalizedName;\r\n    });\r\n}\r\n\r\nprivate getUniqueGroupName(): string {\r\n    const baseName = \"Card Group\";\r\n    let count = 1;\r\n    const existingNames = new Set<string>();\r\n\r\n    if (this.bm?.Children && this.bm?.childrenMap) {\r\n        this.bm.Children.forEach(childId => {\r\n            const child = this.bm.childrenMap[childId];\r\n            this.collectCardGroupNamesRecursive(child, existingNames);\r\n        });\r\n    }\r\n\r\n    let groupName = `${baseName} ${count}`;\r\n    while (existingNames.has(groupName.toLowerCase())) {\r\n        count++;\r\n        groupName = `${baseName} ${count}`;\r\n    }\r\n\r\n    return groupName;\r\n}\r\n\r\nprivate collectCardGroupNamesRecursive(node: any, nameSet: Set<string>): void {\r\n    if (!node || typeof node !== 'object') return;\r\n\r\n    if (node.Type === 'CardGroup' && typeof node.DisplayName === 'string') {\r\n        nameSet.add(node.DisplayName.trim().toLowerCase());\r\n    }\r\n\r\n    if (Array.isArray(node.Children) && node.childrenMap) {\r\n        node.Children.forEach(childId => {\r\n            const childNode = node.childrenMap[childId];\r\n            this.collectCardGroupNamesRecursive(childNode, nameSet);\r\n        });\r\n    }\r\n}\r\n\r\nprivate async getObjectDetailsForGroup(parent: ObjectClass, data: Partial<ObjectClass> = {}) {\r\n    const groupName = this.getUniqueGroupName();\r\n    const uniqueGUID = `group${Date.now().toString(36)}`;\r\n    let payload: IDMOG = {\r\n        Parent: parent.id.toString(),\r\n        DMOGID: undefined,\r\n        id: uniqueGUID,\r\n        GUID: uniqueGUID,\r\n        LnkBmoDmogID: null,\r\n        Type: DMOGType.CardGroup,\r\n        Status: '1',\r\n        DefCollapsed: \"0\",\r\n        IsCollapsed: \"0\",\r\n        IsHidden: \"0\",\r\n        showHelp: \"0\",\r\n        Roles: [],\r\n        Share: [],\r\n        Children: [],\r\n        DisplayName: groupName,\r\n        LongDesc: DMOGType.CardGroup,\r\n        Name: uniqueGUID,\r\n        Version: parent.Version,\r\n        DMOGProps: undefined,\r\n        PrntDmogIDs: undefined\r\n    };\r\n        \r\n        if (parent instanceof classes.BMO) {\r\n            if(this){\r\n            payload.DMOGProps=JSON.stringify(this.panelMainContainer);\r\n            }\r\n            this.saveObjectDetails(parent, data, payload);\r\n            //\r\n            if(payload.GUID){\r\n                 this.newlyCreatedConatiner =  payload.GUID\r\n            }\r\n         } \r\n\r\n\r\n}\r\n  private saveBMDetails(payload: models.IBM) {\r\n    this.dmApi.saveBM(payload).subscribe((success) => {\r\n      if (success) {\r\n        this.bm.update(payload);\r\n      }\r\n    });\r\n  }\r\n  private deleteObject(obj: ObjectClass) {\r\n    const parent = obj.parent;\r\n\r\n        // Store obj index in case optimistic update fails\r\n        const idx = parent.Children.findIndex((id) => id === obj.id);\r\n\r\n        // Optimistic ui update\r\n        parent.removeChild(obj.id);\r\n\r\n        // Rollback optimistic update if something goes wrong\r\n        const rollback = () => parent.addChildAt(obj as any, idx);\r\n\r\n        this.dmApi.deleteObject(obj, this.bm).subscribe({\r\n            next: (success) => (!success ? rollback() : this.getBM()),\r\n            error: (_) => rollback(),\r\n        });\r\n    }\r\n    toggleDrawer() {\r\n        this.isDrawerOpen = !this.isDrawerOpen;\r\n    }\r\n    getSideNavModel(data) {\r\n        this.sideNavModel = data;\r\n        this.isDrawerOpen = true;\r\n        this.sideNavModelEmitter.emit(this.sideNavModel);\r\n        this.isDrawerOpenEmitter.emit(this.isDrawerOpen);\r\n    }\r\n    GetUpdatedDataForSidepanle(event) {\r\n        if (event) {\r\n            this.UpdatedData = event\r\n        }\r\n    }\r\n\r\n    // Add this method to handle drag movement\r\n    @HostListener('document:dragend', ['$event'])\r\n    onGlobalDragEnd(event: DragEvent) {\r\n        const scrollContainer = document.querySelector('.form-view');\r\n        if (scrollContainer) {\r\n            scrollContainer.classList.remove('scroll-top', 'scroll-bottom');\r\n        }\r\n        this.stopScrolling();\r\n    }\r\n    \r\n    onResizeDmog(width: string,selectedDmog : any) {\r\n    const newWidth =  Number(Math.max(0, Math.min(100, parseFloat(width ?? '0'))).toFixed(2));\r\n    if (!selectedDmog?.DMOGProps) return;\r\n  \r\n    this.panelMainContainer = JSON.parse(selectedDmog.DMOGProps) || {};\r\n    this.panelMainContainer.width = newWidth;\r\n  \r\n    const model = {\r\n      DMOGID: selectedDmog.DMOGID,\r\n      DMOGProps: JSON.stringify(this.panelMainContainer),\r\n    };\r\n  \r\n    this.apiService.postgateway('',`wfapibm/DataModel/SaveDmogProps`, model).subscribe(() => {\r\n      let model:SideNavModel={\r\n        type:'dmog',\r\n        dmog:selectedDmog,\r\n        data:this.panelMainContainer\r\n       };\r\n        this.sideNavModel=model;\r\n        this.sideNavModelEmitter.emit(this.sideNavModel);\r\n        this.isDrawerOpenEmitter.emit(this.isDrawerOpen);\r\n        this.UpdatedDataSideNavModel = model;\r\n        this.cdref.detectChanges();\r\n    });\r\n  }\r\n\r\n \r\n}\r\n","<div  class=\"form-view row\" (click)=\"formClick()\"  (drop)=\"OnDropMainPanel($event)\" (dropover)=\"OnDropOverMainPanel($event)\" (keydown)=\"onKeyDown($event)\">\r\n  <div style=\"width: 100%\"  >\r\n    <!-- [ngClass]=\"isDrawerOpen && sideNavModel ? 'container-new-open' : 'container-new-close'\" -->\r\n     <div>\r\n      <div>\r\n        <!-- <div class=\"open-side-menu-button\"  [ngClass]=\"isDrawerOpen ? 'drawer-open' : 'drawer-closed' \" *ngIf=\"sideNavModel\">\r\n          <div class=\"open-close-side-menu-button\" [class]=\"isDrawerOpen ? 'open-close-side-menu-arrow' : 'open-close-side-menu-arrow-black'\">\r\n            <img \r\n            [src]=\"isDrawerOpen ? '../../../../../assets/admin-assets/images/fi-rr-angle-small-left.png' : '../../../../../assets/admin-assets/images/fi-rr-angle-small-right-black.png'\" \r\n            alt=\"Toggle Drawer Icon\"\r\n            (click)=\"toggleDrawer()\"\r\n          />\r\n          </div>\r\n        </div> -->\r\n        <!-- <div class=\"side-nav stick-side-bar-nav\" [ngClass]=\"{ 'open': isDrawerOpen }\">\r\n        <div *ngIf=\"isDrawerOpen\">\r\n          <app-left-side-panel [sideNavModel] =\"sideNavModel\"  (UpdatedDataForSidepanle)=\"GetUpdatedDataForSidepanle($event)\" [selectedItemFromchild]=\"selectedItemFromchild\" ></app-left-side-panel>\r\n        </div>\r\n       </div> -->\r\n       \r\n    </div>  \r\n<!--New Logic-->\r\n<div >\r\n  <div \r\n  class=\"d-flex flex-wrap main-contanier\" \r\n  >\r\n  <ng-container *ngFor=\"let dmogId of this.customorderDmogItem; let i = index; trackBy: trackByDmogId\">\r\n    <ng-container *ngIf=\"bm.selectedBMO.childrenMap[dmogId] as dmog\">\r\n      <ng-container *ngIf=\"shouldShowAsMainCard(dmog)\">\r\n            <app-dmog-container  [resizableGrabWidth]=\"10\"  [isDrawerOpen]=\"isDrawerOpen\"  appResizable (widthChanged)=\"onResizeDmog($event,dmog)\"\r\n              [ngStyle]=\"setStyle(dmog)\"\r\n              [title]=\"dmog.DisplayName\"\r\n              [data]=\"dmog\"\r\n              [inputAllselectedBMO]=\"bm.selectedBMO.childrenMap\"\r\n              id=\"resizeableComponent_{{dmogId}}\"\r\n              [readonly]=\"readonly\"\r\n              [active]=\"dmog.id === bm.selectedDMOG?.id\"\r\n              [shared]=\"bm.selectedBMO.shared || dmog.shared\"\r\n              (tabRemove)=\"onTabRemove($event)\"\r\n              (tabEdit)=\"onTabEdit($event)\"\r\n              (OnBMOSave)=\"OnBMOSave($event)\"\r\n              (onDmoEdit)=\"onDmoEdit($event)\"\r\n              (onDmoDelete)=\"onDmoDelete($event)\"\r\n              (openConditionPopup)=\"openConditionPopup($event)\"\r\n              (openclonePopup)=\"onDmoClone($event)\"\r\n              (reloadParent)=\"reloadParent($event)\"\r\n              (dragDmoToAnotherdmog)=\"dragDmoToAnotherdmog($event)\"\r\n              (OnAddDmogAbove)=\"AddDmog($event)\"\r\n              (dropDmoToAnotherdmog)=\"dropDmoToAnotherdmog($event)\"\r\n              (sideNavModel)=\"getSideNavModel($event)\"\r\n              [UpdatedDataForContainer]=\"UpdatedData\"\r\n              (SelectdItem)=\"SelectdItem($event)\"\r\n              [newlyCreatedConatiner]=\"newlyCreatedConatiner\"\r\n              [SharedDmosList]=\"SharedDmosList\"\r\n              (OnAddDmogInGroup)=\"OnAddDmogInGroup($event)\"\r\n              [mode]=\"dmoMode\"\r\n             \r\n              [draggable]=\"!(isChildDragging || isInnerDragging || readonly || dmoMode === 'Published')\"\r\n              \r\n              (dragstart)=\"OnDragStarted($event,dmog)\"\r\n              (dragend)=\"dragEnded($event)\"\r\n              (dragover)=\"dragHover(dmogId,$event, dmog.GUID)\"\r\n              (drop)=\"handleContainerDrop($event)\"\r\n              class=\"Parent-card\"\r\n              [hasChildren]=\"getChildrenForCardGroup(dmog.DMOGID).length > 0\"\r\n              (mouseover)=\"onMouseOver($event)\"\r\n              (mouseout)=\"onMouseOut($event)\"\r\n              (DraggingItemsModel)=\"DraggingItemsModel($event)\"\r\n              [isDraggingStart]=\"isDraggingStart\"\r\n              (focus)=\"handleFocus($event)\"\r\n              (blur)=\"handleBlur($event)\"\r\n              [UpdatedDataSideNavModel]=\"UpdatedDataSideNavModel\"\r\n            >\r\n              <div class=\"d-flex flex-wrap card-group-inner-children\" *ngIf=\"getChildrenForCardGroup(dmog.DMOGID).length > 0\">\r\n                <ng-container *ngFor=\"let childDmogId of getChildrenForCardGroup(dmog.DMOGID); let j = index; trackBy: trackByDmogId\">\r\n                  <ng-container *ngIf=\"bm.selectedBMO.childrenMap[childDmogId] as childDmog\">\r\n                    <app-dmog-container  [resizableGrabWidth]=\"10\"  [isDrawerOpen]=\"isDrawerOpen\"  appResizable (widthChanged)=\"onResizeDmog($event,childDmog)\"\r\n                      [ngStyle]=\"setChildStyle(childDmog)\"\r\n                      [title]=\"childDmog.DisplayName\"\r\n                      [data]=\"childDmog\"\r\n                      [inputAllselectedBMO]=\"bm.selectedBMO.childrenMap\"\r\n                      id=\"resizeableComponent_{{childDmogId}}\"\r\n                      [readonly]=\"readonly\"\r\n                      [active]=\"childDmog.id === bm.selectedDMOG?.id\"\r\n                      [shared]=\"bm.selectedBMO.shared || childDmog.shared\"\r\n                      (tabRemove)=\"onTabRemove($event)\"\r\n                      (tabEdit)=\"onTabEdit($event)\"\r\n                      (OnBMOSave)=\"OnBMOSave($event)\"\r\n                      (onDmoEdit)=\"onDmoEdit($event)\"\r\n                      (onDmoDelete)=\"onDmoDelete($event)\"\r\n                      (openConditionPopup)=\"openConditionPopup($event)\"\r\n                      (openclonePopup)=\"onDmoClone($event)\"\r\n                      (reloadParent)=\"reloadParent($event)\"\r\n                      (dragDmoToAnotherdmog)=\"dragDmoToAnotherdmog($event)\"\r\n                      (OnAddDmogAbove)=\"AddDmog($event)\"\r\n                      (dropDmoToAnotherdmog)=\"dropDmoToAnotherdmog($event)\"\r\n                      (sideNavModel)=\"getSideNavModel($event)\"\r\n                      [UpdatedDataForContainer]=\"UpdatedData\"\r\n                      (SelectdItem)=\"SelectdItem($event)\"\r\n                      [newlyCreatedConatiner]=\"newlyCreatedConatiner\"\r\n                      [SharedDmosList]=\"SharedDmosList\"\r\n                      (OnAddDmogInGroup)=\"OnAddDmogInGroup($event)\"\r\n                      [mode]=\"dmoMode\"\r\n                      class=\"child-card\"\r\n                      draggable=\"true\"\r\n                      (dragstart)=\"OnChildDragStarted($event,childDmog)\"\r\n                      (dragend)=\"OnChildDragEnded($event)\"\r\n                      (dragover)=\"OnChilddragHover(childDmogId, $event, dmog.GUID)\"\r\n                      (mouseleave)=\"globalMouse($event)\"\r\n                      (drop)=\"handleChildDrop($event)\"\r\n                      [IsDraggedBeing]=\"IsDraggedBeing\"\r\n                      (mouseover)=\"onMouseOver($event)\"\r\n                       (mouseout)=\"onMouseOut($event)\"\r\n                       [isDraggingStart]=\"isDraggingStart\"\r\n                       (focus)=\"handleFocus($event)\"\r\n                      (blur)=\"handleBlur($event)\"\r\n                      [UpdatedDataSideNavModel]=\"UpdatedDataSideNavModel\"\r\n                    >\r\n                    </app-dmog-container>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </div>\r\n            </app-dmog-container>\r\n        \r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  \r\n<div class=\"mainWrap\" *ngIf=\"!readonly\">\r\n  <div class=\"d-flex flex-column align-items-center gap-3 mb-5 mt-5 add-section\" \r\n  (click)=\"AddDmog()\" \r\n  (contextmenu)=\"onRightClick($event)\"\r\n  (keydown)=\"handleKeyDown($event)\"\r\n  >\r\n      <div style=\"border: 1px dashed #A9A9A9;\"  class=\"d-flex flex-column p-4 min-vh-25 w-100\">\r\n          <div class=\"d-flex flex-column w-100 align-items-center gap-3\"    ngbTooltip=\"Add new card\">\r\n                   <p class=\"add-container-content\">Left-click to add a new card</p>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"mainWrap \" *ngIf=\"!readonly\">\r\n<div class=\"d-flex flex-column align-items-center gap-3 add-section\" \r\n(click)=\"AddDmogGroup()\" \r\n(keydown)=\"handleKeyDown($event)\"\r\n>\r\n    <div style=\"border: 1px dashed #A9A9A9;\"  class=\"d-flex flex-column p-4 min-vh-25 w-100\">\r\n        <div class=\"d-flex flex-column w-100 align-items-center gap-3\"    ngbTooltip=\"Add new card Group\">\r\n                 <p class=\"add-container-content\">Left-click to add Card Group</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n   \r\n\r\n      </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<ng-template #itemActions let-item=\"item\">\r\n  <ng-container *ngIf=\"!readonly\">\r\n    <a\r\n      class=\"item-action\"\r\n      style=\"color: rgb(187, 53, 53)\"\r\n      ngbTooltip=\"Remove\"\r\n      (click)=\"onDmoDelete(item)\"\r\n    >\r\n      <i class=\"fa fa-trash-alt\"></i>\r\n    </a>\r\n    <a class=\"item-action\" ngbTooltip=\"Clone\" (click)=\"onDmoClone(item)\">\r\n      <i class=\"fa fa-copy\"></i>\r\n    </a>\r\n  </ng-container>\r\n  <a\r\n    class=\"item-action\"\r\n    (click)=\"openConditionPopup(item)\"\r\n    ngbTooltip=\"Conditions\"\r\n  >\r\n    <i class=\"fa fa-cogs\"></i>\r\n  </a>\r\n  <a class=\"item-action\" (click)=\"onDmoEdit(item)\" ngbTooltip=\"Edit\">\r\n    <i class=\"fa fa-wrench\"></i>\r\n  </a>\r\n</ng-template>\r\n","import { DMOType, DMOUI } from \"../models1/dmo.model\";\r\n\r\n// export const DMO_TYPE_LIST: DMOType[] = ['button','selectboxes','colorpicker','countrylist','day','datetime','datetimezone','select',\r\n//     'email','datagrd','hidden','label','list','id','phoneNumber','progressbar','radio','roletype','roletypehidden',\r\n//     'textarea','textfield','file','uploadimage','url','usstatelist','usergroup','createdby','createddate','keyvaluesearchbox',\r\n//     'keyvaluedropdownlist','datetimebox','rangebox','autocompletesearchbox','staticdatebox','multiselect'];\r\n\r\nexport const DMOS: Record<DMOType, DMOUI> = {\r\n  jsonstaticgrid:{ name: 'JSON Static Grid', type: 'jsonstaticgrid', inputType: 'text', class: 'fa fa-th-list' },\r\n  button: { name: 'Button', type: 'button', inputType: 'button', class: 'fa fa-stop'},\r\n  selectboxes: { name: 'Checkbox List', type: 'selectboxes', inputType: 'checkbox', class: 'fa fa-plus-square', hasData: true, validate: {}, },\r\n  colorpicker: { name: 'Color Code Status', type: 'colorpicker', inputType: 'text', class: 'fas fa-palette', hasData: true, validate: {}, },\r\n  countrylist: { name: 'Country List', type: 'countrylist', inputType: 'text', class: 'fa fa-globe-americas', validate: {}, },\r\n  day: { name: 'Date Edit', type: 'day', inputType: 'date', class: 'fa fa-calendar-alt', validate: {}, },\r\n  datetime: { name: 'Date With Calendar', type: 'datetime', inputType: 'date', class: 'fa fa-calendar-plus', validate: {}, },\r\n  datetimezone: { name: 'Date Time Zone', type: 'datetimezone', inputType: 'date', class: 'fa fa-calendar', hasData: true, validate: {}, },\r\n  select: { name: 'Drop Down List', type: 'select', inputType: 'text', class: 'fa fa-th-list', hasData: true, validate: {}, },\r\n  email: { name: 'Email Edit Box', type: 'email', inputType: 'email', class: 'fa fa-at', validate: {minLength: true, maxLength: true}},\r\n  datagrd: { name: 'Grid View', type: 'datagrd', inputType: 'date', class: 'fa fa-th', hasData: true,  },\r\n  hidden: { name: 'Hidden', type: 'hidden', inputType: 'hidden', class: 'fa fa-user-secret',  },\r\n  label: { name: 'Label', type: 'label', inputType: 'text', class: 'fa fa-tag', },\r\n  list: { name: 'List Box', type: 'list', inputType: 'text', class: 'fa fa-th-list', hasData: true, validate: {}, },\r\n  id: { name: 'ID', type: 'id', inputType: 'text', class: 'fa fa-terminal', hasData: true, validate: {}, },\r\n  phoneNumber: { name: 'Phone Text Box', type: 'phoneNumber', inputType: 'tel', class: 'fa fa-phone-square', validate: {}, },\r\n  progressbar: { name: 'Progress Bar', type: 'progressbar', inputType: 'date', class: 'fas fa-spinner', },\r\n  radio: { name: 'Radio Button List', type: 'radio', inputType: 'radio', class: 'fa-solid fa-circle-dot', hasData: true, validate: {}, },\r\n  roletype: { name: 'Role Type', type: 'roletype', inputType: 'text', class: 'fas fa-user-lock', hasData: true, validate: {}, },\r\n  roletypehidden: { name: 'Role Type Hidden', type: 'roletypehidden', inputType: 'hidden', class: 'fa fa-user-secret', },\r\n  textarea: { name: 'Text Area', type: 'textarea', inputType: 'text', class: 'fa fa-font', hasData: true, validate: { maxLength: true}, },\r\n  textfield: { name: 'Text Box', type: 'textfield', inputType: 'text', class: 'fa fa-terminal', hasData: true, validate: { maxLength: true}, },\r\n  file: { name: 'Upload Document', type: 'file', inputType: 'text', class: 'fa fa-upload', hasData: true, validate: {}, },\r\n  uploadimage: { name: 'Upload Image', type: 'uploadimage', inputType: 'text', class: 'fa fa-file-upload', hasData: true, validate: {}, },\r\n  url: { name: 'Url Text Box', type: 'url', inputType: 'url', class: 'fa fa-link', hasData: true, validate: {minLength: true, maxLength: true}, },\r\n  usstatelist: { name: 'USA States List', type: 'usstatelist', inputType: 'text', class: 'fa fa-globe-americas', validate: {}, },\r\n  usergroup: { name: 'User Group', type: 'usergroup', inputType: 'text', class: 'fa fa-users', validate: {}, },\r\n  createdby: { name: 'Created By', type: 'createdby', inputType: 'text', class: 'fa fa-terminal', },\r\n  createddate: { name: 'Created Date', type: 'createddate', inputType: 'text', class: 'fa fa-terminal', },\r\n  keyvaluesearchbox: { name: 'KeyValue Search Box', type: 'keyvaluesearchbox', inputType: 'text', class: 'fa fa-th-list', hasData: true, validate: {}, },\r\n  keyvaluedropdownlist: { name: 'KeyValue DropdownList', type: 'keyvaluedropdownlist', inputType: 'text', class: 'fa fa-th-list', hasData: true, validate: {}, },\r\n  datetimebox: { name: 'DateTime Box', type: 'datetimebox', inputType: 'text', class: 'fa fa-calendar-alt', validate: {} },\r\n  rangebox: { name: 'RangeBox', type: 'rangebox', inputType: 'text', class: 'fa fa-terminal', hasData: true, validate: {minLength: true, maxLength: true}, },\r\n  autocompletesearchbox: { name: 'AutoComplete Search Box', type: 'autocompletesearchbox', inputType: 'text', class: 'fa fa-th-list', hasData: true, validate: {}, },\r\n  staticdatebox: { name: 'StaticDateBox', type: 'staticdatebox', inputType: 'date', class: 'fa fa-calendar-plus', validate: {}, },\r\n  multiselect: { name: 'MultiSelect DropDownList', type: 'multiselect', inputType: 'text', class: 'fa fa-th-list', hasData: true, validate: {}, },\r\n  manageddropdown:{ name: 'Managed DropDownList', type: 'manageddropdown', inputType: 'text', class: 'fa fa-th-list',  validate: {}, },\r\n  mediagallery : {name: 'Media Gallery', type: 'mediagallery', inputType: 'media', class: 'fa fa-play'},\r\n  notificationflag : { name: 'Notification Flag', type: 'notificationflag', inputType: 'media', class: 'fa fa-bell' ,  validate: {}},\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport const DMOSLayout= [\r\n { name: 'Panel', class: 'fa fa-th-list'},\r\n\r\n//  { name: 'Column', class: 'fa fa-columns'},\r\n];\r\n\r\nexport const BorderStyle= [\r\n  //{ name: 'default'},\r\n  { name: 'Solid'},\r\n  { name: 'Dotted'},\r\n  { name: 'Dashed'},\r\n  { name: 'Groove'},\r\n  { name: 'Inset'},\r\n  { name: 'Outset'},\r\n  { name: 'None'},\r\n\r\n ];\r\n","export interface IContextMenuModel {\r\n  menuText: string;\r\n   menuEvent: string;\r\n  menuIcon: string;\r\n}\r\n\r\nexport class ContextMenuPosition {\r\n  rightClickMenuPositionX: number;\r\n  rightClickMenuPositionY: number;\r\n  \r\n  // Boundary properties\r\n  left: number;\r\n  right: number;\r\n  top: number;\r\n  bottom: number;\r\n  width: number;\r\n  height: number;\r\n  \r\n  // Center position properties\r\n  centerX: number;\r\n  centerY: number;\r\n  \r\n  constructor() {\r\n    this.rightClickMenuPositionX = 0;\r\n    this.rightClickMenuPositionY = 0;\r\n    this.left = 0;\r\n    this.right = 0;\r\n    this.top = 0;\r\n    this.bottom = 0;\r\n    this.width = 0;\r\n    this.height = 0;\r\n    this.centerX = 0;\r\n    this.centerY = 0;\r\n  }\r\n}","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { DMOS } from '../../const1';\r\nimport { DMOType, PanelMainRow } from '../../models1';\r\nimport { ContextMenuPosition } from '../contextMenu/contextMenu.datatypes';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { NgIf, NgStyle, NgFor } from '@angular/common';\r\n@Component({\r\n    selector: 'app-sharedmo-controls',\r\n    templateUrl: './share-dmo.component.html',\r\n    styleUrls: ['./share-dmo.component.scss'],\r\n    animations: [\r\n        trigger('enterAnimation', [\r\n            transition(':enter', [\r\n                style({ transform: 'translateY(1%)', opacity: 0 }),\r\n                animate('200ms', style({ transform: 'translateY(0)', opacity: 1 }))\r\n            ]),\r\n            transition(':leave', [\r\n                style({ transform: 'translateY(0)', opacity: 1 }),\r\n                animate('200ms', style({ transform: 'translateY(1%)', opacity: 0 }))\r\n            ])\r\n        ])\r\n    ],\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        NgStyle,\r\n        NgFor,\r\n    ],\r\n})\r\nexport class ShareDmoComponent implements OnInit {\r\n  @Input()  shareDmoList = []\r\n  CopyshareDmoList = []\r\n  @Input() showContextMenuFor: any = null;\r\n  @Input() contextMenuPosition: ContextMenuPosition = null;\r\n  @Output() shareDmoSelect = new EventEmitter<any>();\r\n  contextMenuPositiontest = { x: '0px', y: '0px' };\r\n  public style: object = {};\r\n  @Input() showContextMenu: boolean = false;\r\n  @Input()rows: PanelMainRow[] = [];\r\n \r\n  type: DMOType;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.rows.length && this.shareDmoList && this.shareDmoList.length>0){\r\n      for (let index = 0; index < this.rows.length; index++) {\r\n        const r = this.rows[index];\r\n        for (let c = 0; c < r.columns.length; c++) {\r\n          const col = r.columns[c];\r\n          if(col.dmoguid!=null){\r\n            for (let inguid = 0; inguid < col.dmoguid.length; inguid++) {\r\n              const element = col.dmoguid[inguid];\r\n              if(element){\r\n              this.shareDmoList=this.shareDmoList.filter(a=>a.guid!=element.toLowerCase());\r\n              }\r\n            }\r\n          }\r\n            for (let cr = 0; cr < col.rows.length; cr++) {\r\n              const crc = col.rows[cr];\r\n              for (let icrc = 0; icrc < crc.columns.length; icrc++) {\r\n                const cColumn = crc.columns[icrc];\r\n                if(cColumn.dmoguid!=null){\r\n                  for (let inguid = 0; inguid < cColumn.dmoguid.length; inguid++) {\r\n                    const element = cColumn.dmoguid[inguid];\r\n                    if(element){\r\n                    this.shareDmoList=this.shareDmoList.filter(a=>a.guid!=element.toLowerCase());\r\n                    }\r\n                   }\r\n                   }\r\n              }\r\n            }\r\n          \r\n          \r\n        }\r\n        \r\n      }\r\n    }\r\n    this.CopyshareDmoList=this.shareDmoList;\r\n  }\r\n  DmoSelect(type){\r\n    this.showContextMenu=false;\r\n   this.shareDmoSelect.emit(type);\r\n  }\r\n  searchDmo(key){\r\n   \r\n    if(this.shareDmoList.length>0){\r\n      if(key && key!=\"\" && key.length>0 ){\r\n        this.shareDmoList=this.CopyshareDmoList.filter(a=>a.guid.toLowerCase().includes(key.toLowerCase())\r\n                                                ||a.dmoName.toLowerCase().includes(key.toLowerCase())\r\n                                                 )\r\n      }else{\r\n        this.shareDmoList=this.CopyshareDmoList;\r\n      }\r\n    }else{\r\n      this.shareDmoList=this.CopyshareDmoList\r\n    }\r\n  }\r\n  ngOnChanges() {\r\n    if (this.contextMenuPosition) {\r\n\r\n      this.contextMenuPositiontest.x = (this.contextMenuPosition.rightClickMenuPositionX -150)  + 'px';\r\n      this.contextMenuPositiontest.y = (this.contextMenuPosition.rightClickMenuPositionY-100) + 'px';\r\n     \r\n    }\r\n  }\r\n  @HostListener('window:scroll', [])\r\n  onWindowScroll() {\r\n    this.showContextMenu = false;  // Hide context menu on scroll\r\n  }\r\n\r\n\r\n}\r\n","<div *ngIf=\"showContextMenu\" class=\"contextMenuContainer\" \r\n[ngStyle]=\"style\" \r\n [@enterAnimation] [style.left]=\"contextMenuPositiontest.x\"\r\n    [style.top]=\"contextMenuPositiontest.y\">\r\n  \r\n<div class=\"formcomponents\">\r\n    <div class=\"list-group drag-list\" id=\"form-controls\">\r\n    <input type=\"text\" class=\"form-control sticky-search\"  style=\"font-size: 13px;\"  placeholder=\"Search...\" (input)=\"searchDmo($event.target.value)\">\r\n\r\n      <li class=\"list-group-item list-group-item-action list-group-item-success drag-list-item\"\r\n        \r\n        *ngFor=\"let item of shareDmoList\"  (click)=\"DmoSelect(item)\">\r\n        <i  style=\"margin-right: 5px\"></i>{{item.label}} ({{ item.dmoName }})\r\n      </li>\r\n    </div>\r\n  </div>\r\n</div>","\r\n\r\nimport { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild, Renderer2 } from '@angular/core';\r\nimport { ContextMenuPosition, IContextMenuModel } from './contextMenu.datatypes';\r\nimport { ServiceProviderService } from '../../services1/service-provider.service';\r\nimport { DMOS } from '../../const1';\r\nimport { NgIf, NgStyle, NgFor } from '@angular/common';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';  \r\n@Component({\r\n    selector: 'app-contextMenu',\r\n    templateUrl: './contextMenu.component.html',\r\n    styleUrls: ['./contextMenu.component.css'],\r\n    standalone: true,\r\n    imports: [NgIf, NgStyle, NgFor, NgbTooltip]\r\n})\r\n\r\nexport class ContextMenuComponent {\r\n  get isPositionValid(): boolean {\r\n    return !!(this.contextMenuPosition && (this.contextMenuPosition.centerX !== 0 || this.contextMenuPosition.centerY !== 0));\r\n  }\r\n  @Input() readonly:any;\r\n  @Input() object:  any= null;\r\n  @Input() showContextMenuFor: any = null;\r\n  @Input() contextMenuPosition: ContextMenuPosition = null;\r\n  @Input() type:  any= '';\r\n  @Input() selectedDivId:any;\r\n  contextMenuPositiontest = { x: '0px', y: '0px' };\r\n  public style: object = {};\r\n  @Output() contextMenuSelected = new EventEmitter < { option: string, showContextMenuFor: any,position:any }>();\r\n  readonly formsControls = Object.values(DMOS).sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n  contextMenuItems: Array<IContextMenuModel> = [];\r\n  showContextMenu: boolean = false;\r\n  @Input() isDmoExist : boolean = false;\r\n  constructor(private eRef: ElementRef,\r\n        private service:ServiceProviderService,\r\n        private cdref: ChangeDetectorRef ,\r\n        private readonly renderer: Renderer2\r\n      ) \r\n  {\r\n    this.contextMenuItems = [\r\n     \r\n    ];\r\n\r\n    service.getHideContextMenu().subscribe(result => {\r\n      if(!result.dmogId){\r\n        this.showContextMenu=result;\r\n      }\r\n     \r\n    });\r\n  \r\n\r\n  }\r\n \r\n  ngOnChanges() {\r\n    let rowhasColumn=false;\r\n    if(this.type=='dmo')\r\n     \r\n    this.style = {\r\n      // left: `${this.left}px`,\r\n      // top: `${this.top}px`,\r\n      width: `150px`,\r\n      display: `block`,\r\n     \r\n    };\r\n\r\n    if (this.showContextMenuFor) {\r\n      this.contextMenuItems=[];\r\n       if(this.showContextMenuFor.type ==='parentRow'){\r\n        let dmoExists=false;\r\n        \r\n        let rows=this.showContextMenuFor.r;\r\n        for (let index = 0; index < rows.columns.length; index++) {\r\n          rowhasColumn=true;\r\n          const rc = rows.columns[index];\r\n         \r\n            if(rc.dmoguid && rc.dmoguid.length>0 && this.isDmoExist){\r\n              dmoExists=true;\r\n              break;\r\n            }\r\n          else if(rc.rows){\r\n              for (let index = 0; index < rc.rows.length; index++) {\r\n                const element = rc.rows[index];\r\n                let existingColumn=element.columns.filter(a=>a.dmoguid.length>0)\r\n                if(existingColumn.length>0 && this.isDmoExist){\r\n                  dmoExists=true;\r\n                  break;\r\n                  }\r\n                \r\n              }\r\n            }\r\n        }\r\n        if(!dmoExists){\r\n          this.contextMenuItems=[ \r\n        //     {\r\n        //     menuText: 'Add Column',\r\n        //     menuIcon: 'fa fa-plus',\r\n        //     menuEvent:'AddColumn'\r\n        //   }]\r\n\r\n        // }else{\r\n        // this.contextMenuItems=[ \r\n        //   {\r\n        //   menuText: 'Add Column',\r\n        //   menuIcon: 'fa fa-plus',\r\n        //   menuEvent:'AddColumn'\r\n        // },\r\n        {\r\n          menuText: 'Remove Row',\r\n          menuIcon: 'fa fa-trash-alt',\r\n          menuEvent:'RemoveRow'\r\n\r\n        }\r\n        \r\n      ]\r\n      }\r\n      \r\n      \r\n       }\r\n       else if(this.showContextMenuFor.type ==='column'){\r\n        let dmoExists=false;\r\n        let columnOnly=false;\r\n        let hasChild=false;\r\n        let rows=this.showContextMenuFor.r;\r\n        let item={'rowIndex':this.showContextMenuFor.rowIndex,\"colIndex\":this.showContextMenuFor.colIndex}\r\n    \r\n        let rowIndex: number=item.rowIndex\r\n        let colIndex: number=item.colIndex;\r\n          let column= rows.columns[colIndex];\r\n          if (column) {\r\n            hasChild=column.rows.length>0;\r\n            if(column.dmoguid.length>0 && this.isDmoExist){\r\n              dmoExists=true;\r\n              columnOnly=column.rows.length==0;\r\n            }\r\n            for (let index = 0; index < column.rows.length; index++) {\r\n              const element = column.rows[index];\r\n              let existingColumn=element.columns.filter(a=>a.dmoguid.length>0)\r\n              if(existingColumn.length>0 && this.isDmoExist){\r\n                dmoExists=true;\r\n                break;\r\n                }\r\n               }\r\n              \r\n            }\r\n           \r\n           if(dmoExists){\r\n            if(columnOnly){\r\n              this.contextMenuItems=[ \r\n                {\r\n                menuText: 'Edit DMO',\r\n                menuIcon: 'fa fa-wrench',\r\n                 menuEvent:'EditDMO'\r\n              },\r\n              {\r\n                menuText: 'Conditions',\r\n                menuIcon: 'fa fa-cogs',\r\n                 menuEvent:'ConditionsDMO'\r\n              },\r\n              {\r\n                menuText: 'Clone',\r\n                menuIcon: 'fa fa-copy',\r\n                 menuEvent:'CloneDMO'\r\n              },\r\n              {\r\n                menuText: 'Unshare DMO',\r\n                menuIcon: 'fas fa-unlink',\r\n                menuEvent:'DeleteDMO'\r\n      \r\n              }\r\n            ]\r\n\r\n            }\r\n            else{\r\n\r\n          //   this.contextMenuItems=[ {\r\n          //     menuText: 'Add Row',\r\n          //     menuIcon: 'fa fa-plus',\r\n          //     menuEvent:'AddRow'\r\n          //   }\r\n          // ]\r\n        }\r\n           }else{\r\n            if(!hasChild)\r\n              {\r\n        this.contextMenuItems=[ \r\n        //   {\r\n        //   menuText: 'Add Row',\r\n        //   menuIcon: 'fa fa-plus',\r\n        //   menuEvent:'AddRow'\r\n        // },\r\n        {\r\n          menuText: 'Remove Column',\r\n          menuIcon: 'fa fa-trash-alt',\r\n           menuEvent:'RemoveColumn'\r\n        },\r\n        // {\r\n        //   menuText: 'DMO',\r\n        //   menuIcon: 'fa fa-users',\r\n        //   menuEvent:'AddDMO'\r\n\r\n        // },{\r\n        //   menuText: 'share DMO',\r\n        //   menuIcon: 'fa fa-share',\r\n        //   menuEvent:'shareDMO'\r\n        // }\r\n      ]\r\n    }\r\n    }\r\n       }\r\n       else if(this.showContextMenuFor.type ==='columnRow'){\r\n        let dmoExists=false;\r\n        let rows=this.showContextMenuFor.r;\r\n        let item={'rowIndex':this.showContextMenuFor.rowIndex,\"colIndex\":this.showContextMenuFor.colIndex,'ColumnRowIndex':this.showContextMenuFor.colRowIndex,\"colRowcolumnIndex\":this.showContextMenuFor.colRowcolumnIndex}\r\n    \r\n        let rowIndex: number=item.rowIndex\r\n        let colIndex: number=item.colIndex;\r\n          let column= rows.columns[colIndex];\r\n          if (column) {\r\n            const existingColumn = column?.rows?.[item.ColumnRowIndex];\r\n           const dmoGuid = existingColumn?.columns?.[item.colRowcolumnIndex]?.dmoguid;\r\n            if (dmoGuid?.length > 0 && this.isDmoExist) {\r\n              dmoExists = true;\r\n            }\r\n          }\r\n         if(dmoExists){\r\n          this.contextMenuItems=[ \r\n  \r\n          {\r\n            menuText: 'Edit DMO',\r\n            menuIcon: 'fa fa-wrench',\r\n             menuEvent:'EditDMO'\r\n          },\r\n          {\r\n            menuText: 'Conditions',\r\n            menuIcon: 'fa fa-cogs',\r\n             menuEvent:'ConditionsDMO'\r\n          },\r\n          {\r\n            menuText: 'Clone',\r\n            menuIcon: 'fa fa-copy',\r\n             menuEvent:'CloneDMO'\r\n          },\r\n          {\r\n            menuText: 'Unshare DMO',\r\n            menuIcon: 'fas fa-unlink',\r\n            menuEvent:'DeleteDMO'\r\n          }\r\n        ]\r\n         }else{\r\n          this.contextMenuItems=[ \r\n          //   {\r\n          //   menuText: 'Add Column',\r\n          //   menuIcon: 'fa fa-plus',\r\n          //   menuEvent:'AddColumn'\r\n          // },\r\n  \r\n          {\r\n            menuText: 'Remove Column',\r\n            menuIcon: 'fa fa-trash-alt',\r\n             menuEvent:'RemoveColumn'\r\n          },\r\n          // {\r\n          //   menuText: 'DMO',\r\n          //   menuIcon: 'fa fa-users',\r\n          //   menuEvent:'AddDMO'\r\n          // },\r\n          // {\r\n          //   menuText: 'share DMO',\r\n          //   menuIcon: 'fa fa-share',\r\n          //   menuEvent:'shareDMO'\r\n          // }\r\n        ]\r\n         }\r\n      \r\n       }\r\n       else if(this.showContextMenuFor.type ==='NestedcolumnRow'){\r\n        let dmoExists=false;\r\n        let rows=this.showContextMenuFor.r;\r\n        let item={'rowIndex':this.showContextMenuFor.rowIndex,\"colIndex\":this.showContextMenuFor.colIndex,'ColumnRowIndex':this.showContextMenuFor.colRowIndex}\r\n    \r\n        let rowIndex: number=item.rowIndex\r\n        let colIndex: number=item.colIndex;\r\n          let column= rows.columns[colIndex];\r\n          if (column) {\r\n            const existingColumn = column?.rows?.[item.ColumnRowIndex];\r\n            if (existingColumn?.columns?.length > 0 && this.isDmoExist) {\r\n              dmoExists = true;\r\n            }\r\n        }\r\n         if(!dmoExists){\r\n          this.contextMenuItems=[ \r\n            {\r\n              menuText: 'Remove Row',\r\n              menuIcon: 'fa fa-trash-alt',\r\n              menuEvent:'RemoveRow'\r\n    \r\n            }\r\n        ]\r\n      }\r\n      \r\n       }\r\n\r\n       \r\n    }\r\n\r\n    if (this.contextMenuPosition) {\r\n      if (!this.contextMenuPosition.centerX || !this.contextMenuPosition.centerY) {\r\n        if (this.contextMenuPosition.left !== undefined && \r\n            this.contextMenuPosition.width !== undefined) {\r\n          this.contextMenuPosition.centerX = this.contextMenuPosition.left + \r\n                                            (this.contextMenuPosition.width / 2);\r\n        } else { \r\n          this.contextMenuPosition.centerX = this.contextMenuPosition.rightClickMenuPositionX;\r\n        }\r\n        \r\n        if (this.contextMenuPosition.top !== undefined && \r\n            this.contextMenuPosition.height !== undefined) {\r\n          this.contextMenuPosition.centerY = this.contextMenuPosition.top + \r\n                                            (this.contextMenuPosition.height / 2);\r\n        } else {\r\n          this.contextMenuPosition.centerY = this.contextMenuPosition.rightClickMenuPositionY;\r\n        }\r\n        this.showContextMenu = true;\r\n      }\r\n      if (rowhasColumn) {\r\n        const targetDiv = document.getElementById(this.selectedDivId);\r\n        if (targetDiv) {\r\n          const divWidth = targetDiv.offsetWidth; \r\n          const rect = targetDiv.getBoundingClientRect();\r\n          const clickX = this.contextMenuPosition.rightClickMenuPositionX;\r\n          this.contextMenuPosition.centerX = clickX + divWidth / 2;\r\n          this.contextMenuPosition.centerY = rect.top;\r\n          this.showContextMenu = true;\r\n        }\r\n      }\r\n      \r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      const container = document.querySelector('.form-view'); \r\n      if (container) {\r\n        this.renderer.listen(container, 'scroll', () => {\r\n          this.showContextMenu = false; \r\n        });\r\n      } else {\r\n        console.warn('Scrollable container not found!');\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  //clickout(event) {\r\n    // if (event.target.classList.contains('menu-link')) {\r\n    //   this.showContextMenu = false;\r\n    // }\r\n    // if (event.target.classList.contains('holiday')) {\r\n    //   this.showContextMenu = event.target.closest('.shiftDay').contains(this.eRef.nativeElement)\r\n    // }\r\n    // else if (!event.target.classList.contains(\"shiftLabel\"))\r\n    // {\r\n    //   this.showContextMenu = event.target.contains(this.eRef.nativeElement)\r\n    // }\r\n\r\n // }\r\n\r\n  onContextMenuClick(event, data: string): any {\r\n    this.contextMenuSelected.emit({ option: data, showContextMenuFor: this.showContextMenuFor,position:this.contextMenuPositiontest });\r\n    setTimeout(() => {\r\n      this.showContextMenu = false;\r\n      this.service.setSidebarclose(true);\r\n    }, 250);\r\n  }\r\n  @HostListener('window:scroll', [])\r\n  onWindowScroll() {\r\n    this.showContextMenu = false; \r\n  }\r\n  @HostListener('document:click', ['$event'])\r\n  clickout(event: Event) {\r\n    this.showContextMenu = false; \r\n  }\r\n  \r\n}\r\n","<div *ngIf=\"showContextMenu\" \r\n     class=\"contextMenuContainer\" \r\n     [ngStyle]=\"style\" \r\n     [class.context-menu-visible]=\"showContextMenu\"\r\n     (document:click)=\"clickout($event)\" \r\n     [style.left.px]=\"contextMenuPosition.centerX\"\r\n     [style.top.px]=\"contextMenuPosition.centerY\"\r\n     [style.transform]=\"'translate(-50%, -100%)'\"\r\n\r\n     >\r\n  <ng-container>\r\n    <div class=\"menu-link click_input item-action\"\r\n         *ngFor=\"let menuItem of contextMenuItems; index as i\"\r\n         (click)=\"onContextMenuClick($event, menuItem.menuEvent)\">\r\n      <i class=\"{{menuItem.menuIcon}} menuIcon\" ngbTooltip=\"{{menuItem.menuText}}\"></i>\r\n      <!-- {{ menuItem.menuText }} -->\r\n    </div>\r\n  </ng-container>\r\n</div>","export const skipIfDisabled = (target: any, propertyKey: string, descriptor: PropertyDescriptor)=> {\r\n    const originalMethod = descriptor.value;\r\n    \r\n    descriptor.value = function(...args: any[]) {\r\n      if (!this.columnResizeEnabled) return;\r\n      return originalMethod.apply(this, args);\r\n    };\r\n    \r\n    return descriptor;\r\n  }","import { AfterViewInit, Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\nimport { PanelMainRow } from '../models1';\r\nimport { Subject } from 'rxjs';\r\nimport { skipIfDisabled } from '../decorators/skipIfDisabled.decorator';\r\n\r\n@Directive({\r\n    selector: '[columnResize]',\r\n    exportAs: 'columnResize',\r\n    standalone: true\r\n})\r\nexport class ResizeColumnsDirective implements AfterViewInit {\r\n    @Input() rows: PanelMainRow[];\r\n    @Input() rowIndex: number = -1;\r\n    @Input() columnResizeEnabled = true;\r\n    @Output() onResize = new EventEmitter<{\r\n        columns: any,\r\n        rowIndex: number\r\n    }>();\r\n    \r\n    isResizing = false;\r\n    currentBoxIndex = 0;\r\n    startX = 0;\r\n    startWidth = 0;\r\n    private childDivs!: HTMLElement[];\r\n    private animationFrameId: number | null = null;\r\n    private containerWidth: number = 0;\r\n\r\n    constructor(private readonly el: ElementRef) {}\r\n\r\n    @skipIfDisabled\r\n    ngAfterViewInit(): void {\r\n        this.childDivs = this.el.nativeElement.querySelectorAll('.box');\r\n        if (this.childDivs.length > 0) {\r\n            this.childDivs.forEach((childDiv, index) => {\r\n                childDiv.addEventListener('mousedown', (event) => this.mousedownHandler(event, index));\r\n            });\r\n        }\r\n        this.containerWidth = this.el.nativeElement.offsetWidth;\r\n    }\r\n\r\n    @skipIfDisabled\r\n    stopResize() {\r\n        if (this.animationFrameId) {\r\n            cancelAnimationFrame(this.animationFrameId);\r\n            this.animationFrameId = null;\r\n        }\r\n        this.isResizing = false;\r\n    }\r\n\r\n    mousedownHandler(event: MouseEvent, colIndex: number) {\r\n        const isResizeHandle = (event.target as HTMLElement)?.classList.contains('resizer');\r\n        if (isResizeHandle) {\r\n            this.isResizing = true;\r\n            this.currentBoxIndex = colIndex;\r\n            this.startX = event.clientX;\r\n            this.startWidth = this.rows[this.rowIndex].columns[colIndex]?.width;\r\n            this.containerWidth = this.el.nativeElement.offsetWidth;\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    @HostListener('mouseleave', ['$event'])\r\n    onMouseLeave(event: MouseEvent) {\r\n        this.stopResize();\r\n    }\r\n\r\n    @HostListener('mouseup', ['$event'])\r\n    onMouseUp(event: MouseEvent) {\r\n        if (this.isResizing) {\r\n            this.onResize.emit({\r\n                columns: this.rows[this.rowIndex].columns,\r\n                rowIndex: this.rowIndex\r\n            });\r\n        }\r\n        this.stopResize();\r\n    }\r\n\r\n    @skipIfDisabled\r\n    @HostListener('mousemove', ['$event'])\r\n    onMouseMove(event: MouseEvent) {\r\n        if (!this.isResizing) return;\r\n\r\n        if (this.animationFrameId) {\r\n            cancelAnimationFrame(this.animationFrameId);\r\n        }\r\n\r\n        this.animationFrameId = requestAnimationFrame(() => {\r\n            const minWidth = 10;\r\n            const dx = event.clientX - this.startX;\r\n            \r\n            const newWidthPx = (this.startWidth * this.containerWidth / 100) + dx;\r\n            const newWidth = (newWidthPx / this.containerWidth) * 100;\r\n\r\n            let rightBoxesWidth = 0;\r\n            for (let i = this.currentBoxIndex + 1; i < this.rows[this.rowIndex].columns.length; i++) {\r\n                rightBoxesWidth += this.rows[this.rowIndex].columns[i]?.width;\r\n            }\r\n\r\n            const maxWidth = 100 -\r\n                this.rows[this.rowIndex].columns.slice(0, this.currentBoxIndex).reduce((sum, box) => sum + box.width, 0) -\r\n                (this.rows[this.rowIndex].columns.length - this.currentBoxIndex - 1) * 10;\r\n\r\n            const constrainedWidth = Math.max(\r\n                minWidth,\r\n                Math.min(newWidth, maxWidth)\r\n            );\r\n\r\n            const delta = constrainedWidth - this.rows[this.rowIndex].columns[this.currentBoxIndex]?.width;\r\n\r\n            this.rows[this.rowIndex].columns[this.currentBoxIndex] ??= {};\r\n            this.rows[this.rowIndex].columns[this.currentBoxIndex].width = constrainedWidth;\r\n\r\n            if (rightBoxesWidth > 0) {\r\n                for (let i = this.currentBoxIndex + 1; i < this.rows[this.rowIndex].columns.length; i++) {\r\n                    this.rows[this.rowIndex].columns[i] ??= {};\r\n                    const ratio = this.rows[this.rowIndex].columns[i]?.width / rightBoxesWidth;\r\n                    this.rows[this.rowIndex].columns[i].width = Math.max(minWidth, this.rows[this.rowIndex].columns[i]?.width - (delta * ratio));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","import * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Optional, Input, Directive, QueryList, EventEmitter, inject, Injector, afterNextRender, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, ChangeDetectorRef, Self, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, merge, Subscription, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, takeUntil, filter, take, delay } from 'rxjs/operators';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3 from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [[[\"mat-icon\"], [\"\", \"matMenuItemIcon\", \"\"]], \"*\"];\nconst _c2 = [\"mat-icon, [matMenuItemIcon]\", \"*\"];\nfunction MatMenuItem_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"polygon\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closed.emit(\"click\"));\n    })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationStart($event));\n    })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationDone($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1._classList);\n    i0.ɵɵproperty(\"id\", ctx_r1.panelId)(\"@transformMenu\", ctx_r1._panelAnimationState);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1.ariaLabelledby || null)(\"aria-describedby\", ctx_r1.ariaDescribedby || null);\n  }\n}\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * Single item inside a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem {\n  constructor(_elementRef, _document, _focusMonitor, _parentMenu, _changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._document = _document;\n    this._focusMonitor = _focusMonitor;\n    this._parentMenu = _parentMenu;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** ARIA role for the menu item. */\n    this.role = 'menuitem';\n    /** Whether the menu item is disabled. */\n    this.disabled = false;\n    /** Whether ripples are disabled on the menu item. */\n    this.disableRipple = false;\n    /** Stream that emits when the menu item is hovered. */\n    this._hovered = new Subject();\n    /** Stream that emits when the menu item is focused. */\n    this._focused = new Subject();\n    /** Whether the menu item is highlighted. */\n    this._highlighted = false;\n    /** Whether the menu item acts as a trigger for a sub-menu. */\n    this._triggersSubmenu = false;\n    _parentMenu?.addItem?.(this);\n  }\n  /** Focuses the menu item. */\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    } else {\n      this._getHostElement().focus(options);\n    }\n    this._focused.next(this);\n  }\n  ngAfterViewInit() {\n    if (this._focusMonitor) {\n      // Start monitoring the element, so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      this._focusMonitor.monitor(this._elementRef, false);\n    }\n  }\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n    this._hovered.complete();\n    this._focused.complete();\n  }\n  /** Used to set the `tabindex`. */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Returns the host DOM element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n  /** Prevents the default element actions if it is disabled. */\n  _checkDisabled(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  /** Emits to the hover stream. */\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    const clone = this._elementRef.nativeElement.cloneNode(true);\n    const icons = clone.querySelectorAll('mat-icon, .material-icons');\n    // Strip away icons, so they don't show up in the text.\n    for (let i = 0; i < icons.length; i++) {\n      icons[i].remove();\n    }\n    return clone.textContent?.trim() || '';\n  }\n  _setHighlighted(isHighlighted) {\n    // We need to mark this for check for the case where the content is coming from a\n    // `matMenuContent` whose change detection tree is at the declaration position,\n    // not the insertion position. See #23175.\n    // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n    this._highlighted = isHighlighted;\n    this._changeDetectorRef?.markForCheck();\n  }\n  _setTriggersSubmenu(triggersSubmenu) {\n    // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n    this._triggersSubmenu = triggersSubmenu;\n    this._changeDetectorRef?.markForCheck();\n  }\n  _hasFocus() {\n    return this._document && this._document.activeElement === this._getHostElement();\n  }\n  static {\n    this.ɵfac = function MatMenuItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenuItem)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatMenuItem,\n      selectors: [[\"\", \"mat-menu-item\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-menu-item\", \"mat-mdc-focus-indicator\"],\n      hostVars: 8,\n      hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n            return ctx._checkDisabled($event);\n          })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n            return ctx._handleMouseEnter();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled)(\"disabled\", ctx.disabled || null);\n          i0.ɵɵclassProp(\"mat-mdc-menu-item-highlighted\", ctx._highlighted)(\"mat-mdc-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n        }\n      },\n      inputs: {\n        role: \"role\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n      },\n      exportAs: [\"matMenuItem\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      ngContentSelectors: _c2,\n      decls: 5,\n      vars: 3,\n      consts: [[1, \"mat-mdc-menu-item-text\"], [\"matRipple\", \"\", 1, \"mat-mdc-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"], [\"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-menu-submenu-icon\"], [\"points\", \"0,0 5,5 0,10\"]],\n      template: function MatMenuItem_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵprojection(0);\n          i0.ɵɵelementStart(1, \"span\", 0);\n          i0.ɵɵprojection(2, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"div\", 1);\n          i0.ɵɵtemplate(4, MatMenuItem_Conditional_4_Template, 2, 0, \":svg:svg\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._triggersSubmenu ? 4 : -1);\n        }\n      },\n      dependencies: [MatRipple],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuItem, [{\n    type: Component,\n    args: [{\n      selector: '[mat-menu-item]',\n      exportAs: 'matMenuItem',\n      host: {\n        '[attr.role]': 'role',\n        'class': 'mat-mdc-menu-item mat-mdc-focus-indicator',\n        '[class.mat-mdc-menu-item-highlighted]': '_highlighted',\n        '[class.mat-mdc-menu-item-submenu-trigger]': '_triggersSubmenu',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)',\n        '(mouseenter)': '_handleMouseEnter()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [MatRipple],\n      template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n@if (_triggersSubmenu) {\\n     <svg\\n       class=\\\"mat-mdc-menu-submenu-icon\\\"\\n       viewBox=\\\"0 0 5 10\\\"\\n       focusable=\\\"false\\\"\\n       aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n}\\n\"\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i1.FocusMonitor\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_MENU_PANEL]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    role: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n  throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` + `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/** Menu content that will be rendered lazily once the menu is opened. */\nclass MatMenuContent {\n  constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n    this._template = _template;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._document = _document;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** Emits when the menu content has been attached. */\n    this._attached = new Subject();\n  }\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n  attach(context = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n    this.detach();\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n    }\n    const element = this._template.elementRef.nativeElement;\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode.insertBefore(this._outlet.outletElement, element);\n    // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n    // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n    // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n    // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n    // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n    // @breaking-change 9.0.0 Make change detector ref required\n    this._changeDetectorRef?.markForCheck();\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n  /**\n   * Detaches the content.\n   * @docs-private\n   */\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n  static {\n    this.ɵfac = function MatMenuContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenuContent)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ApplicationRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatMenuContent,\n      selectors: [[\"ng-template\", \"matMenuContent\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_MENU_CONTENT,\n        useExisting: MatMenuContent\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matMenuContent]',\n      providers: [{\n        provide: MAT_MENU_CONTENT,\n        useExisting: MatMenuContent\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }, {\n    type: i0.ComponentFactoryResolver\n  }, {\n    type: i0.ApplicationRef\n  }, {\n    type: i0.Injector\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], null);\n})();\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [state('void', style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    opacity: 1,\n    transform: 'scale(1)'\n  }))), transition('* => void', animate('100ms 25ms linear', style({\n    opacity: 0\n  })))]),\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [\n  // TODO(crisbeto): this is inside the `transformMenu`\n  // now. Remove next time we do breaking changes.\n  state('showing', style({\n    opacity: 1\n  })), transition('void => *', [style({\n    opacity: 0\n  }), animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\nlet menuPanelUid = 0;\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\nclass MatMenu {\n  /** Position of the menu in the X axis. */\n  get xPosition() {\n    return this._xPosition;\n  }\n  set xPosition(value) {\n    if (value !== 'before' && value !== 'after' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n  /** Position of the menu in the Y axis. */\n  get yPosition() {\n    return this._yPosition;\n  }\n  set yPosition(value) {\n    if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  set panelClass(classes) {\n    const previousPanelClass = this._previousPanelClass;\n    const newClassList = {\n      ...this._classList\n    };\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach(className => {\n        newClassList[className] = false;\n      });\n    }\n    this._previousPanelClass = classes;\n    if (classes && classes.length) {\n      classes.split(' ').forEach(className => {\n        newClassList[className] = true;\n      });\n      this._elementRef.nativeElement.className = '';\n    }\n    this._classList = newClassList;\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @breaking-change 8.0.0\n   */\n  get classList() {\n    return this.panelClass;\n  }\n  set classList(classes) {\n    this.panelClass = classes;\n  }\n  constructor(_elementRef,\n  /**\n   * @deprecated Unused param, will be removed.\n   * @breaking-change 19.0.0\n   */\n  _unusedNgZone, defaultOptions,\n  // @breaking-change 15.0.0 `_changeDetectorRef` to become a required parameter.\n  _changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elevationPrefix = 'mat-elevation-z';\n    this._baseElevation = null;\n    /** Only the direct descendant menu items. */\n    this._directDescendantItems = new QueryList();\n    /** Classes to be applied to the menu panel. */\n    this._classList = {};\n    /** Current state of the panel animation. */\n    this._panelAnimationState = 'void';\n    /** Emits whenever an animation on the menu completes. */\n    this._animationDone = new Subject();\n    /** Event emitted when the menu is closed. */\n    this.closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * @breaking-change 8.0.0\n     */\n    this.close = this.closed;\n    this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    this._injector = inject(Injector);\n    this.overlayPanelClass = defaultOptions.overlayPanelClass || '';\n    this._xPosition = defaultOptions.xPosition;\n    this._yPosition = defaultOptions.yPosition;\n    this.backdropClass = defaultOptions.backdropClass;\n    this.overlapTrigger = defaultOptions.overlapTrigger;\n    this.hasBackdrop = defaultOptions.hasBackdrop;\n  }\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n  ngAfterContentInit() {\n    this._updateDirectDescendants();\n    this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd();\n    this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n    // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n    // is internal and we know that it gets completed on destroy.\n    this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    this._directDescendantItems.changes.subscribe(itemsList => {\n      // Move focus to another item, if the active item is removed from the list.\n      // We need to debounce the callback, because multiple items might be removed\n      // in quick succession.\n      const manager = this._keyManager;\n      if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n        const items = itemsList.toArray();\n        const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n        if (items[index] && !items[index].disabled) {\n          manager.setActiveItem(index);\n        } else {\n          manager.setNextItemActive();\n        }\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._directDescendantItems.destroy();\n    this.closed.complete();\n    this._firstItemFocusRef?.destroy();\n  }\n  /** Stream that emits whenever the hovered menu item changes. */\n  _hovered() {\n    // Coerce the `changes` property because Angular types it as `Observable<any>`\n    const itemChanges = this._directDescendantItems.changes;\n    return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._hovered))));\n  }\n  /*\n   * Registers a menu item with the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  addItem(_item) {}\n  /**\n   * Removes an item from the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  removeItem(_item) {}\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n    switch (keyCode) {\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.closed.emit('keydown');\n        }\n        break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n        break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n        manager.onKeydown(event);\n        return;\n    }\n    // Don't allow the event to propagate if we've already handled it, or it may\n    // end up reaching other overlays that were opened earlier (see #22694).\n    event.stopPropagation();\n  }\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n  focusFirstItem(origin = 'program') {\n    // Wait for `afterNextRender` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n    this._firstItemFocusRef?.destroy();\n    this._firstItemFocusRef = afterNextRender(() => {\n      let menuPanel = null;\n      if (this._directDescendantItems.length) {\n        // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n        // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n        // because the panel is inside an `ng-template`. We work around it by starting from one of\n        // the items and walking up the DOM.\n        menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n      }\n      // If an item in the menuPanel is already focused, avoid overriding the focus.\n      if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && menuPanel) {\n          menuPanel.focus();\n        }\n      }\n    }, {\n      injector: this._injector\n    });\n  }\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n  /**\n   * Sets the menu panel elevation.\n   * @param depth Number of parent menus that come before the menu.\n   */\n  setElevation(depth) {\n    // The base elevation depends on which version of the spec\n    // we're running so we have to resolve it at runtime.\n    if (this._baseElevation === null) {\n      const styles = typeof getComputedStyle === 'function' ? getComputedStyle(this._elementRef.nativeElement) : null;\n      const value = styles?.getPropertyValue('--mat-menu-base-elevation-level') || '8';\n      this._baseElevation = parseInt(value);\n    }\n    // The elevation starts at the base and increases by one for each level.\n    // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n    const elevation = Math.min(this._baseElevation + depth, 24);\n    const newElevation = `${this._elevationPrefix}${elevation}`;\n    const customElevation = Object.keys(this._classList).find(className => {\n      return className.startsWith(this._elevationPrefix);\n    });\n    if (!customElevation || customElevation === this._previousElevation) {\n      const newClassList = {\n        ...this._classList\n      };\n      if (this._previousElevation) {\n        newClassList[this._previousElevation] = false;\n      }\n      newClassList[newElevation] = true;\n      this._previousElevation = newElevation;\n      this._classList = newClassList;\n    }\n  }\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * @param posX Position of the menu along the x axis.\n   * @param posY Position of the menu along the y axis.\n   * @docs-private\n   */\n  setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n    this._classList = {\n      ...this._classList,\n      ['mat-menu-before']: posX === 'before',\n      ['mat-menu-after']: posX === 'after',\n      ['mat-menu-above']: posY === 'above',\n      ['mat-menu-below']: posY === 'below'\n    };\n    // @breaking-change 15.0.0 Remove null check for `_changeDetectorRef`.\n    this._changeDetectorRef?.markForCheck();\n  }\n  /** Starts the enter animation. */\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n  /** Resets the panel animation to its initial state. */\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone(event) {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n  }\n  _onAnimationStart(event) {\n    this._isAnimating = true;\n    // Scroll the content element to the top as soon as the animation starts. This is necessary,\n    // because we move focus to the first item while it's still being animated, which can throw\n    // the browser off when it determines the scroll position. Alternatively we can move focus\n    // when the animation is done, however moving focus asynchronously will interrupt screen\n    // readers which are in the process of reading out the menu already. We take the `element`\n    // from the `event` since we can't use a `ViewChild` to access the pane.\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n  /**\n   * Sets up a stream that will keep track of any newly-added menu items and will update the list\n   * of direct descendants. We collect the descendants this way, because `_allItems` can include\n   * items that are part of child menus, and using a custom way of registering items is unreliable\n   * when it comes to maintaining the item order.\n   */\n  _updateDirectDescendants() {\n    this._allItems.changes.pipe(startWith(this._allItems)).subscribe(items => {\n      this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n      this._directDescendantItems.notifyOnChanges();\n    });\n  }\n  static {\n    this.ɵfac = function MatMenu_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenu)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatMenu,\n      selectors: [[\"mat-menu\"]],\n      contentQueries: function MatMenu_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allItems = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n        }\n      },\n      viewQuery: function MatMenu_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n        }\n      },\n      hostVars: 3,\n      hostBindings: function MatMenu_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        }\n      },\n      inputs: {\n        backdropClass: \"backdropClass\",\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n        xPosition: \"xPosition\",\n        yPosition: \"yPosition\",\n        overlapTrigger: [2, \"overlapTrigger\", \"overlapTrigger\", booleanAttribute],\n        hasBackdrop: [2, \"hasBackdrop\", \"hasBackdrop\", value => value == null ? null : booleanAttribute(value)],\n        panelClass: [0, \"class\", \"panelClass\"],\n        classList: \"classList\"\n      },\n      outputs: {\n        closed: \"closed\",\n        close: \"close\"\n      },\n      exportAs: [\"matMenu\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c3,\n      decls: 1,\n      vars: 0,\n      consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-mdc-menu-panel\", \"mat-mdc-elevation-specific\", 3, \"keydown\", \"click\", \"id\"], [1, \"mat-mdc-menu-content\"]],\n      template: function MatMenu_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 7, \"ng-template\");\n        }\n      },\n      styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-app-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-app-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;box-sizing:border-box;outline:0;border-radius:var(--mat-menu-container-shape, var(--mat-app-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-app-surface-container));will-change:transform,opacity}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.mat-mdc-menu-panel.ng-animating:has(.mat-mdc-menu-content:empty){display:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-app-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing);margin-top:var(--mat-menu-divider-top-spacing)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:var(--mat-menu-item-leading-spacing);padding-right:var(--mat-menu-item-trailing-spacing);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}[dir=rtl] .mat-mdc-menu-item{padding-right:var(--mat-menu-item-leading-spacing);padding-left:var(--mat-menu-item-trailing-spacing)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing);padding-right:var(--mat-menu-item-with-icon-trailing-spacing)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-right:var(--mat-menu-item-with-icon-leading-spacing);padding-left:var(--mat-menu-item-with-icon-trailing-spacing)}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-app-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing);height:var(--mat-menu-item-icon-size);width:var(--mat-menu-item-icon-size)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color)}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color)}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenu, [{\n    type: Component,\n    args: [{\n      selector: 'mat-menu',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matMenu',\n      host: {\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-describedby]': 'null'\n      },\n      animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems],\n      providers: [{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }],\n      standalone: true,\n      template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel mat-mdc-elevation-specific\\\"\\n    [id]=\\\"panelId\\\"\\n    [class]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-app-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-app-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;box-sizing:border-box;outline:0;border-radius:var(--mat-menu-container-shape, var(--mat-app-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-app-surface-container));will-change:transform,opacity}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.mat-mdc-menu-panel.ng-animating:has(.mat-mdc-menu-content:empty){display:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-app-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing);margin-top:var(--mat-menu-divider-top-spacing)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:var(--mat-menu-item-leading-spacing);padding-right:var(--mat-menu-item-trailing-spacing);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}[dir=rtl] .mat-mdc-menu-item{padding-right:var(--mat-menu-item-leading-spacing);padding-left:var(--mat-menu-item-trailing-spacing)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing);padding-right:var(--mat-menu-item-with-icon-trailing-spacing)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-right:var(--mat-menu-item-with-icon-leading-spacing);padding-left:var(--mat-menu-item-with-icon-trailing-spacing)}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-app-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing);height:var(--mat-menu-item-icon-size);width:var(--mat-menu-item-icon-size)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color)}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color)}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_MENU_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    _allItems: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: true\n      }]\n    }],\n    backdropClass: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: false\n      }]\n    }],\n    lazyContent: [{\n      type: ContentChild,\n      args: [MAT_MENU_CONTENT]\n    }],\n    overlapTrigger: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hasBackdrop: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? null : booleanAttribute(value)\n      }]\n    }],\n    panelClass: [{\n      type: Input,\n      args: ['class']\n    }],\n    classList: [{\n      type: Input\n    }],\n    closed: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }]\n  });\n})();\n\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  get _deprecatedMatMenuTriggerFor() {\n    return this.menu;\n  }\n  set _deprecatedMatMenuTriggerFor(v) {\n    this.menu = v;\n  }\n  /** References the menu instance that the trigger is associated with. */\n  get menu() {\n    return this._menu;\n  }\n  set menu(menu) {\n    if (menu === this._menu) {\n      return;\n    }\n    this._menu = menu;\n    this._menuCloseSubscription.unsubscribe();\n    if (menu) {\n      if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuRecursiveError();\n      }\n      this._menuCloseSubscription = menu.close.subscribe(reason => {\n        this._destroyMenu(reason);\n        // If a click closed the menu, we should close the entire chain of nested menus.\n        if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n          this._parentMaterialMenu.closed.emit(reason);\n        }\n      });\n    }\n    this._menuItemInstance?._setTriggersSubmenu(this.triggersSubmenu());\n  }\n  constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu,\n  // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n  // tslint:disable-next-line: lightweight-tokens\n  _menuItemInstance, _dir, _focusMonitor, _ngZone) {\n    this._overlay = _overlay;\n    this._element = _element;\n    this._viewContainerRef = _viewContainerRef;\n    this._menuItemInstance = _menuItemInstance;\n    this._dir = _dir;\n    this._focusMonitor = _focusMonitor;\n    this._ngZone = _ngZone;\n    this._overlayRef = null;\n    this._menuOpen = false;\n    this._closingActionsSubscription = Subscription.EMPTY;\n    this._hoverSubscription = Subscription.EMPTY;\n    this._menuCloseSubscription = Subscription.EMPTY;\n    this._changeDetectorRef = inject(ChangeDetectorRef);\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n    this._handleTouchStart = event => {\n      if (!isFakeTouchstartFromScreenReader(event)) {\n        this._openedBy = 'touch';\n      }\n    };\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n    this._openedBy = undefined;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n    this.restoreFocus = true;\n    /** Event emitted when the associated menu is opened. */\n    this.menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onMenuOpen = this.menuOpened;\n    /** Event emitted when the associated menu is closed. */\n    this.menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onMenuClose = this.menuClosed;\n    this._scrollStrategy = scrollStrategy;\n    this._parentMaterialMenu = parentMenu instanceof MatMenu ? parentMenu : undefined;\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n  }\n  ngAfterContentInit() {\n    this._handleHover();\n  }\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n    this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n  /** Whether the menu is open. */\n  get menuOpen() {\n    return this._menuOpen;\n  }\n  /** The text direction of the containing app. */\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n  triggersSubmenu() {\n    return !!(this._menuItemInstance && this._parentMaterialMenu && this.menu);\n  }\n  /** Toggles the menu between the open and closed states. */\n  toggleMenu() {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n  /** Opens the menu. */\n  openMenu() {\n    const menu = this.menu;\n    if (this._menuOpen || !menu) {\n      return;\n    }\n    const overlayRef = this._createOverlay(menu);\n    const overlayConfig = overlayRef.getConfig();\n    const positionStrategy = overlayConfig.positionStrategy;\n    this._setPosition(menu, positionStrategy);\n    overlayConfig.hasBackdrop = menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n    overlayRef.attach(this._getPortal(menu));\n    if (menu.lazyContent) {\n      menu.lazyContent.attach(this.menuData);\n    }\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n    this._initMenu(menu);\n    if (menu instanceof MatMenu) {\n      menu._startAnimation();\n      menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n        // Re-adjust the position without locking when the amount of items\n        // changes so that the overlay is allowed to pick a new optimal position.\n        positionStrategy.withLockedPosition(false).reapplyLastPosition();\n        positionStrategy.withLockedPosition(true);\n      });\n    }\n  }\n  /** Closes the menu. */\n  closeMenu() {\n    this.menu?.close.emit();\n  }\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n  /**\n   * Updates the position of the menu to ensure that it fits all options within the viewport.\n   */\n  updatePosition() {\n    this._overlayRef?.updatePosition();\n  }\n  /** Closes the menu and does the necessary cleanup. */\n  _destroyMenu(reason) {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n    const menu = this.menu;\n    this._closingActionsSubscription.unsubscribe();\n    this._overlayRef.detach();\n    // Always restore focus if the user is navigating using the keyboard or the menu was opened\n    // programmatically. We don't restore for non-root triggers, because it can prevent focus\n    // from making it back to the root trigger when closing a long chain of menus by clicking\n    // on the backdrop.\n    if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n      this.focus(this._openedBy);\n    }\n    this._openedBy = undefined;\n    if (menu instanceof MatMenu) {\n      menu._resetAnimation();\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone.pipe(filter(event => event.toState === 'void'), take(1),\n        // Interrupt if the content got re-attached.\n        takeUntil(menu.lazyContent._attached)).subscribe({\n          next: () => menu.lazyContent.detach(),\n          // No matter whether the content got re-attached, reset the menu.\n          complete: () => this._setIsMenuOpen(false)\n        });\n      } else {\n        this._setIsMenuOpen(false);\n      }\n    } else {\n      this._setIsMenuOpen(false);\n      menu?.lazyContent?.detach();\n    }\n  }\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   */\n  _initMenu(menu) {\n    menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n    menu.direction = this.dir;\n    this._setMenuElevation(menu);\n    menu.focusFirstItem(this._openedBy || 'program');\n    this._setIsMenuOpen(true);\n  }\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\n  _setMenuElevation(menu) {\n    if (menu.setElevation) {\n      let depth = 0;\n      let parentMenu = menu.parentMenu;\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n      menu.setElevation(depth);\n    }\n  }\n  // set state rather than toggle to support triggers sharing a menu\n  _setIsMenuOpen(isOpen) {\n    if (isOpen !== this._menuOpen) {\n      this._menuOpen = isOpen;\n      this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n      if (this.triggersSubmenu()) {\n        this._menuItemInstance._setHighlighted(isOpen);\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  _createOverlay(menu) {\n    if (!this._overlayRef) {\n      const config = this._getOverlayConfig(menu);\n      this._subscribeToPositions(menu, config.positionStrategy);\n      this._overlayRef = this._overlay.create(config);\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\n      this._overlayRef.keydownEvents().subscribe();\n    }\n    return this._overlayRef;\n  }\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  _getOverlayConfig(menu) {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withGrowAfterOpen().withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n      backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      panelClass: menu.overlayPanelClass,\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir\n    });\n  }\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n  _subscribeToPositions(menu, position) {\n    if (menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n        // @breaking-change 15.0.0 Remove null check for `ngZone`.\n        // `positionChanges` fires outside of the `ngZone` and `setPositionClasses` might be\n        // updating something in the view so we need to bring it back in.\n        if (this._ngZone) {\n          this._ngZone.run(() => menu.setPositionClasses(posX, posY));\n        } else {\n          menu.setPositionClasses(posX, posY);\n        }\n      });\n    }\n  }\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param positionStrategy Strategy whose position to update.\n   */\n  _setPosition(menu, positionStrategy) {\n    let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n    let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      if (this._parentMaterialMenu) {\n        if (this._parentInnerPadding == null) {\n          const firstItem = this._parentMaterialMenu.items.first;\n          this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n        }\n        offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n      }\n    } else if (!menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n    positionStrategy.withPositions([{\n      originX,\n      originY,\n      overlayX,\n      overlayY,\n      offsetY\n    }, {\n      originX: originFallbackX,\n      originY,\n      overlayX: overlayFallbackX,\n      overlayY,\n      offsetY\n    }, {\n      originX,\n      originY: originFallbackY,\n      overlayX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }, {\n      originX: originFallbackX,\n      originY: originFallbackY,\n      overlayX: overlayFallbackX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }]);\n  }\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  _menuClosingActions() {\n    const backdrop = this._overlayRef.backdropClick();\n    const detachments = this._overlayRef.detachments();\n    const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n    const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n  /** Handles mouse presses on the trigger. */\n  _handleMousedown(event) {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : undefined;\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n  /** Handles key presses on the trigger. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    // Pressing enter on the trigger will trigger the click handler later.\n    if (keyCode === ENTER || keyCode === SPACE) {\n      this._openedBy = 'keyboard';\n    }\n    if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n      this._openedBy = 'keyboard';\n      this.openMenu();\n    }\n  }\n  /** Handles click events on the trigger. */\n  _handleClick(event) {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n  /** Handles the cases where the user hovers over the trigger. */\n  _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n      return;\n    }\n    this._hoverSubscription = this._parentMaterialMenu._hovered()\n    // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n    // with different data and triggers), we have to delay it by a tick to ensure that\n    // it won't be closed immediately after it is opened.\n    .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler)).subscribe(() => {\n      this._openedBy = 'mouse';\n      // If the same menu is used between multiple triggers, it might still be animating\n      // while the new trigger tries to re-open it. Wait for the animation to finish\n      // before doing so. Also interrupt if the user moves to another item.\n      if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n        // We need the `delay(0)` here in order to avoid\n        // 'changed after checked' errors in some cases. See #12194.\n        this.menu._animationDone.pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered())).subscribe(() => this.openMenu());\n      } else {\n        this.openMenu();\n      }\n    });\n  }\n  /** Gets the portal that should be attached to the overlay. */\n  _getPortal(menu) {\n    // Note that we can avoid this check by keeping the portal on the menu panel.\n    // While it would be cleaner, we'd have to introduce another required method on\n    // `MatMenuPanel`, making it harder to consume.\n    if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n      this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n    }\n    return this._portal;\n  }\n  static {\n    this.ɵfac = function MatMenuTrigger_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenuTrigger)(i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), i0.ɵɵdirectiveInject(MatMenuItem, 10), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatMenuTrigger,\n      selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-menu-trigger\"],\n      hostVars: 3,\n      hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) {\n            return ctx._handleClick($event);\n          })(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) {\n            return ctx._handleMousedown($event);\n          })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-haspopup\", ctx.menu ? \"menu\" : null)(\"aria-expanded\", ctx.menuOpen)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n        }\n      },\n      inputs: {\n        _deprecatedMatMenuTriggerFor: [0, \"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n        menu: [0, \"matMenuTriggerFor\", \"menu\"],\n        menuData: [0, \"matMenuTriggerData\", \"menuData\"],\n        restoreFocus: [0, \"matMenuTriggerRestoreFocus\", \"restoreFocus\"]\n      },\n      outputs: {\n        menuOpened: \"menuOpened\",\n        onMenuOpen: \"onMenuOpen\",\n        menuClosed: \"menuClosed\",\n        onMenuClose: \"onMenuClose\"\n      },\n      exportAs: [\"matMenuTrigger\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n      host: {\n        'class': 'mat-mdc-menu-trigger',\n        '[attr.aria-haspopup]': 'menu ? \"menu\" : null',\n        '[attr.aria-expanded]': 'menuOpen',\n        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n        '(click)': '_handleClick($event)',\n        '(mousedown)': '_handleMousedown($event)',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      exportAs: 'matMenuTrigger',\n      standalone: true\n    }]\n  }], () => [{\n    type: i1$1.Overlay\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_MENU_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_MENU_PANEL]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: MatMenuItem,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }, {\n    type: i3.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i1.FocusMonitor\n  }, {\n    type: i0.NgZone\n  }], {\n    _deprecatedMatMenuTriggerFor: [{\n      type: Input,\n      args: ['mat-menu-trigger-for']\n    }],\n    menu: [{\n      type: Input,\n      args: ['matMenuTriggerFor']\n    }],\n    menuData: [{\n      type: Input,\n      args: ['matMenuTriggerData']\n    }],\n    restoreFocus: [{\n      type: Input,\n      args: ['matMenuTriggerRestoreFocus']\n    }],\n    menuOpened: [{\n      type: Output\n    }],\n    onMenuOpen: [{\n      type: Output\n    }],\n    menuClosed: [{\n      type: Output\n    }],\n    onMenuClose: [{\n      type: Output\n    }]\n  });\n})();\nclass MatMenuModule {\n  static {\n    this.ɵfac = function MatMenuModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenuModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatMenuModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      imports: [CommonModule, MatRippleModule, MatCommonModule, OverlayModule, CdkScrollableModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatRippleModule, MatCommonModule, OverlayModule, MatMenu, MatMenuItem, MatMenuContent, MatMenuTrigger],\n      exports: [CdkScrollableModule, MatMenu, MatCommonModule, MatMenuItem, MatMenuContent, MatMenuTrigger],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, MENU_PANEL_TOP_PADDING, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, fadeInItems, matMenuAnimations, transformMenu };\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { DMOS } from '../../const1';\r\nimport { DMOType } from '../../models1';\r\nimport { ContextMenuPosition } from '../contextMenu/contextMenu.datatypes';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { NgIf, NgStyle, NgFor } from '@angular/common';\r\n@Component({\r\n    selector: 'app-dmo-form-controls',\r\n    templateUrl: './dmo-form-controls.component.html',\r\n    styleUrls: ['./dmo-form-controls.component.scss'],\r\n    animations: [\r\n        trigger('enterAnimation', [\r\n            transition(':enter', [\r\n                style({ transform: 'translateY(1%)', opacity: 0 }),\r\n                animate('200ms', style({ transform: 'translateY(0)', opacity: 1 }))\r\n            ]),\r\n            transition(':leave', [\r\n                style({ transform: 'translateY(0)', opacity: 1 }),\r\n                animate('200ms', style({ transform: 'translateY(1%)', opacity: 0 }))\r\n            ])\r\n        ])\r\n    ],\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        NgStyle,\r\n        NgFor,\r\n    ],\r\n})\r\nexport class DmoFormControlsComponent implements OnInit {\r\n  readonly formsControls = Object.values(DMOS).sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n  @Input() showContextMenuFor: any = null;\r\n  @Input() contextMenuPosition: ContextMenuPosition = null;\r\n  @Output() formControlSelect = new EventEmitter<any>();\r\n  contextMenuPositiontest = { x: '0px', y: '0px' };\r\n  public style: object = {};\r\n  @Input() showContextMenu: boolean = false;\r\n \r\n  type: DMOType;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  FormControlSelect(type){\r\n    this.showContextMenu=false;\r\n   this.formControlSelect.emit(type);\r\n  }\r\n  ngOnChanges() {\r\n    if (this.contextMenuPosition) {\r\n\r\n      this.contextMenuPositiontest.x = (this.contextMenuPosition.rightClickMenuPositionX -150)  + 'px';\r\n      this.contextMenuPositiontest.y = (this.contextMenuPosition.rightClickMenuPositionY-100) + 'px';\r\n     // this.showContextMenu = true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div *ngIf=\"showContextMenu\" class=\"contextMenuContainer\" \r\n[ngStyle]=\"style\" \r\n [@enterAnimation] [style.left]=\"contextMenuPositiontest.x\"\r\n    [style.top]=\"contextMenuPositiontest.y\">\r\n  \r\n<div class=\"formcomponents\">\r\n    <!-- <input type=\"text\" class=\"form-control mb-2\" placeholder=\"Search...\" (click)=\"$event.stopPropagation()\"> -->\r\n    <div class=\"list-group drag-list\" id=\"form-controls\">\r\n      <li class=\"list-group-item list-group-item-action list-group-item-success drag-list-item\"\r\n        \r\n        *ngFor=\"let item of formsControls\"  (click)=\"FormControlSelect(item)\">\r\n        <i [class]=\"item.class\" style=\"margin-right: 5px\"></i>{{ item.name }}\r\n      </li>\r\n    </div>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\nimport { DataModelerApiService } from '../../../services1/data-modeler-api.service1';\r\nimport { MessageService } from '@app/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ServiceProviderService } from '../../../services1/service-provider.service';\r\nimport { DMOG } from '../../../classes';\r\nimport { DMOS } from '../../../const1';\r\nimport { ApiService } from '@app/admin/core/services/api.service';\r\nimport { environment } from '@env/environment';\r\nimport { ContainerStyle, DMOType, IDMComponent, PanelMainContainer, PanelMainRow } from '../../../models1';\r\nimport { ContextMenuPosition } from '../../contextMenu/contextMenu.datatypes';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ShareDmoComponent } from '../../share-dmo/share-dmo.component';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SideNavModel } from '@app/admin/data-modeler1/models1';\r\nimport { ContextMenuComponent } from '../../contextMenu/contextMenu.component';\r\nimport { ResizeColumnsDirective } from '@app/admin/data-modeler1/directives/resize-columns.directive';\r\nimport { firstValueFrom, Subject, take, takeUntil } from 'rxjs';\r\nimport { NgClass, NgStyle, NgIf, NgFor } from '@angular/common';\r\nimport { CdkDragHandle } from '@angular/cdk/drag-drop';\r\nimport { ResizeColumnsDirective as ResizeColumnsDirective_1 } from '../../../directives/resize-columns.directive';\r\nimport { DmoComponent } from '../../dmo/dmo.component';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { DmoFormControlsComponent } from '../../dmo-form-controls/dmo-form-controls.component';\r\n@Component({\r\n    selector: 'app-dmog-container',\r\n    templateUrl: './dmog-container.component.html',\r\n    styleUrls: ['./dmog-container.component.scss'],\r\n    standalone: true,\r\n    imports: [NgClass, NgStyle, CdkDragHandle, NgIf, NgFor, ResizeColumnsDirective_1, DmoComponent, NgbTooltip, MatMenuTrigger, ContextMenuComponent, DmoFormControlsComponent, ShareDmoComponent]\r\n})\r\nexport class DmogContainerComponent implements OnInit, OnChanges,OnDestroy {\r\n    onBlur() {\r\n        return;\r\n    }\r\n    onKeyDown($event: any) {\r\n        return;\r\n    }\r\n    onFocus() {\r\n        return;\r\n    }\r\n\r\n    private readonly baseUrl = `${environment.Setting.BaseAPIUrl}/modeler`;\r\n    @ViewChild(ContextMenuComponent) refContextMenuComponent: ContextMenuComponent;\r\n    @ViewChild('parentResizeDir') parentResizeDir: ResizeColumnsDirective;\r\n    @ViewChild('childResizeDir') childResizeDir: ResizeColumnsDirective;\r\n    private readonly destroy$ =new Subject<void>();\r\n    shareDmo: MatDialogRef<ShareDmoComponent>;\r\n    availableDmoToShare: any = [];\r\n    isImActive = false;\r\n    selectedDivId;\r\n    initialCheckDone = false;\r\n    targetEvent: any;\r\n    targetclickedDiv: any;\r\n    targetid: any;\r\n    isInnerDragging = false;\r\n    @Input() isDraggingStart:any;\r\n    @Input() hasChildren: boolean = false;\r\n    previousHoveredIds: string[] = [];\r\n    @Input() UpdatedDataSideNavModel :any;\r\n    @Input() inputAllselectedBMO;\r\n    currenActiveDmoList:any;\r\n    currentActiveDmoShareList:any;\r\n    isDmoExist=false;\r\n    constructor(\r\n        private dmApi: DataModelerApiService,\r\n        private apiService: ApiService,\r\n        private msg: MessageService,\r\n        private toast: ToastrService,\r\n        private dataProvider: ServiceProviderService,\r\n        private cdref: ChangeDetectorRef,\r\n        private elementRef: ElementRef,\r\n        public matdialog: MatDialog,\r\n        private modalService: NgbModal\r\n    ) {\r\n\r\n        this.dataProvider.getHideContextMenu().subscribe(result => {\r\n            if (result.dmogId && result.dmogId != this.data.DMOGID) {\r\n                if (this.refContextMenuComponent)\r\n                    this.refContextMenuComponent.showContextMenu = false;\r\n            }\r\n            this.resetDivColour();\r\n        });\r\n\r\n        this.dataProvider.getDmoStates()\r\n        .pipe(takeUntil(this.destroy$)) \r\n        .subscribe(result => {\r\n            this.updatePropBaseOfDMO(this.contextMenuData, result);\r\n        });\r\n\r\n        this.dataProvider.getUpdateDmogSettings().subscribe(result => {\r\n            if (result.DMOGID == this.data.DMOGID) {\r\n                this.panelMainContainer = JSON.parse(result.DMOGProps);\r\n                if (this.panelMainContainer) {\r\n                    this.rows = this.panelMainContainer.rows\r\n                    this.sideNavModel.emit(null);\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dataProvider.getDeleteDmo().subscribe(result => {\r\n            if (result.dmogId == this.data.GUID) {\r\n                this.removeDmoToOthers(result.dmoguid)\r\n                this.saveProps();\r\n            }\r\n        });\r\n        this.dataProvider.getUpdateDmogStyleSettings().subscribe(result => {\r\n            if (result.DMOGID == this.data.DMOGID) {\r\n\r\n                var tempjson = JSON.parse(result.DMOGProps);\r\n                if (tempjson) {\r\n\r\n                    this.containerStyle = tempjson.style;\r\n                }\r\n                this.updateWidth();\r\n            }\r\n        });\r\n\r\n        this.dataProvider.getMoveDmo().subscribe(result => {\r\n            if (result.dmogId == this.data.DMOGID) {\r\n                let findActual=this.inputAllselectedBMO[this.data.GUID];\r\n                if(findActual){\r\n                    this.panelMainContainer = JSON.parse(findActual.DMOGProps);\r\n                if (this.panelMainContainer) {\r\n                    this.rows = this.panelMainContainer.rows\r\n                }\r\n                }\r\n                this.removeDmoToOthers(result.dmoguid)\r\n                this.updatereOrdering(result.targetId, result.dmoguid)\r\n                //setTimeout(() => {\r\n                    this.saveProps(true, result);\r\n               // }, 0);\r\n               setTimeout(() => {\r\n                if(this.refContextMenuComponent){\r\n                   this.refContextMenuComponent.showContextMenu=false; \r\n                }\r\n            }, 100)\r\n                \r\n            }\r\n            if (result.prevdmogId == this.data.DMOGID) {\r\n                let findActual=this.inputAllselectedBMO[this.data.GUID];\r\n                if(findActual){\r\n                    this.panelMainContainer = JSON.parse(findActual.DMOGProps);\r\n                if (this.panelMainContainer) {\r\n                    this.rows = this.panelMainContainer.rows\r\n                }\r\n                }\r\n                this.removeDmoToOthers(result.dmoguid)\r\n                this.saveProps(true);\r\n                setTimeout(() => {\r\n                    if(this.refContextMenuComponent){\r\n                       this.refContextMenuComponent.showContextMenu=false; \r\n                    }\r\n                }, 100)\r\n                \r\n            }\r\n\r\n        });\r\n\r\n        this.dataProvider.geUpdatedColumnData().subscribe(result => {\r\n            if (result.DMOGID == this.data.DMOGID) {\r\n                this.panelMainContainer = JSON.parse(result.DMOGProps);\r\n                if (this.panelMainContainer) {\r\n                    this.rows = this.panelMainContainer.rows\r\n                    this.sideNavModel.emit(null);\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dataProvider.setMoveDmo\r\n    }\r\n    ngOnDestroy(): void {\r\n     this.destroy$.next();\r\n     this.destroy$.complete();\r\n    }\r\n    @Input() title: string;\r\n    @Input() active = false;\r\n    @Input() hasInvalidForm = false;\r\n    @Input() bmodisplay: boolean;\r\n    @Input() trnsctnId: any;\r\n    @Input() ChildProcessName: string;\r\n    @Input() ParentDmoValue: any;\r\n    @Input() ChildDmoGuid: any;\r\n    @Input() ProcessType: any;\r\n    @Input() data: any;\r\n    @Input() UpdatedDataForContainer: any;\r\n\r\n    dragdmoguid: any;\r\n    currentDmogId: any;\r\n    @Input() left = 0;\r\n    @Input() top = 0;\r\n    @Input() readonly = false;\r\n\r\n    currentRow;\r\n    currentColumn\r\n    type: DMOType;\r\n    rows: PanelMainRow[] = [];\r\n\r\n    panelMainContainer: PanelMainContainer\r\n    containerStyle: ContainerStyle\r\n    dmo = { display: false };\r\n    @Input() BMO;\r\n    @Input() panel;\r\n    @Output() DraggingItemsModel = new EventEmitter<any>();\r\n    @Output() openclonePopup = new EventEmitter<any>();\r\n    @Output() tabRemove = new EventEmitter<DmogContainerComponent>();\r\n    @Output() tabEdit = new EventEmitter<DmogContainerComponent>();\r\n    @Output() OnAddDmogAbove = new EventEmitter<DmogContainerComponent>();\r\n  @Output() OnAddDmogInGroup = new EventEmitter<DmogContainerComponent>();\r\n    @Output() OnBMOSave = new EventEmitter<DmogContainerComponent>();\r\n    @Output() sideNavModel = new EventEmitter<any>();\r\n\r\n    @Output() onDmoEdit = new EventEmitter<any>();\r\n    @Output() onDmoDelete = new EventEmitter<any>();\r\n    @Output() openConditionPopup = new EventEmitter<any>();\r\n    @Output() reloadParent = new EventEmitter<any>();\r\n    @Output() dragDmoToAnotherdmog = new EventEmitter<any>();\r\n    @Output() dropDmoToAnotherdmog = new EventEmitter<any>();\r\n    @Output() SelectdItem = new EventEmitter<any>();\r\n    @Input() SharedDmosList: [];\r\n    hoveredRowIndex: any;\r\n    hoveredColumnIndex: any;\r\n    hoveredColumnRowIndex: any;\r\n    private _dmog: DMOG;\r\n    contextMenuPosition: ContextMenuPosition = null;\r\n    contextMenuFormPosition: ContextMenuPosition = null;\r\n    contextMenuData: any = null;\r\n    cdkDragDisabled = false\r\n    showFormContextMenu = false;\r\n    showSharedmoContextMenu = false;\r\n    availableActiveDmogIdes: any;\r\n    AvailableActiveSharredDmoguides: any;\r\n    @Input() newlyCreatedConatiner: any;\r\n    @Input() mode: any;\r\n    hoveredDataId: string\r\n    //public bm: classes.BM;\r\n    @Input()\r\n    set dmog(dmog: DMOG) {\r\n        this._dmog = dmog;\r\n    }\r\n    get dmog() {\r\n        return this._dmog;\r\n    }\r\n    private IsJsonStaticGridDmo: boolean = false;\r\n    readonly formsControls = Object.values(DMOS).sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n    ngOnInit(): void {\r\n        this.style = {\r\n            width: `100%`,\r\n            height: `auto`,\r\n        };\r\n        if (this.data && this.data.DMOGProps) {\r\n\r\n            this.panelMainContainer = JSON.parse(this.data.DMOGProps);\r\n            if (this.panelMainContainer) {\r\n                this.rows = this.panelMainContainer.rows;\r\n                this.containerStyle = this.panelMainContainer.style;\r\n            }\r\n            this.updateWidth();\r\n            if (this.data.GUID && this.newlyCreatedConatiner) {\r\n                this.findDMOGById();\r\n            }\r\n        }\r\n\r\n        if (this.data?.formData?.components) {\r\n            this.availableActiveDmogIdes = this.data.formData.components.map(a => a.guid);\r\n        } else {\r\n            this.availableActiveDmogIdes = [];\r\n        }\r\n\r\n        if (this.SharedDmosList && this.SharedDmosList.length > 0) {\r\n            this.AvailableActiveSharredDmoguides = (this.SharedDmosList as any[]).map(a => a.guid);\r\n        } else {\r\n            this.AvailableActiveSharredDmoguides = [];\r\n        }\r\n        //this.removeOrphanedDmos();\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if(changes['UpdatedDataSideNavModel'] && this.UpdatedDataSideNavModel && this.UpdatedDataSideNavModel != undefined){\r\n             if (this.UpdatedDataSideNavModel.dmog?.GUID === this.data?.GUID) {\r\n            this.panelMainContainer = this.UpdatedDataSideNavModel.data;\r\n             if(this.panelMainContainer){\r\n                 const updateddmog = JSON.stringify(this.panelMainContainer);\r\n                if (updateddmog) {\r\n                    this.UpdatedDataSideNavModel.dmog.DMOGProps=updateddmog\r\n                     this.data = this.UpdatedDataSideNavModel.dmog;\r\n                }\r\n            }\r\n        }\r\n        }\r\n    \r\n        if (changes['UpdatedDataForContainer'] && this.UpdatedDataForContainer) {\r\n            this.handleUpdatedDataForContainer();\r\n        }\r\n    }\r\n    \r\n    private handleUpdatedDataForContainer(): void {\r\n        if (this.UpdatedDataForContainer?.GUID === this.data?.GUID) {\r\n            this.updatePanelWidth();\r\n        }\r\n    \r\n        if (this.data?.GUID && this.newlyCreatedConatiner) {\r\n            this.findDMOGById();\r\n        }\r\n    }\r\n    \r\n    private updatePanelWidth(): void {\r\n        const updatedProps = JSON.parse(this.UpdatedDataForContainer.DMOGProps);\r\n        const newWidth = updatedProps.width;\r\n    \r\n        if (newWidth && this.panelMainContainer?.width) {\r\n            this.panelMainContainer.width = newWidth;\r\n        }\r\n    }\r\n    \r\n\r\n    ngDoCheck() {\r\n        if (this.UpdatedDataForContainer?.GUID === this.data?.GUID) {\r\n            const updatetedWidth = JSON.parse(this.UpdatedDataForContainer.DMOGProps);\r\n            const newWidth = updatetedWidth.width;\r\n            if (this.panelMainContainer?.width && newWidth) {\r\n                this.panelMainContainer.width = newWidth;\r\n            }\r\n        }\r\n        if (this.data?.formData?.components) {\r\n            this.availableActiveDmogIdes = this.data.formData.components.map(a => a.guid);\r\n        } else {\r\n            this.availableActiveDmogIdes = [];\r\n        }\r\n\r\n        if (this.SharedDmosList && this.SharedDmosList.length > 0) {\r\n            this.AvailableActiveSharredDmoguides = (this.SharedDmosList as any[]).map(a => a.guid);\r\n        } else {\r\n            this.AvailableActiveSharredDmoguides = [];\r\n        }\r\n    }\r\n\r\n    findDMOGById() {\r\n        setTimeout(() => {\r\n            const selectedItem =\r\n            {\r\n                c: {\r\n                    \"colIndex\": 0,\r\n                    \"dmoguid\": [],\r\n                    \"rows\": [],\r\n                    \"width\": 99.5\r\n                },\r\n                colIndex: 0,\r\n                r: {\r\n                    \"columns\": [\r\n                        {\r\n                            \"colIndex\": 0,\r\n                            \"dmoguid\": [],\r\n                            \"rows\": [],\r\n                            \"width\": 99.5\r\n                        }\r\n                    ],\r\n                    \"rowIndex\": 0\r\n                },\r\n                rowIndex: 0,\r\n                type: \"column\"\r\n            }\r\n            let model: SideNavModel = {\r\n                type: 'Column',\r\n                dmog: this.data,\r\n                data: selectedItem,\r\n                props: this.panelMainContainer,\r\n\r\n            };\r\n            if (this.data?.Type !== 'CardGroup') {\r\n                this.sideNavModel.emit(model);\r\n              }\r\n            this.selectedDivId = 'main_' + this.newlyCreatedConatiner;\r\n            this.removeOtherActive('main_' + this.newlyCreatedConatiner);\r\n        }, 30);\r\n\r\n    }\r\n\r\n\r\n    getFirstRowAndColumnData() {\r\n        if (!this.panelMainContainer?.rows?.length) {\r\n            console.warn(\"No rows found in panelMainContainer.\");\r\n            return null;\r\n        }\r\n        const firstRow = this.panelMainContainer.rows[0];\r\n        if (!firstRow.columns || firstRow.columns.length === 0) {\r\n            console.warn(\"No columns found in the first row.\");\r\n            return null;\r\n        }\r\n\r\n        const firstColumn = firstRow.columns[0];\r\n\r\n        // Construct JSON object\r\n        const result = {\r\n            rowIndex: firstRow.rowIndex,\r\n            colIndex: firstColumn.colIndex,\r\n            dmoguid: firstColumn.dmoguid || [],\r\n            width: firstColumn.width || null,\r\n            type: \"column\"\r\n        };\r\n\r\n        console.log(\"Generated JSON:\", result);\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    disableDrag() {\r\n        this.cdkDragDisabled = true;\r\n\r\n    }\r\n    isCurrentActive(currentId) {\r\n        if(this.isDraggingStart){\r\n            return '';\r\n        }\r\n        if (this.selectedDivId == currentId) {\r\n            return ' active-container '\r\n        }\r\n        return '';\r\n    }\r\n    isContainerActive(currentId) {\r\n\r\n        if (this.selectedDivId == currentId) {\r\n            return ' active-container-main'\r\n        }\r\n        return '';\r\n    }\r\n\r\n    removeOtherActive(currentId) {\r\n        var elements = document.querySelectorAll(\".resizePanel\");\r\n        if (elements) {\r\n            for (let index = 0; index < elements.length; index++) {\r\n                const element = elements[index] as HTMLElement;\r\n                if (element) {\r\n                    if (element.classList.contains(\"active-container-main\")) {\r\n                        element.classList.remove('active-container-main')\r\n                    }\r\n\r\n                    if (element.id == currentId) {\r\n                        element.classList.add('active-container-main')\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    removeSettingsActive() {\r\n        var elements = document.querySelectorAll(\".resizePanel\");\r\n        if (elements) {\r\n            for (let index = 0; index < elements.length; index++) {\r\n                const element = elements[index] as HTMLElement;\r\n                if (element) {\r\n                    if (element.classList.contains(\"active-container-main\")) {\r\n                        element.classList.remove('active-container-main')\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateWidth() {\r\n        if (this.panelMainContainer) {\r\n            let width = this.panelMainContainer.width;\r\n            if (width == 0) {\r\n                width = 100\r\n            }\r\n            if (this.containerStyle) {\r\n                let top = this.containerStyle.container.corner_radius_top\r\n                let right = this.containerStyle.container.corner_radius_right\r\n                let bottom = this.containerStyle.container.corner_radius_bottom\r\n                let left = this.containerStyle.container.corner_radius_left;\r\n                let hasHeader = this.containerStyle.header.header_border;\r\n                let borderWidth = this.containerStyle.container.border_width;\r\n                this.style = {\r\n                    width: `${100}%`,\r\n                    height: `auto`,\r\n                    'background': this.containerStyle.container.background_color,\r\n                    'border-style': this.containerStyle.container.border || 'solid',\r\n                    'border-width': `${borderWidth}px`,\r\n                    'border-color': this.containerStyle.container.border_color || 'initial',\r\n                    'border-radius': `${top}px ${right}px ${bottom}px ${left}px`,\r\n                };\r\n                if (hasHeader){\r\n                    this.headerStyle = {\r\n                        'border-color': this.containerStyle.container.border_color,\r\n                        'background': this.containerStyle.header.header_fill_color,\r\n                        'color': this.containerStyle.header.header_text_color,\r\n                        'border-radius': `${top}px ${right}px ${0}px ${0}px`,\r\n                    }\r\n                }else {\r\n                    this.headerStyle = {};\r\n                }\r\n            } else {\r\n                this.style = {\r\n                    width: `${100}%`,\r\n                    height: `auto`,\r\n\r\n                };\r\n            }\r\n        }\r\n    }\r\n    enableDrag() {\r\n        this.cdkDragDisabled = false;\r\n    }\r\n    ngAfterContentChecked() {\r\n        //this.cdref!.detectChanges();\r\n    }\r\n    public style: object = {};\r\n    public headerStyle: object = {};\r\n\r\n    validate(event: ResizeEvent): boolean {\r\n        const MIN_DIMENSIONS_PX: number = 50;\r\n        if (\r\n            event.rectangle.width &&\r\n            event.rectangle.height &&\r\n            (event.rectangle.width < MIN_DIMENSIONS_PX ||\r\n                event.rectangle.height < MIN_DIMENSIONS_PX)\r\n        ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onResizeEnd(event: ResizeEvent): void {\r\n        this.style = {\r\n            // left: `${event.rectangle.left}px`,\r\n            // top: `${event.rectangle.top}px`,\r\n            width: `${event.rectangle.width}px`,\r\n            height: `auto`,\r\n        };\r\n    }\r\n\r\n    onTabRemove(tab: DmogContainerComponent) {\r\n        this.dataProvider.setSidebarclose(true);\r\n        this.resetDivColour();\r\n        this.tabRemove.emit(tab);\r\n    }\r\n    onEditDMOGRemove(tab: DmogContainerComponent) {\r\n        this.dataProvider.setSidebarclose(true);\r\n        this.resetDivColour();\r\n        this.tabEdit.emit(tab);\r\n    }\r\n    ShowDmogSettings(event) {\r\n        this.activeteMe(event);\r\n\r\n    }\r\n   // Done by Anjum\r\n    rowHovring(currentId: string): void {\r\n        const pattern = /^(\\w+_row_)(\\d+)$/;\r\n        const match = pattern.exec(currentId);\r\n        if (!match) return;\r\n\r\n        const baseId = match[1];\r\n        const index = parseInt(match[2], 10);\r\n    \r\n        this.previousHoveredIds.forEach(id => {\r\n          const el = document.getElementById(id);\r\n          if (el)\r\n             el.style.borderBottom = 'none';\r\n          el.style.borderTop = 'none';\r\n        });\r\n    \r\n        const currentElemId = `${baseId}${index}`;\r\n        const nextElemId = `${baseId}${index + 1}`;\r\n    \r\n        const currentElem = document.getElementById(currentElemId);\r\n        const nextElem = document.getElementById(nextElemId);\r\n    \r\n        if (currentElem) currentElem.style.borderBottom = '1px solid #00ACE9';\r\n        if (nextElem) nextElem.style.borderTop = '1px solid #00ACE9';\r\n    \r\n        this.previousHoveredIds = [currentElemId];\r\n        if (nextElem) this.previousHoveredIds.push(nextElemId);\r\n      }\r\n    \r\n      rowHoverOut(): void {\r\n        this.previousHoveredIds.forEach(id => {\r\n          const el = document.getElementById(id);\r\n          if (el) {\r\n            el.style.borderBottom = '1px solid transparent';\r\n            el.style.borderTop = '1px solid transparent';\r\n          }\r\n        });\r\n        this.previousHoveredIds = [];\r\n      }\r\n     \r\n    onAddRowAfter(event:any, selectedRow:any, type:string) {\r\n        event.stopPropagation();\r\n        let currentIndex  =  selectedRow.rowIndex;\r\n        let column = [{\r\n            colIndex: 0,\r\n            dmoguid: [],\r\n            width: 99.5,\r\n            rows: []\r\n        }];\r\n        let newRow = {\r\n            rowIndex: currentIndex + 1,\r\n            columns: column\r\n        } as PanelMainRow;\r\n        const insertIndex = type === 'below' ? currentIndex + 1 : currentIndex;\r\n        this.rows.splice(insertIndex, 0, newRow);\r\n        this.rows.forEach((row, idx) => {\r\n            row.rowIndex = idx;\r\n        });\r\n        this.resetDivColour();\r\n        this.saveProps();\r\n        this.rowHoverOut();\r\n    }\r\n    onAddInnerRowAfter(event:any, selectedRow:any,selectedColumn:any , selecteColumnRow:any, type:string, innerRowIndex:any) {\r\n        event.stopPropagation();\r\n        let currentIndex  =  innerRowIndex;\r\n        let column = [{\r\n            index: 0,\r\n            width: 100,\r\n            dmoguid: []\r\n        }];\r\n        let newRow = {\r\n            columns: column\r\n        } as PanelMainRow;\r\n        const insertIndex = type === 'below' ? currentIndex + 1 : currentIndex;\r\n        selectedColumn.rows.splice(insertIndex, 0, newRow);\r\n        this.rows[selectedRow.rowIndex].columns[selectedColumn.colIndex] = selectedColumn;\r\n        this.resetDivColour();\r\n        this.saveProps();\r\n    }\r\n\r\n    onAddRow() {\r\n        let nextIndex = this.rows.length;\r\n        let column = [];\r\n        column.push({ \"colIndex\": 0, \"dmoguid\": [], \"width\": 99.5, \"rows\": [] })\r\n        let letNextRow = { rowIndex: nextIndex, columns: column } as PanelMainRow\r\n        this.rows.push(letNextRow);\r\n        this.resetDivColour();\r\n        this.saveProps();\r\n    }\r\n\r\n    onAddColumn(rowIndex: number) {\r\n        if (this.rows[rowIndex].columns.length < 12) {\r\n            let currentRoWithCol = this.rows.filter(a => a.rowIndex == rowIndex);\r\n            let column = currentRoWithCol[0].columns.length;\r\n            this.rows[rowIndex].columns.push({ \"colIndex\": column + 1, \"dmoguid\": [], \"rows\": [] });\r\n            this.resetColumnWidth(currentRoWithCol[0].columns);\r\n            this.saveProps()\r\n        } else {\r\n            alert('Maximum 12 columns allowed per row.');\r\n        }\r\n\r\n    }\r\n\r\n    resetColumnWidth(currentRoWithCol, rowIndex?) {\r\n\r\n        if (rowIndex != null) {\r\n            let currentRow = this.rows.filter(a => a.rowIndex == rowIndex);\r\n            if (currentRow.length == 0)\r\n                return\r\n            currentRoWithCol = currentRow[0].columns;\r\n        }\r\n        let column = currentRoWithCol;\r\n        let index = 0;\r\n        let perClmwidth = 99.5 / currentRoWithCol.length;\r\n        for (let c of column) {\r\n            c.width = perClmwidth;\r\n            c.colIndex = index;\r\n            index++;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    resetColumnWidthForRowInColumn(currentRoWithCol) {\r\n        for (let r of currentRoWithCol) {\r\n            let column = r.columns\r\n            let perClmwidth = 100 / r.columns.length;\r\n            let index = 0;\r\n            for (let c of column) {\r\n                c.width = perClmwidth;\r\n                c.index = index;\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n    resetIndexing() {\r\n        for (let index = 0; index < this.rows.length; index++) {\r\n            let currentRow = this.rows[index];\r\n            currentRow.rowIndex = index;\r\n            for (let cindex = 0; cindex < currentRow.columns.length; cindex++) {\r\n                let currentColumn = currentRow.columns[cindex];\r\n                currentColumn.colIndex = cindex;\r\n                if (currentColumn.rows && currentColumn.rows.length > 0) {\r\n                    for (let crindex = 0; crindex < currentColumn.rows.length; crindex++) {\r\n                        const subRow = currentColumn.rows[crindex];\r\n                        if (subRow && subRow.columns && subRow.columns.length)\r\n                            for (let scindex = 0; scindex < subRow.columns.length; scindex++) {\r\n                                let subColumn = subRow.columns[scindex];\r\n                                subColumn.index = scindex;\r\n\r\n                            }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    onAddRowInColumn(item) {\r\n        let rowIndex: number = item.rowIndex\r\n        let colIndex: number = item.colIndex;\r\n        let currentRoWithCol = this.rows.filter(a => a.rowIndex == rowIndex);\r\n        if (currentRoWithCol.length > 0) {\r\n            let column = currentRoWithCol[0].columns[colIndex];\r\n            if (column) {\r\n                let childColum = [];\r\n                childColum.push({ \"index\": 0, \"width\": 100, \"dmoguid\": [] })\r\n                column.rows.push({ \"columns\": childColum })\r\n                this.resetColumnWidthForRowInColumn(column.rows)\r\n            }\r\n\r\n        }\r\n        this.saveProps();\r\n    }\r\n    ///dmo element\r\n    onAddRowChildColumnDmo(item, dmoguid) {\r\n        let rowIndex: number = item.rowIndex\r\n        let colIndex: number = item.colIndex;\r\n        let currentRoWithCol = this.rows.filter(a => a.rowIndex == rowIndex);\r\n        if (currentRoWithCol.length > 0) {\r\n            let column = currentRoWithCol[0].columns[colIndex];\r\n            if (column) {\r\n                let existingColumn = column.rows[item.ColumnRowIndex]\r\n                let ex = existingColumn.columns.length;\r\n                for (let c of existingColumn.columns) {\r\n                    if (c.index == item.colRowcolumnIndex) {\r\n                        if (!c.dmoguid) {\r\n                            c.dmoguid = [];\r\n                        }\r\n                        c.dmoguid.push(dmoguid);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        this.saveProps();\r\n    }\r\n    //end\r\n    onAddRowChildColumn(item) {\r\n        let rowIndex: number = item.rowIndex\r\n        let colIndex: number = item.colIndex;\r\n        let currentRoWithCol = this.rows.filter(a => a.rowIndex == rowIndex);\r\n        if (currentRoWithCol.length > 0) {\r\n            let column = currentRoWithCol[0].columns[colIndex];\r\n            if (column) {\r\n                let existingColumn = column.rows[item.ColumnRowIndex]\r\n                let ex = existingColumn.columns.length;\r\n                existingColumn.columns.push({ \"index\": ex + 1, \"width\": 100, \"dmoguid\": [] });\r\n                this.resetColumnWidthForRowInColumn(column.rows)\r\n            }\r\n\r\n        }\r\n        this.saveProps();\r\n    }\r\n    onRemoveRowChildColumn(item) {\r\n        let rowIndex: number = item.rowIndex\r\n        let colIndex: number = item.colIndex;\r\n        let currentRoWithCol = this.rows.filter(a => a.rowIndex == rowIndex);\r\n        if (currentRoWithCol.length > 0) {\r\n            let column = currentRoWithCol[0].columns[colIndex];\r\n            if (column) {\r\n                let existingColumn = column.rows[item.ColumnRowIndex]\r\n                let ex = existingColumn.columns.length;\r\n                existingColumn.columns.splice(item.colRowcolumnIndex, 1);\r\n                this.resetColumnWidthForRowInColumn(column.rows)\r\n            }\r\n\r\n        }\r\n        this.saveProps();\r\n    }\r\n    onRemoveChildRow(item) {\r\n        let rowIndex: number = item.rowIndex\r\n        let colIndex: number = item.colIndex;\r\n        let currentRoWithCol = this.rows.filter(a => a.rowIndex == rowIndex);\r\n        if (currentRoWithCol.length > 0) {\r\n            let column = currentRoWithCol[0].columns[colIndex];\r\n            if (column) {\r\n                let existingColumn = column.rows.splice(item.ColumnRowIndex, 1)\r\n                this.resetColumnWidthForRowInColumn(column.rows)\r\n            }\r\n\r\n        }\r\n        this.saveProps();\r\n    }\r\n    onRemoveColumn(rowIndex: number, colIndex: number) {\r\n                if(this.rows[rowIndex].columns.length == 1){\r\n            this.onRemoveRow(rowIndex);\r\n        }else{\r\n        this.rows[rowIndex].columns.splice(colIndex, 1);\r\n        this.resetColumnWidth(null, rowIndex);\r\n        this.saveProps()\r\n        }\r\n    }\r\n\r\n    onRemoveRow(rowIndex: number) {\r\n        this.rows.splice(rowIndex, 1);\r\n        this.saveProps()\r\n    }\r\n\r\n    ShowParentChildRowHover(row) {\r\n        let hasChild = false;\r\n        for (let index = 0; index < row.columns.length; index++) {\r\n            let currentColumn = row.columns[index];\r\n            if (currentColumn && currentColumn.rows && currentColumn.rows.length > 0) {\r\n                for (let ri = 0; ri < currentColumn.rows.length; ri++) {\r\n                    hasChild = true;\r\n                    if (currentColumn.rows[ri] && currentColumn.rows[ri].columns.length > 0) {\r\n                        hasChild = true;\r\n                        break;\r\n                        return;\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        return hasChild;\r\n    }\r\n    ShowParentRowHover(row) {\r\n        let hasChild = true;\r\n        for (let index = 0; index < row.columns.length; index++) {\r\n            let currentColumn = row.columns[index];\r\n            if (currentColumn && currentColumn.rows && currentColumn.rows.length > 0) {\r\n                for (let ri = 0; ri < currentColumn.rows.length; ri++) {\r\n                    if (currentColumn.rows[ri] && currentColumn.rows[ri].columns.length > 0) {\r\n                        hasChild = false;\r\n                        break;\r\n                        return;\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        return hasChild;\r\n    }\r\n    \r\n\r\n    shareDmoSelect(dmo) {\r\n        this.updatePropBaseOfDMO(this.contextMenuData, dmo.guid)\r\n         this.saveDmoDetails(dmo, this.data, true)\r\n    }\r\n\r\n    private async saveDmoDetails(res: IDMComponent, selectedDmog?, isEdit?, iscloned?) {\r\n\r\n        try {\r\n            let url = `wfapibm/DataModel/saveDmoforNewDM`\r\n            let data\r\n            if (isEdit) {\r\n                data = selectedDmog;\r\n            } else {\r\n                data = selectedDmog.data;\r\n            }\r\n            if (iscloned) {\r\n                data = selectedDmog;\r\n            }\r\n            let dmog = {\r\n                \"DMOGProps\": data!.DMOGProps,\r\n                \"id\": data!.DMOGID,\r\n                \"ProcessName\": data!.root!.ProcessName,\r\n                \"Version\": data!.Version\r\n            }\r\n            let isApiVersion3 = true;\r\n\r\n            let model = { \"dmo\": res, \"dmog\": dmog }\r\n            await firstValueFrom(this.apiService.postgateway('',url, model, null));\r\n             return this.reloadParent.emit(true)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    FormControlSelect(type) {\r\n        this.type = type;\r\n        this.OnBMOSave.emit(this);\r\n    }\r\n    GetSelectMenu(rowIndex, colIndex) {\r\n        this.currentRow = rowIndex;\r\n        this.currentColumn = colIndex;\r\n\r\n    }\r\n    onResizeColumn(event, column, rowIndex){\r\n        this.resizeColumn(event, column, rowIndex);\r\n        if(event){\r\n          this.styleObject(column);\r\n        }\r\n        this.saveProps()\r\n      \r\n      }\r\n\r\n    resizeColumnNew(columns, rowIndex){\r\n      this.saveProps();\r\n    }\r\n      \r\n      resizeColumn(colWidth, column, rowIndex) {\r\n        const filteredColumn = this.panelMainContainer.rows[rowIndex]?.columns;\r\n        if (!filteredColumn || filteredColumn.length === 0) {\r\n            return;\r\n        }\r\n        \r\n        // Update target column and calculate widths\r\n        const { totalMWWidth, nonMWCount } = this.updateTargetColumn(filteredColumn, column.colIndex, colWidth);\r\n        \r\n        // Redistribute remaining width\r\n        this.redistributeWidths(filteredColumn, totalMWWidth, nonMWCount);\r\n      }\r\n\r\n      private updateTargetColumn(columns, colIndex, colWidth) {\r\n        let totalMWWidth = 0;\r\n        let nonMWCount = 0;\r\n        \r\n        columns.forEach((column, index) => {\r\n          if (index === colIndex) {\r\n            column.mw = true;\r\n            column.width = Math.floor(parseFloat(colWidth));\r\n          }\r\n          \r\n          if (column.mw) {\r\n            totalMWWidth += column.width || 0;\r\n          } else {\r\n            nonMWCount++;\r\n          }\r\n        });\r\n        \r\n        return { totalMWWidth, nonMWCount };\r\n      }\r\n\r\n      private redistributeWidths(columns, totalMWWidth, nonMWCount) {\r\n        const remainingWidth = 99.5 - totalMWWidth;\r\n        const distributedWidth = nonMWCount > 0 ? remainingWidth / nonMWCount : 0;\r\n        \r\n        columns.forEach(col => {\r\n          if (!col.mw || col.width < 5) {\r\n            col.width = Math.max(distributedWidth, 5);\r\n          }\r\n        });\r\n      }\r\n    styleObject(column) {\r\n        if (column) {\r\n            return { width: column.width + \"%\" }\r\n        }\r\n        return {}\r\n    }\r\n\r\n    styleChildObject(column) {\r\n        if (column) {\r\n            return { width: column.width + \"%\" }\r\n        }\r\n        return {}\r\n    }\r\n\r\n    styleObjectChild(column) {\r\n        if (column) {\r\n            const totalColumns = column?.columns?.length || 1;\r\n            const paddingAdjustment = 1;\r\n            const modifiedWidth = column?.columns?.map((col: any) => {\r\n                return col?.width ? (col?.width - paddingAdjustment / totalColumns) : col?.width;\r\n            })\r\n            return { width: modifiedWidth + \"%\" }\r\n        }\r\n        return {}\r\n\r\n    }\r\n    //prop \r\n    saveProps(isReload?, fromOneToAnotherDmo?) {\r\n        this.resetIndexing();\r\n        if (!this.panelMainContainer) {\r\n            this.panelMainContainer = {\r\n                width: 100,\r\n                rows: this.rows\r\n            }\r\n        } else {\r\n            this.panelMainContainer.rows = this.rows\r\n        }\r\n        var model = {};\r\n        if (fromOneToAnotherDmo) {\r\n            model = {\r\n                \"DMOGID\": this.data.DMOGID,\r\n                \"prevdmogId\": fromOneToAnotherDmo.prevdmogId,\r\n                \"newdmogId\": fromOneToAnotherDmo.dmogId,\r\n                \"dmoguid\": fromOneToAnotherDmo.dmoguid,\r\n                \"DMOGProps\": JSON.stringify(this.panelMainContainer)\r\n            }\r\n        } else {\r\n            model = {\r\n                \"DMOGID\": this.data.DMOGID,\r\n                \"DMOGProps\": JSON.stringify(this.panelMainContainer)\r\n            }\r\n        }\r\n\r\n        const url = `wfapibm/DataModel/SaveDmogProps`;\r\n        this.apiService.postgateway('',url, model).subscribe(r => {\r\n            this.selectedDivId = null;\r\n            this.data.DMOGProps = JSON.stringify(this.panelMainContainer)\r\n            if (isReload) {\r\n                this.reloadParent.emit(true)\r\n            }\r\n        }, error => {\r\n            console.log(error)\r\n        });\r\n\r\n    }\r\n\r\n\r\n    activeCurrentDivBasedOnParent(id) {\r\n        setTimeout(() => {\r\n            let parenthtml = document.getElementById('main_' + this.title);\r\n            if (parenthtml) {\r\n                let activebyID = parenthtml.children;\r\n                for (let index = 0; index < activebyID.length; index++) {\r\n                    const element = activebyID[index];\r\n                    if (element.id == id) {\r\n                        element.classList.add('active-container');\r\n                    }\r\n\r\n                }\r\n            }\r\n        }, 10);\r\n\r\n    }\r\n\r\n    showselection(event: any, clickedDiv: any, id?: string, mouseAction?: string) {\r\n        this.removeAllActiveCell();\r\n        let currentElement = event.currentTarget as HTMLElement;\r\n        if (!currentElement) return;\r\n        if (mouseAction === 'mouseenter') {\r\n            currentElement.classList.add(\"row-hover-item-div\", \"active-container\");\r\n            currentElement.classList.remove(\"selectionDiv\");\r\n        }\r\n    }\r\n\r\n    onDragEnter(event: any, clickedDiv, id?) {\r\n        event.preventDefault();\r\n        this.targetEvent = event;\r\n        this.targetclickedDiv = clickedDiv;\r\n        this.targetid = id;\r\n        this.showContextMenu(event, clickedDiv, id);\r\n    }\r\n\r\n    onDragLeave(event: any, clickedDiv, id?) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    onHover(data: any) {\r\n        if (data?.id) {\r\n            this.hoveredDataId = data.id; // Assign the data.id when hovering\r\n        }\r\n    }\r\n\r\n\r\n    showContextMenu(event: any, clickedDiv: any, id?: string): void {\r\n        if(this.isDraggingStart){\r\n            return ;\r\n        }\r\n        if (this.readonly) {\r\n            this.dataProvider.setSidebarclose(true);\r\n            return;\r\n        }\r\n        this.removeSettingsActive();\r\n        this.manageActiveContainer(id);\r\n\r\n        this.selectedDivId = id;\r\n        event.stopPropagation();\r\n        this.sideNavModel.emit(null);\r\n        this.dataProvider.setHideContextMenu({\r\n            \"dmogId\": this.data.DMOGID,\r\n            'selectedDivId': this.selectedDivId\r\n        });\r\n        if(clickedDiv.dmoguid){\r\n          this.isDmoExist = this.dmoExist(clickedDiv.dmoguid);\r\n           console.log(\"Is Dmo Exist\",  this.isDmoExist);\r\n        }\r\n\r\n  this.handleContextMenuActions(event, clickedDiv, id);\r\n  this.configureContextMenu(event, clickedDiv);\r\n  setTimeout(() => {\r\n    if (this.selectedDivId) {\r\n      const element = document.getElementById(this.selectedDivId);\r\n      if (element) {\r\n        const divRect = element.getBoundingClientRect();\r\n        this.contextMenuPosition.left = divRect.left;\r\n        this.contextMenuPosition.right = divRect.right;\r\n        this.contextMenuPosition.top = divRect.top;\r\n        this.contextMenuPosition.bottom = divRect.bottom;\r\n        this.contextMenuPosition.width = divRect.width;\r\n        this.contextMenuPosition.height = divRect.height;\r\n        this.contextMenuPosition.centerX = divRect.left + (divRect.width / 2);\r\n        this.contextMenuPosition.centerY = divRect.top;\r\n        this.contextMenuPosition.rightClickMenuPositionX = this.contextMenuPosition.centerX;\r\n        this.contextMenuPosition.rightClickMenuPositionY = this.contextMenuPosition.centerY;\r\n        this.contextMenuFormPosition = new ContextMenuPosition();\r\n        this.contextMenuFormPosition = this.contextMenuPosition;\r\n      }\r\n    }\r\n  }, 0);\r\n}\r\n\r\n    private manageActiveContainer(id?: string): void {\r\n        let activeTag = document.querySelector(\".active-container\");\r\n        if (activeTag == null) {\r\n            const targetElement = document.getElementById(id);\r\n            if (targetElement) {\r\n                targetElement.classList.add(\"active-container\");\r\n            }\r\n            activeTag = document.querySelector(\".active-container\");\r\n            this.activateContainer(id);\r\n        }\r\n        if (activeTag)\r\n            if (activeTag.id !== id) {\r\n                this.activateContainer(id);\r\n            }\r\n    }\r\n\r\n    private activateContainer(id?: string): void {\r\n        this.removeAllActiveCell();\r\n        const targetElement = document.getElementById(id);\r\n        if (targetElement) {\r\n            targetElement.classList.add(\"active-container\");\r\n        }\r\n        this.activeCurrentDivBasedOnParent(id);\r\n    }\r\n\r\n    private handleContextMenuActions(event: any, clickedDiv: any, id?: string): void {\r\n        if (!clickedDiv) return;\r\n\r\n        switch (clickedDiv.type) {\r\n            case 'column':\r\n                this.columnSetting(event, clickedDiv);\r\n                break;\r\n            case 'parentRow':\r\n                this.rowSetting(event, clickedDiv.r, id);\r\n                break;\r\n            case 'NestedcolumnRow':\r\n                this.subRowSetting(event, clickedDiv, id);\r\n                break;\r\n            case 'columnRow':\r\n                this.subColumnSetting(event, clickedDiv, id);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private configureContextMenu(event: any, clickedDiv: any): void {\r\n        this.showFormContextMenu = false;\r\n        this.showSharedmoContextMenu = false;\r\n        this.resetDivColour();\r\n\r\n        this.contextMenuPosition = new ContextMenuPosition();\r\n        this.contextMenuData = clickedDiv;\r\n    }\r\n\r\n\r\n    resetDivColour() {\r\n        return;\r\n    }\r\n\r\n\r\n    updatePropBaseOfDMO(data, dmoguid) {\r\n        if (data == undefined || data == null)\r\n            return\r\n        switch (data.type) {\r\n            case 'parentRow': {\r\n                let currentRoWithCol = this.rows.filter(a => a.rowIndex == data.rowIndex);\r\n                let column = currentRoWithCol[0].columns.length;\r\n                break;\r\n            };\r\n            case 'column': {\r\n                let currentRoWithCol = this.rows.filter(a => a.rowIndex == data.rowIndex);\r\n                let column = currentRoWithCol[0].columns;\r\n                for (let index = 0; index < column.length; index++) {\r\n                    if (index == data.colIndex) {\r\n                        column[index].dmoguid.push(dmoguid);\r\n                        break;\r\n                    }\r\n                }\r\n                this.saveProps()\r\n\r\n                break;\r\n            };\r\n\r\n            case 'columnRow': {\r\n                let item = { 'rowIndex': data.rowIndex, \"colIndex\": data.colIndex, 'ColumnRowIndex': data.colRowIndex, \"colRowcolumnIndex\": data.colRowcolumnIndex }\r\n\r\n\r\n                let currentRoWithCol = this.rows.filter(a => a.rowIndex == data.rowIndex);\r\n                if (currentRoWithCol.length > 0) {\r\n                    let column = currentRoWithCol[0].columns[data.colIndex];\r\n                    if (column) {\r\n                        let existingColumn = column.rows[data.colRowIndex]\r\n                        for (let index = 0; index < existingColumn.columns.length; index++) {\r\n                            if (index == data.colRowcolumnIndex) {\r\n                                existingColumn.columns[index].dmoguid.push(dmoguid);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.saveProps()\r\n                break;\r\n            };\r\n\r\n\r\n        }\r\n\r\n    }\r\n    updatereOrdering(targetId, dmoguid) {\r\n        \r\n        if (targetId && targetId.length > 0 && dmoguid) {\r\n            let ids = targetId.split('_');\r\n            if (ids && ids.length > 0) {\r\n                let _currentdmog = ids[0];\r\n                let rowORCol = ids[1];\r\n                if (rowORCol == \"column\") {\r\n                    let rowIndex = Number(ids[2]);\r\n                    let colIndex = Number(ids[3]);\r\n                    let data = { 'rowIndex': rowIndex, 'colIndex': colIndex, 'type': 'column' }\r\n                    this.removeDmoToOthers(dmoguid);\r\n                    this.updatePropBaseOfDMO(data, dmoguid);\r\n                }\r\n                else if (rowORCol == \"columnRow\") {\r\n                    let rowIndex = Number(ids[2]);\r\n                    let colIndex = Number(ids[3]);\r\n                    let colRowIndex = Number(ids[4]);\r\n                    let colRowcolumnIndex = Number(ids[5]);\r\n                    let data = { 'type': 'columnRow', 'rowIndex': rowIndex, \"colIndex\": colIndex, 'colRowIndex': colRowIndex, \"colRowcolumnIndex\": colRowcolumnIndex }\r\n\r\n\r\n                    this.removeDmoToOthers(dmoguid);\r\n                    this.updatePropBaseOfDMO(data, dmoguid);\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    removeDmoToOthers1(dmoguid) {\r\n        if (this.rows.length) {\r\n            for (let index = 0; index < this.rows.length; index++) {\r\n                const r = this.rows[index];\r\n                for (let c = 0; c < r.columns.length; c++) {\r\n                    const col = r.columns[c];\r\n                    if (col.dmoguid != null) {\r\n                        var existsIndex = col.dmoguid.indexOf(dmoguid);\r\n                        if (existsIndex > -1) {\r\n                            col.dmoguid.splice(existsIndex, 1);\r\n                        }\r\n\r\n                    }\r\n                    for (let cr = 0; cr < col.rows.length; cr++) {\r\n                        const crc = col.rows[cr];\r\n                        for (let icrc = 0; icrc < crc.columns.length; icrc++) {\r\n                            const cColumn = crc.columns[icrc];\r\n                            if (cColumn.dmoguid != null) {\r\n                                var existsIndex = cColumn.dmoguid.indexOf(dmoguid);\r\n                                if (existsIndex > -1) {\r\n                                    cColumn.dmoguid.splice(existsIndex, 1);\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    //2nd \r\n    removeDmoToOthers(dmoguid) {\r\n        if (this.rows.length) {\r\n            for (let index = 0; index < this.rows.length; index++) {\r\n                const r = this.rows[index];\r\n                for (let c = 0; c < r.columns.length; c++) {\r\n                    const col = r.columns[c];\r\n                    if (col.dmoguid != null) {\r\n                        var existsIndex = col.dmoguid.indexOf(dmoguid);\r\n                        if (existsIndex > -1) {\r\n                            col.dmoguid.splice(existsIndex, 1);\r\n                        }\r\n\r\n                    }\r\n                    for (let cr = 0; cr < col.rows.length; cr++) {\r\n                        const crc = col.rows[cr];\r\n                        for (let icrc = 0; icrc < crc.columns.length; icrc++) {\r\n                            const cColumn = crc.columns[icrc];\r\n                            if (cColumn.dmoguid != null) {\r\n                                var existsIndex = cColumn.dmoguid.indexOf(dmoguid);\r\n                                if (existsIndex > -1) {\r\n                                    cColumn.dmoguid.splice(existsIndex, 1);\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n  dmoExist(dmoguidList: any[] ): boolean {\r\n     if (dmoguidList==undefined || dmoguidList==null || dmoguidList.length<1) {\r\n      return false;\r\n  }\r\n  if (!this.availableActiveDmogIdes || !this.AvailableActiveSharredDmoguides) {\r\n      return false;\r\n  }\r\n  const list = Array.isArray(dmoguidList) ? dmoguidList : [dmoguidList];\r\n  let exists= list.some(dmoguid =>\r\n      this.availableActiveDmogIdes.includes(dmoguid) ||\r\n      this.AvailableActiveSharredDmoguides.includes(dmoguid)\r\n  );\r\n  return exists;\r\n}\r\n\r\n\r\n    //This function filters out the looping DMOGUIDs with available active and shared dmos DMOGUIDs\r\n    filterDmoguidList(dmoguidList: any[]): any[] {\r\n        if (!dmoguidList || !this.availableActiveDmogIdes || !this.AvailableActiveSharredDmoguides) {\r\n            return [];\r\n        }\r\n\r\n        return dmoguidList.filter(dmoguid =>\r\n            this.availableActiveDmogIdes.includes(dmoguid) || this.AvailableActiveSharredDmoguides.includes(dmoguid)\r\n        );\r\n    }\r\n\r\n\r\n    removeOrphanedDmos(dmoguidList: any[] ): boolean {\r\n         if (dmoguidList==undefined || dmoguidList==null || dmoguidList.length<1) {\r\n                return false;\r\n            }\r\n            if (!this.availableActiveDmogIdes || !this.AvailableActiveSharredDmoguides) {\r\n                return false;\r\n            }\r\n            const list = Array.isArray(dmoguidList) ? dmoguidList : [dmoguidList];\r\n            let exists= list.some(dmoguid =>\r\n                this.availableActiveDmogIdes.includes(dmoguid) ||\r\n                this.AvailableActiveSharredDmoguides.includes(dmoguid)\r\n            );\r\n            return exists;    \r\n      }\r\n      \r\n\r\n    getCurrentDMO(dmoguid) {\r\n        const findDmo = (list) => list?.filter(a => a.guid === dmoguid)[0] ?? null;\r\n    \r\n        let dmo = findDmo(this.data?.formData?.components);\r\n        if (dmo) {\r\n            this.setReadOnly(dmo);\r\n            return dmo;\r\n        }\r\n    \r\n        let filteredList = findDmo(this.SharedDmosList);\r\n        if (filteredList) {\r\n            this.setReadOnly(filteredList);\r\n            return filteredList;\r\n        }\r\n    \r\n        return null;\r\n    }\r\n    \r\n    setReadOnly(dmo) {\r\n        if (this.isDraggingStart) {\r\n            dmo.IsReadOnly = this.isDraggingStart;\r\n        }\r\n    }\r\n   \r\n    onMouseEnterInnerDragEnded(event, dmoguid) {\r\n        //this.dragdmoguid = dmoguid;\r\n        this.isInnerDragging = true;\r\n        //this.dragDmoToAnotherdmog.emit({ \"dmogId\": this.data.DMOGID, \"dmoguid\": dmoguid, \"InnerDragging\": this.isInnerDragging });\r\n       \r\n    }\r\n    onMouseLeaveInnerDragEnded(event, dmoguid) {\r\n        this.isInnerDragging = false;\r\n        event.stopPropagation();\r\n        // this.dragDmoToAnotherdmog.emit({\r\n        //     \"dmogId\": this.data.DMOGID,\r\n        //     \"dmoguid\": dmoguid,\r\n        //     \"InnerDragging\": this.isInnerDragging,\r\n        //     \"eventType\": \"mouseleave\",\r\n        //     \"timestamp\": Date.now()\r\n        // });\r\n    }\r\n\r\n    onInnerDragEnded(event, dmoguid) {\r\n        setTimeout(() => {\r\n            console.log(\"Drag End Before currentDmogId;\", this.currentDmogId)\r\n            this.isInnerDragging = false;\r\n            this.dragDmoToAnotherdmog.emit({ \"dmogId\": this.data.DMOGID, \"dmoguid\": dmoguid, \"InnerDragging\": this.isInnerDragging });\r\n            event.stopPropagation();\r\n        }, 5);\r\n\r\n    }\r\n    dragdmo(event, dmoguid, currentDmogId) {\r\n        event.stopPropagation();\r\n        this.currentDmogId =  currentDmogId;\r\n        console.log(\"Drag start Before currentDmogId;\", this.currentDmogId)\r\n        console.log(\"Drag start of DMO's\", dmoguid)\r\n        event.dataTransfer.setData(\"dmoguid\", dmoguid); \r\n        this.dragdmoguid = dmoguid;\r\n        this.isInnerDragging = true;\r\n        this.dragDmoToAnotherdmog.emit({ \"dmogId\": this.data.DMOGID, \"dmoguid\": dmoguid, \"InnerDragging\": this.isInnerDragging });\r\n       \r\n\r\n    }\r\n    \r\n    onDragOver(event) {\r\n        let targetId = event.currentTarget.id;\r\n        console.log(\"Drag drag over funtion of DMO's\", targetId)\r\n        event.preventDefault()\r\n\r\n    }\r\n    addNewRow(event:any) {\r\n        event.stopPropagation();\r\n        this.onAddRow();\r\n    }\r\n\r\n    dropdmo(event: any, dmoguid) {\r\n        if (this.readonly)\r\n            return;\r\n        event.stopPropagation();\r\n        \r\n        let targetId = event.currentTarget.id;\r\n        console.log(\"Drag drop funtion of DMO's\", targetId)\r\n        \r\n    const draggedDmoguid = event.dataTransfer.getData(\"dmoguid\");\r\n\r\n    const targetDmo = (event.target as HTMLElement).closest('[data-dmoguid]');\r\n    if (draggedDmoguid && targetDmo) {\r\n        const targetGuid = targetDmo.getAttribute('data-dmoguid');\r\n        if (targetGuid && draggedDmoguid !== targetGuid) {\r\n           if(this.handleDmoReordering(event, draggedDmoguid, targetGuid))\r\n           {\r\n            return;\r\n           }\r\n            \r\n        }\r\n    }\r\n    \r\n        let fromDmog = event.dataTransfer.getData(\"dmogRows\");\r\n        if (fromDmog && this.data.DMOGID == fromDmog) {\r\n            this.dataProvider.setHideContextMenu(false);\r\n            this.onAddRow();\r\n\r\n            return;\r\n        }\r\n        let ControlDmogDmo = event.dataTransfer.getData(\"ControlDmogDmo\");\r\n        if (ControlDmogDmo) {\r\n            let dmoModel = JSON.parse(ControlDmogDmo);\r\n            if (dmoModel) {\r\n                this.dataProvider.setHideContextMenu(false);\r\n                let control = dmoModel.contol;\r\n                let selectedItem = dmoModel.selectedItem;\r\n                this.FormControlSelect(control);\r\n\r\n                return;\r\n            }\r\n            return;\r\n        }\r\n        let ColumnDmogRows = event.dataTransfer.getData(\"ColumnDmogRows\");\r\n        if (ColumnDmogRows) {\r\n            let dmoModel = JSON.parse(ColumnDmogRows);\r\n            if (dmoModel) {\r\n                this.dataProvider.setHideContextMenu(false);\r\n                let selectedItem = dmoModel.selectedItem;\r\n                this.onAddRowInColumn(selectedItem);\r\n\r\n                return;\r\n            }\r\n\r\n        }\r\n        let SubColumnDmo = event.dataTransfer.getData(\"SubColumnDmo\");\r\n        if (SubColumnDmo) {\r\n            let dmoModel = JSON.parse(SubColumnDmo);\r\n            if (dmoModel) {\r\n                this.dataProvider.setHideContextMenu(false);\r\n                let control = dmoModel.contol;\r\n                let selectedItem = dmoModel.selectedItem;\r\n                this.FormControlSelect(control);\r\n\r\n                return;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let SharedDmogDmo = event.dataTransfer.getData(\"SharedDmogDmo\");\r\n        if (SharedDmogDmo) {\r\n            let dmoModel = JSON.parse(SharedDmogDmo);\r\n            if (dmoModel) {\r\n                let contol = dmoModel.contol;\r\n                this.shareDmoSelect(contol);\r\n                this.sideNavModel.emit(null);\r\n\r\n                return;\r\n            }\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        let grouping =  event.dataTransfer.getData(\"cardGroupDmog\");\r\n        if(grouping){\r\n            this.dataProvider.setSidebarclose(true);\r\n            let dmogModel = JSON.parse(grouping);\r\n            if(dmogModel.type === 'Card' || dmogModel.type === 'CardGroup'){\r\n                let data = {\r\n                    model: dmogModel,\r\n                    targetId: targetId\r\n                  };\r\n                this.DraggingItemsModel.emit(data);\r\n                return;\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.showFormContextMenu = false;\r\n        this.showSharedmoContextMenu = false;\r\n        if(targetId && targetId.length > 0 &&  this.currentDmogId){\r\n            console.log(\"Drop dmo Calling... current Dmo Id is \", this.currentDmogId);\r\n            let ids = targetId.split('_');\r\n            if(ids[0] === this.currentDmogId){\r\n                this.currentDmogId =\"\";\r\n                this.updatereOrdering(targetId, this.dragdmoguid)\r\n            } \r\n        }\r\n       \r\n        if (!dmoguid) {\r\n            if (targetId && targetId.length > 0) {\r\n                let ids = targetId.split('_');\r\n                if (ids && ids.length > 0) {\r\n                    console.log(\"Drop dmo Emitter Calling... current Dmo Id is \", dmoguid);\r\n                    this.dropDmoToAnotherdmog.emit({ \"dmogId\": this.data.DMOGID, \"targetId\": targetId });\r\n                }\r\n            }\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n\r\n\r\n    handleDmoReordering(event: DragEvent, draggedDmoguid: string, targetGuid: string): boolean {\r\n        const column = this.findColumnContainingDmo(targetGuid);\r\n        if (!column || !column.dmoguid) return false;\r\n    \r\n        const fromIndex = column.dmoguid.indexOf(draggedDmoguid);\r\n        const toIndex = column.dmoguid.indexOf(targetGuid);\r\n        \r\n        if (fromIndex === -1 || toIndex === -1) return false;\r\n    \r\n        this.moveArrayItem(column.dmoguid, fromIndex, toIndex);\r\n        \r\n        this.saveProps();\r\n        this.cdref.detectChanges();\r\n        return true;\r\n    }\r\n    \r\n    private moveArrayItem(array: any[], fromIndex: number, toIndex: number) {\r\n        const item = array[fromIndex];\r\n        array.splice(fromIndex, 1);\r\n        array.splice(toIndex, 0, item);\r\n    }\r\n    \r\n    private findColumnContainingDmo(dmoguid: string) {\r\n        for (const row of this.rows) {\r\n            for (const column of row.columns) {\r\n                if (column.dmoguid?.includes(dmoguid)) {\r\n                    return column;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    dropRow(event: any) {\r\n        if (this.readonly)\r\n            return;\r\n        event.stopPropagation();\r\n        let targetId = event.currentTarget.id;\r\n        let fromDmog = event.dataTransfer.getData(\"dmogRows\");\r\n        if (this.data.DMOGID == fromDmog) {\r\n            this.onAddRow();\r\n        }\r\n        let grouping =  event.dataTransfer.getData(\"cardGroupDmog\");\r\n        if(grouping){\r\n            this.dataProvider.setSidebarclose(true);\r\n            let dmogModel = JSON.parse(grouping);\r\n            if(dmogModel.type === 'Card' || dmogModel.type === 'CardGroup'){\r\n                let data = {\r\n                    model: dmogModel,\r\n                    targetId: targetId\r\n                  };\r\n                this.DraggingItemsModel.emit(data);\r\n               // return;\r\n            }\r\n           // return;\r\n        }\r\n\r\n    }\r\n\r\n    showChildContextMenu(event, id, mouseAction) {\r\n        event.stopPropagation();\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n\r\n        let activeTag = document.querySelectorAll(\".row-hover-item-div\");\r\n\r\n        activeTag.forEach(\r\n            cell => {\r\n                if (!cell.classList.contains('NoRemoveHover')) {\r\n                    cell.classList.remove('row-hover-item-div');\r\n                }\r\n\r\n            })\r\n        if (mouseAction == 'mouseenter') {\r\n            let currentid = document.getElementById(id)\r\n            if (currentid) {\r\n                currentid.classList.add(\"row-hover-item-div\")\r\n\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    CurrentDropItem(event, id) {\r\n        const div: HTMLDivElement = <HTMLDivElement>event.relatedTarget\r\n    }\r\n    OperateContextMenu($event) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n        var data = $event.showContextMenuFor;\r\n        this.SelectdItem.emit({ \"SelectdItem\": this.data });\r\n        var option = $event.option;\r\n        this.showFormContextMenu = false;\r\n        if (option == \"AddDMO\") {\r\n            this.contextMenuFormPosition = $event.position;\r\n            this.showFormContextMenu = true;\r\n            return;\r\n        }\r\n        else if (option == \"shareDMO\") {\r\n            this.showSharedmoContextMenu = true;\r\n            this.contextMenuFormPosition = $event.position;\r\n\r\n            return;\r\n\r\n        }\r\n        if (option == \"EditDMO\" || option == \"DeleteDMO\" || option == \"ConditionsDMO\" || option == \"CloneDMO\") {\r\n            switch (data.type) {\r\n                case 'column': {\r\n                    if (data.dmoguid) {\r\n                        let dmowithDmog = { \"dmog\": this.data, \"dmo\": this.getCurrentDMO(data.dmoguid), \"dmoguid\": data.dmoguid };\r\n                        if (option == \"DeleteDMO\") {\r\n                            this.onDmoDelete.emit(dmowithDmog);\r\n                            this.cdref.detectChanges();\r\n                        } else if (option == \"EditDMO\") {\r\n                            this.onDmoEdit.emit(dmowithDmog);\r\n                        }\r\n                        else if (option == \"ConditionsDMO\") {\r\n                            this.openConditionPopup.emit(dmowithDmog);\r\n                        }\r\n                        else if (option == \"CloneDMO\") {\r\n                            this.openclonePopup.emit(dmowithDmog);\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    let currentRoWithCol = this.rows.filter(a => a.rowIndex == data.rowIndex);\r\n                    for (let index = 0; index < currentRoWithCol.length; index++) {\r\n                        for (let c = 0; c < currentRoWithCol[index].columns.length; c++) {\r\n                            if (c == data.colIndex) {\r\n                                const dmoguid = currentRoWithCol[index].columns[c].dmoguid[0]\r\n                                if (dmoguid) {\r\n                                    let dmowithDmog = { \"dmog\": this.data, \"dmo\": this.getCurrentDMO(dmoguid), \"dmoguid\": dmoguid };\r\n                                    if (option == \"DeleteDMO\") {\r\n                                        this.onDmoDelete.emit(dmowithDmog);\r\n                                        this.cdref.detectChanges();\r\n                                    } else if (option == \"EditDMO\") {\r\n                                        this.onDmoEdit.emit(dmowithDmog);\r\n                                    }\r\n                                    else if (option == \"ConditionsDMO\") {\r\n                                        this.openConditionPopup.emit(dmowithDmog);\r\n                                    }\r\n                                    else if (option == \"CloneDMO\") {\r\n                                        this.openclonePopup.emit(dmowithDmog);\r\n                                    }\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    break;\r\n                };\r\n\r\n                case 'columnRow': {\r\n                    let dmoguid = \"\";\r\n                    if (data.dmoguid) {\r\n                        dmoguid = data.dmoguid;\r\n                    } else {\r\n                        let item = { 'rowIndex': data.rowIndex, \"colIndex\": data.colIndex, 'ColumnRowIndex': data.colRowIndex }\r\n                        let currentRoWithCol = this.rows.filter(a => a.rowIndex == data.rowIndex);\r\n                        loop1:\r\n                        for (let index = 0; index < currentRoWithCol.length; index++) {\r\n                            loop2:\r\n                            for (let c = 0; c < currentRoWithCol[index].columns.length; c++) {\r\n                                if (c == data.colIndex) {\r\n\r\n                                    let column = currentRoWithCol[0].columns[c];\r\n                                    if (column) {\r\n                                        let existingColumn = column.rows[item.ColumnRowIndex]\r\n                                        loop3:\r\n                                        for (let crin = 0; crin < existingColumn.columns.length; crin++) {\r\n\r\n                                            if (crin == data.colRowcolumnIndex) {\r\n                                                const element = existingColumn.columns[crin];\r\n                                                dmoguid = element.dmoguid[0];\r\n                                                break loop2;\r\n                                                return;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    let dmowithDmog = { \"dmog\": this.data, \"dmo\": this.getCurrentDMO(dmoguid), \"dmoguid\": dmoguid };\r\n                    if (option == \"DeleteDMO\") {\r\n                        this.onDmoDelete.emit(dmowithDmog);\r\n                        this.cdref.detectChanges();\r\n                    } else if (option == \"EditDMO\") {\r\n                        this.onDmoEdit.emit(dmowithDmog);\r\n                    }\r\n                    else if (option == \"ConditionsDMO\") {\r\n                        this.openConditionPopup.emit(dmowithDmog);\r\n                    }\r\n                    else if (option == \"CloneDMO\") {\r\n                        this.openclonePopup.emit(dmowithDmog);\r\n                    }\r\n                    break;\r\n                };\r\n\r\n\r\n\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.resetDivColour();\r\n        switch (data.type) {\r\n            case 'parentRow': {\r\n                if (option == 'AddColumn') {\r\n                    this.onAddColumn(data.rowIndex);\r\n                }\r\n                else if (option == 'RemoveRow') {\r\n                    this.onRemoveRow(data.rowIndex);\r\n                    this.sideNavModel.emit(null);\r\n                    let model:SideNavModel={\r\n                        type:'dmog',\r\n                        dmog:this.data,\r\n                        data:this.panelMainContainer\r\n                          };\r\n                        this.sideNavModel.emit(model)\r\n                }\r\n\r\n                break;\r\n            };\r\n            case 'column': {\r\n                if (option == 'AddColumn') {\r\n                    this.onAddColumn(data.rowIndex);\r\n                }\r\n                else if (option == 'AddRow') {\r\n                    let item = { 'rowIndex': data.rowIndex, \"colIndex\": data.colIndex }\r\n                    this.onAddRowInColumn(item);\r\n                }\r\n                else if (option == 'RemoveColumn') {\r\n                    this.onRemoveColumn(data.rowIndex, data.colIndex)\r\n                    this.sideNavModel.emit(null);\r\n                        let model:SideNavModel={\r\n                        type:'dmog',\r\n                        dmog:this.data,\r\n                        data:this.panelMainContainer\r\n                          };\r\n                        this.sideNavModel.emit(model)\r\n                }\r\n\r\n                break;\r\n            };\r\n\r\n            case 'columnRow': {\r\n                if (option == 'AddColumn') {\r\n                    let item = { 'rowIndex': data.rowIndex, \"colIndex\": data.colIndex, 'ColumnRowIndex': data.colRowIndex }\r\n                    this.onAddRowChildColumn(item);\r\n                }\r\n                else if (option == 'RemoveColumn') {\r\n                    \r\n                    if (this.isDmoInLastNestedColumn(data)) {\r\n                        let item = { 'rowIndex': data.rowIndex, \"colIndex\": data.colIndex, 'ColumnRowIndex': data.colRowIndex, \"colRowcolumnIndex\": data.colRowcolumnIndex }\r\n                        this.onRemoveChildRow(item);\r\n                        this.sideNavModel.emit(null);\r\n                        let model:SideNavModel={\r\n                            type:'dmog',\r\n                            dmog:this.data,\r\n                            data:this.panelMainContainer\r\n                              };\r\n                            this.sideNavModel.emit(model)\r\n                    }\r\n                    else\r\n                    {\r\n                        let item = { 'rowIndex': data.rowIndex, \"colIndex\": data.colIndex, 'ColumnRowIndex': data.colRowIndex, \"colRowcolumnIndex\": data.colRowcolumnIndex }\r\n                        this.onRemoveRowChildColumn(item);\r\n                        this.sideNavModel.emit(null);\r\n                        let model:SideNavModel={\r\n                            type:'dmog',\r\n                            dmog:this.data,\r\n                            data:this.panelMainContainer\r\n                              };\r\n                            this.sideNavModel.emit(model)\r\n                    }\r\n                   \r\n                }\r\n                break;\r\n            };\r\n            case 'NestedcolumnRow': {\r\n                if (option == 'AddColumn') {\r\n                    let item = { 'rowIndex': data.rowIndex, \"colIndex\": data.colIndex, 'ColumnRowIndex': data.colRowIndex }\r\n                    this.onAddRowChildColumn(item);\r\n                }\r\n                else if (option == 'RemoveColumn') {\r\n                    let item = { 'rowIndex': data.rowIndex, \"colIndex\": data.colIndex, 'ColumnRowIndex': data.colRowIndex, \"colRowcolumnIndex\": data.colRowcolumnIndex }\r\n                    this.onRemoveRowChildColumn(item);\r\n                    this.sideNavModel.emit(null);\r\n                    let model:SideNavModel={\r\n                        type:'dmog',\r\n                        dmog:this.data,\r\n                        data:this.panelMainContainer\r\n                          };\r\n                        this.sideNavModel.emit(model)\r\n                    \r\n                }\r\n                else if (option == 'RemoveRow') {\r\n                    let item = { 'rowIndex': data.rowIndex, \"colIndex\": data.colIndex, 'ColumnRowIndex': data.colRowIndex, \"colRowcolumnIndex\": data.colRowcolumnIndex }\r\n                    this.onRemoveChildRow(item);\r\n                    this.sideNavModel.emit(null);\r\n                    let model:SideNavModel={\r\n                        type:'dmog',\r\n                        dmog:this.data,\r\n                        data:this.panelMainContainer\r\n                          };\r\n                        this.sideNavModel.emit(model)\r\n                }\r\n                break;\r\n            };\r\n\r\n\r\n        }\r\n    }\r\n    \r\n\r\nisDmoInLastNestedColumn(data: any): boolean {\r\n  const rows = data.r;\r\n  return rows.columns.some((column: any) => this.hasEmptyDmoInLastColumn(column));\r\n}\r\n\r\nprivate hasEmptyDmoInLastColumn(column: any): boolean {\r\n  if (!column.rows) return false;\r\n\r\n  return column.rows.some((row: any) => {\r\n    const nestedColumns = row.columns || [];\r\n    return this.checkNestedColumns(nestedColumns);\r\n  });\r\n}\r\n\r\nprivate checkNestedColumns(nestedColumns: any[]): boolean {\r\n  return nestedColumns.some((nestedCol: any) => {\r\n    const isLastColumn = nestedColumns.length === 1;\r\n    const hasDmoGuid = nestedCol.dmoguid && nestedCol.dmoguid.length > 0;\r\n    return !hasDmoGuid && isLastColumn;\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    AddDmogAbove($event) {\r\n        this.OnAddDmogAbove.emit(this);\r\n    }\r\n  AddDmogInGroup(){\r\n    this.OnAddDmogInGroup.emit(this);\r\n  }\r\n  activeteMe(event) {\r\n    event.stopPropagation();\r\n    this.selectedDivId = 'main_'+this.title;\r\n    this.removeOtherActive('main_'+this.title);\r\n    this.removeAllActiveCell();\r\n    if(!this.panelMainContainer){\r\n      let column=[];\r\n        let letNextRow={rowIndex:0,\r\n          columns:column\r\n        } as PanelMainRow\r\n      }\r\n      let model:SideNavModel={\r\n      type:'dmog',\r\n      dmog:this.data,\r\n      data:this.panelMainContainer\r\n\r\n        };\r\n        this.sideNavModel.emit(model)\r\n    }\r\n    rowSetting(event, selectedRow, id, json?) {\r\n        event.stopPropagation();\r\n        this.manageActiveContainer(id);\r\n        this.selectedDivId = id;\r\n\r\n        let model: SideNavModel = {\r\n            type: 'ParentRow',\r\n            dmog: this.data,\r\n            data: selectedRow,\r\n            props: this.panelMainContainer,\r\n\r\n        };\r\n        this.sideNavModel.emit(model)\r\n        if (json) {\r\n            this.showRowContextMenu(event, json, id);\r\n        }\r\n        setTimeout(() => {\r\n            if (this.selectedDivId) {\r\n              const element = document.getElementById(this.selectedDivId);\r\n              if (element) {\r\n                const divRect = element.getBoundingClientRect();\r\n                this.contextMenuPosition.left = divRect.left;\r\n                this.contextMenuPosition.right = divRect.right;\r\n                this.contextMenuPosition.top = divRect.top;\r\n                this.contextMenuPosition.bottom = divRect.bottom;\r\n                this.contextMenuPosition.width = divRect.width;\r\n                this.contextMenuPosition.height = divRect.height;\r\n                this.contextMenuPosition.centerX = divRect.left + (divRect.width / 2);\r\n                this.contextMenuPosition.centerY = divRect.top;\r\n                this.contextMenuPosition.rightClickMenuPositionX = this.contextMenuPosition.centerX;\r\n                this.contextMenuPosition.rightClickMenuPositionY = this.contextMenuPosition.centerY;\r\n                this.contextMenuFormPosition = new ContextMenuPosition();\r\n                this.contextMenuFormPosition = this.contextMenuPosition;\r\n              }\r\n            }\r\n          }, 0);\r\n\r\n    }\r\n\r\n    showRowContextMenu(event: any, clickedDiv: any, id?: string): void {\r\n        if (this.readonly) {\r\n            this.dataProvider.setSidebarclose(true);\r\n            return;\r\n        }\r\n        this.selectedDivId = id;\r\n        event.stopPropagation();\r\n        this.sideNavModel.emit(null);\r\n        this.dataProvider.setHideContextMenu({\r\n            \"dmogId\": this.data.DMOGID,\r\n            'selectedDivId': this.selectedDivId\r\n        });\r\n\r\n        this.handleContextMenuActions(event, clickedDiv, id);\r\n        this.configureContextMenu(event, clickedDiv);\r\n    }\r\n\r\n\r\n\r\n\r\n    subRowSetting(event, selectedRow, id) {\r\n        event.stopPropagation();\r\n        this.selectedDivId = id;\r\n\r\n        let model: SideNavModel = {\r\n            type: 'NestedcolumnRow',\r\n            dmog: this.data,\r\n            data: selectedRow,\r\n            props: this.panelMainContainer,\r\n\r\n        };\r\n        this.sideNavModel.emit(model)\r\n    }\r\n    subColumnSetting(event, selectedRow, id) {\r\n        event.stopPropagation();\r\n        this.selectedDivId = id;\r\n\r\n        let model: SideNavModel = {\r\n            type: 'columnRow',\r\n            dmog: this.data,\r\n            data: selectedRow,\r\n            props: this.panelMainContainer,\r\n\r\n        };\r\n        this.sideNavModel.emit(model)\r\n    }\r\n    getWidthInPercentage(event, id: any) {\r\n        event.stopPropagation();\r\n        console.log(event);\r\n        let looped = document.getElementById(\"resizediv_\" + id);\r\n        const parentWidth = looped.parentElement?.clientWidth || window.innerWidth; // Get parent width or window width\r\n        const divWidth = looped.clientWidth; // Get div width\r\n        let width = Math.floor((divWidth / parentWidth) * 100);\r\n        setTimeout(() => {\r\n            let looped = document.getElementById(\"resizediv_\" + id);\r\n            looped.style.width = `${width}% !important`;\r\n            console.log(looped.style.width);\r\n\r\n        }, 100);\r\n\r\n\r\n    }\r\n    columnSetting(event, selectedColumn) {\r\n        event.stopPropagation();\r\n        let model: SideNavModel = {\r\n            type: 'Column',\r\n            dmog: this.data,\r\n            data: selectedColumn,\r\n            props: this.panelMainContainer,\r\n\r\n        };\r\n        this.sideNavModel.emit(model)\r\n\r\n    }\r\n    removeAllActiveCell() {\r\n        let activeTag = document.querySelectorAll(\".active-container\");\r\n\r\n        activeTag.forEach(\r\n            cell => {\r\n                cell.classList.remove('active-container');\r\n                //Remove the child class\r\n                //   let activeChildren = cell.querySelectorAll(\".active-container-child\");\r\n                //   activeChildren.forEach(child => {\r\n                //     child.classList.remove('active-container-child');\r\n                // });\r\n            })\r\n    }\r\n    @HostListener('window:scroll', [])\r\n    onWindowScroll() {\r\n        this.resetDivColour()\r\n    }\r\n\r\n}\r\n\r\n","\r\n\r\n<div\r\n[ngClass]=\"isContainerActive('main_'+title)\"\r\n  style=\"margin-bottom: 10px;\"\r\n  cdkDragBoundary=\".form-view\"\r\n  class=\"rectangle resizePanel\"\r\n  [class.show-default-popup]=\"!readonly && data.Type !== 'CardGroup'\"\r\n  [class.show-group-popup]=\"!readonly && data.Type === 'CardGroup'\"\r\n  id=\"{{'main_'+title}}\"\r\n  [ngStyle]=\"style\"\r\n  (drop)=\"dropRow($event)\"\r\n  (dragover)=\"onDragOver($event)\" \r\n  (mouseenter)=\"dmo.display = true\"\r\n  (mouseleave)=\"dmo.display = false;\"\r\n>\r\n  <div [ngStyle]=\"headerStyle\" (click)=\"ShowDmogSettings($event)\"  (keydown)=\"onKeyDown($event)\"\r\n    class=\"row\"\r\n    (mouseover)=\"hoveredRowIndex = data\"\r\n    (mouseout)=\"hoveredRowIndex = null\"\r\n    (focus)=\"onFocus()\"\r\n    (blur)=\"onBlur()\"\r\n  >\r\n    <div class=\"col-md-6\">\r\n      \r\n      <label for=\"inputField\" class=\"input-label dmog-title\" style=\"font-size: 13px;\" cdkDragHandle >\r\n        <i class=\"fas fa-grip-lines drag-icon\"></i>\r\n        <span *ngIf=\"readonly && mode !== 'Published'\"><i class=\"fas fa-link\"></i></span>\r\n         {{ title }}\r\n      </label>\r\n\r\n     \r\n    </div>\r\n    <div class=\"col-md-2\">\r\n    \r\n    </div>\r\n   \r\n  </div>\r\n\r\n  <div (drop)=\"dropdmo($event)\" *ngFor=\"let r of rows; let rowIndex = index\" id=\"{{r.columns.length> 0? '': data.id+'_row_'+rowIndex}}\"\r\n  [ngClass]=\"r.columns.length>0 && ShowParentRowHover(r)?'NoRemoveHover row-hover-item-div main-row-div border-hide':r.columns.length<1 && isCurrentActive(data.id+'_row_'+rowIndex)? 'active-container':''\"\r\n  class=\"empty-row colouredDiv selectionDiv rightpadding row rowBorder sub-row dmo.display row-colour\"  (click)=\"showContextMenu($event,{'type':'parentRow', r,rowIndex},data.id+'_row_'+rowIndex)\"\r\n  (keydown)=\"onKeyDown($event)\"\r\n  >\r\n\r\n  <div *ngIf=\"r.columns.length>0 && ShowParentRowHover(r) && !readonly\" class=\"Add-row-hover-item\">\r\n    <div class=\"icon-wrapper\"  \r\n    >\r\n    <svg _ngcontent-ywm-c490=\"\" width=\"10\" height=\"24\" viewBox=\"0 0 12 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path _ngcontent-ywm-c490=\"\" d=\"M2 3C2.55228 3 3 2.55228 3 2C3 1.44772 2.55228 1 2 1C1.44772 1 1 1.44772 1 2C1 2.55228 1.44772 3 2 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M10 3C10.5523 3 11 2.55228 11 2C11 1.44772 10.5523 1 10 1C9.44772 1 9 1.44772 9 2C9 2.55228 9.44772 3 10 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M2 11C2.55228 11 3 10.5523 3 10C3 9.44772 2.55228 9 2 9C1.44772 9 1 9.44772 1 10C1 10.5523 1.44772 11 2 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M10 11C10.5523 11 11 10.5523 11 10C11 9.44772 10.5523 9 10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M2 19C2.55228 19 3 18.5523 3 18C3 17.4477 2.55228 17 2 17C1.44772 17 1 17.4477 1 18C1 18.5523 1.44772 19 2 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M10 19C10.5523 19 11 18.5523 11 18C11 17.4477 10.5523 17 10 17C9.44772 17 9 17.4477 9 18C9 18.5523 9.44772 19 10 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n    <div class=\"custom-icon-menu-row\">\r\n      <div class=\"custom-icon-button\" (click)=\"onAddRowAfter($event, r, 'above')\" (keydown)=\"onKeyDown($event)\" title=\"Add new row above\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n          <path fill=\"#005996\" d=\"M0 0h24v24H0z\"/>\r\n          <path fill=\"#FFFFFF\" d=\"M20 11v2H4v-2h16zm-8-8l5 5h-3v4h-4V8H7l5-5z\"/>\r\n        </svg>\r\n      </div>\r\n      <div class=\"custom-icon-button\" (click)=\"onAddRowAfter($event, r, 'below')\" (keydown)=\"onKeyDown($event)\" title=\"Add new row below\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n          <path fill=\"#005996\" d=\"M0 0h24v24H0z\"/>\r\n          <path  fill=\"#FFFFFF\" d=\"M20 11v2H4v-2h16zm-8 11l-5-5h3v-4h4v4h3l-5 5z\"/>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n    <div *ngIf=\"r.columns.length>0 && ShowParentRowHover(r) && !readonly\" class=\"row-hover-item\" title=\"Row Settings\" (click)=\"rowSetting($event,r,data.id+'_row_'+rowIndex,{'type':'parentRow', r,rowIndex})\" (keydown)=\"onKeyDown($event)\" >&nbsp;</div>\r\n    <div *ngIf=\"r.columns.length>0\" class=\"row-container\" \r\n         [ngClass]=\"r.columns.length> 0? '' : 'empty-row'\"\r\n         [ngClass]=\"isCurrentActive(data.id+'_row_'+rowIndex)\"\r\n         id=\"{{data.id}}_row_{{rowIndex}}\"\r\n         (click)=\"rowSetting($event,r,data.id+'_row_'+rowIndex,{'type':'parentRow', r,rowIndex})\"\r\n         (keydown)=\"onKeyDown($event)\"\r\n         #parentResizeDir=\"columnResize\"\r\n         columnResize\r\n         [columnResizeEnabled]=\"!childResizeDir?.isResizing\"\r\n         [rows]=\"rows\"\r\n         [rowIndex]=\"rowIndex\"\r\n         (onResize)=\"resizeColumnNew($event.columns, $event.rowIndex)\">\r\n        \r\n\r\n      <div *ngFor=\"let c of r.columns; let colIndex = index\"\r\n      [ngClass]=\"isCurrentActive(data.id+'_parent_column_'+rowIndex+'_'+colIndex)\"\r\n        class=\"columnBorder sub-column pr-1 colouredDiv selectionDiv column-colour box\"\r\n        id=\"{{data.id+'_parent_column_'+rowIndex+'_'+colIndex}}\"\r\n        [ngStyle]=\"styleObject(c)\"\r\n        (click)=\"(c.dmoguid == null || c.dmoguid.length<2)?showContextMenu($event,{'type':'column',r,c,rowIndex,colIndex},data.id+'_parent_column_'+rowIndex+'_'+colIndex):null\"\r\n        (keydown)=\"onKeyDown($event)\">\r\n      <div class=\"resizer\">\r\n      </div>\r\n      <div (dragover)=\"onDragOver($event)\" (drop)=\"dropdmo($event)\" *ngIf=\"c.rows?.length==0\" id=\"{{data.id}}_column_{{rowIndex}}_{{colIndex}}\"  class=\"colouredDiv  column-colour column-row-column-Border pr-1 center-plus-icon list-dmo\">\r\n        \r\n        <div (drop)=\"dropdmo($event)\"\r\n        (dragenter)=\"onDragEnter($event,{'type':'column',r,c,rowIndex,colIndex},data.id+'_parent_column_'+rowIndex+'_'+colIndex)\"\r\n        (dragleave)=\"onDragLeave($event,{'type':'column',r,c,rowIndex,colIndex},data.id+'_parent_column_'+rowIndex+'_'+colIndex)\"\r\n        (dragover)=\"onDragOver($event)\" class=\"width plus-icon\" *ngIf=\"!removeOrphanedDmos(c.dmoguid)\"  id=\"{{data.id}}_column_{{rowIndex}}_{{colIndex}}\"  >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\">\r\n          <path d=\"M11.317 4.71429H7.39955V0.857143C7.39955 0.383839 7.00972 0 6.52902 0H5.65848C5.17778 0 4.78795 0.383839 4.78795 0.857143V4.71429H0.870536C0.389837 4.71429 0 5.09812 0 5.57143V6.42857C0 6.90188 0.389837 7.28571 0.870536 7.28571H4.78795V11.1429C4.78795 11.6162 5.17778 12 5.65848 12H6.52902C7.00972 12 7.39955 11.6162 7.39955 11.1429V7.28571H11.317C11.7977 7.28571 12.1875 6.90188 12.1875 6.42857V5.57143C12.1875 5.09812 11.7977 4.71429 11.317 4.71429Z\" fill=\"#333333\" fill-opacity=\"0.7\"/>\r\n        </svg>\r\n        </div>\r\n        \r\n        <div\r\n       \r\n         *ngFor=\"let rdmg of filterDmoguidList(c.dmoguid);\"  id=\"{{rdmg}}_column_{{rowIndex}}_{{colIndex}}\"   \r\n        (click)=\"removeOrphanedDmos(c.dmoguid)?showContextMenu($event,{'type':'column','dmoguid':rdmg,r,c,rowIndex,colIndex},rdmg+'_column_'+rowIndex+'_'+colIndex):null\"\r\n        (dragenter)=\"onDragEnter($event,{'type':'column','dmoguid':rdmg,r,c,rowIndex,colIndex})\"\r\n        (dragleave)=\"onDragLeave($event,{'type':'column','dmoguid':rdmg,r,c,rowIndex,colIndex})\"\r\n        (keydown)=\"onKeyDown($event)\"\r\n        [class.active-container]=\"isCurrentActive(rdmg+'_column_'+rowIndex+'_'+colIndex)\"\r\n        [ngClass]=\"{\r\n          'width': true, \r\n          'word-break': true,\r\n          'margtop': c.dmoguid?.length > 1,\r\n          'margbottom': true \r\n         }\"\r\n        >\r\n          <app-dmo\r\n          [attr.data-dmo]=\"true\"   \r\n          [containerStyle]=\"containerStyle\"\r\n       (dragover)=\"onDragOver($event)\"\r\n        draggable=\"true\"\r\n        (dragstart)=\"dragdmo($event,rdmg,data.id)\"\r\n        (dragend)=\"onInnerDragEnded($event,rdmg)\"\r\n        [attr.data-dmoguid]=\"rdmg\"\r\n        class=\"drag-list-item\"\r\n        [dmo]=\"getCurrentDMO(rdmg)\"\r\n        (mouseenter)=\"onMouseEnterInnerDragEnded($event,rdmg)\"\r\n        (mouseleave)=\"onMouseLeaveInnerDragEnded($event,rdmg)\"\r\n              ></app-dmo>\r\n              \r\n        </div>\r\n      </div>\r\n      <!--CR LOOP-->\r\n      <div *ngFor=\"let cr of c.rows;let colRowIndex = index\"\r\n       class=\"columnrowBorder rightpadding colouredDiv selectionDiv row-colour row-hover-item-inner-div\"\r\n       (click)=\"showContextMenu($event,{'type':'NestedcolumnRow',cr,r,c,rowIndex,colIndex,colRowIndex},data.id+'_column_'+rowIndex+'_'+colIndex+'+'+colRowIndex)\"\r\n       id=\"{{data.id}}_column_{{rowIndex}}_{{colIndex}}_{{colRowIndex}}\"\r\n       [ngClass]=\"isCurrentActive(data.id+'_column_'+rowIndex+'_'+colIndex+'+'+colRowIndex)\"\r\n       (keydown)=\"onKeyDown($event)\"\r\n       \r\n       #childResizeDir=\"columnResize\"\r\n       columnResize\r\n       [rows]=\"c.rows\"\r\n       [rowIndex]=\"colRowIndex\"\r\n       (onResize)=\"resizeColumnNew($event.columns, $event.rowIndex)\"\r\n       >\r\n       \r\n       <div *ngIf=\"cr.columns && cr.columns.length==0\" class=\"empty-row \"\r\n       (mouseenter)=\"cr.columns && cr.columns.length==0?showChildContextMenu($event,data.id+'_column_'+rowIndex+'_'+colIndex+'_'+colRowIndex,'mouseenter'):null\"\r\n       (mouseleave)=\"cr.columns && cr.columns.length==0 ?showChildContextMenu($event,data.id+'_column_'+rowIndex+'_'+colIndex+'_'+colRowIndex,'mouseleave'):null\"\r\n      \r\n       >\r\n\r\n       \r\n\r\n       <div *ngIf=\"cr.columns && cr.columns.length==0 && !readonly\" class=\"row-hover-item\" \r\n       (keydown)=\"onKeyDown($event)\"\r\n       (click)=\"showContextMenu($event,{'type':'NestedcolumnRow',cr,r,c,rowIndex,colIndex,colRowIndex},data.id+'_column_'+rowIndex+'_'+colIndex+'+'+colRowIndex)\">\r\n        &nbsp;\r\n        <div class=\"row-hover-item-menu\">\r\n          <div class=\"row-hover-sub-item\"  (click)=\"showContextMenu($event,{'type':'parentRow', r,rowIndex},data.id+'_row_'+rowIndex)\" (keydown)=\"onKeyDown($event)\" >Row</div>\r\n          <div class=\"row-hover-sub-item\" class=\"\" (click)=\"showContextMenu($event,{'type':'column','dmoguid':rdmg,r,c,rowIndex,colIndex},data.id+'_parent_column_'+rowIndex+'_'+colIndex)\" (keydown)=\"onKeyDown($event)\"> Column</div>\r\n          <div class=\"row-hover-sub-item\" (click)=\"showContextMenu($event,{'type':'NestedcolumnRow',cr,r,c,rowIndex,colIndex,colRowIndex},data.id+'_column_'+rowIndex+'_'+colIndex+'_'+colRowIndex)\" (keydown)=\"onKeyDown($event)\">Inner Row</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n       <div \r\n        *ngFor=\"let rcr of cr.columns;let colRowcolumnIndex = index\" \r\n       (click)=\"(rcr.dmoguid == null || rcr.dmoguid.length<2)?showContextMenu($event,{'type':'columnRow',cr,r,c,rowIndex,colIndex,colRowIndex,colRowcolumnIndex},data.id+'_columnRow_'+rowIndex+'_'+colIndex+'_'+colRowIndex+'_'+colRowcolumnIndex):null\"\r\n        class=\"list-dmo column-row-column-Border colouredDiv selectionDiv column-colour center-plus-icon box\"\r\n        [ngStyle]=\"styleChildObject(rcr)\" \r\n        (keydown)=\"onKeyDown($event)\"\r\n        (drop)=\"dropdmo($event)\"\r\n       \r\n        id=\"{{data.id}}_columnRow_{{rowIndex}}_{{colIndex}}_{{colRowIndex}}_{{colRowcolumnIndex}}\"\r\n        (dragover)=\"onDragOver($event)\"\r\n        [ngClass]=\"isCurrentActive(data.id+'_columnRow_'+rowIndex+'_'+colIndex+'_'+colRowIndex+'_'+colRowcolumnIndex)\"\r\n        (mouseenter)=\"showChildContextMenu($event,data.id+'_column_'+rowIndex+'_'+colIndex+'_'+colRowIndex,'mouseenter')\"\r\n        (mouseleave)=\"showChildContextMenu($event,data.id+'_column_'+rowIndex+'_'+colIndex+'_'+colRowIndex,'mouseleave')\"\r\n        >    \r\n        \r\n       <div *ngIf=\"cr.columns.length>0 && colRowcolumnIndex === cr.columns.length - 1 && !readonly\" class=\"Add-row-hover-item\">\r\n        <div class=\"icon-wrapper-inner-row\"   \r\n        >\r\n        <svg _ngcontent-ywm-c490=\"\" width=\"10\" height=\"24\" viewBox=\"0 0 12 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path _ngcontent-ywm-c490=\"\" d=\"M2 3C2.55228 3 3 2.55228 3 2C3 1.44772 2.55228 1 2 1C1.44772 1 1 1.44772 1 2C1 2.55228 1.44772 3 2 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M10 3C10.5523 3 11 2.55228 11 2C11 1.44772 10.5523 1 10 1C9.44772 1 9 1.44772 9 2C9 2.55228 9.44772 3 10 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M2 11C2.55228 11 3 10.5523 3 10C3 9.44772 2.55228 9 2 9C1.44772 9 1 9.44772 1 10C1 10.5523 1.44772 11 2 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M10 11C10.5523 11 11 10.5523 11 10C11 9.44772 10.5523 9 10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M2 19C2.55228 19 3 18.5523 3 18C3 17.4477 2.55228 17 2 17C1.44772 17 1 17.4477 1 18C1 18.5523 1.44772 19 2 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path _ngcontent-ywm-c490=\"\" d=\"M10 19C10.5523 19 11 18.5523 11 18C11 17.4477 10.5523 17 10 17C9.44772 17 9 17.4477 9 18C9 18.5523 9.44772 19 10 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n          <div class=\"custom-icon-menu\">\r\n\r\n            <div class=\"custom-icon-button\" (click)=\"onAddRowAfter($event, r, 'above')\" (keydown)=\"onKeyDown($event)\"  title=\"Add new row above\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path fill=\"#005996\" d=\"M0 0h24v24H0z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M20 11v2H4v-2h16zm-8-8l5 5h-3v4h-4V8H7l5-5z\"/>\r\n              </svg>\r\n            </div>\r\n            <div class=\"custom-icon-button\" (click)=\"onAddRowAfter($event, r, 'below')\" (keydown)=\"onKeyDown($event)\" title=\"Add new row below\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path fill=\"#005996\" d=\"M0 0h24v24H0z\"/>\r\n                <path  fill=\"#FFFFFF\" d=\"M20 11v2H4v-2h16zm-8 11l-5-5h3v-4h4v4h3l-5 5z\"/>\r\n              </svg>\r\n            </div>\r\n\r\n            <div class=\"custom-icon-button\" (click)=\"onAddInnerRowAfter($event, r, c, cr, 'above', colRowIndex)\" (keydown)=\"onKeyDown($event)\" title=\"Add new inner row above\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path fill=\"#005996\" d=\"M0 0h24v24H0z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M12 4l4 4h-3v4h-2V8H8l4-4zm-8 8h16v2H4v-2zm0 4h10v2H4v-2z\"/>\r\n              </svg>\r\n            </div>\r\n            <div class=\"custom-icon-button\" (click)=\"onAddInnerRowAfter($event, r, c, cr, 'below', colRowIndex)\" (keydown)=\"onKeyDown($event)\" title=\"Add new inner row below\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path fill=\"#005996\" d=\"M0 0h24v24H0z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M4 10h10v2H4v-2zm0 4h16v2H4v-2zm8 6l-4-4h3v-4h2v4h3l-4 4z\"/>\r\n              </svg>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>  \r\n        \r\n        <div class=\"row-hover-item\"  *ngIf=\"!readonly && colRowcolumnIndex === 0\" (keydown)=\"onKeyDown($event)\"  (click)=\"showContextMenu($event,{'type':'NestedcolumnRow',cr,r,c,rowIndex,colIndex,colRowIndex},data.id+'_column_'+rowIndex+'_'+colIndex+'+'+colRowIndex)\">\r\n          &nbsp;\r\n          <div class=\"row-hover-item-menu\">\r\n            <div  (click)=\"showContextMenu($event,{'type':'parentRow', r,rowIndex},data.id+'_row_'+rowIndex)\" (keydown)=\"onKeyDown($event)\">Row </div>\r\n            <div class=\"\" (click)=\"showContextMenu($event,{'type':'column','dmoguid':rdmg,r,c,rowIndex,colIndex},data.id+'_parent_column_'+rowIndex+'_'+colIndex)\" (keydown)=\"onKeyDown($event)\">Column </div>\r\n            <div (click)=\"showContextMenu($event,{'type':'NestedcolumnRow',cr,r,c,rowIndex,colIndex,colRowIndex},data.id+'_column_'+rowIndex+'_'+colIndex+'_'+colRowIndex)\" (keydown)=\"onKeyDown($event)\">Inner Row </div>\r\n          </div>\r\n        </div>\r\n        <div (drop)=\"dropdmo($event)\"\r\n        (dragover)=\"onDragOver($event)\" class=\"width plus-icon\"  *ngIf=\"!removeOrphanedDmos(rcr.dmoguid)\" id=\"{{data.id}}_columnRow_{{rowIndex}}_{{colIndex}}_{{colRowIndex}}_{{colRowcolumnIndex}}\" \r\n        (dragenter)=\"onDragEnter($event,{'type':'columnRow',cr,r,c,rowIndex,colIndex,colRowIndex,colRowcolumnIndex},data.id+'_columnRow_'+rowIndex+'_'+colIndex+'_'+colRowIndex+'_'+colRowcolumnIndex)\"\r\n        (dragleave)=\"onDragLeave($event,{'type':'columnRow',cr,r,c,rowIndex,colIndex,colRowIndex,colRowcolumnIndex},data.id+'_columnRow_'+rowIndex+'_'+colIndex+'_'+colRowIndex+'_'+colRowcolumnIndex)\"\r\n        >\r\n        \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\">\r\n          <path d=\"M11.317 4.71429H7.39955V0.857143C7.39955 0.383839 7.00972 0 6.52902 0H5.65848C5.17778 0 4.78795 0.383839 4.78795 0.857143V4.71429H0.870536C0.389837 4.71429 0 5.09812 0 5.57143V6.42857C0 6.90188 0.389837 7.28571 0.870536 7.28571H4.78795V11.1429C4.78795 11.6162 5.17778 12 5.65848 12H6.52902C7.00972 12 7.39955 11.6162 7.39955 11.1429V7.28571H11.317C11.7977 7.28571 12.1875 6.90188 12.1875 6.42857V5.57143C12.1875 5.09812 11.7977 4.71429 11.317 4.71429Z\" fill=\"#333333\" fill-opacity=\"0.7\"/>\r\n        </svg>\r\n        </div>\r\n   \r\n        <div  \r\n        (keydown)=\"onKeyDown($event)\"\r\n        *ngFor=\"let rdmgs of filterDmoguidList(rcr.dmoguid);let dmoguidIndex = index;\" id=\"{{rdmgs}}_columnRow_{{rowIndex}}_{{colIndex}}_{{colRowIndex}}_{{colRowcolumnIndex}}\" \r\n        (click)=\"removeOrphanedDmos(rcr.dmoguid)?showContextMenu($event,{'type':'columnRow','dmoguid':rdmgs,cr,r,c,rowIndex,colIndex,colRowIndex,colRowcolumnIndex},rdmgs+'_columnRow_'+rowIndex+'_'+colIndex+'_'+colRowIndex+'_'+colRowcolumnIndex):null\"\r\n        (dragenter)=\"onDragEnter($event,{'type':'columnRow','dmoguid':rdmgs,cr,r,c,rowIndex,colIndex,colRowIndex,colRowcolumnIndex},data.id+'_columnRow_'+rowIndex+'_'+colIndex+'_'+colRowIndex+'_'+colRowcolumnIndex)\"\r\n        (dragleave)=\"onDragLeave($event,{'type':'columnRow','dmoguid':rdmgs,cr,r,c,rowIndex,colIndex,colRowIndex,colRowcolumnIndex},data.id+'_columnRow_'+rowIndex+'_'+colIndex+'_'+colRowIndex+'_'+colRowcolumnIndex)\"\r\n        [class.active-container]=\"isCurrentActive(rdmgs + '_columnRow_' + rowIndex + '_' + colIndex + '_' + colRowIndex + '_' + colRowcolumnIndex)\"\r\n        [ngClass]=\"{\r\n          'width': true, \r\n          'word-break': true,\r\n          'margtop': rcr.dmoguid?.length > 1\r\n         \r\n         }\"\r\n        >\r\n        <app-dmo\r\n        [containerStyle]=\"containerStyle\"\r\n        (dragover)=\"onDragOver($event)\"\r\n        draggable=\"true\"\r\n        [attr.data-dmoguid]=\"rdmgs\"\r\n        (dragstart)=\"dragdmo($event,rdmgs,data.id)\"\r\n        (dragend)=\"onInnerDragEnded($event,rdmg)\"\r\n        (mouseenter)=\"onMouseEnterInnerDragEnded($event,rdmg)\"\r\n        (mouseleave)=\"onMouseLeaveInnerDragEnded($event,rdmg)\"\r\n        class=\"drag-list-item\"\r\n        [dmo]=\"getCurrentDMO(rdmgs)\"\r\n              \r\n              \r\n        ></app-dmo>\r\n        </div>\r\n        <div class=\"resizer\">\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      </div>\r\n     \r\n    </div>\r\n    </div>\r\n\r\n      <i class=\"\"></i>\r\n    \r\n  </div>\r\n\r\n  <!--Below ng content Project Child-->\r\n  <ng-content></ng-content>\r\n\r\n  <div class=\"add-row-container\" *ngIf=\"!readonly && data.Type!='CardGroup'\">\r\n   \r\n    <button class=\"add-row\" (click)=\"addNewRow($event)\">+ Add Row</button>\r\n  </div>\r\n  <div class=\"add-row-container\" *ngIf=\"!readonly && data.Type=='CardGroup'\">\r\n   \r\n    <button class=\"add-row\" (click)=\"AddDmogInGroup()\">+ Add Card</button>\r\n  </div>\r\n\r\n\r\n\r\n\r\n  <ng-template #itemActionColumn let-item=\"item\">\r\n    <ng-container *ngIf=\"!readonly\">\r\n      <div\r\n        class=\"item-actions dmo-actions active\"\r\n        [class.active]=\"\r\n        hoveredRowIndex === item.rowIndex &&\r\n        hoveredColumnIndex === item.colIndex\r\n      \">\r\n      <a  \r\n      class=\"item-action\"\r\n      ngbTooltip=\"Add Row\"\r\n      (click)=\"onAddRowInColumn(item)\"\r\n    >\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\">\r\n        <path d=\"M11.317 4.71429H7.39955V0.857143C7.39955 0.383839 7.00972 0 6.52902 0H5.65848C5.17778 0 4.78795 0.383839 4.78795 0.857143V4.71429H0.870536C0.389837 4.71429 0 5.09812 0 5.57143V6.42857C0 6.90188 0.389837 7.28571 0.870536 7.28571H4.78795V11.1429C4.78795 11.6162 5.17778 12 5.65848 12H6.52902C7.00972 12 7.39955 11.6162 7.39955 11.1429V7.28571H11.317C11.7977 7.28571 12.1875 6.90188 12.1875 6.42857V5.57143C12.1875 5.09812 11.7977 4.71429 11.317 4.71429Z\" fill=\"#333333\" fill-opacity=\"0.7\"/>\r\n      </svg>\r\n    </a>\r\n        <a *ngIf=\"item.current.rows.length==0\"\r\n          class=\"item-action mr-0\"\r\n          style=\"color: rgb(187, 53, 53); margin-right: 10px\"\r\n          ngbTooltip=\"Data Model Objects\"\r\n          [matMenuTriggerFor]=\"menu\"\r\n          (click)=\"GetSelectMenu(item.rowIndex, item.colIndex)\"\r\n        >\r\n          <i class=\"fa fa-ellipsis-v\"></i>\r\n        </a>\r\n        <a *ngIf=\"item.current.rows.length==0\"\r\n          class=\"item-action\"\r\n          style=\"color: rgb(187, 53, 53)\"\r\n          ngbTooltip=\"Remove Column\"\r\n          (click)=\"onRemoveColumn(item.rowIndex, item.colIndex)\"\r\n        >\r\n          <i class=\"fa fa-trash-alt\"></i>\r\n        </a>\r\n      \r\n     \r\n      </div>\r\n    </ng-container>\r\n  </ng-template>\r\n\r\n  \r\n    <div \r\n    class=\"popup-div default-popup\" \r\n    *ngIf=\"!readonly && data.Type !== 'CardGroup'\" \r\n    >\r\n        <a\r\n        class=\"item-action\"\r\n        [ngbTooltip]=\"data.Type === 'CardGroup' ? 'Delete Card Group' : 'Unshare Card'\"\r\n        (click)=\"onTabRemove(this)\"\r\n      >\r\n      <i [ngClass]=\"data.Type === 'CardGroup' ? 'far fa-trash-alt' : 'fas fa-unlink'\"></i>\r\n      </a>   \r\n        <a \r\n        class=\"item-action\"\r\n        (click)=\"ShowDmogSettings($event)\"\r\n        [ngbTooltip]=\"data.Type === 'CardGroup' ? 'Card Group Settings' : 'Card Settings'\"\r\n      >\r\n        <i class=\"fas fa-th\"></i>\r\n      </a>\r\n      <a\r\n      class=\"item-action\"\r\n      (click)=\"onEditDMOGRemove(this)\"\r\n      [ngbTooltip]=\"data.Type === 'CardGroup' ? 'Edit Card Group' : 'Edit Card'\"\r\n    >\r\n      <i class=\"fas fa-tools\"></i>\r\n      \r\n    </a>\r\n    </div>\r\n\r\n    \r\n  \r\n    <div \r\n      class=\"popup-div group-popup\" \r\n      *ngIf=\"!readonly && data.Type === 'CardGroup'\" \r\n    >\r\n    <a\r\n    *ngIf=\"!hasChildren\"\r\n    class=\"item-action\"\r\n    [ngbTooltip]=\"data.Type === 'CardGroup' ? 'Delete Card Group' : 'Delete Card'\"\r\n    (click)=\"onTabRemove(this)\"\r\n    >\r\n    <i class=\"far fa-trash-alt\"></i>\r\n    </a>   \r\n    <a \r\n    class=\"item-action\"\r\n    (click)=\"ShowDmogSettings($event)\"\r\n    [ngbTooltip]=\"data.Type === 'CardGroup' ? 'Card Group Settings' : 'Card Settings'\"\r\n    >\r\n    <i class=\"fas fa-th\"></i>\r\n    </a>\r\n    <a\r\n    class=\"item-action\"\r\n    (click)=\"onEditDMOGRemove(this)\"\r\n    [ngbTooltip]=\"data.Type === 'CardGroup' ? 'Edit Card Group' : 'Edit Card'\"\r\n    >\r\n    <i class=\"fas fa-tools\"></i>\r\n\r\n    </a>\r\n\r\n\r\n    </div>\r\n  \r\n  \r\n  \r\n\r\n\r\n</div>\r\n\r\n<div>\r\n  <app-contextMenu [object]=\"contextMenuData\"\r\n                   [showContextMenuFor]=\"contextMenuData\"\r\n                   [contextMenuPosition]=\"contextMenuPosition\"\r\n                   (contextMenuSelected)=\"OperateContextMenu($event)\"\r\n                    [readonly]=\"readonly\"\r\n                    [selectedDivId]=\"selectedDivId\"\r\n                    [isDmoExist]=\"isDmoExist\"\r\n                   ></app-contextMenu>\r\n              \r\n                 <app-dmo-form-controls [showContextMenuFor]=\"contextMenuData\"\r\n                   [contextMenuPosition]=\"contextMenuPosition\"\r\n                   [showContextMenu]=\"showFormContextMenu\"\r\n                  (formControlSelect) =\"FormControlSelect($event)\"\r\n                  \r\n                   >\r\n                   </app-dmo-form-controls>\r\n             \r\n                   <app-sharedmo-controls [showContextMenuFor]=\"contextMenuData\"\r\n                   [contextMenuPosition]=\"contextMenuPosition\"\r\n                   [showContextMenu]=\"showSharedmoContextMenu\"\r\n                   [shareDmoList]=\"availableDmoToShare!.components\"\r\n                   [rows]=\"rows\"\r\n                  (shareDmoSelect) =\"shareDmoSelect($event)\"\r\n                   >\r\n                   </app-sharedmo-controls>\r\n                  \r\n                 \r\n</div>\r\n\r\n\r\n<ng-template #dragPlaceholder>\r\n  <div class=\"cdk-drag-placeholder\"></div>\r\n</ng-template>","import { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appResizable]',\r\n    standalone: true\r\n})\r\nexport class ResizableDirectiveDirective {\r\n  @Input() resizableGrabWidth = 10;\r\n  @Input() resizableMinWidth = 30;\r\n  @Output() widthChanged = new EventEmitter<string>();\r\n\r\n  private dragging = false;\r\n  private resizingFrom: 'left' | 'right' | null = null;\r\n  private startX = 0;\r\n  private startWidth = 0;\r\n  private startLeft = 0;\r\n\r\n  constructor(private readonly el: ElementRef) {\r\n    const preventGlobalMouseEvents = () => (document.body.style.pointerEvents = 'none');\r\n    const restoreGlobalMouseEvents = () => (document.body.style.pointerEvents = 'auto');\r\n\r\n    const mouseMove = (evt: MouseEvent) => {\r\n      if (!this.dragging || !this.resizingFrom) return;\r\n\r\n      const deltaX = evt.clientX - this.startX;\r\n      const nativeEl = this.el.nativeElement;\r\n      const parentEl = nativeEl.parentElement;\r\n\r\n      let newWidth = this.startWidth;\r\n\r\n      if (this.resizingFrom === 'right') {\r\n        newWidth += deltaX;\r\n      } else if (this.resizingFrom === 'left') {\r\n        newWidth -= deltaX;\r\n        const newLeft = this.startLeft + deltaX;\r\n\r\n        if (newWidth >= this.resizableMinWidth && newLeft >= 0) {\r\n          nativeEl.style.left = `${newLeft}px`;\r\n        }\r\n      }\r\n\r\n      const parentWidth = parentEl.clientWidth;\r\n      newWidth = Math.max(this.resizableMinWidth, Math.min(newWidth, parentWidth));\r\n\r\n      const percentageWidth = (newWidth / parentWidth) * 100;\r\n      nativeEl.style.width = `${percentageWidth}%`;\r\n\r\n      evt.stopPropagation();\r\n    };\r\n\r\n    const mouseUp = (evt: MouseEvent) => {\r\n      if (!this.dragging) return;\r\n      restoreGlobalMouseEvents();\r\n      this.dragging = false;\r\n      this.resizingFrom = null;\r\n\r\n      const currentWidth = this.el.nativeElement.style.width;\r\n      this.widthChanged.emit(currentWidth);\r\n      evt.stopPropagation();\r\n    };\r\n\r\n    const mouseDown = (evt: MouseEvent) => {\r\n      const edge = this.inDragRegion(evt);\r\n      if (edge) {\r\n        this.dragging = true;\r\n        this.resizingFrom = edge;\r\n        this.startX = evt.clientX;\r\n        this.startWidth = this.el.nativeElement.clientWidth;\r\n        this.startLeft = this.el.nativeElement.offsetLeft;\r\n        preventGlobalMouseEvents();\r\n        evt.stopPropagation();\r\n      }\r\n    };\r\n\r\n    const mouseMoveCursor = (evt: MouseEvent) => {\r\n      const edge = this.inDragRegion(evt);\r\n      this.el.nativeElement.style.cursor = edge ? 'col-resize' : 'default';\r\n    };\r\n\r\n    document.addEventListener('mousemove', mouseMove, true);\r\n    document.addEventListener('mouseup', mouseUp, true);\r\n    this.el.nativeElement.addEventListener('mousedown', mouseDown, true);\r\n    this.el.nativeElement.addEventListener('mousemove', mouseMoveCursor, true);\r\n  }\r\n\r\n  private inDragRegion(evt: MouseEvent): 'left' | 'right' | null {\r\n    const bounds = this.el.nativeElement.getBoundingClientRect();\r\n    const offsetX = evt.clientX - bounds.left;\r\n    if (offsetX < this.resizableGrabWidth) {\r\n      return 'left';\r\n    } else if (offsetX > this.el.nativeElement.clientWidth - this.resizableGrabWidth) {\r\n      return 'right';\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, booleanAttribute, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChild, ViewChild, inject, ElementRef, EventEmitter, Injector, afterNextRender, ANIMATION_MODULE_TYPE, numberAttribute, Output, ContentChildren, forwardRef, QueryList, Attribute, NgModule } from '@angular/core';\nimport { MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport { Subject, fromEvent, of, merge, EMPTY, Observable, timer, Subscription, BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/bidi';\nimport * as i4 from '@angular/cdk/a11y';\nimport { FocusKeyManager, CdkMonitorFocus } from '@angular/cdk/a11y';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { takeUntil, debounceTime, startWith, switchMap, skip, filter } from 'rxjs/operators';\nimport { CdkObserveContent } from '@angular/cdk/observers';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst _c0 = [\"*\"];\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c1 = [\"tabListContainer\"];\nconst _c2 = [\"tabList\"];\nconst _c3 = [\"tabListInner\"];\nconst _c4 = [\"nextPaginator\"];\nconst _c5 = [\"previousPaginator\"];\nconst _c6 = a0 => ({\n  animationDuration: a0\n});\nconst _c7 = (a0, a1) => ({\n  value: a0,\n  params: a1\n});\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\nconst _c8 = [\"tabBodyWrapper\"];\nconst _c9 = [\"tabHeader\"];\nfunction MatTabGroup_For_3_Conditional_6_ng_template_0_Template(rf, ctx) {}\nfunction MatTabGroup_For_3_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_For_3_Conditional_6_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\nfunction MatTabGroup_For_3_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\nfunction MatTabGroup_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7, 2);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_For_3_Template_div_click_0_listener() {\n      const ctx_r2 = i0.ɵɵrestoreView(_r2);\n      const tab_r4 = ctx_r2.$implicit;\n      const ɵ$index_3_r5 = ctx_r2.$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      const tabHeader_r7 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5._handleClick(tab_r4, tabHeader_r7, ɵ$index_3_r5));\n    })(\"cdkFocusChange\", function MatTabGroup_For_3_Template_div_cdkFocusChange_0_listener($event) {\n      const ɵ$index_3_r5 = i0.ɵɵrestoreView(_r2).$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._tabFocusChanged($event, ɵ$index_3_r5));\n    });\n    i0.ɵɵelement(2, \"span\", 8)(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10)(5, \"span\", 11);\n    i0.ɵɵtemplate(6, MatTabGroup_For_3_Conditional_6_Template, 1, 1, null, 12)(7, MatTabGroup_For_3_Conditional_7_Template, 1, 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const ɵ$index_3_r5 = ctx.$index;\n    const tabNode_r8 = i0.ɵɵreference(1);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r4.labelClass);\n    i0.ɵɵclassProp(\"mdc-tab--active\", ctx_r5.selectedIndex === ɵ$index_3_r5);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabLabelId(ɵ$index_3_r5))(\"disabled\", tab_r4.disabled)(\"fitInkBarToContent\", ctx_r5.fitInkBarToContent);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r5._getTabIndex(ɵ$index_3_r5))(\"aria-posinset\", ɵ$index_3_r5 + 1)(\"aria-setsize\", ctx_r5._tabs.length)(\"aria-controls\", ctx_r5._getTabContentId(ɵ$index_3_r5))(\"aria-selected\", ctx_r5.selectedIndex === ɵ$index_3_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matRippleTrigger\", tabNode_r8)(\"matRippleDisabled\", tab_r4.disabled || ctx_r5.disableRipple);\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(tab_r4.templateLabel ? 6 : 7);\n  }\n}\nfunction MatTabGroup_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatTabGroup_For_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 13);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_For_8_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._removeTabBodyWrapperHeight());\n    })(\"_onCentering\", function MatTabGroup_For_8_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._setTabBodyWrapperHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r10 = ctx.$implicit;\n    const ɵ$index_23_r11 = ctx.$index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r10.bodyClass);\n    i0.ɵɵclassProp(\"mat-mdc-tab-body-active\", ctx_r5.selectedIndex === ɵ$index_23_r11);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabContentId(ɵ$index_23_r11))(\"content\", tab_r10.content)(\"position\", tab_r10.position)(\"origin\", tab_r10.origin)(\"animationDuration\", ctx_r5.animationDuration)(\"preserveContent\", ctx_r5.preserveContent);\n    i0.ɵɵattribute(\"tabindex\", ctx_r5.contentTabIndex != null && ctx_r5.selectedIndex === ɵ$index_23_r11 ? ctx_r5.contentTabIndex : null)(\"aria-labelledby\", ctx_r5._getTabLabelId(ɵ$index_23_r11))(\"aria-hidden\", ctx_r5.selectedIndex !== ɵ$index_23_r11);\n  }\n}\nconst _c10 = [\"mat-tab-nav-bar\", \"\"];\nconst _c11 = [\"mat-tab-link\", \"\"];\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n  constructor(/** Content for the tab. */template) {\n    this.template = template;\n  }\n  static {\n    this.ɵfac = function MatTabContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabContent,\n      selectors: [[\"\", \"matTabContent\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabContent, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabContent]',\n      providers: [{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }], null);\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n  constructor(templateRef, viewContainerRef, _closestTab) {\n    super(templateRef, viewContainerRef);\n    this._closestTab = _closestTab;\n  }\n  static {\n    this.ɵfac = function MatTabLabel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabLabel,\n      selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-label], [matTabLabel]',\n      providers: [{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_TAB]\n    }, {\n      type: Optional\n    }]\n  }], null);\n})();\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  get templateLabel() {\n    return this._templateLabel;\n  }\n  set templateLabel(value) {\n    this._setTemplateLabelInput(value);\n  }\n  /** @docs-private */\n  get content() {\n    return this._contentPortal;\n  }\n  constructor(_viewContainerRef, _closestTabGroup) {\n    this._viewContainerRef = _viewContainerRef;\n    this._closestTabGroup = _closestTabGroup;\n    /** whether the tab is disabled. */\n    this.disabled = false;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    this._explicitContent = undefined;\n    /** Plain text label for the tab, used when there is no template label. */\n    this.textLabel = '';\n    /** Portal that will be the hosted content of the tab */\n    this._contentPortal = null;\n    /** Emits whenever the internal state of the tab changes. */\n    this._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    this.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    this.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n    this.isActive = false;\n  }\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setTemplateLabelInput(value) {\n    // Only update the label if the query managed to find one. This works around an issue where a\n    // user may have manually set `templateLabel` during creation mode, which would then get\n    // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n    // tab matches the current one so that we don't pick up labels from nested tabs.\n    if (value && value._closestTab === this) {\n      this._templateLabel = value;\n    }\n  }\n  static {\n    this.ɵfac = function MatTab_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTab)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTab,\n      selectors: [[\"mat-tab\"]],\n      contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatTabContent, 7, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n        }\n      },\n      viewQuery: function MatTab_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n        }\n      },\n      hostAttrs: [\"hidden\", \"\"],\n      inputs: {\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        textLabel: [0, \"label\", \"textLabel\"],\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        labelClass: \"labelClass\",\n        bodyClass: \"bodyClass\"\n      },\n      exportAs: [\"matTab\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatTab_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTab, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab',\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matTab',\n      providers: [{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }],\n      standalone: true,\n      host: {\n        // This element will be rendered on the server in order to support hydration.\n        // Hide it so it doesn't cause a layout shift when it's removed on the client.\n        'hidden': ''\n      },\n      template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\"\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_TAB_GROUP]\n    }, {\n      type: Optional\n    }]\n  }], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    templateLabel: [{\n      type: ContentChild,\n      args: [MatTabLabel]\n    }],\n    _explicitContent: [{\n      type: ContentChild,\n      args: [MatTabContent, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    textLabel: [{\n      type: Input,\n      args: ['label']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    labelClass: [{\n      type: Input\n    }],\n    bodyClass: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Class that is applied when a tab indicator is active. */\nconst ACTIVE_CLASS = 'mdc-tab-indicator--active';\n/** Class that is applied when the tab indicator should not transition. */\nconst NO_TRANSITION_CLASS = 'mdc-tab-indicator--no-transition';\n/**\n * Abstraction around the MDC tab indicator that acts as the tab header's ink bar.\n * @docs-private\n */\nclass MatInkBar {\n  constructor(_items) {\n    this._items = _items;\n  }\n  /** Hides the ink bar. */\n  hide() {\n    this._items.forEach(item => item.deactivateInkBar());\n  }\n  /** Aligns the ink bar to a DOM node. */\n  alignToElement(element) {\n    const correspondingItem = this._items.find(item => item.elementRef.nativeElement === element);\n    const currentItem = this._currentItem;\n    if (correspondingItem === currentItem) {\n      return;\n    }\n    currentItem?.deactivateInkBar();\n    if (correspondingItem) {\n      const domRect = currentItem?.elementRef.nativeElement.getBoundingClientRect?.();\n      // The ink bar won't animate unless we give it the `DOMRect` of the previous item.\n      correspondingItem.activateInkBar(domRect);\n      this._currentItem = correspondingItem;\n    }\n  }\n}\nclass InkBarItem {\n  constructor() {\n    this._elementRef = inject(ElementRef);\n    this._fitToContent = false;\n  }\n  /** Whether the ink bar should fit to the entire tab or just its content. */\n  get fitInkBarToContent() {\n    return this._fitToContent;\n  }\n  set fitInkBarToContent(newValue) {\n    if (this._fitToContent !== newValue) {\n      this._fitToContent = newValue;\n      if (this._inkBarElement) {\n        this._appendInkBarElement();\n      }\n    }\n  }\n  /** Aligns the ink bar to the current item. */\n  activateInkBar(previousIndicatorClientRect) {\n    const element = this._elementRef.nativeElement;\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect || !element.getBoundingClientRect || !this._inkBarContentElement) {\n      element.classList.add(ACTIVE_CLASS);\n      return;\n    }\n    // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n    // Calculate the dimensions based on the dimensions of the previous indicator\n    const currentClientRect = element.getBoundingClientRect();\n    const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    element.classList.add(NO_TRANSITION_CLASS);\n    this._inkBarContentElement.style.setProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n    // Force repaint before updating classes and transform to ensure the transform properly takes effect\n    element.getBoundingClientRect();\n    element.classList.remove(NO_TRANSITION_CLASS);\n    element.classList.add(ACTIVE_CLASS);\n    this._inkBarContentElement.style.setProperty('transform', '');\n  }\n  /** Removes the ink bar from the current item. */\n  deactivateInkBar() {\n    this._elementRef.nativeElement.classList.remove(ACTIVE_CLASS);\n  }\n  /** Initializes the foundation. */\n  ngOnInit() {\n    this._createInkBarElement();\n  }\n  /** Destroys the foundation. */\n  ngOnDestroy() {\n    this._inkBarElement?.remove();\n    this._inkBarElement = this._inkBarContentElement = null;\n  }\n  /** Creates and appends the ink bar element. */\n  _createInkBarElement() {\n    const documentNode = this._elementRef.nativeElement.ownerDocument || document;\n    const inkBarElement = this._inkBarElement = documentNode.createElement('span');\n    const inkBarContentElement = this._inkBarContentElement = documentNode.createElement('span');\n    inkBarElement.className = 'mdc-tab-indicator';\n    inkBarContentElement.className = 'mdc-tab-indicator__content mdc-tab-indicator__content--underline';\n    inkBarElement.appendChild(this._inkBarContentElement);\n    this._appendInkBarElement();\n  }\n  /**\n   * Appends the ink bar to the tab host element or content, depending on whether\n   * the ink bar should fit to content.\n   */\n  _appendInkBarElement() {\n    if (!this._inkBarElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Ink bar element has not been created and cannot be appended');\n    }\n    const parentElement = this._fitToContent ? this._elementRef.nativeElement.querySelector('.mdc-tab__content') : this._elementRef.nativeElement;\n    if (!parentElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Missing element to host the ink bar');\n    }\n    parentElement.appendChild(this._inkBarElement);\n  }\n  static {\n    this.ɵfac = function InkBarItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InkBarItem)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: InkBarItem,\n      inputs: {\n        fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute]\n      },\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InkBarItem, [{\n    type: Directive\n  }], null, {\n    fitInkBarToContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends InkBarItem {\n  constructor(elementRef) {\n    super();\n    this.elementRef = elementRef;\n    /** Whether the tab is disabled. */\n    this.disabled = false;\n  }\n  /** Sets focus on the wrapper element */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n  static {\n    this.ɵfac = function MatTabLabelWrapper_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabLabelWrapper)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabLabelWrapper,\n      selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n      hostVars: 3,\n      hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n          i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabLabelWrapper]',\n      host: {\n        '[class.mat-mdc-tab-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(v) {\n    const value = isNaN(v) ? 0 : v;\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n  constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._animationMode = _animationMode;\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    this._scrollDistance = 0;\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    this._selectedIndexChanged = false;\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Whether the controls for pagination should be displayed */\n    this._showPaginationControls = false;\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    this._disableScrollAfter = true;\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    this._disableScrollBefore = true;\n    /** Stream that will stop the automated scrolling. */\n    this._stopScrolling = new Subject();\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    this.disablePagination = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the option is selected. */\n    this.selectFocusedIndex = new EventEmitter();\n    /** Event emitted when a label is focused. */\n    this.indexFocused = new EventEmitter();\n    this._sharedResizeObserver = inject(SharedResizeObserver);\n    this._injector = inject(Injector);\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._stopInterval();\n      });\n    });\n  }\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('before');\n    });\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('after');\n    });\n  }\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : of('ltr');\n    // We need to debounce resize events because the alignment logic is expensive.\n    // If someone animates the width of tabs, we don't want to realign on every animation frame.\n    // Once we haven't seen any more resize events in the last 32ms (~2 animaion frames) we can\n    // re-align.\n    const resize = this._sharedResizeObserver.observe(this._elementRef.nativeElement).pipe(debounceTime(32), takeUntil(this._destroyed));\n    // Note: We do not actually need to watch these events for proper functioning of the tabs,\n    // the resize events above should capture any viewport resize that we care about. However,\n    // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n    const viewportResize = this._viewportRuler.change(150).pipe(takeUntil(this._destroyed));\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n    this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap()\n    // Allow focus to land on disabled tabs, as per https://w3c.github.io/aria-practices/#kbd_disabled_controls\n    .skipPredicate(() => false);\n    this._keyManager.updateActiveItem(this._selectedIndex);\n    // Note: We do not need to realign after the first render for proper functioning of the tabs\n    // the resize events above should fire when we first start observing the element. However,\n    // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n    afterNextRender(realign, {\n      injector: this._injector\n    });\n    // On dir change or resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, viewportResize, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate\n      // the element dimensions. The call has to be wrapped in `NgZone.run`,\n      // because the viewport change handler runs outside of Angular.\n      this._ngZone.run(() => {\n        Promise.resolve().then(() => {\n          // Clamp the scroll distance, because it can change with the number of tabs.\n          this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n          realign();\n        });\n      });\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n  /** Sends any changes that could affect the layout of the items. */\n  _itemsResized() {\n    if (typeof ResizeObserver !== 'function') {\n      return EMPTY;\n    }\n    return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n      const resizeObserver = new ResizeObserver(entries => observer.next(entries));\n      tabItems.forEach(item => resizeObserver.observe(item.elementRef.nativeElement));\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }))),\n    // Skip the first emit since the resize observer emits when an item\n    // is observed for new items when the tab is already inserted\n    skip(1),\n    // Skip emissions where all the elements are invisible since we don't want\n    // the header to try and re-render with invalid measurements. See #25574.\n    filter(entries => entries.some(e => e.contentRect.width > 0 && e.contentRect.height > 0)));\n  }\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          const item = this._items.get(this.focusIndex);\n          if (item && !item.disabled) {\n            this.selectFocusedIndex.emit(this.focusIndex);\n            this._itemSelected(event);\n          }\n        }\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index) {\n    return this._items ? !!this._items.toArray()[index] : true;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /** The layout direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    if (this._platform.TRIDENT || this._platform.EDGE) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex) {\n    if (this.disablePagination) {\n      return;\n    }\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n    if (!selectedLabel) {\n      return;\n    }\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {\n      offsetLeft,\n      offsetWidth\n    } = selectedLabel.elementRef.nativeElement;\n    let labelBeforePos, labelAfterPos;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += Math.min(labelAfterPos - afterVisiblePos, labelBeforePos - beforeVisiblePos);\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const scrollWidth = this._tabListInner.nativeElement.scrollWidth;\n      const containerWidth = this._elementRef.nativeElement.offsetWidth;\n      // Usually checking that the scroll width is greater than the container width should be\n      // enough, but on Safari at specific widths the browser ends up rounding up when there's\n      // no pagination and rounding down once the pagination is added. This can throw the component\n      // into an infinite loop where the pagination shows up and disappears constantly. We work\n      // around it by adding a threshold to the calculation. From manual testing the threshold\n      // can be lowered to 2px and still resolve the issue, but we set a higher one to be safe.\n      // This shouldn't cause any content to be clipped, because tabs have a 24px horizontal\n      // padding. See b/316395154 for more information.\n      const isEnabled = scrollWidth - containerWidth >= 5;\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n      if (isEnabled !== this._showPaginationControls) {\n        this._showPaginationControls = isEnabled;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance() {\n    const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab() {\n    const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction, mouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    }\n    // Avoid overlapping timers.\n    this._stopInterval();\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n    // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction);\n      // Stop the timer if we've reached the start or the end.\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  _scrollTo(position) {\n    if (this.disablePagination) {\n      return {\n        maxScrollDistance: 0,\n        distance: 0\n      };\n    }\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n  static {\n    this.ɵfac = function MatPaginatedTabHeader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatPaginatedTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatPaginatedTabHeader,\n      inputs: {\n        disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n        selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute]\n      },\n      outputs: {\n        selectFocusedIndex: \"selectFocusedIndex\",\n        indexFocused: \"indexFocused\"\n      },\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i3.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    disablePagination: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectedIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    selectFocusedIndex: [{\n      type: Output\n    }],\n    indexFocused: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends MatPaginatedTabHeader {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    /** Whether the ripple effect is disabled or not. */\n    this.disableRipple = false;\n  }\n  ngAfterContentInit() {\n    this._inkBar = new MatInkBar(this._items);\n    super.ngAfterContentInit();\n  }\n  _itemSelected(event) {\n    event.preventDefault();\n  }\n  static {\n    this.ɵfac = function MatTabHeader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabHeader,\n      selectors: [[\"mat-tab-header\"]],\n      contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      viewQuery: function MatTabHeader_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n          i0.ɵɵviewQuery(_c3, 7);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-header\"],\n      hostVars: 4,\n      hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n        }\n      },\n      inputs: {\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 13,\n      vars: 10,\n      consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-label-container\", 3, \"keydown\"], [\"role\", \"tablist\", 1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-labels\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\"]],\n      template: function MatTabHeader_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 5, 0);\n          i0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n          })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n          })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 7, 1);\n          i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleKeydown($event));\n          });\n          i0.ɵɵelementStart(5, \"div\", 8, 2);\n          i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onContentChanges());\n          });\n          i0.ɵɵelementStart(7, \"div\", 9, 3);\n          i0.ɵɵprojection(9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 10, 4);\n          i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n          })(\"click\", function MatTabHeader_Template_div_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n          })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(12, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby || null);\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n        }\n      },\n      dependencies: [MatRipple, CdkObserveContent],\n      styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color, var(--mat-app-surface-variant))}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-header-divider-height);border-top-color:var(--mat-tab-header-divider-color, var(--mat-app-surface-variant))}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-labels,.mat-mdc-tab-labels.cdk-drop-list{min-height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab::before{margin:5px}.cdk-high-contrast-active .mat-mdc-tab[aria-disabled=true]{color:GrayText}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-header',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        'class': 'mat-mdc-tab-header',\n        '[class.mat-mdc-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-mdc-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n      },\n      standalone: true,\n      imports: [MatRipple, CdkObserveContent],\n      template: \"<!--\\n Note that this intentionally uses a `div` instead of a `button`, because it's not part of\\n the regular tabs flow and is only here to support mouse users. It should also not be focusable.\\n-->\\n<div class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-before\\\"\\n     #previousPaginator\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div\\n  class=\\\"mat-mdc-tab-label-container\\\"\\n  #tabListContainer\\n  (keydown)=\\\"_handleKeydown($event)\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-mdc-tab-list\\\"\\n    role=\\\"tablist\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-mdc-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-after\\\"\\n     #nextPaginator\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n      styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color, var(--mat-app-surface-variant))}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-header-divider-height);border-top-color:var(--mat-tab-header-divider-color, var(--mat-app-surface-variant))}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-labels,.mat-mdc-tab-labels.cdk-drop-list{min-height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab::before{margin:5px}.cdk-high-contrast-active .mat-mdc-tab[aria-disabled=true]{color:GrayText}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i3.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _items: [{\n      type: ContentChildren,\n      args: [MatTabLabelWrapper, {\n        descendants: false\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n  // Transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none',\n    visibility: 'visible'\n  })),\n  // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px',\n    // Normally this is redundant since we detach the content from the DOM, but if the user\n    // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n    visibility: 'hidden'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px',\n    visibility: 'hidden'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)',\n    visibility: 'hidden'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)',\n    visibility: 'hidden'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n    this._host = _host;\n    /** Subscription to events for when the tab body begins centering. */\n    this._centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    this._leavingSub = Subscription.EMPTY;\n  }\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n      if (this._host._content && isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      if (!this._host.preserveContent) {\n        this.detach();\n      }\n    });\n  }\n  /** Clean up centering subscription. */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n  static {\n    this.ɵfac = function MatTabBodyPortal_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabBodyPortal)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabBodyPortal,\n      selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBodyPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabBodyHost]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ComponentFactoryResolver\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: MatTabBody,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(() => MatTabBody)]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody {\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  set position(position) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n  constructor(_elementRef, _dir, changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /** Subscription to the directionality change observable. */\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Emits when an animation on the tab is complete. */\n    this._translateTabComplete = new Subject();\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    this._onCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    this._beforeCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    this._afterLeavingCenter = new EventEmitter();\n    /** Event emitted when the tab completes its animation towards the center. */\n    this._onCentered = new EventEmitter(true);\n    // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    this.animationDuration = '500ms';\n    /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n    this.preserveContent = false;\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(dir => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n    this._translateTabComplete.subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n  _onTranslateTabStarted(event) {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /** The text direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position) {\n    return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n  }\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  _computePositionFromOrigin(origin) {\n    const dir = this._getLayoutDirection();\n    if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n      return 'left-origin-center';\n    }\n    return 'right-origin-center';\n  }\n  static {\n    this.ɵfac = function MatTabBody_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabBody,\n      selectors: [[\"mat-tab-body\"]],\n      viewQuery: function MatTabBody_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-body\"],\n      inputs: {\n        _content: [0, \"content\", \"_content\"],\n        origin: \"origin\",\n        animationDuration: \"animationDuration\",\n        preserveContent: \"preserveContent\",\n        position: \"position\"\n      },\n      outputs: {\n        _onCentering: \"_onCentering\",\n        _beforeCentering: \"_beforeCentering\",\n        _afterLeavingCenter: \"_afterLeavingCenter\",\n        _onCentered: \"_onCentered\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 6,\n      consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-mdc-tab-body-content\"], [\"matTabBodyHost\", \"\"]],\n      template: function MatTabBody_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onTranslateTabStarted($event));\n          })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._translateTabComplete.next($event));\n          });\n          i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"@translateTab\", i0.ɵɵpureFunction2(3, _c7, ctx._position, i0.ɵɵpureFunction1(1, _c6, ctx.animationDuration)));\n        }\n      },\n      dependencies: [MatTabBodyPortal, CdkScrollable],\n      styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-mdc-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matTabsAnimations.translateTab]\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBody, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-body',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      animations: [matTabsAnimations.translateTab],\n      host: {\n        'class': 'mat-mdc-tab-body'\n      },\n      standalone: true,\n      imports: [MatTabBodyPortal, CdkScrollable],\n      template: \"<div class=\\\"mat-mdc-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n      styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-mdc-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    _onCentering: [{\n      type: Output\n    }],\n    _beforeCentering: [{\n      type: Output\n    }],\n    _afterLeavingCenter: [{\n      type: Output\n    }],\n    _onCentered: [{\n      type: Output\n    }],\n    _portalHost: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet]\n    }],\n    _content: [{\n      type: Input,\n      args: ['content']\n    }],\n    origin: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    preserveContent: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** Boolean constant that determines whether the tab group supports the `backgroundColor` input */\nconst ENABLE_BACKGROUND_INPUT = true;\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup {\n  /** Whether the ink bar should fit its width to the size of the tab label content. */\n  get fitInkBarToContent() {\n    return this._fitInkBarToContent;\n  }\n  set fitInkBarToContent(value) {\n    this._fitInkBarToContent = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value) {\n    this._indexToSelect = isNaN(value) ? null : value;\n  }\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    const stringValue = value + '';\n    this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n  }\n  /**\n   * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n   * accessibility when the tab does not have focusable elements or if it has scrollable content.\n   * The `tabindex` will be removed automatically for inactive tabs.\n   * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n   */\n  get contentTabIndex() {\n    return this._contentTabIndex;\n  }\n  set contentTabIndex(value) {\n    this._contentTabIndex = isNaN(value) ? null : value;\n  }\n  /**\n   * Theme color of the background of the tab group. This API is supported in M2 themes only, it\n   * has no effect in M3 themes.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/theming#using-component-color-variants.\n   *\n   * @deprecated The background color should be customized through Sass theming APIs.\n   * @breaking-change 20.0.0 Remove this input\n   */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    if (!ENABLE_BACKGROUND_INPUT) {\n      throw new Error(`mat-tab-group background color must be set through the Sass theming API`);\n    }\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n    if (value) {\n      classList.add('mat-tabs-with-background', `mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  constructor(_elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** All of the tabs that belong to the group. */\n    this._tabs = new QueryList();\n    /** The tab index that should be selected after the content has been checked. */\n    this._indexToSelect = 0;\n    /** Index of the tab that was focused last. */\n    this._lastFocusedTabIndex = null;\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    this._tabBodyWrapperHeight = 0;\n    /** Subscription to tabs being added/removed. */\n    this._tabsSubscription = Subscription.EMPTY;\n    /** Subscription to changes in the tab labels. */\n    this._tabLabelSubscription = Subscription.EMPTY;\n    this._fitInkBarToContent = false;\n    /** Whether tabs should be stretched to fill the header. */\n    this.stretchTabs = true;\n    /** Whether the tab group should grow to the size of the active tab. */\n    this.dynamicHeight = false;\n    this._selectedIndex = null;\n    /** Position of the tab header. */\n    this.headerPosition = 'above';\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    this.disablePagination = false;\n    /** Whether ripples in the tab group are disabled. */\n    this.disableRipple = false;\n    /**\n     * By default tabs remove their content from the DOM while it's off-screen.\n     * Setting this to `true` will keep it in the DOM which will prevent elements\n     * like iframes and videos from reloading next time it comes back into the view.\n     */\n    this.preserveContent = false;\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    this.selectedIndexChange = new EventEmitter();\n    /** Event emitted when focus has changed within a tab group. */\n    this.focusChange = new EventEmitter();\n    /** Event emitted when the body animation has completed */\n    this.animationDone = new EventEmitter();\n    /** Event emitted when the tab selection has changed. */\n    this.selectedTabChange = new EventEmitter(true);\n    /** Whether the tab group is rendered on the server. */\n    this._isServer = !inject(Platform).isBrowser;\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n    if (defaultConfig?.contentTabIndex != null) {\n      this.contentTabIndex = defaultConfig.contentTabIndex;\n    }\n    this.preserveContent = !!defaultConfig?.preserveContent;\n    this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n    this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n        // Preserve the height so page doesn't scroll up during tab change.\n        // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.minHeight = wrapper.clientHeight + 'px';\n      }\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n          // Clear the min-height, this was needed during tab change to avoid\n          // unnecessary scrolling.\n          this._tabBodyWrapper.nativeElement.style.minHeight = '';\n        }\n      });\n    }\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab, index) => {\n      tab.position = index - indexToSelect;\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._lastFocusedTabIndex = null;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n    this._subscribeToTabLabels();\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n        let selectedTab;\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            this._lastFocusedTabIndex = null;\n            selectedTab = tabs[i];\n            break;\n          }\n        }\n        // If we haven't found an active tab and a tab exists at the selected index, it means\n        // that the active tab was swapped out. Since this won't be picked up by the rendering\n        // loop in `ngAfterContentChecked`, we need to sync it up manually.\n        if (!selectedTab && tabs[indexToSelect]) {\n          Promise.resolve().then(() => {\n            tabs[indexToSelect].isActive = true;\n            this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          });\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Listens to changes in all of the tabs. */\n  _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n      this._tabs.reset(tabs.filter(tab => {\n        return tab._closestTabGroup === this || !tab._closestTabGroup;\n      }));\n      this._tabs.notifyOnChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._tabs.destroy();\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * Recalculates the tab group's pagination dimensions.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    if (this._tabHeader) {\n      this._tabHeader.updatePagination();\n    }\n  }\n  /**\n   * Sets focus to a particular tab.\n   * @param index Index of the tab to be focused.\n   */\n  focusTab(index) {\n    const header = this._tabHeader;\n    if (header) {\n      header.focusIndex = index;\n    }\n  }\n  _focusChanged(index) {\n    this._lastFocusedTabIndex = index;\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n  _createChangeEvent(index) {\n    const event = new MatTabChangeEvent();\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i) {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i) {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this.dynamicHeight || !this._tabBodyWrapperHeight) {\n      return;\n    }\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight() {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab, tabHeader, index) {\n    tabHeader.focusIndex = index;\n    if (!tab.disabled) {\n      this.selectedIndex = index;\n    }\n  }\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(index) {\n    const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n    return index === targetIndex ? 0 : -1;\n  }\n  /** Callback for when the focused state of a tab has changed. */\n  _tabFocusChanged(focusOrigin, index) {\n    // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n    // can cause the tab to be moved out from under the pointer, interrupting the\n    // click sequence (see #21898). We don't need to scroll the tab into view for\n    // such cases anyway, because it will be done when the tab becomes selected.\n    if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n      this._tabHeader.focusIndex = index;\n    }\n  }\n  static {\n    this.ɵfac = function MatTabGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabGroup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabGroup,\n      selectors: [[\"mat-tab-group\"]],\n      contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n        }\n      },\n      viewQuery: function MatTabGroup_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c8, 5);\n          i0.ɵɵviewQuery(_c9, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-group\"],\n      hostVars: 10,\n      hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n          i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n          i0.ɵɵclassProp(\"mat-mdc-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-mdc-tab-group-inverted-header\", ctx.headerPosition === \"below\")(\"mat-mdc-tab-group-stretch-tabs\", ctx.stretchTabs);\n        }\n      },\n      inputs: {\n        color: \"color\",\n        fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n        stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n        dynamicHeight: [2, \"dynamicHeight\", \"dynamicHeight\", booleanAttribute],\n        selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute],\n        headerPosition: \"headerPosition\",\n        animationDuration: \"animationDuration\",\n        contentTabIndex: [2, \"contentTabIndex\", \"contentTabIndex\", numberAttribute],\n        disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        preserveContent: [2, \"preserveContent\", \"preserveContent\", booleanAttribute],\n        backgroundColor: \"backgroundColor\",\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"]\n      },\n      outputs: {\n        selectedIndexChange: \"selectedIndexChange\",\n        focusChange: \"focusChange\",\n        animationDone: \"animationDone\",\n        selectedTabChange: \"selectedTabChange\"\n      },\n      exportAs: [\"matTabGroup\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 9,\n      vars: 8,\n      consts: [[\"tabHeader\", \"\"], [\"tabBodyWrapper\", \"\"], [\"tabNode\", \"\"], [3, \"indexFocused\", \"selectFocusedIndex\", \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"aria-label\", \"aria-labelledby\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-mdc-focus-indicator\", 3, \"id\", \"mdc-tab--active\", \"class\", \"disabled\", \"fitInkBarToContent\"], [1, \"mat-mdc-tab-body-wrapper\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-mdc-tab-body-active\", \"class\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-mdc-focus-indicator\", 3, \"click\", \"cdkFocusChange\", \"id\", \"disabled\", \"fitInkBarToContent\"], [1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"_onCentered\", \"_onCentering\", \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\"]],\n      template: function MatTabGroup_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"mat-tab-header\", 3, 0);\n          i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._focusChanged($event));\n          })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.selectedIndex = $event);\n          });\n          i0.ɵɵrepeaterCreate(2, MatTabGroup_For_3_Template, 8, 17, \"div\", 4, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, MatTabGroup_Conditional_4_Template, 1, 0);\n          i0.ɵɵelementStart(5, \"div\", 5, 1);\n          i0.ɵɵrepeaterCreate(7, MatTabGroup_For_8_Template, 1, 13, \"mat-tab-body\", 6, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx._tabs);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx._isServer ? 4 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx._tabs);\n        }\n      },\n      dependencies: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mdc-secondary-navigation-tab-container-height);font-family:var(--mat-tab-header-label-text-font, var(--mat-app-title-small-font));font-size:var(--mat-tab-header-label-text-size, var(--mat-app-title-small-size));letter-spacing:var(--mat-tab-header-label-text-tracking, var(--mat-app-title-small-tracking));line-height:var(--mat-tab-header-label-text-line-height, var(--mat-app-title-small-line-height));font-weight:var(--mat-tab-header-label-text-weight, var(--mat-app-title-small-weight))}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-tab-indicator-active-indicator-height);border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color, var(--mat-app-primary))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color, var(--mat-app-primary))}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color, var(--mat-app-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-group',\n      exportAs: 'matTabGroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }],\n      host: {\n        'class': 'mat-mdc-tab-group',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mat-mdc-tab-group-dynamic-height]': 'dynamicHeight',\n        '[class.mat-mdc-tab-group-inverted-header]': 'headerPosition === \"below\"',\n        '[class.mat-mdc-tab-group-stretch-tabs]': 'stretchTabs',\n        '[style.--mat-tab-animation-duration]': 'animationDuration'\n      },\n      standalone: true,\n      imports: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n      template: \"<mat-tab-header #tabHeader\\n                [selectedIndex]=\\\"selectedIndex || 0\\\"\\n                [disableRipple]=\\\"disableRipple\\\"\\n                [disablePagination]=\\\"disablePagination\\\"\\n                [aria-label]=\\\"ariaLabel\\\"\\n                [aria-labelledby]=\\\"ariaLabelledby\\\"\\n                (indexFocused)=\\\"_focusChanged($event)\\\"\\n                (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n\\n  @for (tab of _tabs; track tab; let i = $index) {\\n    <div class=\\\"mdc-tab mat-mdc-tab mat-mdc-focus-indicator\\\"\\n        #tabNode\\n        role=\\\"tab\\\"\\n        matTabLabelWrapper\\n        cdkMonitorElementFocus\\n        [id]=\\\"_getTabLabelId(i)\\\"\\n        [attr.tabIndex]=\\\"_getTabIndex(i)\\\"\\n        [attr.aria-posinset]=\\\"i + 1\\\"\\n        [attr.aria-setsize]=\\\"_tabs.length\\\"\\n        [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n        [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n        [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n        [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n        [class.mdc-tab--active]=\\\"selectedIndex === i\\\"\\n        [class]=\\\"tab.labelClass\\\"\\n        [disabled]=\\\"tab.disabled\\\"\\n        [fitInkBarToContent]=\\\"fitInkBarToContent\\\"\\n        (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n        (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n      <span class=\\\"mdc-tab__ripple\\\"></span>\\n\\n      <!-- Needs to be a separate element, because we can't put\\n          `overflow: hidden` on tab due to the ink bar. -->\\n      <div\\n        class=\\\"mat-mdc-tab-ripple\\\"\\n        mat-ripple\\n        [matRippleTrigger]=\\\"tabNode\\\"\\n        [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"></div>\\n\\n      <span class=\\\"mdc-tab__content\\\">\\n        <span class=\\\"mdc-tab__text-label\\\">\\n          <!--\\n            If there is a label template, use it, otherwise fall back to the text label.\\n            Note that we don't have indentation around the text label, because it adds\\n            whitespace around the text which breaks some internal tests.\\n          -->\\n          @if (tab.templateLabel) {\\n            <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n          } @else {{{tab.textLabel}}}\\n        </span>\\n      </span>\\n    </div>\\n  }\\n</mat-tab-header>\\n\\n<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n<div\\n  class=\\\"mat-mdc-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  @for (tab of _tabs; track tab; let i = $index) {\\n    <mat-tab-body role=\\\"tabpanel\\\"\\n                 [id]=\\\"_getTabContentId(i)\\\"\\n                 [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n                 [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n                 [attr.aria-hidden]=\\\"selectedIndex !== i\\\"\\n                 [class.mat-mdc-tab-body-active]=\\\"selectedIndex === i\\\"\\n                 [class]=\\\"tab.bodyClass\\\"\\n                 [content]=\\\"tab.content!\\\"\\n                 [position]=\\\"tab.position!\\\"\\n                 [origin]=\\\"tab.origin\\\"\\n                 [animationDuration]=\\\"animationDuration\\\"\\n                 [preserveContent]=\\\"preserveContent\\\"\\n                 (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n                 (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n    </mat-tab-body>\\n  }\\n</div>\\n\",\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mdc-secondary-navigation-tab-container-height);font-family:var(--mat-tab-header-label-text-font, var(--mat-app-title-small-font));font-size:var(--mat-tab-header-label-text-size, var(--mat-app-title-small-size));letter-spacing:var(--mat-tab-header-label-text-tracking, var(--mat-app-title-small-tracking));line-height:var(--mat-tab-header-label-text-line-height, var(--mat-app-title-small-line-height));font-weight:var(--mat-tab-header-label-text-weight, var(--mat-app-title-small-weight))}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-tab-indicator-active-indicator-height);border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color, var(--mat-app-primary))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color, var(--mat-app-primary))}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color, var(--mat-app-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_TABS_CONFIG]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _allTabs: [{\n      type: ContentChildren,\n      args: [MatTab, {\n        descendants: true\n      }]\n    }],\n    _tabBodyWrapper: [{\n      type: ViewChild,\n      args: ['tabBodyWrapper']\n    }],\n    _tabHeader: [{\n      type: ViewChild,\n      args: ['tabHeader']\n    }],\n    color: [{\n      type: Input\n    }],\n    fitInkBarToContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    stretchTabs: [{\n      type: Input,\n      args: [{\n        alias: 'mat-stretch-tabs',\n        transform: booleanAttribute\n      }]\n    }],\n    dynamicHeight: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectedIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    contentTabIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    disablePagination: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    preserveContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    selectedTabChange: [{\n      type: Output\n    }]\n  });\n})();\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {}\n\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends MatPaginatedTabHeader {\n  /** Whether the ink bar should fit its width to the size of the tab label content. */\n  get fitInkBarToContent() {\n    return this._fitInkBarToContent.value;\n  }\n  set fitInkBarToContent(value) {\n    this._fitInkBarToContent.next(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    const stringValue = value + '';\n    this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n  }\n  /**\n   * Theme color of the background of the tab nav. This API is supported in M2 themes only, it\n   * has no effect in M3 themes.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/theming#using-component-color-variants.\n   */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n    if (value) {\n      classList.add('mat-tabs-with-background', `mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode, defaultConfig) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._fitInkBarToContent = new BehaviorSubject(false);\n    /** Whether tabs should be stretched to fill the header. */\n    this.stretchTabs = true;\n    /** Whether the ripple effect is disabled or not. */\n    this.disableRipple = false;\n    /**\n     * Theme color of the nav bar. This API is supported in M2 themes only, it has\n     * no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    this.color = 'primary';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n    this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n  }\n  _itemSelected() {\n    // noop\n  }\n  ngAfterContentInit() {\n    this._inkBar = new MatInkBar(this._items);\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n    super.ngAfterContentInit();\n  }\n  ngAfterViewInit() {\n    if (!this.tabPanel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new Error('A mat-tab-nav-panel must be specified via [tabPanel].');\n    }\n    super.ngAfterViewInit();\n  }\n  /** Notifies the component that the active link has been changed. */\n  updateActiveLink() {\n    if (!this._items) {\n      return;\n    }\n    const items = this._items.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        if (this.tabPanel) {\n          this.tabPanel._activeTabId = items[i].id;\n        }\n        return;\n      }\n    }\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n  _getRole() {\n    return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n  }\n  static {\n    this.ɵfac = function MatTabNav_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabNav)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabNav,\n      selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n      contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      viewQuery: function MatTabNav_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n          i0.ɵɵviewQuery(_c3, 7);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-nav-bar\", \"mat-mdc-tab-header\"],\n      hostVars: 17,\n      hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx._getRole());\n          i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-mdc-tab-nav-bar-stretch-tabs\", ctx.stretchTabs)(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        }\n      },\n      inputs: {\n        fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n        stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n        animationDuration: \"animationDuration\",\n        backgroundColor: \"backgroundColor\",\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        color: \"color\",\n        tabPanel: \"tabPanel\"\n      },\n      exportAs: [\"matTabNavBar\", \"matTabNav\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c10,\n      ngContentSelectors: _c0,\n      decls: 13,\n      vars: 6,\n      consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-link-container\", 3, \"keydown\"], [1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-links\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\"]],\n      template: function MatTabNav_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 5, 0);\n          i0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n          })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n          })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 7, 1);\n          i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleKeydown($event));\n          });\n          i0.ɵɵelementStart(5, \"div\", 8, 2);\n          i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onContentChanges());\n          });\n          i0.ɵɵelementStart(7, \"div\", 9, 3);\n          i0.ɵɵprojection(9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 10, 4);\n          i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n          })(\"click\", function MatTabNav_Template_div_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n          })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(12, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n          i0.ɵɵadvance(10);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n        }\n      },\n      dependencies: [MatRipple, CdkObserveContent],\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-links,.mat-mdc-tab-links.cdk-drop-list{min-height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color, var(--mat-app-surface-variant))}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNav, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-nav-bar]',\n      exportAs: 'matTabNavBar, matTabNav',\n      host: {\n        '[attr.role]': '_getRole()',\n        'class': 'mat-mdc-tab-nav-bar mat-mdc-tab-header',\n        '[class.mat-mdc-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-mdc-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n        '[class.mat-mdc-tab-nav-bar-stretch-tabs]': 'stretchTabs',\n        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[style.--mat-tab-animation-duration]': 'animationDuration'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      standalone: true,\n      imports: [MatRipple, CdkObserveContent],\n      template: \"<!--\\n Note that this intentionally uses a `div` instead of a `button`, because it's not part of\\n the regular tabs flow and is only here to support mouse users. It should also not be focusable.\\n-->\\n<div class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-before\\\"\\n     #previousPaginator\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-mdc-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-mdc-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-mdc-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-after\\\"\\n     #nextPaginator\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color, var(--mat-app-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-links,.mat-mdc-tab-links.cdk-drop-list{min-height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color, var(--mat-app-surface-variant))}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: i3.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_TABS_CONFIG]\n    }]\n  }], {\n    fitInkBarToContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    stretchTabs: [{\n      type: Input,\n      args: [{\n        alias: 'mat-stretch-tabs',\n        transform: booleanAttribute\n      }]\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    _items: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatTabLink), {\n        descendants: true\n      }]\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    tabPanel: [{\n      type: Input\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n/**\n * Link inside a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends InkBarItem {\n  /** Whether the link is active. */\n  get active() {\n    return this._isActive;\n  }\n  set active(value) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink();\n    }\n  }\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  constructor(_tabNavBar, /** @docs-private */elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n    super();\n    this._tabNavBar = _tabNavBar;\n    this.elementRef = elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._destroyed = new Subject();\n    /** Whether the tab link is active or not. */\n    this._isActive = false;\n    /** Whether the tab link is disabled. */\n    this.disabled = false;\n    /** Whether ripples are disabled on the tab link. */\n    this.disableRipple = false;\n    this.tabIndex = 0;\n    /** Unique id for the tab. */\n    this.id = `mat-tab-link-${nextUniqueId++}`;\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n    _tabNavBar._fitInkBarToContent.pipe(takeUntil(this._destroyed)).subscribe(fitInkBarToContent => {\n      this.fitInkBarToContent = fitInkBarToContent;\n    });\n  }\n  /** Focuses the tab link. */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    super.ngOnDestroy();\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n  _handleFocus() {\n    // Since we allow navigation through tabbing in the nav bar, we\n    // have to update the focused index whenever the link receives focus.\n    this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === SPACE || event.keyCode === ENTER) {\n      if (this.disabled) {\n        event.preventDefault();\n      } else if (this._tabNavBar.tabPanel) {\n        // Only prevent the default action on space since it can scroll the page.\n        // Don't prevent enter since it can break link navigation.\n        if (event.keyCode === SPACE) {\n          event.preventDefault();\n        }\n        this.elementRef.nativeElement.click();\n      }\n    }\n  }\n  _getAriaControls() {\n    return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n  }\n  _getAriaSelected() {\n    if (this._tabNavBar.tabPanel) {\n      return this.active ? 'true' : 'false';\n    } else {\n      return this.elementRef.nativeElement.getAttribute('aria-selected');\n    }\n  }\n  _getAriaCurrent() {\n    return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n  }\n  _getRole() {\n    return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n  }\n  _getTabIndex() {\n    if (this._tabNavBar.tabPanel) {\n      return this._isActive && !this.disabled ? 0 : -1;\n    } else {\n      return this.disabled ? -1 : this.tabIndex;\n    }\n  }\n  static {\n    this.ɵfac = function MatTabLink_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabLink)(i0.ɵɵdirectiveInject(MatTabNav), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i4.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabLink,\n      selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n      hostAttrs: [1, \"mdc-tab\", \"mat-mdc-tab-link\", \"mat-mdc-focus-indicator\"],\n      hostVars: 11,\n      hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n            return ctx._handleFocus();\n          })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._getTabIndex())(\"role\", ctx._getRole());\n          i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled)(\"mdc-tab--active\", ctx.active);\n        }\n      },\n      inputs: {\n        active: [2, \"active\", \"active\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        id: \"id\"\n      },\n      exportAs: [\"matTabLink\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c11,\n      ngContentSelectors: _c0,\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"]],\n      template: function MatTabLink_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"span\", 0)(1, \"div\", 1);\n          i0.ɵɵelementStart(2, \"span\", 2)(3, \"span\", 3);\n          i0.ɵɵprojection(4);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matRippleTrigger\", ctx.elementRef.nativeElement)(\"matRippleDisabled\", ctx.rippleDisabled);\n        }\n      },\n      dependencies: [MatRipple],\n      styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mdc-secondary-navigation-tab-container-height);font-family:var(--mat-tab-header-label-text-font, var(--mat-app-title-small-font));font-size:var(--mat-tab-header-label-text-size, var(--mat-app-title-small-size));letter-spacing:var(--mat-tab-header-label-text-tracking, var(--mat-app-title-small-tracking));line-height:var(--mat-tab-header-label-text-line-height, var(--mat-app-title-small-line-height));font-weight:var(--mat-tab-header-label-text-weight, var(--mat-app-title-small-weight))}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-tab-indicator-active-indicator-height);border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color, var(--mat-app-primary))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color, var(--mat-app-primary))}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color, var(--mat-app-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLink, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-link], [matTabLink]',\n      exportAs: 'matTabLink',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'mdc-tab mat-mdc-tab-link mat-mdc-focus-indicator',\n        '[attr.aria-controls]': '_getAriaControls()',\n        '[attr.aria-current]': '_getAriaCurrent()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.id]': 'id',\n        '[attr.tabIndex]': '_getTabIndex()',\n        '[attr.role]': '_getRole()',\n        '[class.mat-mdc-tab-disabled]': 'disabled',\n        '[class.mdc-tab--active]': 'active',\n        '(focus)': '_handleFocus()',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      standalone: true,\n      imports: [MatRipple],\n      template: \"<span class=\\\"mdc-tab__ripple\\\"></span>\\n\\n<div\\n  class=\\\"mat-mdc-tab-ripple\\\"\\n  mat-ripple\\n  [matRippleTrigger]=\\\"elementRef.nativeElement\\\"\\n  [matRippleDisabled]=\\\"rippleDisabled\\\"></div>\\n\\n<span class=\\\"mdc-tab__content\\\">\\n  <span class=\\\"mdc-tab__text-label\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n\",\n      styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mdc-secondary-navigation-tab-container-height);font-family:var(--mat-tab-header-label-text-font, var(--mat-app-title-small-font));font-size:var(--mat-tab-header-label-text-size, var(--mat-app-title-small-size));letter-spacing:var(--mat-tab-header-label-text-tracking, var(--mat-app-title-small-tracking));line-height:var(--mat-tab-header-label-text-line-height, var(--mat-app-title-small-line-height));font-weight:var(--mat-tab-header-label-text-weight, var(--mat-app-title-small-weight))}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-tab-indicator-active-indicator-height);border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color, var(--mat-app-primary))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color, var(--mat-app-on-surface))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color, var(--mat-app-primary))}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color, var(--mat-app-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-app-on-surface))}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\"]\n    }]\n  }], () => [{\n    type: MatTabNav\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: i4.FocusMonitor\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    active: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n  constructor() {\n    /** Unique id for the tab panel. */\n    this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n  }\n  static {\n    this.ɵfac = function MatTabNavPanel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabNavPanel)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabNavPanel,\n      selectors: [[\"mat-tab-nav-panel\"]],\n      hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-mdc-tab-nav-panel\"],\n      hostVars: 2,\n      hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        id: \"id\"\n      },\n      exportAs: [\"matTabNavPanel\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatTabNavPanel_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNavPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-nav-panel',\n      exportAs: 'matTabNavPanel',\n      template: '<ng-content></ng-content>',\n      host: {\n        '[attr.aria-labelledby]': '_activeTabId',\n        '[attr.id]': 'id',\n        'class': 'mat-mdc-tab-nav-panel',\n        'role': 'tabpanel'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\nclass MatTabsModule {\n  static {\n    this.ɵfac = function MatTabsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabsModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatTabsModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatTabContent, MatTabLabel, MatTab, MatTabGroup, MatTabNav, MatTabNavPanel, MatTabLink],\n      exports: [MatCommonModule, MatTabContent, MatTabLabel, MatTab, MatTabGroup, MatTabNav, MatTabNavPanel, MatTabLink]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_CONTENT, MAT_TAB_GROUP, MAT_TAB_LABEL, MatInkBar, MatPaginatedTabHeader, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MAT_INK_BAR_POSITIONER_FACTORY, matTabsAnimations };\n","import { Component,Renderer2, AfterViewInit  , EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PanelMainContainer, SideNavModel,PanelMainRow, ContainerStyle } from '../../models1';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiService } from '@app/core';\r\nimport { ServiceProviderService } from '../../services1/service-provider.service';\r\nimport { BorderStyle } from '../../const1';\r\nimport { NgbDayTemplateData } from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model';\r\nimport { NgIf, NgStyle, NgFor, NgClass, UpperCasePipe } from '@angular/common';\r\nimport { MatTabGroup, MatTab } from '@angular/material/tabs';\r\n\r\n@Component({\r\n    selector: 'app-dmog-settings',\r\n    templateUrl: './dmog-settings.component.html',\r\n    styleUrls: ['./dmog-settings.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        MatTabGroup,\r\n        MatTab,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        NgStyle,\r\n        NgFor,\r\n        NgClass,\r\n        UpperCasePipe\r\n    ],\r\n})\r\nexport class DmogSettingsComponent implements OnInit, AfterViewInit  {\r\n  panelMainContainer:PanelMainContainer;\r\n  @Input() sideNavModel:SideNavModel;\r\n  @Output() UpdatedDataEmitter: EventEmitter<any> = new EventEmitter<any>(); \r\n  containerStyle:ContainerStyle\r\n\r\n  readonly borderStyle = Object.values(BorderStyle);\r\n  width:number=0;\r\n  background_color:any;\r\n  border:any='Solid'\r\n  label_position:any='Top'\r\n  corner_radius_top:any=0;\r\n  corner_radius_right:any=0;\r\n  corner_radius_left:any=0;\r\n  corner_radius_bottom:any=0;\r\n  border_color:any;\r\n  label_color:any;\r\n  label_align:any;\r\n  border_width:any=0;\r\n  help_icon_color:any;\r\n  header_fill_color:any;\r\n  header_text_color:any;\r\n  header_border:any='Yes'\r\n  transformy;\r\n  rowdmogId;\r\n \r\n  constructor(\r\n    private apiService:ApiService,\r\n    private dataProvider: ServiceProviderService,\r\n    private renderer: Renderer2\r\n  ){\r\n    this.dataProvider.geUpdatedContainerWidth().subscribe(data=>{\r\n     if(data)\r\n     {\r\n      this.width=data;\r\n     }\r\n     })\r\n  }\r\n  formatLabel(value: number): string {\r\n    return `${value} width`;\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    \r\n    if (this.sideNavModel) {\r\n      console.log(this.sideNavModel);\r\n      if(this.sideNavModel.type=='dmog'){\r\n        this.panelMainContainer=this.sideNavModel.data;\r\n        if(!this.panelMainContainer){\r\n          let temprows: PanelMainRow[] = [];\r\n           this.panelMainContainer={\r\n               width:100,\r\n               rows: temprows\r\n             }\r\n         }\r\n        this.width=this.panelMainContainer.width;\r\n        this.rowdmogId=this.sideNavModel.dmog.DMOGID;\r\n        this.containerStyle=this.panelMainContainer.style;\r\n        this.UpdateStyleProp();\r\n        }\r\n      }\r\n  }\r\n  onHeaderBorderChange(value){\r\n    this.header_border=value;\r\n    this.RealTimeStyleChanges();\r\n  }\r\n  ngAfterViewInit(){\r\n    setTimeout(() => {\r\n    this.SetDefultTabsettings();\r\n  }, 300);\r\n  }\r\n  ngOnChanges() {\r\n    if (this.sideNavModel) {\r\n      console.log(this.sideNavModel);\r\n      if(this.sideNavModel.type=='dmog'){\r\n        this.panelMainContainer=this.sideNavModel.data;\r\n        if(!this.panelMainContainer){\r\n         let temprows: PanelMainRow[] = [];\r\n          this.panelMainContainer={\r\n              width:100,\r\n              rows: temprows\r\n            }\r\n        }\r\n        this.width=this.panelMainContainer.width;\r\n        this.containerStyle=this.panelMainContainer.style;\r\n        this.rowdmogId=this.sideNavModel.dmog.DMOGID;\r\n         this.UpdateStyleProp();\r\n  \r\n      }\r\n      \r\n    }\r\n  }\r\n  SetDefultTabsettings()\r\n  {\r\n    const tabIndex=0;\r\n    const inkBarElement = document.querySelector('.mat-ink-bar') as HTMLElement;\r\n    if (inkBarElement && tabIndex == 0) {\r\n      this.renderer.setStyle(inkBarElement, 'left', `0px`);\r\n    }\r\n  }\r\n\r\n\r\n onTabChange(event: any): void {\r\n  const tabIndex = event.index; // Get the index of the selected tab\r\n\r\n  // Ensure the inkBar element exists before trying to set the style\r\n  const inkBarElement = document.querySelector('.mat-ink-bar') as HTMLElement;\r\n  \r\n  if (inkBarElement) {\r\n    // If the inkBarElement exists, update the style\r\n    if (tabIndex === 0) {\r\n      this.renderer.setStyle(inkBarElement, 'left', `0px`);\r\n    } else {\r\n      this.renderer.setStyle(inkBarElement, 'left', `145px`);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  onDragOver(event){\r\n    event.preventDefault()\r\n  \r\n   }\r\n   dragRow(event){\r\n    event.dataTransfer.setData('dmogRows',event.target.id);\r\n   }\r\n  changeWidth(event){\r\n    this.width=event.value;\r\n  }\r\n \r\n  SaveWidthWidth(event){\r\n    console.log(this.width);\r\n     if(this.width>100 || this.width<0)\r\n      this.width=100;\r\n   \r\n    if(this.sideNavModel.dmog && this.sideNavModel.dmog.DMOGProps){\r\n    \r\n      this.panelMainContainer=JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n      if(this.panelMainContainer){\r\n      \r\n        this.panelMainContainer.width=this.width\r\n      }\r\n      var model={};\r\n    \r\n       model={\"DMOGID\":this.sideNavModel.dmog.DMOGID,\r\n               \"DMOGProps\":JSON.stringify(this.panelMainContainer)}\r\n        \r\n      \r\n    \r\n      const url = `wfapibm/DataModel/SaveDmogProps`;\r\n      this.apiService.postgateway('',url,model).subscribe(r=>{\r\n        this.sideNavModel.dmog.DMOGProps=JSON.stringify(this.panelMainContainer)\r\n         //this.dataProvider.setreloadParent(true)\r\n        // window.location.reload();\r\n        this.UpdatedDataEmitter.emit(this.sideNavModel.dmog);\r\n      },error=>{\r\n        console.log(error)\r\n      });\r\n     \r\n    \r\n  }\r\n}\r\nUpdateStyleProp(){\r\n  if(this.containerStyle){\r\n    this.background_color= this.containerStyle.container.background_color;\r\n    this.border= this.containerStyle.container.border;\r\n    this.border_color = this.containerStyle.container.border_color;\r\n    this.border_width = this.containerStyle.container.border_width;\r\n    this.corner_radius_top= this.containerStyle.container.corner_radius_top;\r\n    this.corner_radius_top = this.corner_radius_bottom = this.corner_radius_left = this.corner_radius_right = this.containerStyle.container.corner_radius_top;\r\n    //label\r\n    this.label_color= this.containerStyle.dmolabel.label_color;\r\n    this.label_position= this.containerStyle.dmolabel.label_position;\r\n    this.help_icon_color = this.containerStyle.dmolabel.help_icon_color;\r\n    this.label_align = this.containerStyle.dmolabel.label_align;\r\n    //header\r\n    this.header_border= this.containerStyle.header.header_border;\r\n    this.header_fill_color= this.containerStyle.header.header_fill_color;\r\n    this.header_text_color = this.containerStyle.header.header_text_color;\r\n  }\r\n}\r\nChangeLabelAlignment(postion)\r\n{\r\n  if(postion)\r\n  {\r\n    this.label_align= postion;\r\n    this.RealTimeStyleChanges();\r\n  }\r\n}\r\n\r\nChangeLabelPostion(postion)\r\n{\r\n  if(postion)\r\n  {\r\n    this.label_position= postion;\r\n    this.RealTimeStyleChanges();\r\n  }\r\n}\r\n\r\nRealTimeStyleChanges(){\r\n  \r\n  if(this.sideNavModel.dmog && this.sideNavModel.dmog.DMOGProps){\r\n    // if(this.label_position === 'Top')\r\n    //   {\r\n    //     this.label_align= '';\r\n    //   }\r\n    this.corner_radius_bottom = this.corner_radius_left = this.corner_radius_right = this.corner_radius_top;\r\n    const borderWidth = this.border_width || 1;\r\n    const borderColor = this.border_color || '#000000';\r\n    const borderStyle = this.border || 'solid';\r\n    let container={\r\n      \"background_color\": this.background_color,\r\n      \"border\": borderStyle,\r\n      \"border_width\": borderWidth,\r\n      \"corner_radius_top\": this.corner_radius_top,\r\n      \"corner_radius_bottom\": this.corner_radius_bottom,\r\n      \"corner_radius_left\": this.corner_radius_left,\r\n      \"corner_radius_right\": this.corner_radius_right,\r\n      \"border_color\": borderColor\r\n     };\r\n      let header={\r\n       \"header_border\": this.header_border,\r\n       \"header_fill_color\":this.header_fill_color,\r\n       \"header_text_color\":this.header_text_color\r\n     };\r\n     let dmolabel={\r\n       \"label_color\": this.label_color,\r\n       \"label_position\":this.label_position,\r\n       \"help_icon_color\":this.help_icon_color,\r\n       \"label_align\":this.label_align\r\n     };\r\n     this.containerStyle={\r\n       container:container,\r\n       header:header,\r\n       dmolabel:dmolabel\r\n     }\r\n     this.panelMainContainer.style= this.containerStyle;\r\n    var model={};\r\n  \r\n     model= {\r\n            \"DMOGID\":this.sideNavModel.dmog.DMOGID,\r\n             \"DMOGProps\":JSON.stringify(this.panelMainContainer)\r\n            }\r\n      this.dataProvider.setUpdateDmogStyleSettings(model);\r\n            \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nSaveChanges(){\r\n  // if(this.label_position === 'Top')\r\n  // {\r\n  //   this.label_align= '';\r\n  // }\r\n  let container={\r\n   \"background_color\":this.background_color,\r\n    \"border\":this.border,\r\n    \"border_width\":this.border_width,\r\n    \"corner_radius_top\":this.corner_radius_top,\r\n    \"corner_radius_bottom\": this.corner_radius_bottom,\r\n    \"corner_radius_left\": this.corner_radius_left,\r\n    \"corner_radius_right\": this.corner_radius_right,\r\n    \"border_color\":this.border_color\r\n\r\n  };\r\n  let header={\r\n    \"header_border\": this.header_border,\r\n    \"header_fill_color\":this.header_fill_color,\r\n    \"header_text_color\":this.header_text_color\r\n  };\r\n  let dmolabel={\r\n    \"label_color\": this.label_color,\r\n    \"label_position\":this.label_position,\r\n    \"help_icon_color\":this.help_icon_color,\r\n       \"label_align\":this.label_align\r\n  };\r\n  this.containerStyle={\r\n    container:container,\r\n    header:header,\r\n    dmolabel:dmolabel\r\n  }\r\n  this.panelMainContainer.style= this.containerStyle;\r\n\r\n\r\n  if(this.sideNavModel.dmog && this.sideNavModel.dmog.DMOGProps){\r\n    \r\n    \r\n    var model={};\r\n  \r\n     model={\"DMOGID\":this.sideNavModel.dmog.DMOGID,\r\n             \"DMOGProps\":JSON.stringify(this.panelMainContainer)}\r\n      \r\n    \r\n  \r\n    const url = `wfapibm/DataModel/SaveDmogProps`;\r\n   this.apiService.postgateway('',url,model).subscribe(r=>{\r\n      this.sideNavModel.dmog.DMOGProps=JSON.stringify(this.panelMainContainer)\r\n       //this.dataProvider.setreloadParent(true)\r\n      //window.location.reload();\r\n      \r\n    },error=>{\r\n      console.log(error)\r\n    });\r\n   \r\n  \r\n}\r\n\r\n}\r\n  \r\n\r\n \r\n}\r\n\r\n","<div class=\"container\" [style.top]=\"transformy\" >\r\n \r\n  <div class=\"tab-header\" [innerText]=\"sideNavModel.dmog.Type === 'CardGroup' ? 'Card Group Settings' : 'Card Settings'\" ></div>\r\n  <div class=\"drag-side-sidebar\">\r\n\r\n    <mat-tab-group class=\"custom-tab-container-settings\" *ngIf=\"sideNavModel.dmog.Type!='CardGroup'\" (selectedTabChange)=\"onTabChange($event)\">\r\n      \r\n      <mat-tab label=\"Layout\">\r\n        <div class=\"main-heading\">Settings</div>\r\n        <div class=\"continer-header\">\r\n          <div class=\"continer-heading\">Card Name</div>\r\n          <div class=\"continer-Name-bold\">{{sideNavModel!.dmog!.DisplayName}}</div>\r\n        </div>\r\n        <div class=\"continer-header\">\r\n          <div class=\"continer-heading\">Card Width (%)</div>\r\n          <div class=\"continer-Name\">\r\n            <div class=\"settings-range\"> \r\n                <div class=\"range-box\">\r\n                  <input class=\"range-line\" type=\"range\"\r\n                  (input)=\"changeWidth($event)\"\r\n                  (change)=\"SaveWidthWidth($event)\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  step=\"1\"\r\n                  displayWith=\"formatLabel\"\r\n                  [(ngModel)]=\"width\"\r\n                  >\r\n                </div>\r\n                <div class=\" range-counter\">\r\n                  <input\r\n                  class=\"width-input\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  class=\"input\"\r\n                  (change)=\"SaveWidthWidth($event)\"\r\n                  [(ngModel)]=\"width\"\r\n                 \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n     \r\n        <hr class=\"break-line\" />\r\n        <!-- ********row -->\r\n        <div class=\"main-heading\">Drag Items</div>\r\n        <div class=\"rows-container\"\r\n          draggable=\"true\"\r\n          [attr.data.rowsId-drag]=\"rowdmogId\"\r\n          id=\"{{ rowdmogId }}\"\r\n          (dragstart)=\"dragRow($event)\"\r\n          (dragover)=\"onDragOver($event)\"\r\n        >\r\n          <div class=\"rows-content\">\r\n            <div class=\"icons-main\">\r\n             \r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\">\r\n                <path d=\"M19.5312 0.0625H2.34375C1.0498 0.0625 0 1.1123 0 2.40625V19.5938C0 20.8877 1.0498 21.9375 2.34375 21.9375H19.5312C20.8252 21.9375 21.875 20.8877 21.875 19.5938V2.40625C21.875 1.1123 20.8252 0.0625 19.5312 0.0625ZM4.49219 12.9531C4.16992 12.9531 3.90625 12.6895 3.90625 12.3672V9.63281C3.90625 9.31055 4.16992 9.04688 4.49219 9.04688H17.3828C17.7051 9.04688 17.9688 9.31055 17.9688 9.63281V12.3672C17.9688 12.6895 17.7051 12.9531 17.3828 12.9531H4.49219Z\" fill=\"black\"/>\r\n                </svg>\r\n           \r\n            </div>\r\n            <span class=\"texts\">Inner Row</span>\r\n          </div>\r\n          <div class=\"menus-box\">\r\n            <div class=\"menus-main\">\r\n              <svg width=\"12\" height=\"20\" viewBox=\"0 0 12 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M2 3C2.55228 3 3 2.55228 3 2C3 1.44772 2.55228 1 2 1C1.44772 1 1 1.44772 1 2C1 2.55228 1.44772 3 2 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                <path d=\"M10 3C10.5523 3 11 2.55228 11 2C11 1.44772 10.5523 1 10 1C9.44772 1 9 1.44772 9 2C9 2.55228 9.44772 3 10 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                <path d=\"M2 11C2.55228 11 3 10.5523 3 10C3 9.44772 2.55228 9 2 9C1.44772 9 1 9.44772 1 10C1 10.5523 1.44772 11 2 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                <path d=\"M10 11C10.5523 11 11 10.5523 11 10C11 9.44772 10.5523 9 10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                <path d=\"M2 19C2.55228 19 3 18.5523 3 18C3 17.4477 2.55228 17 2 17C1.44772 17 1 17.4477 1 18C1 18.5523 1.44772 19 2 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                <path d=\"M10 19C10.5523 19 11 18.5523 11 18C11 17.4477 10.5523 17 10 17C9.44772 17 9 17.4477 9 18C9 18.5523 9.44772 19 10 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n        \r\n        </div>\r\n      </mat-tab>\r\n\r\n      <mat-tab label=\"Styling\">\r\n      <div class=\"main-drag-side-menu\">\r\n        <div class=\"drag-side-menu\">\r\n        \r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"drag-side-menu-checkbox\"\r\n            id=\"menu-toggle-1\"\r\n          />\r\n         \r\n          <div class=\"drag-side-menu-content\">\r\n            <div class=\"fill-heading\">\r\n              Background\r\n            </div>\r\n            <div class=\"drop-side-color\">\r\n              <div>\r\n                <label class=\"drag-side-border-label-fill\">Fill Color</label>\r\n              </div>\r\n              <div class=\"color-picker\">\r\n                <input type=\"color\" class=\"color-picker-input\" [(ngModel)]=\"background_color\" (change)=\"RealTimeStyleChanges()\" />\r\n                <span class=\"fill-code\" *ngIf=\"background_color\">{{background_color | uppercase}}</span>\r\n                <span class=\"fill-code\" *ngIf=\"!background_color\">#FFFFFF</span>\r\n              </div>\r\n            </div>\r\n            <hr class=\"break-line\">\r\n            <div class=\"border-class\">\r\n            <div class=\"border-heading\">\r\n              Border\r\n            </div>\r\n            <div class=\"drop-side-color\">\r\n            <label class=\"drag-side-bordertype-label\" for=\"dropdown\">Border Type</label>\r\n              <div class=\"drag-side-border-container\">\r\n                \r\n                <div class=\"border-type-content\">\r\n                <div>\r\n                <span \r\n                  class=\"border-st\" \r\n                  [ngStyle]=\"{\r\n                    'border-style': border !== 'none' ? border : 'none',\r\n                    'border-color': 'black'\r\n                  }\">\r\n                  -----\r\n                </span>\r\n                </div>\r\n                <select\r\n                  class=\"drag-side-border-dropdown\"\r\n                  [(ngModel)]=\"border\"\r\n                  (change)=\"RealTimeStyleChanges()\"\r\n                >\r\n                  <option   *ngFor=\"let item of borderStyle\" value=\"{{item.name}}\">{{item.name}}\r\n                  </option>\r\n                  \r\n                </select>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          \r\n            <div class=\"drop-side-color\">\r\n              <div>\r\n                <label class=\"drag-side-border-label\">Border Color </label>\r\n              </div>\r\n              \r\n              <div class=\"color-picker\">\r\n                <input type=\"color\" class=\"color-picker-input\" [(ngModel)]=\"border_color\" (change)=\"RealTimeStyleChanges()\" />\r\n                <span class=\"fill-code\" *ngIf=\"border_color\">{{border_color | uppercase}}</span>\r\n                <span class=\"fill-code\" *ngIf=\"!border_color\">#FFFFFF</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"drop-side-color\">\r\n              <div>\r\n                <label class=\"drag-side-border-label\">Border Width</label>\r\n              </div>\r\n             <div class=\"range-picker\">\r\n              <input type=\"range\" class=\"range-input\" [(ngModel)]=\"border_width\" (change)=\"RealTimeStyleChanges()\" />\r\n              <input type=\"number\" class=\"range-number-input\" [(ngModel)]=\"border_width\" (change)=\"RealTimeStyleChanges()\" />\r\n             </div> \r\n            \r\n            </div>\r\n            <div class=\"drag-side-border-container\">\r\n              <div> <label class=\"drag-side-cornerborder-label\" for=\"dropdown\"\r\n                >Border Radius</label\r\n              ></div>\r\n             \r\n              <div class=\"drag-side-border-radius-dropdown\">\r\n                <div class=\"\">\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"drag-side-border-inputpos\"\r\n                    [(ngModel)]=\"corner_radius_top\"\r\n                    (change)=\"RealTimeStyleChanges()\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <select\r\n                class=\"drag-side-border-radius-dropdown d-none\"\r\n                id=\"dropdown\"\r\n                name=\"dropdown\"\r\n              >\r\n                <option value=\"option1\">px</option>\r\n                \r\n              </select>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"drag-side-menu\">\r\n          <!-- Hidden checkbox to control dropdown visibility -->\r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"drag-side-menu-checkbox\"\r\n            id=\"menu-toggle-2\"\r\n          />\r\n        </div>\r\n      \r\n           <hr>\r\n          <!-- Dropdown menu content -->\r\n          <div class=\"border-heading\">\r\n            Label\r\n          </div>\r\n          <div class=\"drag-side-menu-content\">\r\n            <div class=\"drag-side-border-container\">\r\n              <label class=\"drag-side-border-label\" for=\"dropdown\"\r\n                >Label Position</label\r\n              >\r\n              <div class=\"lebal-postion-align\">\r\n                <div  class=\"lebal-postion-Top\" (click)=\"ChangeLabelPostion('Top')\" [ngClass]=\"{'lebal-selected-postion-align': label_position === 'Top'}\">\r\n                  <span>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"none\">\r\n                      <path d=\"M7.5 3L4.6875 6H6.5625V14H8.4375V6H10.3125L7.5 3Z\" fill=\"black\"/>\r\n                      <rect width=\"15\" height=\"2\" fill=\"#090909\"/>\r\n                      </svg>\r\n                  </span>\r\n                </div>\r\n                <div class=\"lebal-postion-Left\"  (click)=\"ChangeLabelPostion('Left')\" [ngClass]=\"{'lebal-selected-postion-align': label_position === 'Left'}\">\r\n                \r\n                  <span>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"16\" viewBox=\"0 0 15 16\" fill=\"none\">\r\n                      <path d=\"M3.95591 8.48253L6.97236 11.2774L6.96136 9.40241L14.9612 9.35546L14.9502 7.48049L6.95035 7.52744L6.93935 5.65247L3.95591 8.48253Z\" fill=\"black\"/>\r\n                      <rect x=\"1\" y=\"16\" width=\"15\" height=\"2\" transform=\"rotate(-90.3363 1 16)\" fill=\"#090909\"/>\r\n                      </svg>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"drag-side-border-container\">\r\n              <label class=\"drag-side-border-label\" for=\"dropdown\"\r\n                >Label Alignment</label\r\n              >\r\n              <div class=\"lebal-aligment-position\">\r\n                <span class=\"align-text-left\" (click)=\"ChangeLabelAlignment('Left')\" [ngClass]=\"{'lebal-selected-postion-align': label_align === 'Left'}\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\">\r\n                  <g clip-path=\"url(#clip0_3038_117)\">\r\n                  <path d=\"M10.3125 0.9375H0.9375V2.8125H10.3125V0.9375Z\" fill=\"black\"/>\r\n                  <path d=\"M0.9375 4.6875H14.0625V6.5625H0.9375V4.6875Z\" fill=\"black\"/>\r\n                  <path d=\"M10.3125 8.4375H0.9375V10.3125H10.3125V8.4375Z\" fill=\"black\"/>\r\n                  <path d=\"M14.0625 12.1875H0.9375V14.0625H14.0625V12.1875Z\" fill=\"black\"/>\r\n                  </g>\r\n                  <defs>\r\n                  <clipPath id=\"clip0_3038_117\">\r\n                  <rect width=\"15\" height=\"15\" fill=\"white\"/>\r\n                  </clipPath>\r\n                  </defs>\r\n                  </svg>\r\n                </span>\r\n                  <span class=\"align-text-center\" (click)=\"ChangeLabelAlignment('Center')\" [ngClass]=\"{'lebal-selected-postion-align': label_align === 'Center'}\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\">\r\n                      <g clip-path=\"url(#clip0_3038_123)\">\r\n                      <path d=\"M12.1875 0.9375H2.8125V2.8125H12.1875V0.9375Z\" fill=\"black\"/>\r\n                      <path d=\"M0.9375 4.6875H14.0625V6.5625H0.9375V4.6875Z\" fill=\"black\"/>\r\n                      <path d=\"M12.1875 8.4375H2.8125V10.3125H12.1875V8.4375Z\" fill=\"black\"/>\r\n                      <path d=\"M14.0625 12.1875H0.9375V14.0625H14.0625V12.1875Z\" fill=\"black\"/>\r\n                      </g>\r\n                      <defs>\r\n                      <clipPath id=\"clip0_3038_123\">\r\n                      <rect width=\"15\" height=\"15\" fill=\"white\"/>\r\n                      </clipPath>\r\n                      </defs>\r\n                      </svg>\r\n                  </span>\r\n                  <span class=\"align-text-right\" (click)=\"ChangeLabelAlignment('Right')\" [ngClass]=\"{'lebal-selected-postion-align': label_align === 'Right'}\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\">\r\n                      <g clip-path=\"url(#clip0_3038_111)\">\r\n                        <path d=\"M14.0625 0.9375H4.6875V2.8125H14.0625V0.9375Z\" fill=\"black\"/>\r\n                        <path d=\"M0.9375 4.6875H14.0625V6.5625H0.9375V4.6875Z\" fill=\"black\"/>\r\n                        <path d=\"M14.0625 8.4375H4.6875V10.3125H14.0625V8.4375Z\" fill=\"black\"/>\r\n                        <path d=\"M14.0625 12.1875H0.9375V14.0625H14.0625V12.1875Z\" fill=\"black\"/>\r\n                      </g>\r\n                      <defs>\r\n                        <clipPath id=\"clip0_3038_111\">\r\n                          <rect width=\"15\" height=\"15\" fill=\"white\"/>\r\n                        </clipPath>\r\n                      </defs>\r\n                    </svg>\r\n                  </span>\r\n                  <span class=\"align-text-justify\" (click)=\"ChangeLabelAlignment('justify')\" [ngClass]=\"{'lebal-selected-postion-align': label_align === 'justify'}\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\">\r\n                      <path d=\"M14 1H1V3H14V1Z\" fill=\"black\"/>\r\n                      <path d=\"M0.9375 4.6875H14.0625V6.5625H0.9375V4.6875Z\" fill=\"black\"/>\r\n                      <path d=\"M14 8H1V10H14V8Z\" fill=\"black\"/>\r\n                      <path d=\"M14.0625 12.1875H0.9375V14.0625H14.0625V12.1875Z\" fill=\"black\"/>\r\n                    </svg>\r\n                  </span>\r\n              </div>\r\n            </div>\r\n\r\n           \r\n            <div class=\"drop-side-color\">\r\n              <div>\r\n                <label class=\"drag-side-border-label\">Label Color</label>\r\n              </div>\r\n              <div class=\"color-picker\">\r\n                <input type=\"color\" class=\"color-picker-input\" [(ngModel)]=\"label_color\" (change)=\"RealTimeStyleChanges()\" />\r\n                <span class=\"fill-code\" *ngIf=\"label_color\">{{label_color | uppercase}}</span>\r\n                <span class=\"fill-code\" *ngIf=\"!label_color\">#FFFFFF</span>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"drop-side-color\">\r\n              <div>\r\n                <label class=\"drag-side-border-label\">Help Icon Color</label>\r\n              </div>\r\n              <div class=\"color-picker\">\r\n                <input type=\"color\" class=\"color-picker-input\" [(ngModel)]=\"help_icon_color\" (change)=\"RealTimeStyleChanges()\" />\r\n                <span class=\"fill-code\" *ngIf=\"help_icon_color\">{{help_icon_color | uppercase}}</span>\r\n                <span class=\"fill-code\" *ngIf=\"!help_icon_color\">#FFFFFF</span>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"drag-side-menu\">\r\n          <!-- Hidden checkbox to control dropdown visibility -->\r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"drag-side-menu-checkbox\"\r\n            id=\"menu-toggle-3\"\r\n          />\r\n            <hr>\r\n          <!-- Dropdown menu content -->\r\n          <div class=\"border-heading\">\r\n            Header\r\n          </div>\r\n          <div class=\"drag-side-menu-content\">\r\n            <div class=\"drag-side-border-container\">\r\n              <label class=\"drag-side-border-label\" for=\"dropdown\"\r\n                >Header Style</label\r\n              >\r\n              <div class=\"header-check\">\r\n                  <div class=\"header-check-input\">\r\n                     \r\n                    <label class=\"custom-checkbox\">\r\n                      <input type=\"checkbox\"\r\n                      [(ngModel)]=\"header_border\" \r\n                      (change)=\"onHeaderBorderChange(header_border)\"\r\n                      />\r\n                      <span></span>\r\n                    </label>\r\n                     \r\n                  </div>\r\n              </div>\r\n\r\n            </div>\r\n            \r\n            <div class=\"drop-side-color\">\r\n              <div>\r\n                <label class=\"drag-side-border-label\">Fill Color</label>\r\n              </div>\r\n              <div class=\"color-picker\">\r\n                <input type=\"color\" class=\"color-picker-input\"  [(ngModel)]=\"header_fill_color\" (change)=\"RealTimeStyleChanges()\" />\r\n                <span class=\"fill-code\" *ngIf=\"header_fill_color\">{{header_fill_color | uppercase}}</span>\r\n                <span class=\"fill-code\" *ngIf=\"!header_fill_color\">#FFFFFF</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"drop-side-color\">\r\n              <div>\r\n                <label class=\"drag-side-border-label\">Text Color</label>\r\n              </div>\r\n              <div class=\"color-picker\">\r\n                <input type=\"color\" class=\"color-picker-input\"  [(ngModel)]=\"header_text_color\" (change)=\"RealTimeStyleChanges()\" />\r\n                <span class=\"fill-code\" *ngIf=\"header_text_color\">{{header_text_color | uppercase}}</span>\r\n                <span class=\"fill-code\" *ngIf=\"!header_text_color\">#FFFFFF</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n         \r\n        </div>\r\n        <div class=\"btn-save\">\r\n          <button class=\"styling-save-btn\" type=\"button\" (click)=\"SaveChanges()\">Save Changes</button>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>   \r\n\r\n\r\n    <div  *ngIf=\"sideNavModel.dmog.Type ==='CardGroup'\">\r\n      <div class=\"main-heading\">Settings</div>\r\n      <div class=\"continer-header\">\r\n        <div class=\"continer-heading\">Card Group Name</div>\r\n        <div class=\"continer-Name-bold\">{{sideNavModel!.dmog!.DisplayName}}</div>\r\n      </div>\r\n      <div class=\"continer-header\">\r\n        <div class=\"continer-heading\">Card Group Width (%)</div>\r\n        <div class=\"continer-Name\">\r\n          <div class=\"settings-range\"> \r\n              <div class=\"range-box\">\r\n                <input class=\"range-line\" type=\"range\"\r\n                (input)=\"changeWidth($event)\"\r\n                (change)=\"SaveWidthWidth($event)\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                step=\"1\"\r\n                displayWith=\"formatLabel\"\r\n                [(ngModel)]=\"width\"\r\n                >\r\n              </div>\r\n              <div class=\" range-counter\">\r\n                <input\r\n                class=\"width-input\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                class=\"input\"\r\n                (change)=\"SaveWidthWidth($event)\"\r\n                [(ngModel)]=\"width\"\r\n               \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\nimport {  ResizeEvent } from 'angular-resizable-element';\r\nimport { DataModelerApiService } from '../../services1/data-modeler-api.service1';\r\n\r\nimport { MessageService } from '@app/core';\r\nimport { intersectionBy } from 'lodash';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { ServiceProviderService } from '../../services1/service-provider.service';\r\nimport { DMOG } from '../../classes';\r\nimport { DMOS } from '../../const1';\r\nimport { ApiService } from '@app/admin/core/services/api.service';\r\nimport { environment } from '@env/environment';\r\n\r\nimport { DMOType, PanelMainContainer, PanelMainRow } from '../../models1';\r\nimport { MAT_MENU_DEFAULT_OPTIONS, MatMenuTrigger } from '@angular/material/menu';\r\nimport { ContextMenuPosition } from '../contextMenu/contextMenu.datatypes';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ShareDmoComponent } from '../share-dmo/share-dmo.component';\r\n\r\nimport { DmogSettingsComponent } from '../dmog-settings/dmog-settings.component';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgStyle, NgTemplateOutlet, NgFor, NgIf } from '@angular/common';\r\nimport { DmoComponent } from '../dmo/dmo.component';\r\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\r\nimport { DmoFormControlsComponent } from '../dmo-form-controls/dmo-form-controls.component';\r\n;\r\n@Component({\r\n    selector: 'app-resizeable-panel',\r\n    templateUrl: './resizeable-panel.component.html',\r\n    styleUrls: ['./resizeable-panel.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: MAT_MENU_DEFAULT_OPTIONS,\r\n            useValue: { overlayPanelClass: 'custom-mat-Class' }\r\n        }\r\n    ],\r\n    standalone: true,\r\n    imports: [\r\n        NgStyle,\r\n        NgTemplateOutlet,\r\n        NgFor,\r\n        NgIf,\r\n        DmoComponent,\r\n        NgbTooltip,\r\n        MatMenuTrigger,\r\n        ContextMenuComponent,\r\n        DmoFormControlsComponent,\r\n        ShareDmoComponent,\r\n    ],\r\n})\r\nexport class ResizeablePanelComponent implements OnInit {\r\n  private readonly baseUrl = `${environment.Setting.BaseAPIUrl}/modeler`;\r\n  // @ViewChild(MatMenuTrigger) menu: MatMenuTrigger;\r\n  shareDmo: MatDialogRef<ShareDmoComponent>;\r\n  availableDmoToShare:any =[];\r\n  constructor(\r\n    private dmApi: DataModelerApiService,\r\n    private apiService:ApiService,\r\n    private msg: MessageService,\r\n    private toast: ToastrService,\r\n    private dataProvider: ServiceProviderService,\r\n    private cdref: ChangeDetectorRef ,\r\n    private elementRef: ElementRef,\r\n    public matdialog: MatDialog,\r\n    private modalService: NgbModal\r\n  ) {\r\n\r\n    this.dataProvider.getHideContextMenu().subscribe(result => {\r\n      this.resetDivColour();\r\n    });\r\n\r\n    this.dataProvider.getDmoStates().subscribe(result => {\r\n      this.updatePropBaseOfDMO(this.contextMenuData,result)\r\n    });\r\n    this.dataProvider.getDeleteDmo().subscribe(result => {\r\n      if(result.dmogId==this.data.GUID){\r\n        this.removeDmoToOthers(result.dmoguid)\r\n        this.saveProps();\r\n      }\r\n    });\r\n    this.dataProvider.getMoveDmo().subscribe(result => {\r\n      if(result.dmogId==this.data.DMOGID){\r\n        this.removeDmoToOthers(result.dmoguid)\r\n        this.updatereOrdering(result.targetId,result.dmoguid)\r\n        this.saveProps(null,result);\r\n        // setTimeout(() => {\r\n        //   this.reloadParent.emit(true);\r\n        // }, 500);\r\n      }\r\n      if(result.prevdmogId==this.data.DMOGID){\r\n        this.removeDmoToOthers(result.dmoguid)\r\n        this.saveProps(null,result);\r\n      }\r\n     \r\n    });\r\n\r\n    this.dataProvider.setMoveDmo\r\n  }\r\n  @Input() title: string;\r\n  @Input() active = false;\r\n  @Input() hasInvalidForm = false;\r\n  @Input() bmodisplay: boolean;\r\n  @Input() trnsctnId: any;\r\n  @Input() ChildProcessName: string;\r\n  @Input() ParentDmoValue: any;\r\n  @Input() ChildDmoGuid: any;\r\n  @Input() ProcessType: any;\r\n  @Input() data: any;\r\n\r\n  dragdmoguid:any;\r\n  @Input() left = 0;\r\n  @Input() top = 0;\r\n  @Input() readonly = false;\r\n \r\n   currentRow;\r\n   currentColumn\r\n   type: DMOType;\r\n  rows: PanelMainRow[] = [];\r\n\r\n  panelMainContainer:PanelMainContainer\r\n\r\n  dmo = { display: false };\r\n  @Input() BMO;\r\n  @Input() panel;\r\n \r\n  @Output() tabRemove = new EventEmitter<ResizeablePanelComponent>();\r\n  @Output() tabEdit = new EventEmitter<ResizeablePanelComponent>();\r\n  @Output() OnBMOSave = new EventEmitter<ResizeablePanelComponent>();\r\n  @Output() onDmoEdit = new EventEmitter<any>();\r\n  @Output() onDmoDelete = new EventEmitter<any>();\r\n  @Output() openConditionPopup = new EventEmitter<any>();\r\n  @Output() openclonePopup = new EventEmitter<any>();\r\n  @Output() reloadParent = new EventEmitter<any>();\r\n @Output() dragDmoToAnotherdmog  = new EventEmitter<any>();\r\n @Output() dropDmoToAnotherdmog  = new EventEmitter<any>();\r\n  hoveredRowIndex: any;\r\n  hoveredColumnIndex: any;\r\n  hoveredColumnRowIndex: any;\r\n  private _dmog: DMOG;\r\n  contextMenuPosition: ContextMenuPosition = null;\r\n  contextMenuFormPosition: ContextMenuPosition = null;\r\n  contextMenuData:any = null;\r\n  cdkDragDisabled=false\r\n  showFormContextMenu =false;\r\n  showSharedmoContextMenu=false;\r\n  //public bm: classes.BM;\r\n  @Input()\r\n  set dmog(dmog: DMOG) {\r\n    this._dmog = dmog;\r\n  }\r\n  get dmog() {\r\n    return this._dmog;\r\n  }\r\n  private IsJsonStaticGridDmo: boolean = false;\r\n  readonly formsControls = Object.values(DMOS).sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n  ngOnInit(): void {\r\n    this.style = {\r\n      width: `100%`,\r\n      height: `auto`,\r\n    };\r\n    if(this.data && this.data.DMOGProps){\r\n    \r\n      this.panelMainContainer=JSON.parse(this.data.DMOGProps);\r\n      if(this.panelMainContainer){\r\n        this.rows=this.panelMainContainer.rows\r\n      }\r\n      this.updateWidth();\r\n     \r\n    }\r\n\r\n    \r\n  }\r\n  disableDrag(){\r\n    this.cdkDragDisabled=true;\r\n\r\n  }\r\n  \r\n  updateWidth(){\r\n    if(this.panelMainContainer){\r\n      let width = this.panelMainContainer.width;\r\n       if(width==0){\r\n        width=100\r\n       }\r\n    this.style = {\r\n      width: `${100}%`,\r\n      height: `auto`,\r\n    };\r\n  }\r\n  }\r\n  enableDrag(){\r\n    this.cdkDragDisabled=false;\r\n  }\r\n  ngAfterContentChecked() {\r\n    //this.cdref!.detectChanges();\r\n }\r\n  public style: object = {};\r\n\r\n  validate(event: ResizeEvent): boolean {\r\n    const MIN_DIMENSIONS_PX: number = 50;\r\n    if (\r\n      event.rectangle.width &&\r\n      event.rectangle.height &&\r\n      (event.rectangle.width < MIN_DIMENSIONS_PX ||\r\n        event.rectangle.height < MIN_DIMENSIONS_PX)\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onResizeEnd(event: ResizeEvent): void {\r\n    this.style = {\r\n      // left: `${event.rectangle.left}px`,\r\n      // top: `${event.rectangle.top}px`,\r\n      width: `${event.rectangle.width}px`,\r\n      height: `auto`,\r\n    };\r\n  }\r\n\r\n  onTabRemove(tab: ResizeablePanelComponent) {\r\n    this.resetDivColour();\r\n    this.tabRemove.emit(tab);\r\n  }\r\n  onEditDMOGRemove(tab: ResizeablePanelComponent) {\r\n    this.resetDivColour();\r\n    this.tabEdit.emit(tab);\r\n  }\r\n   ShowDmogSettings(){\r\n   if(!this.panelMainContainer){\r\n    let column=[];\r\n      column.push({\"colIndex\":0,\"dmoguid\":[],\"width\":99.5,\"rows\":[]})\r\n      let letNextRow={rowIndex:0,\r\n        columns:column\r\n      } as PanelMainRow\r\n       this.rows.push(letNextRow);\r\n    \r\n       this.panelMainContainer={\r\n        width:100,\r\n        rows: this.rows\r\n      }\r\n    }\r\n\r\n    let modal = this.matdialog.open(DmogSettingsComponent,  {\r\n      data: {\r\n        width: this.panelMainContainer.width,\r\n        dmogName:this.title\r\n      \r\n      },\r\n      // height: '300px',\r\n      //  width: '300px',\r\n    });\r\n\r\n    modal.afterClosed().subscribe(result => {\r\n      if(result && result.event == 'save'){\r\n        this.panelMainContainer.width=result.data.width;\r\n        this.saveProps(true);\r\n        this.updateWidth();\r\n       \r\n        \r\n   \r\n      }\r\n    });\r\n  }\r\n  onAddRow() {\r\n   let nextIndex= this.rows.length;\r\n   let column=[];\r\n   column.push({\"colIndex\":0,\"dmoguid\":[],\"width\":99.5,\"rows\":[]})\r\n   let letNextRow={rowIndex:nextIndex,columns:column} as PanelMainRow\r\n    this.rows.push(letNextRow);\r\n    this.resetDivColour();\r\n    this.saveProps();\r\n  }\r\n\r\n  onAddColumn(rowIndex: number) {\r\n    if (this.rows[rowIndex].columns.length < 12) {\r\n      let currentRoWithCol=this.rows.filter(a=>a.rowIndex == rowIndex);\r\n      let column= currentRoWithCol[0].columns.length;\r\n      this.rows[rowIndex].columns.push({\"colIndex\":column+1,\"dmoguid\":[],\"rows\":[]});\r\n      this.resetColumnWidth(currentRoWithCol[0].columns);\r\n      this.saveProps()\r\n    } else {\r\n      alert('Maximum 12 columns allowed per row.');\r\n    }\r\n\r\n  }\r\n\r\n  resetColumnWidth(currentRoWithCol,rowIndex?){\r\n   \r\n    if(rowIndex!=null){\r\n      let currentRow=this.rows.filter(a=>a.rowIndex == rowIndex);\r\n      if(currentRow.length==0)\r\n        return\r\n      currentRoWithCol= currentRow[0].columns;\r\n    }\r\n    let column= currentRoWithCol;\r\n    let  index=0;\r\n    let perClmwidth=99.5/currentRoWithCol.length;\r\n    for(let c of column ){\r\n       c.width =perClmwidth;\r\n       c.colIndex=index;\r\n       c.mw=false\r\n       index++;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  resetColumnWidthForRowInColumn(currentRoWithCol){\r\n    for(let r of currentRoWithCol ){\r\n    let column= r.columns\r\n    let perClmwidth=100/r.columns.length;\r\n    let  index=0;\r\n    for(let c of column ){\r\n       c.width =perClmwidth;\r\n       c.index=index;\r\n       c.mw=false\r\n       index++;\r\n    }\r\n  }\r\n\r\n  }\r\n\r\n  onAddRowInColumn(item){\r\n   let rowIndex: number=item.rowIndex\r\n   let colIndex: number=item.colIndex;\r\n    let currentRoWithCol=this.rows.filter(a=>a.rowIndex == rowIndex);\r\n    if(currentRoWithCol.length>0){\r\n     let column= currentRoWithCol[0].columns[colIndex];\r\n      if (column) {\r\n        let childColum=[];\r\n        childColum.push({\"index\":0,\"width\":100,\"dmoguid\":[]})\r\n         column.rows.push({\"columns\":childColum})\r\n         this.resetColumnWidthForRowInColumn(column.rows)\r\n      }\r\n    \r\n    }\r\n    this.saveProps();\r\n  }\r\n  ///dmo\r\n  onAddRowChildColumnDmo(item,dmoguid){\r\n    let rowIndex: number=item.rowIndex\r\n    let colIndex: number=item.colIndex;\r\n     let currentRoWithCol=this.rows.filter(a=>a.rowIndex == rowIndex);\r\n     if(currentRoWithCol.length>0){\r\n      let column= currentRoWithCol[0].columns[colIndex];\r\n      if (column) {\r\n        let existingColumn=column.rows[item.ColumnRowIndex]\r\n        let ex=existingColumn.columns.length;\r\n        for(let c of existingColumn.columns ){\r\n          if(c.index==item.colRowcolumnIndex){\r\n            if(!c.dmoguid){\r\n              c.dmoguid=[];\r\n            }\r\n            c.dmoguid.push(dmoguid);\r\n          }\r\n         \r\n        }\r\n     \r\n     }\r\n     \r\n     }\r\n     this.saveProps();\r\n  }\r\n  //end\r\n  onAddRowChildColumn(item){\r\n    let rowIndex: number=item.rowIndex\r\n    let colIndex: number=item.colIndex;\r\n     let currentRoWithCol=this.rows.filter(a=>a.rowIndex == rowIndex);\r\n     if(currentRoWithCol.length>0){\r\n      let column= currentRoWithCol[0].columns[colIndex];\r\n      if (column) {\r\n        let existingColumn=column.rows[item.ColumnRowIndex]\r\n        let ex=existingColumn.columns.length;\r\n        existingColumn.columns.push({\"index\":ex+1,\"width\":100,\"dmoguid\":[]});\r\n        this.resetColumnWidthForRowInColumn(column.rows)\r\n     }\r\n     \r\n     }\r\n     this.saveProps();\r\n  }\r\n  onRemoveRowChildColumn(item){\r\n    let rowIndex: number=item.rowIndex\r\n    let colIndex: number=item.colIndex;\r\n     let currentRoWithCol=this.rows.filter(a=>a.rowIndex == rowIndex);\r\n     if(currentRoWithCol.length>0){\r\n      let column= currentRoWithCol[0].columns[colIndex];\r\n      if (column) {\r\n        let existingColumn=column.rows[item.ColumnRowIndex]\r\n        let ex=existingColumn.columns.length;\r\n        existingColumn.columns.splice(item.colRowcolumnIndex, 1);\r\n        this.resetColumnWidthForRowInColumn(column.rows)\r\n     }\r\n     \r\n     }\r\n     this.saveProps();\r\n  }\r\n  onRemoveColumn(rowIndex: number, colIndex: number) {\r\n    this.rows[rowIndex].columns.splice(colIndex, 1);\r\n    this.resetColumnWidth(null,rowIndex);\r\n    this.saveProps()\r\n  }\r\n\r\n  onRemoveRow(rowIndex: number) {\r\n    this.rows.splice(rowIndex, 1);\r\n    this.saveProps()\r\n  }\r\n  \r\n\r\n  shareDmoSelect(dmo){\r\n    this.updatePropBaseOfDMO(this.contextMenuData,dmo.guid)\r\n  }\r\n  FormControlSelect(type){\r\n    this.type=type;\r\n    this.OnBMOSave.emit(this);\r\n  }\r\n  GetSelectMenu(rowIndex,colIndex){\r\n    this.currentRow=rowIndex;\r\n    this.currentColumn=colIndex;\r\n\r\n  }\r\n  styleObject(column) {\r\n    if (column){\r\n        return {width: column.width+\"%\"}\r\n    }\r\n    return {}\r\n}\r\n\r\nstyleObjectChild(column){\r\n  if (column){\r\n    const totalColumns = column?.columns?.length || 1;\r\n    const paddingAdjustment = 1;\r\n  const modifiedWidth =  column?.columns?.map((col:any)=>{\r\n   return col?.width ? (col?.width - paddingAdjustment / totalColumns) : col?.width;\r\n  })\r\n    return {width: modifiedWidth+\"%\"}\r\n}\r\nreturn {}\r\n\r\n}\r\n  //prop \r\n  saveProps(isReload?,fromOneToAnotherDmo?){\r\n   \r\n    if(!this.panelMainContainer){\r\n      this.panelMainContainer={\r\n        width:100,\r\n        rows:this.rows\r\n      }\r\n    }else{\r\n      this.panelMainContainer.rows=this.rows\r\n    }\r\n    var model={};\r\n  if(fromOneToAnotherDmo){\r\n    model={\"DMOGID\":this.data.DMOGID,\r\n        \"prevdmogId\":fromOneToAnotherDmo.prevdmogId,\r\n         \"newdmogId\":fromOneToAnotherDmo.dmogId,\r\n         \"dmoguid\":fromOneToAnotherDmo.dmoguid,\r\n          \"DMOGProps\":JSON.stringify(this.panelMainContainer)\r\n      }\r\n  }else{\r\n     model={\"DMOGID\":this.data.DMOGID,\r\n             \"DMOGProps\":JSON.stringify(this.panelMainContainer)\r\n      }\r\n    }\r\n  \r\n    const url = `wfapibm/DataModel/SaveDmogProps`;\r\n    this.apiService.postgateway('',url,model).subscribe(r=>{\r\n      this.data.DMOGProps=JSON.stringify(this.panelMainContainer)\r\n      if(isReload){\r\n        this.reloadParent.emit(true)\r\n      }\r\n    },error=>{\r\n      console.log(error)\r\n    });\r\n   \r\n  }\r\n  showContextMenu(event:any,clickedDiv){\r\n    if(this.readonly)\r\n      return\r\n    event.stopPropagation();\r\n    this.showFormContextMenu=false;\r\n    this.showSharedmoContextMenu=false;\r\n    this.resetDivColour();\r\n    // let  bgc = 'rgb(178 211 236)';\r\n    const div: HTMLDivElement = <HTMLDivElement>event.target;\r\n    //div.style.backgroundColor=bgc;\r\n    this.contextMenuPosition=new ContextMenuPosition()\r\n    this.contextMenuData = clickedDiv;\r\n    this.contextMenuPosition.rightClickMenuPositionX=event.currentTarget.getBoundingClientRect().right -120;\r\n    this.contextMenuPosition.rightClickMenuPositionY=event.currentTarget.getBoundingClientRect().y;\r\n    this.contextMenuFormPosition=new ContextMenuPosition()\r\n    this.contextMenuFormPosition=this.contextMenuPosition;\r\n  }\r\n  resetDivColour(){\r\n    return;\r\n    const dom: HTMLElement = this.elementRef.nativeElement;\r\n    const elements = dom.querySelectorAll('.colouredDiv');\r\n    if(elements){\r\n      elements.forEach((cdiv) => {\r\n        const div: HTMLDivElement = <HTMLDivElement>cdiv;\r\n       div.style.backgroundColor=\"#fff\";\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n\r\nupdatePropBaseOfDMO(data,dmoguid){\r\n      if(data==undefined || data==null)\r\n        return\r\n  switch (data.type) {\r\n    case 'parentRow': {\r\n      let currentRoWithCol=this.rows.filter(a=>a.rowIndex == data.rowIndex);\r\n      let column= currentRoWithCol[0].columns.length;\r\n      //this.rows[data.rowIndex].columns.push({\"column\":column+1,\"dmoguid\":null,\"rows\":[]});\r\n      break;\r\n    };\r\n    case 'column': {\r\n          let currentRoWithCol=this.rows.filter(a=>a.rowIndex == data.rowIndex);\r\n          let column= currentRoWithCol[0].columns;\r\n          for (let index = 0; index < column.length; index++) {\r\n            if(index == data.colIndex){\r\n              column[index].dmoguid.push(dmoguid);\r\n              break;\r\n            }\r\n          }\r\n          this.saveProps()\r\n        \r\n      break;\r\n    };\r\n\r\n    case 'columnRow': {\r\n       let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex,'ColumnRowIndex':data.colRowIndex,\"colRowcolumnIndex\":data.colRowcolumnIndex}\r\n       \r\n\r\n        let currentRoWithCol=this.rows.filter(a=>a.rowIndex == data.rowIndex);\r\n        if(currentRoWithCol.length>0){\r\n         let column= currentRoWithCol[0].columns[data.colIndex];\r\n         if (column) {\r\n           let existingColumn=column.rows[data.colRowIndex]\r\n           for (let index = 0; index < existingColumn.columns.length; index++) {\r\n            if(index == data.colRowcolumnIndex){\r\n              existingColumn.columns[index].dmoguid.push(dmoguid);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.saveProps()\r\n      break;\r\n    };\r\n\r\n   \r\n  }\r\n\r\n}\r\nupdatereOrdering(targetId,dmoguid){\r\n  if(targetId && targetId.length>0 && dmoguid){\r\n    let ids=targetId.split('_');\r\n    if(ids && ids.length>0){\r\n      let _currentdmog=ids[0];\r\n      let rowORCol=ids[1];\r\n      if(rowORCol==\"column\"){\r\n        let rowIndex=Number(ids[2]);\r\n        let colIndex=Number(ids[3]);\r\n        let data={'rowIndex':rowIndex,'colIndex':colIndex,'type':'column'}\r\n        this.removeDmoToOthers(dmoguid);\r\n        this.updatePropBaseOfDMO(data,dmoguid);\r\n      }\r\n      else if(rowORCol==\"columnRow\"){\r\n        let rowIndex=Number(ids[2]);\r\n        let colIndex=Number(ids[3]);\r\n        let colRowIndex=Number(ids[4]);\r\n        let  colRowcolumnIndex=Number(ids[5]);\r\n        let data={'type':'columnRow','rowIndex':rowIndex,\"colIndex\":colIndex,'colRowIndex':colRowIndex,\"colRowcolumnIndex\":colRowcolumnIndex}\r\n       \r\n\r\n        this.removeDmoToOthers(dmoguid);\r\n        this.updatePropBaseOfDMO(data,dmoguid);\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\nremoveDmoToOthers(dmoguid){\r\n  if(this.rows.length){\r\n    for (let index = 0; index < this.rows.length; index++) {\r\n      const r = this.rows[index];\r\n      for (let c = 0; c < r.columns.length; c++) {\r\n        const col = r.columns[c];\r\n        if(col.dmoguid!=null){\r\n          var existsIndex = col.dmoguid.indexOf(dmoguid);\r\n              if (existsIndex > -1) {\r\n                col.dmoguid.splice(existsIndex, 1);\r\n              }\r\n         \r\n        }\r\n          for (let cr = 0; cr < col.rows.length; cr++) {\r\n            const crc = col.rows[cr];\r\n            for (let icrc = 0; icrc < crc.columns.length; icrc++) {\r\n              const cColumn = crc.columns[icrc];\r\n              if(cColumn.dmoguid!=null){\r\n                var existsIndex = cColumn.dmoguid.indexOf(dmoguid);\r\n                if (existsIndex > -1) {\r\n                  cColumn.dmoguid.splice(existsIndex, 1);\r\n                }\r\n                \r\n                }\r\n            }\r\n        }\r\n        \r\n      }\r\n      \r\n    }\r\n  }\r\n}\r\n getCurrentDMO(dmoguid){\r\n  // if(this.availableDmoToShare  && this.availableDmoToShare.components && this.availableDmoToShare.components.length>0 ){\r\n  //   let dmo=this.availableDmoToShare.components.filter(a=>a.guid==dmoguid)\r\n  //   if(dmo && dmo.length>0){\r\n  //     return dmo[0];\r\n  //   }\r\n  // }else{\r\n    if(this.data  && this.data.formData && this.data.formData.components){\r\n      let dmo=this.data.formData.components.filter(a=>a.guid==dmoguid)\r\n      if(dmo && dmo.length>0){\r\n        return dmo[0];\r\n      }\r\n    } \r\n  //}\r\n  return null;\r\n  \r\n }\r\n dragdmo(event,dmoguid){\r\n  this.dragdmoguid=dmoguid;\r\n  this.dragDmoToAnotherdmog.emit({\"dmogId\":this.data.DMOGID,\"dmoguid\":dmoguid});\r\n  console.log(\"dragdmo\",event,dmoguid);\r\n  \r\n }\r\n onDragOver(event){\r\n  event.preventDefault()\r\n\r\n }\r\n dropdmo(event:any,dmoguid){\r\n  if(this.readonly)\r\n    return;\r\n  event.stopPropagation();\r\n  let targetId=event.currentTarget.id;\r\n  this.showFormContextMenu=false;\r\n  this.showSharedmoContextMenu=false;\r\n  this.updatereOrdering(targetId,this.dragdmoguid)\r\n  if(!dmoguid){\r\n    if(targetId && targetId.length>0){\r\n      let ids=targetId.split('_');\r\n      if(ids && ids.length>0){\r\n    this.dropDmoToAnotherdmog.emit({\"dmogId\":this.data.DMOGID,\"targetId\":targetId});\r\n      }\r\n    }\r\n  }\r\n   \r\n }\r\n \r\n CurrentDropItem(event,id){\r\n  const div: HTMLDivElement = <HTMLDivElement>event.relatedTarget\r\n  //console.log(\"CurrentDropItem\",\"id\",id);\r\n }\r\n//  GetAvailableDmoToShare(){\r\n  \r\n // this.dmApi.GetAvailableDmoToShare(this.data.DMOGID, this.data.root.BMId).subscribe(x=>{\r\n//   this.availableDmoToShare= x;\r\n  \r\n// });\r\n//  }\r\n  OperateContextMenu($event) {\r\n    var data=$event.showContextMenuFor;\r\n    var option=$event.option;\r\n    this.showFormContextMenu=false;\r\n    if(option==\"AddDMO\"){\r\n      this.contextMenuFormPosition=$event.position;\r\n      this.showFormContextMenu=true;\r\n     return;\r\n    }\r\n    else if(option==\"shareDMO\"){\r\n      this.showSharedmoContextMenu=true;\r\n      this.contextMenuFormPosition=$event.position;\r\n    \r\n     return;\r\n     \r\n    }\r\n    if(option==\"EditDMO\" || option==\"DeleteDMO\" ||option ==\"ConditionsDMO\" || option ==\"CloneDMO\"){\r\n      switch (data.type) {\r\n        case 'column': {\r\n          if(data.dmoguid){\r\n              let dmowithDmog={\"dmog\":this.data,\"dmo\":this.getCurrentDMO(data.dmoguid),\"dmoguid\":data.dmoguid};\r\n              if(option==\"DeleteDMO\"){\r\n                this.onDmoDelete.emit(dmowithDmog);\r\n              }else if(option==\"EditDMO\" ){\r\n              this.onDmoEdit.emit(dmowithDmog);\r\n              }\r\n              else if(option==\"ConditionsDMO\" ){\r\n                this.openConditionPopup.emit(dmowithDmog);\r\n                }\r\n                else if(option==\"CloneDMO\" ){\r\n                  this.openclonePopup.emit(dmowithDmog);\r\n                  }\r\n              return;\r\n            }\r\n          \r\n          let currentRoWithCol=this.rows.filter(a=>a.rowIndex == data.rowIndex);\r\n           for (let index = 0; index < currentRoWithCol.length; index++) {\r\n            for (let c = 0; c < currentRoWithCol[index].columns.length; c++) {\r\n                if(c==data.colIndex){\r\n                  const dmoguid=currentRoWithCol[index].columns[c].dmoguid[0]\r\n                  if(dmoguid){\r\n                    let dmowithDmog={\"dmog\":this.data,\"dmo\":this.getCurrentDMO(dmoguid),\"dmoguid\":dmoguid};\r\n                    if(option==\"DeleteDMO\"){\r\n                      this.onDmoDelete.emit(dmowithDmog);\r\n                    }else if(option==\"EditDMO\" ){\r\n                    this.onDmoEdit.emit(dmowithDmog);\r\n                    }\r\n                    else if(option==\"ConditionsDMO\" ){\r\n                      this.openConditionPopup.emit(dmowithDmog);\r\n                      }\r\n                      else if(option==\"CloneDMO\" ){\r\n                        this.openclonePopup.emit(dmowithDmog);\r\n                        }\r\n                    return;\r\n                  }\r\n                }\r\n              \r\n            }\r\n           }\r\n          break;\r\n        };\r\n  \r\n        case 'columnRow': {\r\n          let dmoguid=\"\";\r\n          if(data.dmoguid){\r\n            dmoguid=data.dmoguid;\r\n          }else{\r\n          let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex,'ColumnRowIndex':data.colRowIndex}\r\n          let currentRoWithCol=this.rows.filter(a=>a.rowIndex == data.rowIndex);\r\n          \r\n          for (let index = 0; index < currentRoWithCol.length; index++) {\r\n            loop2:\r\n           for (let c = 0; c < currentRoWithCol[index].columns.length; c++) {\r\n               if(c==data.colIndex){\r\n                \r\n                 let column= currentRoWithCol[0].columns[c];\r\n                 if (column) {\r\n                   let existingColumn=column.rows[item.ColumnRowIndex]\r\n                   \r\n                   for (let crin = 0; crin < existingColumn.columns.length; crin++) {\r\n                    \r\n                    if(crin==data.colRowcolumnIndex){\r\n                      const element = existingColumn.columns[crin];\r\n                      dmoguid=element.dmoguid[0];\r\n                      break loop2;\r\n                      return;\r\n                    }\r\n                   }\r\n                 }\r\n               }\r\n             \r\n           }\r\n          }\r\n         }\r\n          //\r\n          let dmowithDmog={\"dmog\":this.data,\"dmo\":this.getCurrentDMO(dmoguid),\"dmoguid\":dmoguid};\r\n          if(option==\"DeleteDMO\"){\r\n            this.onDmoDelete.emit(dmowithDmog);\r\n          }else if(option==\"EditDMO\" ){\r\n          this.onDmoEdit.emit(dmowithDmog);\r\n          }\r\n          else if(option==\"ConditionsDMO\" ){\r\n            this.openConditionPopup.emit(dmowithDmog);\r\n            }\r\n            else if(option==\"CloneDMO\" ){\r\n              this.openclonePopup.emit(dmowithDmog);\r\n              }\r\n          break;\r\n        };\r\n  \r\n       \r\n  \r\n      }\r\n     return;\r\n    }\r\n\r\n    this.resetDivColour();\r\n    switch (data.type) {\r\n      case 'parentRow': {\r\n        if(option=='AddColumn'){\r\n         this.onAddColumn(data.rowIndex);\r\n        }\r\n       else if(option=='RemoveRow'){\r\n          this.onRemoveRow(data.rowIndex);\r\n         }\r\n        \r\n        break;\r\n      };\r\n      case 'column': {\r\n        if(option=='AddColumn'){\r\n          this.onAddColumn(data.rowIndex);\r\n         }\r\n        else if(option=='AddRow'){\r\n           let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex}\r\n           this.onAddRowInColumn(item);\r\n          }\r\n          else if(option=='RemoveColumn'){\r\n            this.onRemoveColumn(data.rowIndex, data.colIndex)\r\n           }\r\n          \r\n        break;\r\n      };\r\n\r\n      case 'columnRow': {\r\n        if(option=='AddColumn'){\r\n          let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex,'ColumnRowIndex':data.colRowIndex}\r\n          this.onAddRowChildColumn(item);\r\n         }\r\n        else if(option=='RemoveColumn'){\r\n          let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex,'ColumnRowIndex':data.colRowIndex,\"colRowcolumnIndex\":data.colRowcolumnIndex}\r\n           this.onRemoveRowChildColumn(item);\r\n          }\r\n        break;\r\n      };\r\n      case 'NestedcolumnRow': {\r\n        if(option=='AddColumn'){\r\n          let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex,'ColumnRowIndex':data.colRowIndex}\r\n          this.onAddRowChildColumn(item);\r\n         }\r\n        else if(option=='RemoveColumn'){\r\n          let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex,'ColumnRowIndex':data.colRowIndex,\"colRowcolumnIndex\":data.colRowcolumnIndex}\r\n           this.onRemoveRowChildColumn(item);\r\n          }\r\n        break;\r\n      };\r\n      \r\n\r\n     \r\n\r\n    }\r\n  }\r\n  @HostListener('window:scroll', [])\r\n  onWindowScroll() {\r\n    this.resetDivColour()\r\n  }\r\n}\r\n\r\n\r\n\r\n","\r\n<!-- <div\r\n  cdkDrag\r\n  [cdkDragDisabled]=\"cdkDragDisabled\"\r\n  cdkDragBoundary=\".form-view\"\r\n  class=\"rectangle\"\r\n  mwlResizable\r\n  [ngStyle]=\"style\"\r\n  [enableGhostResize]=\"true\"\r\n  (resizeEnd)=\"onResizeEnd($event)\"\r\n  (mouseenter)=\"dmo.display = true\"\r\n  (mouseleave)=\"dmo.display = false\"\r\n> -->\r\n\r\n<div\r\n\r\n  cdkDragBoundary=\".form-view\"\r\n  class=\"rectangle resizePanel\"\r\n  id=\"main_{{title}}\"\r\n  [ngStyle]=\"style\"\r\n \r\n  (mouseenter)=\"dmo.display = true\"\r\n  (mouseleave)=\"dmo.display = false\"\r\n>\r\n  <div\r\n    class=\"row\"\r\n    (mouseover)=\"hoveredRowIndex = data\"\r\n    (mouseout)=\"hoveredRowIndex = null\"\r\n  >\r\n    <div class=\"col-md-6\">\r\n      <label class=\"input-label\">{{ title }}</label>\r\n     \r\n    </div>\r\n    <div class=\"col-md-2\">\r\n      <!-- <button class=\"btn btn-primary btn-sm\" type=\"button\">Save Changes</button> -->\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"itemActions; context: { item: data }\"\r\n      ></ng-container>\r\n    </div>\r\n  </div>\r\n\r\n  <div (drop)=\"dropdmo($event)\" *ngFor=\"let r of rows; let rowIndex = index\" class=\"colouredDiv rightpadding row rowBorder sub-row dmo.display row-colour\" (click)=\"showContextMenu($event,{'type':'parentRow', r,rowIndex})\">\r\n    \r\n    \r\n    <div class=\"row-container\">\r\n      <div *ngFor=\"let c of r.columns; let colIndex = index\"\r\n      \r\n      class=\"columnBorder sub-column pr-1 colouredDiv column-colour\" [ngStyle]=\"styleObject(c)\" (click)=\"(c.dmoguid == null || c.dmoguid.length<2)?showContextMenu($event,{'type':'column',r,c,rowIndex,colIndex}):null\"\r\n    \r\n    >\r\n      <div (dragover)=\"onDragOver($event)\" (drop)=\"dropdmo($event)\" *ngIf=\"c.rows.length==0\" id=\"{{data.id}}_column_{{rowIndex}}_{{colIndex}}\"  class=\"colouredDiv column-colour column-row-column-Border pr-1 list-dmo\">\r\n        \r\n        <div (drop)=\"dropdmo($event)\"\r\n        (dragover)=\"onDragOver($event)\" class=\"width\" *ngIf=\"c.dmoguid == null || c.dmoguid.length==0\"  id=\"{{data.id}}_column_{{rowIndex}}_{{colIndex}}\"  >\r\n          Drop component\r\n        </div>\r\n        \r\n        <div\r\n        \r\n        class=\"width\" *ngFor=\"let rdmg of c.dmoguid;\" class=\"width\" id=\"{{data.id}}_column_{{rowIndex}}_{{colIndex}}\"   \r\n        (click)=\"(c.dmoguid.length>1)?showContextMenu($event,{'type':'column','dmoguid':rdmg,r,c,rowIndex,colIndex}):null\"\r\n        >\r\n          <app-dmo\r\n          \r\n       (dragover)=\"onDragOver($event)\"\r\n        draggable=\"true\"\r\n        (dragstart)=\"dragdmo($event,rdmg)\"\r\n        [attr.data-dmoguid]=\"rdmg\"\r\n          class=\"drag-list-item\"\r\n                [dmo]=\"getCurrentDMO(rdmg)\"\r\n              ></app-dmo>\r\n          \r\n        </div>\r\n      </div>\r\n       <!-- ******Nestedrow -->\r\n    \r\n       <div *ngFor=\"let cr of c.rows;let colRowIndex = index\"\r\n       class=\"columnrowBorder rightpadding colouredDiv row-colour\"\r\n       (click)=\"showContextMenu($event,{'type':'NestedcolumnRow',cr,r,c,rowIndex,colIndex,colRowIndex})\"\r\n       >\r\n\r\n       <div  *ngFor=\"let rcr of cr.columns;let colRowcolumnIndex = index\" \r\n       (click)=\"(rcr.dmoguid == null || rcr.dmoguid.length<2)?showContextMenu($event,{'type':'columnRow',cr,r,c,rowIndex,colIndex,colRowIndex,colRowcolumnIndex}):null\"\r\n        class=\"list-dmo column-row-column-Border colouredDiv column-colour\" [ngStyle]=\"styleObjectChild(cr)\"\r\n        (drop)=\"dropdmo($event)\"\r\n        id=\"{{data.id}}_columnRow_{{rowIndex}}_{{colIndex}}_{{colRowIndex}}_{{colRowcolumnIndex}}\"\r\n        (dragover)=\"onDragOver($event)\"\r\n        >\r\n        <div (drop)=\"dropdmo($event)\"\r\n        (dragover)=\"onDragOver($event)\" class=\"width\"  *ngIf=\"rcr.dmoguid == null || rcr.dmoguid.length==0\" id=\"{{data.id}}_columnRow_{{rowIndex}}_{{colIndex}}_{{colRowIndex}}_{{colRowcolumnIndex}}\"   >\r\n          Drop component\r\n        </div>\r\n      \r\n        <div  \r\n        \r\n        \r\n        class=\"width\" *ngFor=\"let rdmgs of rcr.dmoguid;let dmoguidIndex = index;\" id=\"{{data.id}}_columnRow_{{rowIndex}}_{{colIndex}}_{{colRowIndex}}_{{colRowcolumnIndex}}\" \r\n        (click)=\"(rcr.dmoguid.length>1)?showContextMenu($event,{'type':'columnRow','dmoguid':rdmgs,cr,r,c,rowIndex,colIndex,colRowIndex,colRowcolumnIndex}):null\"\r\n        >\r\n        <app-dmo\r\n        \r\n        (dragover)=\"onDragOver($event)\"\r\n        draggable=\"true\"\r\n        [attr.data-dmoguid]=\"rdmgs\"\r\n        (dragstart)=\"dragdmo($event,rdmgs)\"\r\n        class=\"drag-list-item\"\r\n              [dmo]=\"getCurrentDMO(rdmgs)\"\r\n              \r\n            ></app-dmo>\r\n        </div>\r\n      \r\n      </div>\r\n\r\n      \r\n      </div>\r\n     \r\n    </div>\r\n    </div>\r\n\r\n      <i class=\"\"></i>\r\n    \r\n  </div>\r\n\r\n\r\n  <ng-template #itemActions let-item=\"item\">\r\n    <ng-container *ngIf=\"!readonly\">\r\n      <div\r\n        class=\"panel-item-actions dmo-actions\"\r\n        [class.active]=\"hoveredRowIndex == item\"\r\n      >\r\n       \r\n        <a\r\n          class=\"item-action\"\r\n          ngbTooltip=\"Delete DMOG\"\r\n          style=\"color: rgb(187, 53, 53)\"\r\n          (click)=\"onTabRemove(this)\"\r\n        >\r\n          <i class=\"far fa-trash-alt\"></i>\r\n        </a>\r\n        <a\r\n          class=\"item-action\"\r\n          (click)=\"onEditDMOGRemove(this)\"\r\n          ngbTooltip=\"Edit DMOG\"\r\n        >\r\n          <i class=\"fas fa-pencil-alt\"></i>\r\n        </a>\r\n        <a\r\n        class=\"item-action\"\r\n        (click)=\"ShowDmogSettings(this)\"\r\n        ngbTooltip=\"DMOG Settings\"\r\n      >\r\n        <i class=\"fas fa-arrows-alt\"></i>\r\n      </a>\r\n        <a class=\"item-action\" ngbTooltip=\"Add Row\" (click)=\"onAddRow(item)\">\r\n          <i class=\"fa fa-plus\"></i>\r\n        </a>\r\n      </div>\r\n    </ng-container>\r\n  </ng-template>\r\n\r\n \r\n\r\n  <ng-template #itemActionColumn let-item=\"item\">\r\n    <ng-container *ngIf=\"!readonly\">\r\n      <div\r\n        class=\"item-actions dmo-actions active\"\r\n        [class.active]=\"\r\n        hoveredRowIndex === item.rowIndex &&\r\n        hoveredColumnIndex === item.colIndex\r\n      \">\r\n      <a  \r\n      class=\"item-action\"\r\n      ngbTooltip=\"Add Row\"\r\n      (click)=\"onAddRowInColumn(item)\"\r\n    >\r\n      <i class=\"fa fa-plus\"></i>\r\n    </a>\r\n        <a *ngIf=\"item.current.rows.length==0\"\r\n          class=\"item-action mr-0\"\r\n          style=\"color: rgb(187, 53, 53); margin-right: 10px\"\r\n          ngbTooltip=\"Data Model Objects\"\r\n          [matMenuTriggerFor]=\"menu\"\r\n          (click)=\"GetSelectMenu(item.rowIndex, item.colIndex)\"\r\n        >\r\n          <i class=\"fa fa-ellipsis-v\"></i>\r\n        </a>\r\n        <a *ngIf=\"item.current.rows.length==0\"\r\n          class=\"item-action\"\r\n          style=\"color: rgb(187, 53, 53)\"\r\n          ngbTooltip=\"Remove Column\"\r\n          (click)=\"onRemoveColumn(item.rowIndex, item.colIndex)\"\r\n        >\r\n          <i class=\"fa fa-trash-alt\"></i>\r\n        </a>\r\n      \r\n     \r\n      </div>\r\n    </ng-container>\r\n  </ng-template>\r\n\r\n\r\n  \r\n</div>\r\n<!-- </div> -->\r\n\r\n<div>\r\n  <app-contextMenu [object]=\"contextMenuData\"\r\n                   [showContextMenuFor]=\"contextMenuData\"\r\n                   [contextMenuPosition]=\"contextMenuPosition\"\r\n                   (contextMenuSelected)=\"OperateContextMenu($event)\"\r\n                  \r\n                   ></app-contextMenu>\r\n              \r\n                 <app-dmo-form-controls [showContextMenuFor]=\"contextMenuData\"\r\n                   [contextMenuPosition]=\"contextMenuPosition\"\r\n                   [showContextMenu]=\"showFormContextMenu\"\r\n                  (formControlSelect) =\"FormControlSelect($event)\"\r\n                   >\r\n                   </app-dmo-form-controls>\r\n             \r\n                   <app-sharedmo-controls [showContextMenuFor]=\"contextMenuData\"\r\n                   [contextMenuPosition]=\"contextMenuPosition\"\r\n                   [showContextMenu]=\"showSharedmoContextMenu\"\r\n                   [shareDmoList]=\"availableDmoToShare!.components\"\r\n                   [rows]=\"rows\"\r\n                  (shareDmoSelect) =\"shareDmoSelect($event)\"\r\n                   >\r\n                   </app-sharedmo-controls>\r\n                  \r\n                 \r\n</div>\r\n\r\n\r\n","import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DataModelerApiService } from '../../../services1/data-modeler-api.service1';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PanelMainContainer, PanelMainRow, SideNavModel } from '../../../models1';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiService } from '@app/core';\r\nimport { ServiceProviderService } from '../../../services1/service-provider.service';\r\n\r\n@Component({\r\n    selector: 'app-contier-parent-row-settings',\r\n    templateUrl: './contier-parent-row-settings.component.html',\r\n    styleUrls: ['./contier-parent-row-settings.component.scss'],\r\n    standalone: true,\r\n    imports: [ReactiveFormsModule, FormsModule]\r\n})\r\nexport class ContierParentRowSettingsComponent implements OnInit {\r\n\r\n  mainRow:PanelMainRow;\r\n  @Input() sideNavModel:SideNavModel;\r\n  panelMainContainer:PanelMainContainer;\r\n  column:number=0;\r\n  Existingcolumn:number=0;\r\n  transformy;\r\n  rowdmogId;\r\n \r\n  constructor(\r\n    private apiService:ApiService,\r\n    private dataProvider: ServiceProviderService,\r\n    private toster:ToastrService\r\n  ){\r\n   \r\n  }\r\n  formatLabel(value: number): string {\r\n    \r\n    return `${value} column`;\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    if (this.sideNavModel) {\r\n      console.log(this.sideNavModel);\r\n      if(this.sideNavModel.type=='ParentRow'){\r\n        this.mainRow=this.sideNavModel.data;\r\n        this.Existingcolumn=this.mainRow.columns.length;\r\n        this.column=this.mainRow.columns.length;\r\n        this.rowdmogId=this.sideNavModel.dmog.DMOGID;\r\n        this.panelMainContainer=this.sideNavModel.props;\r\n        }\r\n      }\r\n  }\r\n  ngOnChanges() {\r\n    if (this.sideNavModel) {\r\n     \r\n      if(this.sideNavModel.type=='ParentRow'){\r\n        this.mainRow=this.sideNavModel.data;\r\n        this.column=this.mainRow.columns.length;\r\n        this.Existingcolumn=this.mainRow.columns.length;\r\n        this.rowdmogId=this.sideNavModel.dmog.DMOGID;\r\n   \r\n      }\r\n      \r\n    }\r\n  }\r\n  onDragOver(event){\r\n    event.preventDefault()\r\n  \r\n   }\r\n\r\n  changeWidth(event){\r\n    this.column=event.value;\r\n  }\r\n  SaveWidthWidth_old(event){\r\n \r\n     if(this.column>12)\r\n      this.column=12;\r\n    else if (this.column<0){\r\n      this.column=this.Existingcolumn;\r\n    }\r\n   \r\n    if(this.sideNavModel.dmog && this.sideNavModel.dmog.DMOGProps){\r\n    \r\n      this.panelMainContainer=JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n      if(this.panelMainContainer){\r\n        if (this.panelMainContainer.rows.filter(a=>a.rowIndex==this.mainRow.rowIndex)[0] && this.panelMainContainer.rows.filter(a=>a.rowIndex==this.mainRow.rowIndex)[0].columns.length>0 ) {\r\n          let currentRoWithCol=this.panelMainContainer.rows.filter(a=>a.rowIndex==this.mainRow.rowIndex)[0];\r\n          let column= currentRoWithCol.columns.length;\r\n          for (let index = column+1; index <=this.column; index++) {\r\n            this.panelMainContainer.rows.filter(a=>a.rowIndex==this.mainRow.rowIndex)[0].columns.push({\"colIndex\":index,\"dmoguid\":[],\"rows\":[]});\r\n            \r\n          }\r\n          //this.resetColumnWidth(currentRoWithCol[0].columns);\r\n        }else{\r\n          let currentRoWithCol=this.panelMainContainer.rows.filter(a=>a.rowIndex==this.mainRow.rowIndex)[0];\r\n          let column= currentRoWithCol.columns.length;\r\n          for (let index = this.Existingcolumn; index < this.column; index++) {\r\n            this.panelMainContainer.rows.filter(a=>a.rowIndex==this.mainRow.rowIndex)[0].columns.push({\"colIndex\":index,\"dmoguid\":[],\"rows\":[]});\r\n            \r\n          }\r\n        }\r\n        let  index=0;\r\n        let perClmwidth=99.5/this.panelMainContainer.rows.filter(a=>a.rowIndex==this.mainRow.rowIndex)[0].columns.length;\r\n        for(let c of this.panelMainContainer.rows.filter(a=>a.rowIndex==this.mainRow.rowIndex)[0].columns ){\r\n           c.width =perClmwidth;\r\n           c.colIndex=index;\r\n           c.mw=false;\r\n           index++;\r\n    \r\n        }\r\n      \r\n      }\r\n    \r\n      var model={};\r\n    \r\n       model={\"DMOGID\":this.sideNavModel.dmog.DMOGID,\r\n               \"DMOGProps\":JSON.stringify(this.panelMainContainer)}\r\n        \r\n      \r\n    \r\n      const url = `wfapibm/DataModel/SaveDmogProps`;\r\n      this.apiService.postgateway('',url,model).subscribe(r=>{\r\n        this.sideNavModel.dmog.DMOGProps=JSON.stringify(this.panelMainContainer)\r\n         this.dataProvider.setUpdateDmogSettings(model)\r\n        \r\n        \r\n      },error=>{\r\n        console.log(error)\r\n      });\r\n     \r\n    \r\n  }\r\n\r\n  }\r\n\r\n  SaveWidthWidth(event) {\r\n    if (this.column > 12) this.column = 12;\r\n    else if (this.column < 0) \r\n      this.column = this.Existingcolumn;\r\n\r\n    if (this.sideNavModel.dmog && this.sideNavModel.dmog.DMOGProps) {\r\n      this.panelMainContainer = JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n\r\n      if (this.panelMainContainer) {\r\n        let currentRow = this.panelMainContainer.rows.find(a => a.rowIndex === this.mainRow.rowIndex);\r\n        if (!currentRow) return;\r\n\r\n         //let existingColumnCount = currentRow.columns.length;\r\n\r\n        // if (this.column === existingColumnCount) return;\r\n        // if (this.column > existingColumnCount) {\r\n        //   for (let index = existingColumnCount; index < this.column; index++) {\r\n        //     currentRow.columns.push({ \"colIndex\": index, \"dmoguid\": [], \"rows\": [] });\r\n        //   }\r\n        // } else {\r\n        //   currentRow.columns = [];\r\n        //   for (let index = 0; index < this.column; index++) {\r\n        //     currentRow.columns.push({ \"colIndex\": index, \"dmoguid\": [], \"rows\": [] });\r\n        //   }\r\n\r\n        // }\r\n\r\n        if (this.column < currentRow.columns.length) {\r\n          if (!this.canReduceColumns(currentRow, this.column)) {\r\n              console.warn('Cannot reduce - would remove columns with dmoguids');\r\n              this.toster.warning(\"Cannot reduce columns: one or more columns contain DMO items.\", \"Warning\");\r\n              return;\r\n          }\r\n      }\r\n      this.adjustColumns(currentRow, this.column);\r\n\r\n        // let perClmwidth = 99.5 / currentRow.columns.length;\r\n        // currentRow.columns.forEach((col, index) => {\r\n        //   col.width = perClmwidth;\r\n        //   col.colIndex = index;\r\n        //   col.mw = false;\r\n        // });\r\n\r\n        let model = {\r\n          \"DMOGID\": this.sideNavModel.dmog.DMOGID,\r\n          \"DMOGProps\": JSON.stringify(this.panelMainContainer)\r\n        };\r\n\r\n        const url = `wfapibm/DataModel/SaveDmogProps`;\r\n        this.apiService.postgateway('',url, model).subscribe(\r\n          response => {\r\n            this.sideNavModel.dmog.DMOGProps = JSON.stringify(this.panelMainContainer);\r\n            this.dataProvider.setUpdateDmogSettings(model);\r\n          },\r\n          error => {\r\n            console.error(error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\ncanReduceColumns(currentRow: any, newColumnCount: number) {\r\n  if (!currentRow?.columns) return false;\r\n  const columnsWithData = currentRow.columns.filter(col => \r\n      col.dmoguid && col.dmoguid.length > 0\r\n  ).length;\r\n  return newColumnCount >= columnsWithData;\r\n}\r\n\r\nadjustColumns(currentRow: any, newColumnCount: number) {\r\n  const existingColumns = [...currentRow.columns];\r\n  if (newColumnCount > existingColumns.length) {\r\n      for (let i = existingColumns.length; i < newColumnCount; i++) {\r\n          existingColumns.push({ \r\n              colIndex: i, \r\n              dmoguid: [], \r\n              rows: [] \r\n          });\r\n      }\r\n  } \r\n  else if (newColumnCount < existingColumns.length) {\r\n      const emptyColumns = existingColumns\r\n          .map((col, index) => ({col, index}))\r\n          .filter(item => \r\n              !item.col.dmoguid || \r\n              item.col.dmoguid.length === 0\r\n          );\r\n      const columnsToRemove = existingColumns.length - newColumnCount;\r\n      const removableColumns = emptyColumns.slice(0, columnsToRemove);\r\n      removableColumns\r\n          .sort((a, b) => b.index - a.index)\r\n          .forEach(item => {\r\n              existingColumns.splice(item.index, 1);\r\n          });\r\n      existingColumns.forEach((col, index) => {\r\n          col.colIndex = index;\r\n      });\r\n  }\r\n  \r\n  // Update widths\r\n  const perColumnWidth = 99.5 / existingColumns.length;\r\n  existingColumns.forEach(col => {\r\n      col.width = perColumnWidth;\r\n      col.mw = false;\r\n  });\r\n  \r\n  currentRow.columns = existingColumns;\r\n}\r\n\r\n \r\n  \r\n\r\n  \r\n  \r\n\r\n\r\n}\r\n","<div class=\"container\" [style.top]=\"transformy\">\r\n  <div class=\"row-settings-header\">Row Setting</div>\r\n    <label class=\"main-heading\">Settings</label>\r\n    <div class=\"continer-header\">\r\n      <div class=\"continer-heading\">Card Name</div>\r\n      <div class=\"continer-Name-bold\">{{sideNavModel!.dmog!.DisplayName}}</div>\r\n    </div>\r\n    <div class=\"continer-header\">\r\n      <div class=\"continer-heading\">Columns</div>\r\n      <div class=\"continer-Name\">\r\n        <div class=\"settings-range\"> \r\n            <div class=\"range-box\">\r\n              <input class=\"range-line\"\r\n                 type=\"range\"\r\n                (input)=\"changeWidth($event)\"\r\n                (change)=\"SaveWidthWidth($event)\"\r\n                min=\"{{Existingcolumn}}\" \r\n                max=\"12\"\r\n                step=\"1\" \r\n               displayWith=\"formatLabel\" [(ngModel)]=\"column\"\r\n              >\r\n            </div>\r\n\r\n            <div class=\" range-counter\">\r\n              <input min=\"Existingcolumn\" max=\"12\"  class=\"input\" (change)=\"SaveWidthWidth($event)\" [(ngModel)]=\"column\"\r\n             \r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n    <hr class=\"break-line\" />\r\n    <!-- <div class=\"slider-nav\">\r\n    <div>\r\n    <mat-slider (input)=\"changeWidth($event)\" (change)=\"SaveWidthWidth($event)\" min=\"{{Existingcolumn}}\" max=\"12\" step=\"1\"  [displayWith]=\"formatLabel\" [(ngModel)]=\"column\">\r\n      <input matSliderThumb>\r\n      </mat-slider>\r\n    </div>\r\n      <div>\r\n      <input  min=\"Existingcolumn\" max=\"12\"  class=\"input\" (change)=\"SaveWidthWidth($event)\" [(ngModel)]=\"column\">\r\n      </div>\r\n    </div> -->\r\n    \r\n    \r\n   \r\n    </div>\r\n    \r\n\r\n   ","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { DMOS } from '@app/admin/data-modeler1/const1';\r\n\r\nimport { PanelMainContainer, SideNavModel } from '@app/admin/data-modeler1/models1';\r\nimport { DataModelerApiService } from '@app/admin/data-modeler1/services1/data-modeler-api.service1';\r\nimport { MessageService } from '@app/core';\r\nimport { NgFor } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-dmog-shared-dmo',\r\n    templateUrl: './dmog-shared-dmo.component.html',\r\n    styleUrls: ['./dmog-shared-dmo.component.scss'],\r\n    standalone: true,\r\n    imports: [NgFor]\r\n})\r\nexport class DmogSharedDmoComponent implements OnInit {\r\n@Input() sideNavModel:SideNavModel;\r\n@Input() Searchtrem:string;\r\n\r\n@Input()draggingStatus:false;\r\nreadonly formsControls = Object.values(DMOS).sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n panelMainContainer:PanelMainContainer;\r\n  shareDmoList = []\r\n  CopyshareDmoList = []\r\n  constructor(\r\n    private dmApi: DataModelerApiService,\r\n     private readonly msg: MessageService,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.draggingStatus){\r\n      this.GetAvailableDmoToShare();\r\n    }\r\n  }\r\n\r\n  reload() {\r\n    if (this.Searchtrem != null && this.Searchtrem != undefined) {\r\n      if (!this.draggingStatus) {\r\n        this.searchDmo(this.Searchtrem);\r\n      }\r\n    } else if (!this.draggingStatus) {\r\n      this.GetAvailableDmoToShare();\r\n    }\r\n  }\r\n  \r\n  removeExisting(){\r\n    if(this.sideNavModel.dmog && this.sideNavModel.dmog.DMOGProps){\r\n    \r\n      this.panelMainContainer=JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n      if( this.panelMainContainer){\r\n       \r\n        if(this.panelMainContainer.rows.length && this.shareDmoList && this.shareDmoList.length>0){\r\n          for (let index = 0; index < this.panelMainContainer.rows.length; index++) {\r\n            const r = this.panelMainContainer.rows[index];\r\n            for (let c = 0; c < r.columns.length; c++) {\r\n              const col = r.columns[c];\r\n              if(col.dmoguid!=null){\r\n                for (let inguid = 0; inguid < col.dmoguid.length; inguid++) {\r\n                  const element = col.dmoguid[inguid];\r\n                  if(element){\r\n                  this.shareDmoList=this.shareDmoList.filter(a=>a.guid!=element.toLowerCase());\r\n                  }\r\n                }\r\n              }\r\n                for (let cr = 0; cr < col.rows.length; cr++) {\r\n                  const crc = col.rows[cr];\r\n                  for (let icrc = 0; icrc < crc.columns.length; icrc++) {\r\n                    const cColumn = crc.columns[icrc];\r\n                    if(cColumn.dmoguid!=null){\r\n                      for (let inguid = 0; inguid < cColumn.dmoguid.length; inguid++) {\r\n                        const element = cColumn.dmoguid[inguid];\r\n                        if(element){\r\n                        this.shareDmoList=this.shareDmoList.filter(a=>a.guid!=element.toLowerCase());\r\n                        }\r\n                       }\r\n                       }\r\n                  }\r\n                }\r\n              \r\n              \r\n            }\r\n            \r\n          }\r\n        }\r\n      }\r\n      \r\n    }\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    if (changes.sideNavModel && changes.sideNavModel.currentValue!=changes.sideNavModel.previousValue) {\r\n      if(changes.sideNavModel.previousValue){\r\n        if(changes.sideNavModel.currentValue.dmog.DMOGID!=changes.sideNavModel.previousValue.dmog.DMOGID){\r\n          if(!this.draggingStatus){\r\n            this.GetAvailableDmoToShare();\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n    if(this.Searchtrem!=undefined || this.Searchtrem!=null){\r\n      this.searchDmo(this.Searchtrem);\r\n    }\r\n   \r\n  }\r\n\r\n   getBMOGID (dmog: any) {\r\n    if (dmog?.parent && dmog.parent === 'BMO') {\r\n        const bmo = dmog;\r\n        if (bmo.parent && bmo.parent === 'BMOG') {\r\n            return bmo.BMOGID; // Return BMOGID if available\r\n        }\r\n    }\r\n    return null; // Return null if BMOGID is not found\r\n};\r\n\r\n\r\n\r\n  //data.DMOGID\r\n  GetAvailableDmoToShare(){\r\n    var data=this.sideNavModel.dmog;\r\n    let bmogId = data?.parent?.parent?.BMOGID ?? data?.DMOGID;\r\n    this.dmApi.GetAvailableDmoToShare(bmogId, data.root.BMId).subscribe(x=>{\r\n     this.shareDmoList= x.components;\r\n     this.removeExisting();\r\n     this.CopyshareDmoList=this.shareDmoList;\r\n   });\r\n  }\r\n\r\ngetcssbyclass(type: string) {\r\n  let find = this.formsControls.filter(a => a.type === type);\r\n  if (find.length > 0 && find[0].class) {\r\n    return find[0].class;\r\n  }\r\n  return '';\r\n}\r\n\r\n\r\n  searchDmo(key){\r\n   \r\n    if(this.shareDmoList.length>0){\r\n      if(key && key!=\"\" && key.length>0 ){\r\n        this.shareDmoList=this.CopyshareDmoList.filter(a=>a.guid.toLowerCase().includes(key.toLowerCase())\r\n                                                ||a.dmoName.toLowerCase().includes(key.toLowerCase())\r\n                                                 )\r\n      }else{\r\n        this.shareDmoList=this.CopyshareDmoList;\r\n      }\r\n    }else{\r\n      this.shareDmoList=this.CopyshareDmoList\r\n    }\r\n  }\r\n  onDragOver(event){\r\n    event.preventDefault()\r\n  \r\n   }\r\n   dragdmo(event,item){\r\n    var model={'contol':item,\"selectedItem\":this.sideNavModel.data,'DMOGID':this.sideNavModel.dmog.DMOGID}\r\n    event.dataTransfer.setData('SharedDmogDmo',JSON.stringify(model));\r\n      setTimeout(() => {\r\n      this.GetAvailableDmoToShare();\r\n    }, 2000);\r\n   }\r\n\r\n   onDmoDelete($event,item){\r\n    \r\n             const data=this.sideNavModel.dmog;\r\n             const dmoId =item.dmoId;\r\n                const dispName = item.label;\r\n                this.msg.showMessage('Warning', {\r\n                    header: 'Delete DMO',\r\n                    body: `Are you sure you want to Delete ${dispName}?`,\r\n                    btnText: 'Delete',\r\n                    checkboxText: 'Yes, Delete this object',\r\n                    isDelete: true,\r\n                    isNewDesign: true,\r\n                    callback: () => {\r\n                        this.dmApi\r\n                            .deleteDmo(dmoId,data.root.BMId)\r\n                            .subscribe(\r\n                                (success) => {\r\n                                    if (success) {\r\n                                        this.GetAvailableDmoToShare();\r\n                                    }\r\n                                }\r\n                            );\r\n                    },\r\n                });\r\n    \r\n   }\r\n  \r\n}\r\n","<div class=\"formcomponents\">\r\n    <div class=\"list-group drag-list\" id=\"form-controls\">\r\n      <!-- <div class=\"searching-shared-main-box\">\r\n        <span class=\"search-shared-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\">\r\n            <path d=\"M14.2083 12.8333H13.4842L13.2275 12.5858C14.1258 11.5408 14.6667 10.1842 14.6667 8.70833C14.6667 5.4175 11.9992 2.75 8.70833 2.75C5.4175 2.75 2.75 5.4175 2.75 8.70833C2.75 11.9992 5.4175 14.6667 8.70833 14.6667C10.1842 14.6667 11.5408 14.1258 12.5858 13.2275L12.8333 13.4842V14.2083L17.4167 18.7825L18.7825 17.4167L14.2083 12.8333ZM8.70833 12.8333C6.42583 12.8333 4.58333 10.9908 4.58333 8.70833C4.58333 6.42583 6.42583 4.58333 8.70833 4.58333C10.9908 4.58333 12.8333 6.42583 12.8333 8.70833C12.8333 10.9908 10.9908 12.8333 8.70833 12.8333Z\" fill=\"#333333\"/>\r\n          </svg>\r\n        </span>\r\n        <input type=\"text\" class=\"form-control mb-2 Search-shared-Dmo\" style=\"font-size: 14px;\" placeholder=\"Search\" (input)=\"searchDmo($event.target.value)\"> \r\n      </div> -->\r\n\r\n      <div class=\"\">\r\n        <div class=\"rows-main-contnier\"  *ngFor=\"let item of shareDmoList\" >\r\n          <div class=\"rows-container\"\r\n          (dragover)=\"onDragOver($event)\"\r\n            draggable=\"true\"\r\n            (dragstart)=\"dragdmo($event,item)\"\r\n        >\r\n    \r\n        <div class=\"rows-content\">\r\n        <div class=\"icons-main\">\r\n          <i [class]=\"getcssbyclass(item.type)\" style=\"margin-right: 5px\"></i>\r\n        <!-- <div class=\"icons\"></div>\r\n        <div class=\"icons\"></div> -->\r\n        </div>\r\n        <div class=\"dmo-text-box\">\r\n            <div class=\"texts\">{{item.label}}</div>\r\n            <div class=\"sub-texts\">({{ item.dmoName }})</div>\r\n        </div>\r\n        </div>\r\n        <div class=\"menus-box d-flex\">\r\n        <div class=\"menus-main\">\r\n          <svg width=\"10\" height=\"24\" viewBox=\"0 0 12 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M2 3C2.55228 3 3 2.55228 3 2C3 1.44772 2.55228 1 2 1C1.44772 1 1 1.44772 1 2C1 2.55228 1.44772 3 2 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M10 3C10.5523 3 11 2.55228 11 2C11 1.44772 10.5523 1 10 1C9.44772 1 9 1.44772 9 2C9 2.55228 9.44772 3 10 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M2 11C2.55228 11 3 10.5523 3 10C3 9.44772 2.55228 9 2 9C1.44772 9 1 9.44772 1 10C1 10.5523 1.44772 11 2 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M10 11C10.5523 11 11 10.5523 11 10C11 9.44772 10.5523 9 10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M2 19C2.55228 19 3 18.5523 3 18C3 17.4477 2.55228 17 2 17C1.44772 17 1 17.4477 1 18C1 18.5523 1.44772 19 2 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M10 19C10.5523 19 11 18.5523 11 18C11 17.4477 10.5523 17 10 17C9.44772 17 9 17.4477 9 18C9 18.5523 9.44772 19 10 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>\r\n        </div>\r\n        <button (click)=\"onDmoDelete($event,item)\" class=\"btn delete-icon-btn\">\r\n          <i class=\"far fa-trash-alt delete-icon item__action\"></i>\r\n        </button>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <input type=\"text\" class=\"form-control sticky-search\" style=\"font-size: 13px;\" placeholder=\"Search...\" (input)=\"searchDmo($event.target.value)\"> -->\r\n\r\n      <!-- <li class=\"list-group-item list-group-item-action list-group-item-success drag-list-item\"\r\n        \r\n        *ngFor=\"let item of shareDmoList\"   (dragover)=\"onDragOver($event)\"\r\n        draggable=\"true\"\r\n        (dragstart)=\"dragdmo($event,item)\">\r\n        \r\n        <i [class]=\"getcssbyclass(item.type)\" style=\"margin-right: 5px\"></i>\r\n        {{item.label}} ({{ item.dmoName }})\r\n      </li> -->\r\n    </div>\r\n  </div>\r\n  \r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DMOS } from '@app/admin/data-modeler/const';\r\nimport { SideNavModel } from '@app/admin/data-modeler1/models1';\r\nimport { NgClass, NgFor } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-dmocontrols',\r\n    templateUrl: './dmocontrols.component.html',\r\n    styleUrls: ['./dmocontrols.component.scss'],\r\n    standalone: true,\r\n    imports: [NgClass, NgFor]\r\n})\r\nexport class DMOControlsComponent implements OnInit {\r\n  //readonly formsControls = Object.values(DMOS);\r\n  readonly formsControls = Object.values(DMOS).sort((a, b) => a.name.localeCompare(b.name));\r\n  formsControlsList = []\r\n  @Input() sideNavModel:SideNavModel;\r\n  @Input() hideDmoAndSharedDmo: any;\r\n  @Input() Searchtrem:string;\r\n\r\n  @Input() hideDropAbleRow = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.formsControlsList = this.formsControls;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if(this.Searchtrem!=undefined || this.Searchtrem!=null){\r\n      this.searchControls(this.Searchtrem);\r\n    }\r\n  }\r\n\r\n  onDragOver(event){\r\n    event.preventDefault()\r\n  \r\n   }\r\n   dragdmo(event,item){\r\n    var model={'contol':item,\"selectedItem\":this.sideNavModel.data,'DMOGID':this.sideNavModel.dmog.DMOGID}\r\n    event.dataTransfer.setData('ControlDmogDmo',JSON.stringify(model));\r\n   }\r\n  \r\n   searchControls(key: string): void {\r\n    if (this.formsControls.length > 0) {\r\n      if (key && key.trim().length > 0) {\r\n        this.formsControlsList = this.formsControls.filter(item => \r\n          item.name.toLowerCase().includes(key.toLowerCase())\r\n        );\r\n      } else {\r\n        this.formsControlsList = [...this.formsControls]; \r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","  <div class=\"formcomponents\"  \r\n  [ngClass]=\"{\r\n    'formcomponents-full-width': hideDmoAndSharedDmo, \r\n    'formcomponents-half-width': !hideDmoAndSharedDmo,\r\n    'formcomponents-alt-height': !hideDropAbleRow && !hideDmoAndSharedDmo\r\n  }\"> \r\n  \r\n    <div class=\"\">\r\n        <div class=\"rows-main-contnier\"  *ngFor=\"let item of formsControlsList\" >\r\n          <div class=\"rows-container\"\r\n          (dragover)=\"onDragOver($event)\"\r\n          draggable=\"true\"\r\n          (dragstart)=\"dragdmo($event,item)\"\r\n        >\r\n    \r\n        <div class=\"rows-content\">\r\n        <div class=\"icons-main\">\r\n          <i [class]=\"item.class\" style=\"margin-right: 5px\"></i>\r\n        </div>\r\n        <span class=\"texts\">{{ item.name }}</span>\r\n        </div>\r\n        <div class=\"menus-box\">\r\n        <div class=\"menus-main\">\r\n          <svg width=\"10\" height=\"24\" viewBox=\"0 0 12 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M2 3C2.55228 3 3 2.55228 3 2C3 1.44772 2.55228 1 2 1C1.44772 1 1 1.44772 1 2C1 2.55228 1.44772 3 2 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M10 3C10.5523 3 11 2.55228 11 2C11 1.44772 10.5523 1 10 1C9.44772 1 9 1.44772 9 2C9 2.55228 9.44772 3 10 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M2 11C2.55228 11 3 10.5523 3 10C3 9.44772 2.55228 9 2 9C1.44772 9 1 9.44772 1 10C1 10.5523 1.44772 11 2 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M10 11C10.5523 11 11 10.5523 11 10C11 9.44772 10.5523 9 10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M2 19C2.55228 19 3 18.5523 3 18C3 17.4477 2.55228 17 2 17C1.44772 17 1 17.4477 1 18C1 18.5523 1.44772 19 2 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M10 19C10.5523 19 11 18.5523 11 18C11 17.4477 10.5523 17 10 17C9.44772 17 9 17.4477 9 18C9 18.5523 9.44772 19 10 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n  </div>\r\n  </div>\r\n\r\n\r\n","import { Component,Renderer2, EventEmitter, Inject, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DataModelerApiService } from '../../../services1/data-modeler-api.service1';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PanelMainContainer, SideNavModel } from '../../../models1';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiService } from '@app/core';\r\nimport { ServiceProviderService } from '../../../services1/service-provider.service';\r\nimport { algo } from 'crypto-js';\r\nimport { DmogSharedDmoComponent } from '../dmog-shared-dmo/dmog-shared-dmo.component';\r\nimport { NgIf } from '@angular/common';\r\nimport { MatTabGroup, MatTab } from '@angular/material/tabs';\r\nimport { DMOControlsComponent } from '../dmocontrols/dmocontrols.component';\r\n@Component({\r\n    selector: 'app-container-column-settings',\r\n    templateUrl: './container-column-settings.component.html',\r\n    styleUrls: ['./container-column-settings.component.scss'],\r\n    standalone: true,\r\n    imports: [ReactiveFormsModule, FormsModule, NgIf, MatTabGroup, MatTab, DMOControlsComponent, DmogSharedDmoComponent]\r\n})\r\nexport class ContainerColumnSettingsComponent implements OnInit {\r\n\r\n  panelMainContainer:PanelMainContainer;\r\n  @Input() sideNavModel:SideNavModel;\r\n  @Input()  selectedItems:any;\r\n  @Input() DraggingStatus:any;\r\n  @ViewChild(DmogSharedDmoComponent)\r\n  dmogSharedDmo: DmogSharedDmoComponent;\r\n  hideDmoAndSharedDmo=false;\r\n  hideDropAbleRow=false;\r\n  width:number=0;\r\n  colwidth:number=0;\r\n  transformy;\r\n  rowdmogId;\r\n  Searchtrem:string;\r\n \r\n  constructor(\r\n    private apiService:ApiService,\r\n    private dataProvider: ServiceProviderService,\r\n    private renderer: Renderer2,\r\n    private toster:ToastrService\r\n  ){\r\n    \r\n  \r\n  }\r\n  formatLabel(value: number): string {\r\n    return `${value} width`;\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    if (this.sideNavModel) {\r\n      if(this.sideNavModel.type=='Column'){\r\n        this.panelMainContainer=this.sideNavModel.data;\r\n        this.width= this.panelMainContainer.width;\r\n        this.rowdmogId=this.sideNavModel.dmog.DMOGID;\r\n        this.colwidth =this.getSelectedColumnWith();\r\n      }\r\n      }\r\n  }\r\n \r\n  ngOnChanges() {\r\n    if (this.sideNavModel) {\r\n      if(this.sideNavModel.type=='Column'){\r\n        this.panelMainContainer=this.sideNavModel.data;\r\n        this.width= this.panelMainContainer.width;\r\n        this.rowdmogId=this.sideNavModel.dmog.DMOGID;\r\n        this.colwidth =this.getSelectedColumnWith();\r\n        this.hideDmoAndSharedDmo = this.EnableControlsDmog(this.panelMainContainer);\r\n        this.hideDropAbleRow=this.hideRow(this.panelMainContainer)\r\n      \r\n  \r\n      }\r\n      \r\n    }\r\n  }\r\n  getSelectedColumnWith(){\r\n    if(this.sideNavModel.type=='Column'){\r\n    \r\n      let selectedRow=this.sideNavModel.data.r;\r\n      let colIndex=this.sideNavModel.data.colIndex\r\n      for (let index = 0; index < selectedRow.columns.length; index++) {\r\n        const element = selectedRow.columns[index];\r\n        if(index == colIndex){\r\n          return Math.floor(element.width)\r\n          break;\r\n        }\r\n        \r\n      }\r\n  \r\n    }\r\n  return 0;\r\n  }\r\nEnableControlsDmog(item)\r\n{\r\n  try {\r\n    \r\n  \r\n  let tpanelMainContainer=JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n  let rowIndex: number=item.rowIndex\r\n  let colIndex: number=item.colIndex;\r\n   let currentRoWithCol=tpanelMainContainer.rows.filter(a=>a.rowIndex == rowIndex);\r\n   if(currentRoWithCol.length>0){\r\n    let excolumn= currentRoWithCol[0].columns[colIndex];\r\n    if (excolumn) {\r\n      let existingColumn=excolumn.rows;\r\n      let exColLength=existingColumn.length;\r\n      if(exColLength>0){\r\n        return true;\r\n      }\r\n   }\r\n\r\n  }\r\n} catch (error) {\r\n  return false;\r\n}\r\n  return false;\r\n}\r\n\r\nhideRow(item)\r\n{\r\n  try {\r\n    \r\n  \r\n  let tpanelMainContainer=JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n  let rowIndex: number=item.rowIndex\r\n  let colIndex: number=item.colIndex;\r\n   let currentRoWithCol=tpanelMainContainer.rows.filter(a=>a.rowIndex == rowIndex);\r\n   if(currentRoWithCol.length>0){\r\n    let excolumn= currentRoWithCol[0].columns[colIndex];\r\n    if (excolumn) {\r\n      if(excolumn.dmoguid!=null && excolumn.dmoguid.length>0 ){\r\n        return true;\r\n      }\r\n   }\r\n\r\n  }\r\n} catch (error) {\r\n  return false;\r\n}\r\n  return false;\r\n}\r\n  onDragOver(event){\r\n    event.preventDefault()\r\n  \r\n   }\r\n   dragRow(event){\r\n    var model={\"selectedItem\":this.sideNavModel.data,'DMOGID':this.sideNavModel.dmog.DMOGID}\r\n \r\n    event.dataTransfer.setData('ColumnDmogRows',JSON.stringify(model));\r\n\r\n\r\n   }\r\n  changeWidth(event){\r\n    this.width=event.value;\r\n  }\r\n \r\n  SaveWidthWidth(event){\r\n    if(this.sideNavModel && this.sideNavModel.type=='Column') \r\n      { let currentwidth = this.sideNavModel.data.c.width;\r\n        let cuurentRowIndex= this.sideNavModel.data.r.rowIndex;\r\n        let currentColIndex = this.sideNavModel.data.c.colIndex;\r\n        this.resizeColumn();\r\n      var model={};\r\n    \r\n       model={\"DMOGID\":this.sideNavModel.dmog.DMOGID,\r\n               \"DMOGProps\":JSON.stringify(this.panelMainContainer)}\r\n        \r\n     \r\n      const url = `wfapibm/DataModel/SaveDmogProps`;\r\n     this.apiService.postgateway('',url,model).subscribe(r=>{\r\n        this.sideNavModel.dmog.DMOGProps=JSON.stringify(this.panelMainContainer)\r\n        this.updateDataValue();\r\n        this.dataProvider.setUpdatedColumnData(model);\r\n        setTimeout(() => {\r\n          this.dataProvider.setOpenSidebarNav(this.sideNavModel);\r\n        }, 20);\r\n      \r\n      },error=>{\r\n        console.log(error)\r\n      });\r\n     \r\n    \r\n  }\r\n\r\n}\r\n\r\nupdateDataValue(){\r\n  if(this.sideNavModel.type=='Column'){\r\n    let selectedRow=this.sideNavModel.data.r;\r\n    let colIndex=this.sideNavModel.data.colIndex\r\n    for (let index = 0; index < selectedRow.columns.length; index++) {\r\n      const element = selectedRow.columns[index];\r\n      if(index == colIndex){\r\n         element.width=this.colwidth\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n resizeColumn()\r\n{\r\n    if(this.sideNavModel.type=='Column'){\r\n    \r\n      this.panelMainContainer=JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n      let cuurentRowIndex= this.sideNavModel.data.r.rowIndex;\r\n      let filteredColumn=this.panelMainContainer.rows.filter(a=>a.rowIndex==cuurentRowIndex)[0].columns;\r\n      if (filteredColumn.length>0 ) {\r\n        let colIndex=this.sideNavModel.data.colIndex\r\n        let  totalMWWidth = 0;\r\n        let  nonMWCount = 0 ;\r\n        let previouseWidth=0;\r\n        for (let index = 0; index < filteredColumn.length; index++) {\r\n        const element = filteredColumn[index];\r\n        if(index == colIndex){\r\n          previouseWidth =  filteredColumn[index].width || 0;\r\n          filteredColumn[index].mw=true;\r\n          filteredColumn[index].width=Math.floor(this.colwidth);\r\n        }\r\n        if(filteredColumn[index].mw){\r\n          totalMWWidth += filteredColumn[index].width || 0;\r\n        }\r\n        else{\r\n          nonMWCount++;\r\n        }\r\n       \r\n       \r\n      }\r\n      if(totalMWWidth > 100.5){  //Previously  == 99.5\r\n        this.toster.warning('Width exceeds from 100%. Resizing is not allowed');\r\n        filteredColumn[colIndex].width  =  previouseWidth;\r\n        return;\r\n      }\r\n      \r\n      let remainingWidth = 99.5 - totalMWWidth;\r\n      let distrinutedWidth = nonMWCount >0 ? remainingWidth / nonMWCount: 0;\r\n      for (let index = 0; index < filteredColumn.length; index++) {\r\n        let col = filteredColumn[index];\r\n        if(!col.mw || col.width <5){\r\n          col.width = Math.max(distrinutedWidth, 5);\r\n        }\r\n      }\r\n \r\n   \r\n  \r\n\r\n      }\r\n     \r\n  \r\n    }\r\n \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\nselectedTab($event){\r\n if(this.dmogSharedDmo && $event.index==1)\r\n  this.dmogSharedDmo.reload();\r\n  this.onTabChange($event);\r\n}\r\nSetDefultTabsettings()\r\n  {\r\n    const tabIndex=0;\r\n    const inkBarElement = document.querySelector('.mat-ink-bar') as HTMLElement;\r\n    if (inkBarElement && tabIndex == 0) {\r\n      this.renderer.setStyle(inkBarElement, 'left', `0px`);\r\n    }\r\n  }\r\n\r\n\r\n  onTabChange(event: any): void {\r\n     const tabIndex = event.index; \r\n     const inkBarElement = document.querySelector('.mat-ink-bar') as HTMLElement;\r\n\r\n      if (inkBarElement) {\r\n        const left = tabIndex === 0 ? '0px' : '152px';\r\n        this.renderer.setStyle(inkBarElement, 'left', left);\r\n      }\r\n   \r\n  }\r\n\r\n  searchControls(key: string) :void\r\n  {\r\n    this.Searchtrem =  key;\r\n  }\r\n  \r\n}\r\n","<div class=\"container\" [style.top]=\"transformy\">\r\n    <div class=\"column-settings-header\">Column Settings</div>\r\n\r\n    <div>\r\n      <label for=\"settingsInput\" class=\"main-heading\">Settings</label>\r\n      <div class=\"continer-header\">\r\n          <div class=\"continer-heading\">Column Width (%)</div>\r\n          <div class=\"continer-Name\">\r\n            <div class=\"settings-range\"> \r\n                <div class=\"range-box\">\r\n                  <input class=\"range-line\" type=\"range\"\r\n                  (input)=\"changeWidth($event)\"\r\n                  (change)=\"SaveWidthWidth($event)\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  step=\"1\"\r\n                  displayWith=\"formatLabel\"\r\n                  [(ngModel)]=\"colwidth\"\r\n                  >\r\n                </div>\r\n                <div class=\" range-counter\">\r\n                  <input\r\n                  class=\"width-input\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  class=\"input\"\r\n                  (change)=\"SaveWidthWidth($event)\"\r\n                  [(ngModel)]=\"colwidth\"\r\n                 \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div  *ngIf=\"!hideDmoAndSharedDmo \">\r\n      <hr class=\"break-line-section\" />\r\n      <label for=\"dataModelInput\" class=\"main-heading\">Data Model Objects</label>\r\n      <div class=\"searching-main-box\">\r\n      <span class=\"search-icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\">\r\n          <path d=\"M14.2083 12.8333H13.4842L13.2275 12.5858C14.1258 11.5408 14.6667 10.1842 14.6667 8.70833C14.6667 5.4175 11.9992 2.75 8.70833 2.75C5.4175 2.75 2.75 5.4175 2.75 8.70833C2.75 11.9992 5.4175 14.6667 8.70833 14.6667C10.1842 14.6667 11.5408 14.1258 12.5858 13.2275L12.8333 13.4842V14.2083L17.4167 18.7825L18.7825 17.4167L14.2083 12.8333ZM8.70833 12.8333C6.42583 12.8333 4.58333 10.9908 4.58333 8.70833C4.58333 6.42583 6.42583 4.58333 8.70833 4.58333C10.9908 4.58333 12.8333 6.42583 12.8333 8.70833C12.8333 10.9908 10.9908 12.8333 8.70833 12.8333Z\" fill=\"#333333\"/>\r\n        </svg>\r\n      </span>\r\n      <input type=\"text\" class=\"form-control mb-2 Search-Dmo\" style=\"font-size: 14px;\" placeholder=\"Search\"  (input)=\"searchControls($event.target.value)\"> \r\n    </div>\r\n    </div>\r\n    \r\n    <mat-tab-group class=\"custom-tab-dmo-group\" (selectedTabChange)=\"selectedTab($event)\" *ngIf=\"!hideDmoAndSharedDmo\" >\r\n      <mat-tab  label=\"New DMOs\"> \r\n      <app-dmocontrols [sideNavModel]=\"sideNavModel\" [Searchtrem]=\"Searchtrem\"\r\n      [hideDropAbleRow]=\"hideDropAbleRow\" ></app-dmocontrols>\r\n      </mat-tab>\r\n      <mat-tab label=\"Share DMOs\" >\r\n        \r\n      <app-dmog-shared-dmo [draggingStatus]=\"DraggingStatus\" [sideNavModel]=\"sideNavModel\" [Searchtrem]=\"Searchtrem\"></app-dmog-shared-dmo>\r\n      </mat-tab>\r\n   \r\n    </mat-tab-group>\r\n       \r\n    <hr class=\"break-line\" *ngIf=\"!hideDropAbleRow\" />\r\n\r\n    <div class=\"over\">\r\n    <div *ngIf=\"!hideDropAbleRow\" class=\"main-heading\">Drag Items</div>\r\n    <div *ngIf=\"!hideDropAbleRow\" class=\"rows-container\"\r\n        draggable=\"true\"\r\n        [attr.data.rowsId-drag]=\"rowdmogId\"\r\n        id=\"{{rowdmogId}}\"\r\n        (dragstart)=\"dragRow($event)\"\r\n        (dragover)=\"onDragOver($event)\"\r\n    >\r\n     \r\n    <div class=\"rows-content\">\r\n      <div class=\"icons-main\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\">\r\n          <path d=\"M19.5312 0.0625H2.34375C1.0498 0.0625 0 1.1123 0 2.40625V19.5938C0 20.8877 1.0498 21.9375 2.34375 21.9375H19.5312C20.8252 21.9375 21.875 20.8877 21.875 19.5938V2.40625C21.875 1.1123 20.8252 0.0625 19.5312 0.0625ZM4.49219 12.9531C4.16992 12.9531 3.90625 12.6895 3.90625 12.3672V9.63281C3.90625 9.31055 4.16992 9.04688 4.49219 9.04688H17.3828C17.7051 9.04688 17.9688 9.31055 17.9688 9.63281V12.3672C17.9688 12.6895 17.7051 12.9531 17.3828 12.9531H4.49219Z\" fill=\"black\"/>\r\n          </svg>\r\n      </div>\r\n      <span class=\"texts\">Inner Row</span>\r\n    </div>\r\n    <div class=\"menus-box\">\r\n      <div class=\"menus-main\">\r\n        <svg width=\"10\" height=\"24\" viewBox=\"0 0 12 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M2 3C2.55228 3 3 2.55228 3 2C3 1.44772 2.55228 1 2 1C1.44772 1 1 1.44772 1 2C1 2.55228 1.44772 3 2 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M10 3C10.5523 3 11 2.55228 11 2C11 1.44772 10.5523 1 10 1C9.44772 1 9 1.44772 9 2C9 2.55228 9.44772 3 10 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M2 11C2.55228 11 3 10.5523 3 10C3 9.44772 2.55228 9 2 9C1.44772 9 1 9.44772 1 10C1 10.5523 1.44772 11 2 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M10 11C10.5523 11 11 10.5523 11 10C11 9.44772 10.5523 9 10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M2 19C2.55228 19 3 18.5523 3 18C3 17.4477 2.55228 17 2 17C1.44772 17 1 17.4477 1 18C1 18.5523 1.44772 19 2 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M10 19C10.5523 19 11 18.5523 11 18C11 17.4477 10.5523 17 10 17C9.44772 17 9 17.4477 9 18C9 18.5523 9.44772 19 10 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          </svg>\r\n      </div>\r\n  </div>\r\n    </div>\r\n    <hr class=\"break-line\" />\r\n    </div>\r\n    \r\n    </div>\r\n\r\n    ","import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DataModelerApiService } from '../../../services1/data-modeler-api.service1';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PanelMainContainer, PanelMainRow, SideNavModel } from '../../../models1';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiService } from '@app/core';\r\nimport { ServiceProviderService } from '../../../services1/service-provider.service';\r\n\r\n@Component({\r\n    selector: 'app-dmog-sub-row-settings',\r\n    templateUrl: './dmog-sub-row-settings.component.html',\r\n    styleUrls: ['./dmog-sub-row-settings.component.scss'],\r\n    standalone: true,\r\n    imports: [ReactiveFormsModule, FormsModule]\r\n})\r\nexport class DmogSubRowSettingsComponent implements OnInit {\r\n\r\n  mainRow:PanelMainRow;\r\n  @Input() sideNavModel:SideNavModel;\r\n  panelMainContainer:PanelMainContainer;\r\n  column:number=0;\r\n  Existingcolumn:number=0;\r\n  transformy;\r\n  rowdmogId;\r\n \r\n  constructor(\r\n    private apiService:ApiService,\r\n    private dataProvider: ServiceProviderService,\r\n    private toster:ToastrService\r\n\r\n  ){\r\n    \r\n  \r\n  }\r\n  formatLabel(value: number): string {\r\n    \r\n    return `${value} column`;\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    if (this.sideNavModel) {\r\n      console.log(this.sideNavModel);\r\n      if(this.sideNavModel.type=='NestedcolumnRow'){\r\n        var data=this.sideNavModel.data;\r\n        let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex,'ColumnRowIndex':data.colRowIndex}\r\n         this.getExistingColumn(item);\r\n        }\r\n      }\r\n  }\r\n  ngOnChanges() {\r\n    if (this.sideNavModel) {\r\n     \r\n      if(this.sideNavModel.type=='NestedcolumnRow'){\r\n        var data=this.sideNavModel.data;\r\n        let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex,'ColumnRowIndex':data.colRowIndex}\r\n       this.getExistingColumn(item);\r\n        this.rowdmogId=this.sideNavModel.dmog.DMOGID;\r\n   \r\n      }\r\n      \r\n    }\r\n  }\r\ngetExistingColumn(item){\r\n  \r\n  this.panelMainContainer=JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n  if(this.panelMainContainer){\r\n  let rowIndex: number=item.rowIndex\r\n  let colIndex: number=item.colIndex;\r\n   let currentRoWithCol=this.panelMainContainer.rows.filter(a=>a.rowIndex == rowIndex);\r\n   if(currentRoWithCol.length>0){\r\n    let column= currentRoWithCol[0].columns[colIndex];\r\n    if (column) {\r\n      let rColumn=column.rows[item.ColumnRowIndex]\r\n      if(rColumn){\r\n      this.column=rColumn.columns.length;\r\n      this.Existingcolumn=rColumn.columns.length\r\n      }\r\n    }\r\n  }\r\n}\r\n}\r\n  onAddRowChildColumn(){\r\n\r\n\r\n\r\n    var data=this.sideNavModel.data;\r\n    let item={'rowIndex':data.rowIndex,\"colIndex\":data.colIndex,'ColumnRowIndex':data.colRowIndex}\r\n\r\n    this.panelMainContainer=JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n    if(this.panelMainContainer){\r\n    let rowIndex: number=item.rowIndex\r\n    let colIndex: number=item.colIndex;\r\n     let currentRoWithCol=this.panelMainContainer.rows.filter(a=>a.rowIndex == rowIndex);\r\n     if(currentRoWithCol.length>0){\r\n      let excolumn= currentRoWithCol[0].columns[colIndex];\r\n      if (excolumn) {\r\n        let existingColumn=excolumn.rows[item.ColumnRowIndex]\r\n        let exColLength=existingColumn.columns.length;\r\n        for (let index = exColLength+1; index <=this.column; index++) {\r\n          existingColumn.columns.push({\"index\":index,\"width\":100,\"dmoguid\":[]});\r\n        \r\n         }\r\n       \r\n        this.resetColumnWidthForRowInColumn(excolumn.rows)\r\n     }\r\n    }\r\n     }\r\n    }\r\n    resetColumnWidthForRowInColumn(currentRoWithCol){\r\n      for(let r of currentRoWithCol ){\r\n      let column= r.columns\r\n      let perClmwidth=100/r.columns.length;\r\n      let  index=0;\r\n      for(let c of column ){\r\n         c.width =perClmwidth;\r\n         c.index=index;\r\n         index++;\r\n      }\r\n    }\r\n  \r\n    }\r\n  onDragOver(event){\r\n    event.preventDefault()\r\n  \r\n   }\r\n\r\n  changeWidth(event){\r\n    this.column=event.value;\r\n  }\r\n  SaveWidthWidth1(event){\r\n\r\n    \r\n     if(this.column>12)\r\n      this.column=12;\r\n    else if (this.column<0){\r\n      this.column=this.Existingcolumn;\r\n    }\r\n\r\n    this.onAddRowChildColumn()\r\n    \r\n      var model={};\r\n       model={\"DMOGID\":this.sideNavModel.dmog.DMOGID,\r\n               \"DMOGProps\":JSON.stringify(this.panelMainContainer)}\r\n        \r\n      \r\n    \r\n      const url = `wfapibm/DataModel/SaveDmogProps`;\r\n      this.apiService.postgateway('',url,model,false).subscribe(r=>{\r\n        this.sideNavModel.dmog.DMOGProps=JSON.stringify(this.panelMainContainer)\r\n         this.dataProvider.setUpdateDmogSettings(model)\r\n        \r\n        \r\n      },error=>{\r\n        console.log(error)\r\n      });\r\n     \r\n  }\r\n\r\n\r\n\r\nSaveWidthWidth(event) {\r\n    if (this.column > 12) {\r\n        this.column = 12;\r\n    } else if (this.column < 0) {\r\n        this.column = this.Existingcolumn;\r\n    }\r\n\r\n    this.onAddRowChildColumn1();  \r\n\r\n    let model = {\r\n        \"DMOGID\": this.sideNavModel.dmog.DMOGID,\r\n        \"DMOGProps\": JSON.stringify(this.panelMainContainer)\r\n    };\r\n\r\n    const url = `wfapibm/DataModel/SaveDmogProps`;\r\n    this.apiService.postgateway('',url, model, false).subscribe(\r\n        response => {\r\n            this.sideNavModel.dmog.DMOGProps = JSON.stringify(this.panelMainContainer);\r\n            this.dataProvider.setUpdateDmogSettings(model);\r\n        },\r\n        error => console.error(\"Error updating DMOG Props:\", error) \r\n    );\r\n}\r\n\r\nonAddRowChildColumn11() {\r\n  let data = this.sideNavModel.data;\r\n  let item = {\r\n      'rowIndex': data.rowIndex,\r\n      \"colIndex\": data.colIndex,\r\n      'ColumnRowIndex': data.colRowIndex\r\n  };\r\n\r\n  this.panelMainContainer = JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n  \r\n\r\n  let rowIndex = item.rowIndex;\r\n  let colIndex = item.colIndex;\r\n\r\n  let currentRow = this.panelMainContainer.rows.find(a => a.rowIndex === rowIndex);\r\n  if (!currentRow) return; \r\n\r\n  let existingColumn = currentRow.columns[colIndex];\r\n  if (!existingColumn) return; \r\n\r\n  let columnRow = existingColumn.rows[item.ColumnRowIndex];\r\n  if (!columnRow) return;\r\n\r\n  let existingColumns = columnRow.columns.length;\r\n  let hasData = columnRow.columns.some(col => col.dmoguid.length > 0);\r\n  if (hasData) {\r\n    this.toster.warning(\"Cannot change inner column: Data exists in one or more columns.\");\r\n    this.Existingcolumn = this.Existingcolumn;\r\n    return;\r\n  }\r\n\r\n  if (this.column < existingColumns) {\r\n      for (let index = existingColumns - 1; index >= this.column; index--) {\r\n          columnRow.columns.splice(index, 1);\r\n      }\r\n  } else {\r\n     \r\n      for (let index = existingColumns; index < this.column; index++) {\r\n          columnRow.columns.push({ \"index\": index, \"width\": 100, \"dmoguid\": [] });\r\n      }\r\n  }\r\n\r\n  this.resetColumnWidthForRowInColumn(existingColumn.rows); \r\n}\r\nonAddRowChildColumn1() {\r\n  let data = this.sideNavModel.data;\r\n  let item = {\r\n      'rowIndex': data.rowIndex,\r\n      \"colIndex\": data.colIndex,\r\n      'ColumnRowIndex': data.colRowIndex\r\n  };\r\n\r\n  this.panelMainContainer = JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n  \r\n  let rowIndex = item.rowIndex;\r\n  let colIndex = item.colIndex;\r\n\r\n  let currentRow = this.panelMainContainer.rows.find(a => a.rowIndex === rowIndex);\r\n  if (!currentRow) return; \r\n\r\n  let existingColumn = currentRow.columns[colIndex];\r\n  if (!existingColumn) return; \r\n\r\n  let columnRow = existingColumn.rows[item.ColumnRowIndex];\r\n  if (!columnRow) return;\r\n\r\n  if (this.column < columnRow.columns.length) {\r\n      if (!this.canReduceSubColumns(columnRow.columns, this.column)) {\r\n          this.toster.warning(\"Cannot reduce columns - would remove columns containing data\");\r\n          return;\r\n      }\r\n  }\r\n  \r\n  this.adjustSubColumns(columnRow, this.column);\r\n\r\n  this.resetColumnWidthForRowInColumn(existingColumn.rows);\r\n  \r\n}\r\n\r\ncanReduceSubColumns(columns: any[], newCount: number) {\r\n  if (!columns) return false;\r\n  const columnsWithData = columns.filter(col => \r\n      col.dmoguid && col.dmoguid.length > 0\r\n  ).length;\r\n  return newCount >= columnsWithData;\r\n}\r\n\r\nadjustSubColumns(columnRow: any, newCount: number) {\r\n  const existingColumns = [...columnRow.columns];\r\n  \r\n  if (newCount > existingColumns.length) {\r\n      for (let i = existingColumns.length; i < newCount; i++) {\r\n          existingColumns.push({ \r\n              index: i, \r\n              width: 100, \r\n              dmoguid: [] \r\n          });\r\n      }\r\n  } \r\n  else if (newCount < existingColumns.length) {\r\n      const emptyColumns = existingColumns\r\n          .map((col, index) => ({col, index}))\r\n          .filter(item => !item.col.dmoguid || item.col.dmoguid.length === 0);\r\n      \r\n      const columnsToRemove = existingColumns.length - newCount;\r\n      const removableColumns = emptyColumns.slice(0, columnsToRemove);\r\n      \r\n      removableColumns\r\n          .sort((a, b) => b.index - a.index)\r\n          .forEach(item => existingColumns.splice(item.index, 1));\r\n      \r\n      existingColumns.forEach((col, index) => col.index = index);\r\n  }\r\n  \r\n  columnRow.columns = existingColumns;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"container\" [style.top]=\"transformy\">\r\n    <!-- <b style=\"font-size: 15px;\">Sub Row Setting </b> -->\r\n    <div class=\"sub-row-settings-header\">Inner Row Setting</div>\r\n    <label class=\"main-heading\">Settings</label>\r\n    <div class=\"continer-header\">\r\n      <div class=\"continer-heading\">Container Name</div>\r\n      <div class=\"continer-Name-bold\">{{sideNavModel!.dmog!.DisplayName}}</div>\r\n    </div>\r\n    <!-- <div class=\"divier\"></div>\r\n    <small style=\"font-size: 13px;\">{{sideNavModel!.dmog!.DisplayName}}</small>\r\n    <hr> -->\r\n    \r\n    <div class=\"continer-header\">\r\n      <div class=\"continer-heading\">Columns</div>\r\n      <div class=\"continer-Name\">\r\n        <div class=\"settings-range\"> \r\n            <div class=\"range-box\">\r\n              <input class=\"range-line\" type=\"range\"\r\n              (input)=\"changeWidth($event)\" (change)=\"SaveWidthWidth($event)\"\r\n               min=\"{{Existingcolumn}}\"\r\n               max=\"12\"\r\n              step=\"1\"\r\n              displayWith=\"formatLabel\"\r\n             [(ngModel)]=\"column\"\r\n\r\n              />\r\n            </div>\r\n\r\n            <div class=\" range-counter\">\r\n              <input min=\"Existingcolumn\" max=\"12\"  class=\"input\" (change)=\"SaveWidthWidth($event)\" [(ngModel)]=\"column\"\r\n             \r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <hr class=\"break-line\" />\r\n\r\n\r\n\r\n\r\n\r\n    <!-- <div class=\"slider-nav\">\r\n    <div>\r\n    <mat-slider (input)=\"changeWidth($event)\" (change)=\"SaveWidthWidth($event)\" min=\"{{Existingcolumn}}\" max=\"12\" step=\"1\"  [displayWith]=\"formatLabel\" [(ngModel)]=\"column\">\r\n      <input matSliderThumb>\r\n      </mat-slider>\r\n    </div>\r\n      <div>\r\n      <input  min=\"Existingcolumn\" max=\"12\"  class=\"input\" (change)=\"SaveWidthWidth($event)\" [(ngModel)]=\"column\">\r\n      </div>\r\n    </div>\r\n     -->\r\n    \r\n   \r\n    </div>\r\n    \r\n\r\n\r\n    \r\n","import { Component,Renderer2, EventEmitter, Inject, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DataModelerApiService } from '../../../services1/data-modeler-api.service1';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PanelMainContainer, PanelMainRow, SideNavModel } from '../../../models1';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiService } from '@app/core';\r\nimport { ServiceProviderService } from '../../../services1/service-provider.service';\r\nimport { DmogSharedDmoComponent } from '../dmog-shared-dmo/dmog-shared-dmo.component';\r\nimport { MatTabGroup, MatTab } from '@angular/material/tabs';\r\nimport { DMOControlsComponent } from '../dmocontrols/dmocontrols.component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-dmog-sub-column-settings',\r\n    templateUrl: './dmog-sub-column-settings.component.html',\r\n    styleUrls: ['./dmog-sub-column-settings.component.scss'],\r\n    standalone: true,\r\n    imports: [ReactiveFormsModule, FormsModule, MatTabGroup, MatTab, DMOControlsComponent, DmogSharedDmoComponent]\r\n})\r\nexport class DmogSubColumnSettingsComponent implements OnInit {\r\n\r\n  panelMainContainer:PanelMainContainer;\r\n  @Input() sideNavModel:SideNavModel;\r\n  @Input() draggingStatus:any;\r\n  @ViewChild(DmogSharedDmoComponent)\r\n  dmogSharedDmo: DmogSharedDmoComponent;\r\n  \r\n  width:number=0;\r\n  transformy;\r\n  rowdmogId;\r\n  hideDmoAndSharedDmo:boolean=true;\r\n  colwidth:number=0;\r\n  Searchtrem:string;\r\n  constructor(\r\n    private apiService:ApiService,\r\n    private dataProvider: ServiceProviderService,\r\n    private renderer: Renderer2,\r\n    private toster:ToastrService\r\n  ){\r\n    \r\n  \r\n  }\r\n  formatLabel(value: number): string {\r\n    return `${value} width`;\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    if (this.sideNavModel) {\r\n   \r\n        this.panelMainContainer=this.sideNavModel.data;\r\n        this.width=this.panelMainContainer.width;\r\n        this.rowdmogId=this.sideNavModel.dmog.DMOGID;\r\n        this.colwidth =this.getSelectedColumnWith();\r\n      }\r\n  }\r\n  ngOnChanges() {\r\n    if (this.sideNavModel) {\r\n      console.log(this.sideNavModel);\r\n      if(this.sideNavModel.type=='columnRow'){\r\n        this.panelMainContainer=this.sideNavModel.data;\r\n        this.colwidth =this.getSelectedColumnWith();\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  ngAfterViewInit(){\r\n    setTimeout(() => {\r\n    this.SetDefultTabsettings();\r\n  }, 300);\r\n  }\r\n\r\n\r\n\r\n  getSelectedColumnWith() {\r\n    if (this.sideNavModel.type == 'columnRow') {\r\n      let selectedRow = this.sideNavModel.data.r;\r\n      let rowColIndex = this.sideNavModel.data.colRowcolumnIndex;\r\n      for (let index = 0; index < selectedRow.columns.length; index++) {\r\n        const column = selectedRow.columns[index];\r\n  \r\n        if (column.rows.length) { \r\n          for (let rc = 0; rc < column.rows.length; rc++) {\r\n            let innerRow = column.rows[rc];\r\n  \r\n            if (innerRow.columns.length) {\r\n             \r\n              let InnerColumn = innerRow.columns[rowColIndex];\r\n              if (InnerColumn && rowColIndex == InnerColumn.index) {\r\n                return Math.floor(InnerColumn.width);\r\n                break;  \r\n                \r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n\r\n \r\n  onDragOver(event){\r\n    event.preventDefault()\r\n  \r\n   }\r\n   dragRow(event){\r\n    var model={\"selectedItem\":this.sideNavModel.data,'DMOGID':this.sideNavModel.dmog.DMOGID}\r\n \r\n    event.dataTransfer.setData('SubColumnDmo',JSON.stringify(model));\r\n\r\n\r\n   }\r\n \r\n\r\n\r\n   changeWidth(event){\r\n    this.width=event.value;\r\n  }\r\n \r\n  SaveWidthWidth(event){\r\n    if(this.sideNavModel && this.sideNavModel.type=='columnRow') \r\n      { \r\n        this.resizeInnerColumn();\r\n      var model={};\r\n    \r\n       model={\"DMOGID\":this.sideNavModel.dmog.DMOGID,\r\n               \"DMOGProps\":JSON.stringify(this.panelMainContainer)}\r\n        \r\n      const url = `wfapibm/DataModel/SaveDmogProps`;\r\n      this.apiService.postgateway('',url,model).subscribe(r=>{\r\n        this.sideNavModel.dmog.DMOGProps=JSON.stringify(this.panelMainContainer)\r\n        this.updateDataValue();\r\n        this.dataProvider.setUpdatedColumnData(model);\r\n        setTimeout(() => {\r\n          this.dataProvider.setOpenSidebarNav(this.sideNavModel);\r\n        }, 20);\r\n      \r\n      },error=>{\r\n        console.log(error)\r\n      });\r\n     \r\n    \r\n  }\r\n\r\n}\r\n\r\nupdateDataValue(){\r\n  if (this.sideNavModel.type == 'columnRow') {\r\n    let selectedRow = this.sideNavModel.data.r;\r\n    let rowColIndex = this.sideNavModel.data.colRowcolumnIndex;\r\n    for (let index = 0; index < selectedRow.columns.length; index++) {\r\n      const column = selectedRow.columns[index];\r\n\r\n      if (column.rows.length) { \r\n        for (let rc = 0; rc < column.rows.length; rc++) {\r\n          let innerRow = column.rows[rc];\r\n\r\n          if (innerRow.columns.length) {\r\n           \r\n            let InnerColumn = innerRow.columns[rowColIndex];\r\n            if (rowColIndex == InnerColumn.index) {\r\n              InnerColumn.width=this.colwidth;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nresizeInnerColumn() {\r\n  if (this.sideNavModel.type === 'columnRow') {\r\n    this.panelMainContainer = JSON.parse(this.sideNavModel.dmog.DMOGProps);\r\n\r\n    let currentRowIndex = this.sideNavModel.data.r.rowIndex;\r\n    let currentColIndex = this.sideNavModel.data.c.colIndex;\r\n    let currentChildRowIndex = this.sideNavModel.data.colRowIndex;\r\n    let currentChildColIndex = this.sideNavModel.data.colRowcolumnIndex;\r\n\r\n    let filteredColumn = this.panelMainContainer.rows.filter(a => a.rowIndex === currentRowIndex)[0]?.columns;\r\n    let filteredChildColumn = filteredColumn.filter(a => a.colIndex === currentColIndex)[0]?.rows;\r\n\r\n    if (filteredChildColumn && filteredChildColumn.length > 0) {\r\n      // We will now only focus on the selected column instead of all columns\r\n      let selectedColumn = filteredChildColumn[currentChildRowIndex]?.columns[currentChildColIndex];\r\n\r\n      // If the selected column exists\r\n      if (selectedColumn) {\r\n        let totalMWWidth = 0; // Reset total MW width\r\n        let nonMWCount = 0;\r\n        let previousWidth = 0;\r\n\r\n        // First, update the selected column and calculate the MW width\r\n        previousWidth = selectedColumn.width || 0;\r\n        selectedColumn.mw = true; // Mark as resizable\r\n        selectedColumn.width = Math.floor(this.colwidth); // Apply new width to the selected column\r\n\r\n        // Loop through all columns in the child row (but focus on resizing logic for selected column only)\r\n        filteredChildColumn[currentChildRowIndex].columns.forEach(col => {\r\n          if (col.width) {\r\n            totalMWWidth += col.width || 0; // Add MW column widths\r\n          } else {\r\n            nonMWCount++; // Count non-MW columns\r\n          }\r\n        });\r\n\r\n        // Prevent resizing if the total width exceeds 100%\r\n        if (totalMWWidth > 100) {\r\n          this.toster.warning('Width exceeds 100%. Resizing is not allowed');\r\n          selectedColumn.width = previousWidth; // Revert to previous width\r\n          return;\r\n        }\r\n\r\n        let remainingWidth = 99.5 - totalMWWidth;\r\n\r\n        // Ensure remaining width is properly distributed\r\n        if (remainingWidth > 0) {\r\n          let distributedWidth = nonMWCount > 0 ? remainingWidth / nonMWCount : remainingWidth;\r\n\r\n          // Apply the distributed width to non-mw columns\r\n          filteredChildColumn[currentChildRowIndex].columns.forEach(col => {\r\n            if (!col.mw || col.width < 5) {\r\n              col.width = Math.max(distributedWidth, 5);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nselectedTab($event){\r\n if(this.dmogSharedDmo && $event.index==1)\r\n  this.dmogSharedDmo.reload();\r\n  this.onTabChange($event);\r\n}\r\n\r\nSetDefultTabsettings()\r\n  {\r\n    const tabIndex=0;\r\n    const inkBarElement = document.querySelector('.mat-ink-bar') as HTMLElement;\r\n    if (inkBarElement && tabIndex == 0) {\r\n      this.renderer.setStyle(inkBarElement, 'left', `0px`);\r\n    }\r\n  }\r\n\r\n\r\n  onTabChange(event: any): void {\r\n    const tabIndex = event.index; // Get the index of the selected tab\r\n    \r\n\r\n    const inkBarElement = document.querySelector('.mat-ink-bar') as HTMLElement;\r\n    if (inkBarElement && tabIndex == 0) {\r\n      this.renderer.setStyle(inkBarElement, 'left', `0px`);\r\n    }\r\n    else{\r\n      this.renderer.setStyle(inkBarElement, 'left', `152px`);\r\n    }\r\n  }\r\n\r\n  searchControls(key: string) :void\r\n  {\r\n    this.Searchtrem =  key;\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"container\" [style.top]=\"transformy\">\r\n  <div class=\"tab-header\">Inner Column Settings</div>\r\n    <!-- <b style=\"font-size: 15px;\">Sub Column Settings</b> -->\r\n    <!-- <div class=\"divier\"></div>\r\n    <small style=\"font-size: 13px;\">{{sideNavModel!.dmog!.DisplayName}}</small>\r\n    <hr> -->\r\n    <div>\r\n      <label class=\"main-heading\">Settings</label>\r\n      <div class=\"continer-header\">\r\n          <div class=\"continer-heading\">Inner Column Width (%)</div>\r\n          <div class=\"continer-Name\">\r\n            <div class=\"settings-range\"> \r\n                <div class=\"range-box\">\r\n                  <input class=\"range-line\" type=\"range\"\r\n                  (input)=\"changeWidth($event)\"\r\n                  (change)=\"SaveWidthWidth($event)\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  step=\"1\"\r\n                  displayWith=\"formatLabel\"\r\n                  [(ngModel)]=\"colwidth\"\r\n                  >\r\n                </div>\r\n                <div class=\" range-counter\">\r\n                  <input\r\n                  class=\"width-input\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  class=\"input\"\r\n                  (change)=\"SaveWidthWidth($event)\"\r\n                  [(ngModel)]=\"colwidth\"\r\n                 \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <hr class=\"break-line-section\" />\r\n    <label class=\"main-heading\">Data Model Objects</label>\r\n    <div class=\"searching-main-box\">\r\n      <span class=\"search-icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\">\r\n          <path d=\"M14.2083 12.8333H13.4842L13.2275 12.5858C14.1258 11.5408 14.6667 10.1842 14.6667 8.70833C14.6667 5.4175 11.9992 2.75 8.70833 2.75C5.4175 2.75 2.75 5.4175 2.75 8.70833C2.75 11.9992 5.4175 14.6667 8.70833 14.6667C10.1842 14.6667 11.5408 14.1258 12.5858 13.2275L12.8333 13.4842V14.2083L17.4167 18.7825L18.7825 17.4167L14.2083 12.8333ZM8.70833 12.8333C6.42583 12.8333 4.58333 10.9908 4.58333 8.70833C4.58333 6.42583 6.42583 4.58333 8.70833 4.58333C10.9908 4.58333 12.8333 6.42583 12.8333 8.70833C12.8333 10.9908 10.9908 12.8333 8.70833 12.8333Z\" fill=\"#333333\"/>\r\n        </svg>\r\n      </span>\r\n      <input type=\"text\" class=\"form-control mb-2 Search-Dmo\" style=\"font-size: 14px;\" placeholder=\"Search\"  (input)=\"searchControls($event.target.value)\"> \r\n    </div>\r\n\r\n\r\n    <!-- pending-->\r\n    <!-- <div class=\"main-heading\">{{sideNavModel!.dmog!.DisplayName}}</div> -->\r\n  <div class=\"\">\r\n      <mat-tab-group class=\"custom-tab-dmo-group\" (selectedTabChange)=\"selectedTab($event)\" >\r\n       \r\n        <mat-tab label=\"New DMOs\"> \r\n        <app-dmocontrols [sideNavModel]=\"sideNavModel\" [hideDmoAndSharedDmo]=\"hideDmoAndSharedDmo\" [Searchtrem]=\"Searchtrem\"></app-dmocontrols>  \r\n        </mat-tab>\r\n        <mat-tab label=\"Share DMOs\" >\r\n        <app-dmog-shared-dmo [draggingStatus]=\"draggingStatus\" [sideNavModel]=\"sideNavModel\" [Searchtrem]=\"Searchtrem\" ></app-dmog-shared-dmo>\r\n        </mat-tab>\r\n    \r\n      </mat-tab-group>\r\n\r\n      <!-- <hr class=\"break-line\" *ngIf=\"!hideDropAbleRow\" />\r\n\r\n      <div *ngIf=\"!hideDropAbleRow\" class=\"main-heading\">Drag Items</div>\r\n      <div *ngIf=\"!hideDropAbleRow\" class=\"rows-container\"\r\n          draggable=\"true\"\r\n          [attr.data.rowsId-drag]=\"rowdmogId\"\r\n          id=\"{{rowdmogId}}\"\r\n          (dragstart)=\"dragRow($event)\"\r\n          (dragover)=\"onDragOver($event)\"\r\n      >\r\n       \r\n      <div class=\"rows-content\">\r\n        <div class=\"icons-main\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\">\r\n            <path d=\"M19.5312 0.0625H2.34375C1.0498 0.0625 0 1.1123 0 2.40625V19.5938C0 20.8877 1.0498 21.9375 2.34375 21.9375H19.5312C20.8252 21.9375 21.875 20.8877 21.875 19.5938V2.40625C21.875 1.1123 20.8252 0.0625 19.5312 0.0625ZM4.49219 12.9531C4.16992 12.9531 3.90625 12.6895 3.90625 12.3672V9.63281C3.90625 9.31055 4.16992 9.04688 4.49219 9.04688H17.3828C17.7051 9.04688 17.9688 9.31055 17.9688 9.63281V12.3672C17.9688 12.6895 17.7051 12.9531 17.3828 12.9531H4.49219Z\" fill=\"black\"/>\r\n            </svg>\r\n        \r\n        </div>\r\n        <span class=\"texts\">Sub Row</span>\r\n      </div>\r\n      <div class=\"menus-box\">\r\n        <div class=\"menus-main\">\r\n          <svg width=\"10\" height=\"24\" viewBox=\"0 0 12 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M2 3C2.55228 3 3 2.55228 3 2C3 1.44772 2.55228 1 2 1C1.44772 1 1 1.44772 1 2C1 2.55228 1.44772 3 2 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M10 3C10.5523 3 11 2.55228 11 2C11 1.44772 10.5523 1 10 1C9.44772 1 9 1.44772 9 2C9 2.55228 9.44772 3 10 3Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M2 11C2.55228 11 3 10.5523 3 10C3 9.44772 2.55228 9 2 9C1.44772 9 1 9.44772 1 10C1 10.5523 1.44772 11 2 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M10 11C10.5523 11 11 10.5523 11 10C11 9.44772 10.5523 9 10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M2 19C2.55228 19 3 18.5523 3 18C3 17.4477 2.55228 17 2 17C1.44772 17 1 17.4477 1 18C1 18.5523 1.44772 19 2 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M10 19C10.5523 19 11 18.5523 11 18C11 17.4477 10.5523 17 10 17C9.44772 17 9 17.4477 9 18C9 18.5523 9.44772 19 10 19Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>\r\n        </div>\r\n    </div>\r\n      </div>\r\n      <hr class=\"break-line\" /> -->\r\n\r\n  </div>\r\n   \r\n</div>\r\n    ","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { PanelMainContainer, SideNavModel } from '@app/admin/data-modeler1/models1';\r\nimport { NgIf } from '@angular/common';\r\nimport { DmogSettingsComponent } from '../../dmog-settings/dmog-settings.component';\r\nimport { ContierParentRowSettingsComponent } from '../contier-parent-row-settings/contier-parent-row-settings.component';\r\nimport { ContainerColumnSettingsComponent } from '../container-column-settings/container-column-settings.component';\r\nimport { DmogSubRowSettingsComponent } from '../dmog-sub-row-settings/dmog-sub-row-settings.component';\r\nimport { DmogSubColumnSettingsComponent } from '../dmog-sub-column-settings/dmog-sub-column-settings.component';\r\n\r\n@Component({\r\n    selector: 'app-left-side-panel',\r\n    templateUrl: './left-side-panel.component.html',\r\n    styleUrls: ['./left-side-panel.component.scss'],\r\n    standalone: true,\r\n    imports: [NgIf, DmogSettingsComponent, ContierParentRowSettingsComponent, ContainerColumnSettingsComponent, DmogSubRowSettingsComponent, DmogSubColumnSettingsComponent]\r\n})\r\nexport class LeftSidePanelComponent implements OnInit {\r\n  @Output() drawerToggle = new EventEmitter<void>();\r\n  @Output() UpdatedDataForSidepanle: EventEmitter<any> = new EventEmitter<any>();  \r\n  @Input() selectedItemFromchild:any;\r\n  isDrawerOpen = false;\r\n @ Input() sideNavModel:SideNavModel;\r\n updatedData:any;\r\n selectedItems:any;\r\n  @Input() isDraggingStart:any;\r\n  DraggingStatus:any;\r\n //transform: translateY(97%);\r\nexpandedIndex = 0;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n  \r\n  }\r\n\r\n ngOnChanges(changes: SimpleChanges) {\r\n    if(this.selectedItemFromchild){\r\n      this.selectedItems = this.selectedItemFromchild;\r\n    }\r\n    if(changes.isDraggingStart && changes.isDraggingStart.previousValue!= changes.isDraggingStart.currentValue){\r\n      this.DraggingStatus =  this.isDraggingStart;\r\n    }\r\n }\r\n\r\n  onDrawerToggle() {\r\n    this.isDrawerOpen = !this.isDrawerOpen;\r\n    this.drawerToggle.emit();\r\n  }\r\n  \r\n  updatedDataForParent(event)\r\n  {\r\n     if(event){\r\n      this.updatedData = event;\r\n      this.UpdatedDataForSidepanle.emit(this.updatedData);\r\n    }\r\n  }\r\n\r\n\r\n  \r\n}\r\n","\r\n\r\n\r\n<div *ngIf=\"sideNavModel && sideNavModel.type=='dmog'\">\r\n\t<app-dmog-settings \r\n\t[sideNavModel]=\"sideNavModel\" \r\n\t(reloadParent)=\"reloadParent()\"\r\n\t(UpdatedDataEmitter)=\"updatedDataForParent($event)\"\r\n\t>\r\n\t</app-dmog-settings>\r\n</div>\r\n<div *ngIf=\"sideNavModel && sideNavModel.type=='ParentRow'\">\r\n\t<app-contier-parent-row-settings [sideNavModel]=\"sideNavModel\" ></app-contier-parent-row-settings>\r\n</div>\r\n<div *ngIf=\"sideNavModel && sideNavModel.type=='Column' && !DraggingStatus\">\r\n\t<app-container-column-settings [DraggingStatus]=\"DraggingStatus\" [sideNavModel]=\"sideNavModel\" [selectedItems]=\"selectedItems\" ></app-container-column-settings>\r\n</div>\r\n<div *ngIf=\"sideNavModel && sideNavModel.type=='NestedcolumnRow'\">\r\n\t<app-dmog-sub-row-settings [sideNavModel]=\"sideNavModel\" ></app-dmog-sub-row-settings>\r\n</div>\r\n<div *ngIf=\"sideNavModel && sideNavModel.type=='columnRow' && !DraggingStatus\">\r\n\t<app-dmog-sub-column-settings  [DraggingStatus]=\"DraggingStatus\" [sideNavModel]=\"sideNavModel\" ></app-dmog-sub-column-settings>\r\n</div>\r\n\r\n\r\n\r\n","import { ComponentType } from '@angular/cdk/portal';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MessageService } from '@app/core';\r\nimport { FormViewApiService } from '@app/core/services/form-view-api.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TabComponent } from '../Shared/tab/tab.component';\r\nimport { DataModelerApiService } from './services1/data-modeler-api.service1';\r\nimport * as classes from './classes';\r\nimport * as components from './components1';\r\nimport * as models from './models1';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { catchError, EMPTY, firstValueFrom, map, Observable, of, switchMap, tap } from 'rxjs';\r\nimport { ServiceProviderService } from './services1/service-provider.service';\r\nimport { DMOSLayout } from './const1';\r\nimport { BmService } from '../core/services/bm.service';\r\nimport { GenerateXmlComponent } from '../wf/wfd/components/generatexml/generatexml.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NgIf, NgSwitch, NgStyle, NgClass, NgFor, NgSwitchCase } from '@angular/common';\r\nimport { DmHeaderComponent } from './components1/dm-header/dm-header.component';\r\nimport { UtilService } from '@app/shared/services/util.service';\r\nimport { DmMenuComponent } from './components1/dm-menu/dm-menu.component';\r\nimport { LeftSidePanelComponent } from './components1/dmog-new-design/left-side-panel/left-side-panel.component';\r\nimport { TabsComponent } from '../Shared/tabs/tabs.component';\r\nimport { DmogFormViewComponent } from './components1/dmog-form-view/dmog-form-view.component';\r\n\r\ntype ObjectClass = classes.ObjectClass;\r\n\r\n@Component({\r\n    selector: 'app-data-modeler1',\r\n    templateUrl: './data-modeler1.component.html',\r\n    styleUrls: ['./data-modeler1.component.scss'],\r\n    standalone: true,\r\n    imports: [NgIf, DmHeaderComponent, DmMenuComponent, NgSwitch, NgStyle, NgClass, LeftSidePanelComponent, TabsComponent, NgFor, TabComponent, NgSwitchCase, DmogFormViewComponent]\r\n})\r\nexport class DataModeler1Component implements OnInit {\r\n    UpdatedData: any;\r\n    @Input() sideNavModel: any;\r\n    @Input() selectedItemFromchild: any;\r\n    isDrawerOpen = false;\r\n    sidebarclose: boolean = false;\r\n    public bm: classes.BM;\r\n    alertMsgTxt: string[] = [];\r\n    hideSidebar: false;\r\n    selectedBMOGMap: { [key: string]: any } = {};\r\n    private readonly encryptedBMId = this.route.snapshot.queryParams.BMID;\r\n    @Output() AddDmog = new EventEmitter<any>();\r\n    dmoMode: any;\r\n    clickedTabData: any={};\r\n    processDisplayName: any;\r\n    proccessName: any;\r\n    ProcessList: any;\r\n    isDraggingStart:any;\r\n    contactsImageUrl = UtilService.getUrlForImage('/assets/styles/images/contacts-bmo.jpg');\r\n    attachmentsImageUrl = UtilService.getUrlForImage('/assets/styles/images/attachments-bmo.jpg');\r\n    documentsImageUrl = UtilService.getUrlForImage('/assets/styles/images/documents-bmo.jpg');\r\n    sharedChildProcessImageUrl = UtilService.getUrlForImage('/assets/styles/images/shared-child-process-bmo.jpg');\r\n    leftDrawerIconUrl = UtilService.getUrlForImage('/assets/admin-assets/images/fi-rr-angle-small-left.png');\r\n    rightDrawerIconUrl = UtilService.getUrlForImage('/assets/admin-assets/images/fi-rr-angle-small-right-black.png');\r\n    backsImageUrl = UtilService.getUrlForImage('/assets/styles/images/back-icon-black.png');\r\n\r\n    NewSelectedBm: any;\r\n    NewSelecteddmogData: any;\r\n\r\n    readonly panelControls = Object.values(DMOSLayout);\r\n    get tabActions() {\r\n        return { edit: true, delete: !this.bm.published };\r\n    }\r\n\r\n    get allowNewDMOG() {\r\n\r\n        return (\r\n            this.bm?.selectedBMOG?.Children?.length &&\r\n            this.bm?.selectedBMO?.BmoType === 'Forms' &&\r\n            !this.bm.selectedBMO?.shared &&\r\n            !this.bm.published\r\n        );\r\n    }\r\n\r\n    constructor(\r\n        private bmService: BmService,\r\n        private readonly route: ActivatedRoute,\r\n        private readonly msg: MessageService,\r\n        private readonly toast: ToastrService,\r\n        private readonly dmApi: DataModelerApiService,\r\n        private readonly formViewApi: FormViewApiService,\r\n        private readonly dataProvider: ServiceProviderService,\r\n        private readonly renderer: Renderer2,\r\n        private readonly cdref: ChangeDetectorRef,\r\n        readonly dialog: MatDialog\r\n    ) {\r\n\r\n\r\n        this.dataProvider.getOpenSidebarNav().subscribe(data => {\r\n\r\n            this.sideNavModel = data;\r\n            this.isDrawerOpen = true;\r\n            this.isDrawerOpen = true;\r\n\r\n        });\r\n        this.dataProvider.getSidebarclose().subscribe(data => {\r\n            if (data) {\r\n                this.isDrawerOpen = false;\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderer.removeClass(document.body, 'no-scroll');\r\n\r\n        const style = this.renderer.createElement('style');\r\n        style.innerHTML = `\r\n      body::-webkit-scrollbar {\r\n        width: 0 !important;\r\n        display: none;\r\n      }\r\n      body {\r\n        -ms-overflow-style: none;\r\n        overflow-y: scroll;\r\n      }\r\n    `;\r\n        this.renderer.appendChild(document.head, style);\r\n\r\n        this.getBM();\r\n    }\r\n\r\n    public getBM() {\r\n        const { ProcessName, Name, Version } = this.route.snapshot.data?.bm as models.IBM;\r\n        this.dmApi.getData(ProcessName, Name, Version).subscribe((bm) => {\r\n            this.bm = bm;\r\n\t     if(this.bm){\r\n                this.clickedTabData.DisplayName = this.bm.DisplayName;\r\n                this.proccessName = ProcessName;\r\n            }\r\n            const tabId = this.route.snapshot.queryParams['tabId'] || localStorage.getItem(`lastTabId_${bm.BMId}`);\r\n            if (tabId) {\r\n                this.activateTabById(tabId);\r\n            } else {\r\n                this.activateFirstTab();\r\n            }\r\n        });\r\n    }\r\n     getBMsubscribe() {\r\n      const { ProcessName, Name, Version } = this.route.snapshot.data?.bm as models.IBM;\r\n     return this.dmApi.getData(ProcessName, Name, Version);\r\n  }\r\n    // Helper to activate tab by id\r\n    activateTabById(tabId: string) {\r\n        if (!this.bm) return;\r\n        if (!this.bm.Children || !this.bm.childrenMap) {\r\n            this.activateFirstTab();\r\n            return;\r\n        }\r\n        if (this.tryActivateParentTab(tabId, this.bm.Children, this.bm.childrenMap)) {\r\n            return;\r\n        }\r\n        this.activateFirstTab();\r\n    }\r\n\r\n    private tryActivateParentTab(tabId: string, children: string[], childrenMap: any): boolean {\r\n        for (const bmogId of children) {\r\n            const bmog = childrenMap[bmogId];\r\n            if (!bmog) continue;\r\n            if (bmog.id === tabId) {\r\n                this.selectParentTab(bmog);\r\n                this.onTabClick({ data: bmog, disabled: false } as any);\r\n                return true;\r\n            }\r\n            if (bmog.Children && bmog.childrenMap) {\r\n                if (this.tryActivateChildTab(tabId, bmog)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private tryActivateChildTab(tabId: string, parent: any): boolean {\r\n        for (const bmoId of parent.Children) {\r\n            const bmo = parent.childrenMap[bmoId];\r\n            if (bmo.id === tabId.toLocaleLowerCase()) {\r\n                this.selectParentTab(parent);\r\n                this.selectChildTab(bmo);\r\n                this.onTabClick({ data: bmo, disabled: false } as any);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Activate first tab by default if nothing is found\r\n    activateFirstTab() {\r\n        if (this.bm?.Children && this.bm?.childrenMap) {\r\n            const firstBmogId = this.bm.Children[0];\r\n            const firstBmog = this.bm.childrenMap[firstBmogId];\r\n            if (firstBmog) {\r\n                this.selectParentTab(firstBmog);\r\n                if (firstBmog.Children && firstBmog.childrenMap) {\r\n                    const firstBmoId = firstBmog.Children[0];\r\n                    const firstBmo = firstBmog.childrenMap[firstBmoId];\r\n                    if (firstBmo) {\r\n                        this.selectChildTab(firstBmo);\r\n                        // Simulate tab click for child\r\n                        this.onTabClick({ data: firstBmo, disabled: false } as any);\r\n                    } else {\r\n                        // Simulate tab click for parent\r\n                        this.onTabClick({ data: firstBmog, disabled: false } as any);\r\n                    }\r\n                } else {\r\n                    // Simulate tab click for parent\r\n                    this.onTabClick({ data: firstBmog, disabled: false } as any);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    selectParentTab(bmog: any) {\r\n        if (this.bm.selectedBMOG) {\r\n            // Save last selected child for the current parent before switching\r\n            this.selectedBMOGMap[this.bm.selectedBMOG.id] = this.bm.selectedBMO;\r\n        }\r\n\r\n        // Switch to new parent\r\n        this.bm.selectedBMOG = bmog;\r\n\r\n        // Restore the previously selected child for this parent, if exists\r\n        this.bm.selectedBMO = this.selectedBMOGMap[bmog.id] || bmog.Children?.[0];\r\n    }\r\n\r\n    selectChildTab(bmo: any) {\r\n        this.bm.selectedBMO = bmo;\r\n    }\r\n\r\n\r\n    public onTabClick(tab: TabComponent) {\r\n        // Persist last selected tab id (using bm.BMId as context)\r\n        if (this.bm?.BMId && tab?.data?.id) {\r\n            localStorage.setItem(`lastTabId_${this.bm.BMId}`, tab.data.id);\r\n        }\r\n        if (tab?.disabled) {\r\n            this.getObjectDetails(tab?.data);\r\n            this.sidebarclose = true;\r\n            this.dataProvider.setSidebarclose(this.sidebarclose);\r\n        }\r\n        if (tab?.data) {\r\n            this.clickedTabData = tab.data;\r\n            if (tab.data?.ChildProcessId) {\r\n                this.getChildProcess(tab.data.ChildProcessId)\r\n            }\r\n            else if (tab.data?.SubProcessId) {\r\n                this.getSubProcess(tab.data.SubProcessId)\r\n            }\r\n            else if(tab.data.BMOGID || tab.data.BMOID){\r\n                this.proccessName = tab.data.Name;\r\n                this.processDisplayName =  tab.data.DisplayName;\r\n            }\r\n            else {\r\n                this.getBMOChildDetails(tab.data.parent?._selectedBMO)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getBMOChildDetails(selectedBMO: any) {\r\n        let childId: string | null = null;\r\n        let childName: string | null = null;\r\n\r\n        if (!selectedBMO) {\r\n            console.warn(\"No BMO selected!\");\r\n            return null;\r\n        }\r\n\r\n        if (selectedBMO.BmoType === \"ChildProcess\" && selectedBMO.ChildProcessId) {\r\n            childId = selectedBMO.ChildProcessId;\r\n            this.proccessName = selectedBMO.Name;\r\n            this.clickedTabData.DisplayName = selectedBMO.DisplayName;\r\n        } else if (selectedBMO.BmoType === \"SubProcess\" && selectedBMO.SubProcessId) {\r\n            childId = selectedBMO.SubProcessId;\r\n            this.proccessName = selectedBMO.Name;\r\n            this.clickedTabData.DisplayName = selectedBMO.DisplayName;\r\n\r\n        } else {\r\n            console.warn(\"No valid ChildProcess or SubProcess found.\");\r\n        }\r\n        return { childId, childName };\r\n    };\r\n\r\n    getChildProcess(ProcessId: any): void {\r\n        const bmId = this.bm?.BMId != null ? this.bm.BMId.toString() : this.route.snapshot.data?.bm?.BMId?.toString();\r\n        this.dmApi.getChildProcessList(bmId).subscribe(response => {\r\n            this.ProcessList = response;\r\n\r\n            if (this.ProcessList?.length) {\r\n                const childProcess = this.ProcessList.find(a => a.Value === ProcessId);\r\n                this.proccessName = childProcess?.Label;\r\n                this.processDisplayName = childProcess?.Label;\r\n            }\r\n        });\r\n    }\r\n\r\n    getSubProcess(ProcessId: any): void {\r\n        this.dmApi.getSubprocessList(this.bm.BMId.toString()).subscribe(response => {\r\n            this.ProcessList = response;\r\n\r\n            if (this.ProcessList?.length) {\r\n                const subProcess = this.ProcessList.find(a => a.Value === ProcessId);\r\n                this.proccessName = subProcess?.Label;\r\n                this.processDisplayName = subProcess?.Label;\r\n            }\r\n        });\r\n    }\r\n\r\n    goToBMGrid() {\r\n        if (!this.proccessName || !this.clickedTabData?.DisplayName) {\r\n            console.error('Required data is missing');\r\n            return;\r\n        }\r\n        try {\r\n            const existingValues = { ...sessionStorage };\r\n            \r\n            sessionStorage.setItem('AppName', this.proccessName);\r\n            sessionStorage.setItem('DisplayName', this.processDisplayName ? this.processDisplayName : this.clickedTabData.DisplayName);\r\n            \r\n            const storedAppName = sessionStorage.getItem('AppName');\r\n            const storedDisplayName = sessionStorage.getItem('DisplayName');\r\n            \r\n            if (storedAppName === this.proccessName && \r\n                (storedDisplayName === this.clickedTabData.DisplayName || storedDisplayName ===  this.processDisplayName)) {\r\n                window.open('/admin/bm', '_blank');\r\n            } else {\r\n                console.error('Failed to update session storage values');\r\n                Object.entries(existingValues).forEach(([key, value]) => {\r\n                    sessionStorage.setItem(key, value);\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating session storage:', error);\r\n        }\r\n    } \r\n\r\n    public onTabSelect(tab: TabComponent<ObjectClass>) {\r\n        this.bm.updateSelectedObjects(tab.data);\r\n        this.sidebarclose = true;\r\n        this.dataProvider.setSidebarclose(this.sidebarclose);\r\n        // this.selectParentTab(tab)\r\n        // this.selectChildTab(tab)\r\n    }\r\n\r\n    public onTabEdit(tab: TabComponent<ObjectClass>) {\r\n\r\n      if (tab.data instanceof classes.BMO) {\r\n\r\n        this.getBMsubscribe().subscribe({\r\n          next: (bm) => {\r\n              this.bm = bm\r\n               setTimeout(() => {\r\n                this.openObjectDetails(tab.data);\r\n              this.sidebarclose = true;\r\n              this.dataProvider.setSidebarclose(this.sidebarclose);\r\n               }, 10);\r\n              \r\n          },\r\n          error: (_) => {\r\n              // Handle error if needed\r\n          }\r\n      });\r\n     \r\n      }else{\r\n        this.openObjectDetails(tab.data);\r\n        this.sidebarclose = true;\r\n        this.dataProvider.setSidebarclose(this.sidebarclose);\r\n      }\r\n     \r\n      \r\n      \r\n      \r\n    }\r\n\r\n    public openObjectDetails(obj: ObjectClass) {\r\n        this.getObjectDetails(obj.parent as ObjectClass, obj);\r\n    }\r\n\r\n    public onTabRemove(tab: TabComponent<ObjectClass>) {\r\n        const obj = tab.data;\r\n        let className = '';\r\n        if (obj instanceof classes.BM) {\r\n            className = 'BM';\r\n        } else if (obj instanceof classes.BMOG) {\r\n            className = 'View';\r\n        } else if (obj instanceof classes.BMO) {\r\n            className = 'Section';\r\n        } else if (obj instanceof classes.DMOG) {\r\n            className = 'Card';\r\n        }\r\n      \r\n        const name = (obj as any)?.DisplayName || obj.Name;\r\n        const isSection = className === 'Section';\r\n        const btnText = isSection ? 'Unshare' : 'Delete';\r\n        const checkboxText = `Yes, ${btnText.toLowerCase()} this object`;\r\n        this.msg.showMessage('Warning', {\r\n            header: `${btnText} ${className}`,\r\n            body: `Are you sure you want to ${btnText.toLowerCase()} ${name}?`,\r\n            btnText: `${btnText}`,\r\n            checkboxText: checkboxText,\r\n            isDelete: true,\r\n            undoable: isSection,\r\n            isNewDesign: true,\r\n            callback: () => this.deleteObject(obj),\r\n        });\r\n    }\r\n\r\n    private deleteObject(obj: ObjectClass) {\r\n        const parent = obj.parent;\r\n\r\n        // Store obj index in case optimistic update fails\r\n        const idx = parent.Children.findIndex((id) => id === obj.id);\r\n\r\n        // Optimistic ui update\r\n        parent.removeChild(obj.id);\r\n\r\n        // Rollback optimistic update if something goes wrong\r\n        const rollback = () => parent.addChildAt(obj as any, idx);\r\n\r\n        this.dmApi.deleteObject(obj, this.bm).subscribe({\r\n            next: (success) => (!success ? rollback() : this.getBM()),\r\n            error: (_) => rollback(),\r\n        });\r\n    }\r\n\r\n\r\n    public onNewVersion() {\r\n        this.msg.showMessage('Warning', {\r\n            header: 'New Version',\r\n            body: 'Are you sure you want to create new version?',\r\n            callback: () => {\r\n                this.dmApi.createBMVersion(this.encryptedBMId).subscribe((message) => {\r\n                    this.toast.success(message);\r\n                });\r\n            },\r\n            btnText: 'Create New Version',\r\n            isConfirmation: true,\r\n        });\r\n    }\r\n\r\n    dropped(e: { from: number, to: number }, parent: ObjectClass) {\r\n        // if ('BMID' in parent) return;\r\n        moveItemInArray(parent.Children, e.from, e.to);\r\n        this.dmApi.reorderChildren(parent)\r\n            .subscribe({\r\n                next: (_) => this.getBM(),\r\n                error: (_) => moveItemInArray(parent.Children, e.to, e.from),\r\n            });\r\n    }\r\n\r\n    public onGenerateXML() {\r\n        this.bmService.generateXML1(this.bm.ProcessName, this.bm.Version).pipe(\r\n                  tap(response => {\r\n                    // build your alerts array\r\n                    this.alertMsgTxt = [];\r\n                    if (!response) {\r\n                      throw new Error('No response from generateXML1');\r\n                    }\r\n                    if (response.IsBMWFLinked === 0)         this.alertMsgTxt.push(\"BM-WF is not linked.\");\r\n                    if (response.IsLive === 0)               this.alertMsgTxt.push(\"BM-WF is not live.\");\r\n                    if (response.IsCmpnyGrpExists === 0)     this.alertMsgTxt.push(\"Company Group does not exist.\");\r\n                    if (response.IsCmpnyBMObjectLinked === 0)this.alertMsgTxt.push(\"Company-BM Objects are not linked.\");\r\n          \r\n                    if (this.alertMsgTxt.length > 0) {\r\n                      throw new Error('Validation errors');\r\n                    }\r\n                  }),switchMap(() => this.bmService.generateXML(this.bm.ProcessName, this.bm.Version)),\r\n                            catchError(err => {\r\n                              this.showErrorModal();\r\n                              return of(false);\r\n                            })\r\n                          ).subscribe(success => {\r\n                            if (success) {\r\n                              this.toast.success('JSON generated successfully');\r\n                            }\r\n                          });\r\n    }\r\nprivate showErrorModal(): void {\r\n  // Code to open the modal\r\n  const dialogRef = this.dialog.open(GenerateXmlComponent, {\r\n    width: '656px',\r\n    disableClose: true,\r\n    panelClass: 'custom-dialog-container',\r\n    data: {\r\n      type: 'bm',\r\n      processName: this.bm.ProcessName,\r\n      verNo: this.bm.Version,\r\n      alertMsgTxt: this.alertMsgTxt\r\n    }\r\n  });\r\n\r\n  dialogRef.componentInstance.closeModal.subscribe(() => {\r\n    dialogRef.close();\r\n  });\r\n}\r\n    public changeMode(mode: models.BMMode) {\r\n        this.dmoMode = mode;\r\n        if (mode === this.bm.Mode) return;\r\n        this.dmApi.changeMode(this.bm.BMId, mode).subscribe((success) => {\r\n            if (success) {\r\n                this.bm.update({ Mode: mode });\r\n            }\r\n        });\r\n    }\r\n    private async getObjectDetails(parent: ObjectClass, data: Partial<ObjectClass> = {}) {\r\n        const newObject = Object.keys(data).length === 0;\r\n        const { component } = this.determineClassAndComponent(parent, data);\r\n\r\n        const modal = this.msg.showComponent(component, { data: data as ObjectClass, parent, newObject });\r\n        const res = await modal.result;\r\n        if (!res) return;\r\n\r\n        if (parent === undefined && data instanceof classes.BM) {\r\n            this.saveBMDetails(res);\r\n            return;\r\n        }\r\n  \r\n       if (res.removedItems) {\r\n            const processName = sessionStorage.getItem(\"AppName\");\r\n\r\n            if (parent instanceof classes.BMOG && res.removedItems.domgNames !== \"-1\") {\r\n                await firstValueFrom(\r\n                this.dmApi.deleteDmog(processName, res.removedItems.domgNames)\r\n                );\r\n            } else if (parent instanceof classes.BM && res.removedItems.bmoNames !== \"-1\") {\r\n                await firstValueFrom(\r\n                this.dmApi.deleteBmo(processName, res.removedItems.bmoNames, this.bm.Version)\r\n                );\r\n            }\r\n            }\r\n        const saveSharedDmogs = (id: string) => {\r\n            if (parent instanceof classes.BM) {\r\n                if (res.shared.bmoIds === '-1' && !newObject) {\r\n                    return EMPTY;\r\n                }\r\n\r\n                res.shared.bmogId = id || res.shared.bmogId;\r\n                return this.dmApi.saveSharedBmos(res.shared.bmogId, res.shared.bmoIds);\r\n            }\r\n            else if (parent instanceof classes.BMOG) {\r\n                if (res.shared.dmogIds === '-1' && !newObject) {\r\n                    return EMPTY;\r\n                }\r\n\r\n                res.shared.bmoId = id || res.shared.bmoId;\r\n                return this.dmApi.saveSharedDmogs(res.shared.bmoId, res.shared.dmogIds);\r\n            }\r\n            else if (parent instanceof classes.BMO) {\r\n                if (res.shared.leftDMOGuids === '-1' && res.shared.rightDMOGuids === '-1' && !newObject) {\r\n                    return EMPTY;\r\n                }\r\n                return this.dmApi.saveSharedDmos(res.shared);\r\n            }\r\n        };\r\n\r\n \r\n       \r\n        this.saveObjectDetails(parent, data, res.payload, saveSharedDmogs );\r\n    }\r\n\r\n\r\n\r\n    private saveBMDetails(payload: models.IBM) {\r\n        this.dmApi.saveBM(payload).subscribe((success) => {\r\n            if (success) {\r\n                this.bm.update(payload);\r\n            }\r\n        });\r\n    }\r\n\r\n    public saveObjectDetails(parent: ObjectClass, obj: Partial<ObjectClass> = {}, payload: models.ObjectType, finalize?: (id: string) => Observable<any>) {\r\n        const newObject = Object.keys(obj).length === 0;\r\n        // Store data in case optimistic update fails\r\n        const original = { ...obj };\r\n        let newChild: any;\r\n\r\n        // Optimistic ui update\r\n        if (newObject) {\r\n            const { childClass } = this.determineClassAndComponent(parent);\r\n            newChild = new childClass(payload, parent);\r\n            parent.addChild(newChild); // This adds the child to the parent\r\n        } else {\r\n            obj.update(payload);\r\n        }\r\n\r\n        // Rollback optimistic update if something goes wrong\r\n        const rollback = () => {\r\n            if (newObject) {\r\n                parent.removeChild(payload.id);\r\n            } else {\r\n                obj.update(original);\r\n            }\r\n        };\r\n\r\n        this.dmApi.saveObject(payload, this.bm)\r\n            .pipe(\r\n                switchMap(id => {\r\n                    if (finalize) {\r\n                        return finalize(id).pipe(map(() => id));\r\n                    }\r\n                    return of(id)\r\n                })\r\n            )\r\n            .subscribe({\r\n                next: (success) => {\r\n                    if (!success) rollback();\r\n                    else {\r\n                        this.bm.cacheObjectId(payload);\r\n                        \r\n                        // Activate the newly created tab after successful save\r\n                        if (newObject && newChild) {\r\n                            // If it's a BMOG (parent tab)\r\n                            if (newChild instanceof classes.BMOG) {\r\n                                this.selectParentTab(newChild);\r\n                                // Store this tab as the last active for this BM\r\n                                localStorage.setItem(`lastTabId_${this.bm.BMId}`, newChild.id);\r\n                            } \r\n                            // If it's a BMO (child tab)\r\n                            else if (newChild instanceof classes.BMO) {\r\n                                // First select the parent if needed\r\n                                if (this.bm.selectedBMOG !== parent) {\r\n                                    this.selectParentTab(parent);\r\n                                }\r\n                                this.selectChildTab(newChild);\r\n                                // Store this tab as the last active for this BM\r\n                                localStorage.setItem(`lastTabId_${this.bm.BMId}`, newChild.id);\r\n                            }\r\n                            // If it's a DMOG \r\n                            else if (newChild instanceof classes.DMOG && parent instanceof classes.BMO) {\r\n                                // Handle selecting the correct hierarchy\r\n                                if (this.bm.selectedBMO !== parent) {\r\n                                    this.selectChildTab(parent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                error: (_) => rollback(),\r\n                complete: () => this.getBM(),\r\n            });\r\n    }\r\n\r\n    private determineClassAndComponent(parent: ObjectClass, data: Partial<ObjectClass> = {}) {\r\n        let component: ComponentType<models.ObjectDetail<models.ObjectType, models.ObjectType>>;\r\n        let childClass: any;\r\n        if (parent instanceof classes.BM) {\r\n            component = components.BmogDetailComponent;\r\n            childClass = classes.BMOG;\r\n        } else if (parent instanceof classes.BMOG) {\r\n            component = components.BmoDetailComponent;\r\n            childClass = classes.BMO;\r\n        } else if (parent instanceof classes.BMO) {\r\n            component = components.DmogDetailComponent;\r\n            childClass = classes.DMOG;\r\n        } else if (parent === undefined && data instanceof classes.BM) {\r\n            component = components.BmDetailComponent;\r\n            childClass = undefined;\r\n        }\r\n        return { component, childClass };\r\n    }\r\n\r\n    public async onDropLayout(event: CdkDragDrop<any, any>) {\r\n        this.dataProvider.setNewlyBmog(event)\r\n\r\n    }\r\n\r\n    toggleDrawer() {\r\n        this.isDrawerOpen = !this.isDrawerOpen;\r\n    }\r\n    GetUpdatedDataForSidepanle(event) {\r\n        if (event) {\r\n            this.UpdatedData = event\r\n        }\r\n    }\r\n    sideNavModelEmitter(event) {\r\n        if (event) {\r\n            this.sideNavModel = event;\r\n        }\r\n    }\r\n    isDrawerOpenEmitter(event) {\r\n        if (event) {\r\n            this.isDrawerOpen = event;\r\n        }\r\n    }\r\n\r\n    sideNavModelemit(event) {\r\n        if (event) {\r\n\r\n        }\r\n    }\r\n    updatedbmo(event) {\r\n        this.bm = event;\r\n        this.Save_reOrder(this.bm._selectedBMOG, this.bm._selectedBMO, this.bm._selectedBMO)\r\n\r\n    }\r\n\r\n    private async Save_reOrder(parent: any, payload, data: Partial<ObjectClass> = {}) {\r\n\r\n        let dmogIds = [];\r\n        for (const element of data.Children) {\r\n            for (const bmog of Object.values(data.childrenMap)) {\r\n                if (bmog.GUID === element) {\r\n                    dmogIds.push(bmog.DMOGID);\r\n                }\r\n            }\r\n        }\r\n        \r\n        const shared = {\r\n            bmoid: this.bm._selectedBMO.BMOID,\r\n            dmogIds: dmogIds.join(',')\r\n        };\r\n        return this.dmApi.saveReorderDmogs(shared.bmoid.toString(), shared.dmogIds);\r\n\r\n    }\r\n    DraggingStatus(event:any){\r\n            this.isDraggingStart = event;\r\n           if(this.isDraggingStart && this.isDrawerOpen){\r\n                this.isDrawerOpen=false\r\n            }\r\n            this.cdref.detectChanges();\r\n    }\r\n\r\n    updatedbmEmitter(event:any){\r\n        if(event){\r\n            this.bm = event;\r\n        }\r\n    }\r\n\r\n    public routeBack() {\r\n        window.history.back();\r\n    }\r\n\r\n}\r\n","<ng-container *ngIf=\"bm\">\r\n  <div class=\"breadcrumbs p-1 mb-1\" style=\"background-color: #fff;\">\r\n    <a (click)=\"routeBack()\">\r\n      <img [src]=\"backsImageUrl\" style=\"filter: var(--plx-app-list-icon-filter);\" width=\"20px\">\r\n      <span>Back</span>\r\n    </a> \r\n  </div>\r\n  <app-dm-header></app-dm-header>\r\n  <app-dm-menu\r\n    [mode]=\"bm.Mode\"\r\n    [businessModel]=\"bm\"\r\n    (modeChange)=\"changeMode($event)\"\r\n    (newVersion)=\"onNewVersion()\"\r\n    (generateXml)=\"onGenerateXML()\"\r\n  >\r\n  </app-dm-menu>\r\n  <!-- <app-dm-breadcrumbs\r\n    [bm]=\"bm\"\r\n    (select)=\"openObjectDetails($event)\"\r\n  ></app-dm-breadcrumbs> -->\r\n\r\n  <!-- <div class=\"tab-container\">\r\n    <div class=\"tab active\">View Name 1</div>\r\n    <div class=\"tab\">View Name 2</div>\r\n    <div class=\"tab\">View Name 3</div>\r\n    <div class=\"tab\">View Name 4</div>\r\n    <div class=\"add-tab\"><i class=\"fa fa-plus\"></i></div>\r\n</div>\r\n\r\n<div class=\"section-container\">\r\n    <div class=\"section active\">Section One</div>\r\n    <div class=\"section\">Section Two</div>\r\n    <div class=\"section\">Section Three</div>\r\n    <div class=\"add-tab\"><i class=\"fa fa-plus\"></i></div>\r\n</div>\r\n\r\n\r\n -->\r\n\r\n<!-- <div class=\"add-tab\" \r\ntitle=\"Add BMOG\"\r\n[disabled]=\"true\"\r\n[data]=\"bm\"\r\n*ngIf=\"!bm.published\"\r\n>\r\n<i class=\"fa fa-plus\"></i></div> -->\r\n\r\n<!--Two tabs dwon-->\r\n <!-- <div class=\"formcomponents\">\r\n        <div\r\n          class=\"drag-list\"\r\n          id=\"form-controls\"\r\n          cdkDropList\r\n          (cdkDropListDropped)=\"onDropLayout($event)\"\r\n          [cdkDropListData]=\"panelControls\"\r\n        >\r\n          <li\r\n            class=\"list-group-item-action list-group-item-success drag-list-item px-2 p-1 mt-2 ml-2\"\r\n            cdkDrag\r\n            [cdkDragDisabled]=\"readonly\"\r\n            *ngFor=\"let item of panelControls\"\r\n            style=\"display: inline-block; width: auto; white-space: nowrap; border: none; cursor: pointer;\"\r\n          >\r\n            <i [class]=\"item.class\" style=\"margin-right: 5px\"></i>{{ item.name }}\r\n          </li>\r\n        </div>\r\n      </div> -->\r\n      \r\n\r\n      <!-- <app-tabs \r\n          (tabSelected)=\"onTabSelect($event)\" \r\n          (tabClicked)=\"onTabClick($event)\"  \r\n          (tabEdit)=\"onTabEdit($event)\"\r\n          (tabRemove)=\"onTabRemove($event)\"\r\n          (dropped)=\"dropped($event, bm?.selectedBMO)\"\r\n          [actions]=\"tabActions\">\r\n          \r\n          <app-tab *ngIf=\"allowNewDMOG\" [disabled]=\"true\" [data]=\"bm.selectedBMO\" title=\"Add DMOG this one\"></app-tab>\r\n        </app-tabs> -->\r\n\r\n\r\n\r\n\r\n  <!-- <section class=\"stick-tabs-box\" *ngIf=\"!IsOldNews\">\r\n    <div class=\"col-sm-12\">\r\n      <app-tabs\r\n        (tabSelected)=\"onTabSelect($event)\"\r\n        (tabClicked)=\"onTabClick($event)\"\r\n        (tabEdit)=\"onTabEdit($event)\"\r\n        (tabRemove)=\"onTabRemove($event)\"\r\n        [actions]=\"tabActions\"\r\n        [isNewDesign]=\"true\"\r\n        [isView]=\"true\"\r\n      >\r\n        <ng-container *ngFor=\"let bmogId of bm?.Children\">\r\n          <app-tab\r\n            *ngIf=\"bm.childrenMap[bmogId] as bmog\"\r\n            [title]=\"bmog.Name\"\r\n            [data]=\"bmog\"\r\n            [active]=\"bmog.id === bm.selectedBMOG?.id\"\r\n            [shared]=\"bmog.shared\"\r\n          ></app-tab>\r\n        </ng-container>\r\n        <app-tab\r\n          title=\"Add BMOG\"\r\n          [disabled]=\"true\"\r\n          [data]=\"bm\"\r\n          *ngIf=\"!bm.published\"\r\n        ></app-tab> \r\n      </app-tabs>\r\n      <app-tabs\r\n        (tabSelected)=\"onTabSelect($event)\"\r\n        (tabClicked)=\"onTabClick($event)\"\r\n        (tabEdit)=\"onTabEdit($event)\"\r\n        (tabRemove)=\"onTabRemove($event)\"\r\n        (dropped)=\"dropped($event, bm?.selectedBMOG)\"\r\n        m\r\n        [actions]=\"tabActions\"\r\n        [isSection]=\"true\"\r\n        [isNewDesign]=\"true\"\r\n      >\r\n        <ng-container *ngFor=\"let bmoId of bm?.selectedBMOG?.Children\">\r\n          <app-tab\r\n            *ngIf=\"bm.selectedBMOG.childrenMap[bmoId] as bmo\"\r\n            [title]=\"bmo.DisplayName\"\r\n            [data]=\"bmo\"\r\n            [active]=\"bmo.id === bm.selectedBMO?.id\"\r\n            [shared]=\"bmo.shared\"\r\n            [isBMO]=\"true\"\r\n          ></app-tab>\r\n        </ng-container>\r\n        <app-tab\r\n          *ngIf=\"bm?.Children.length > 0 && !bm.published\"\r\n          [disabled]=\"true\"\r\n          [data]=\"bm.selectedBMOG\"\r\n          title=\"Add BMO\"\r\n        ></app-tab>\r\n      </app-tabs>\r\n     \r\n    </div>\r\n  </section> -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <section\r\n    aria-label=\"Modal heading text content\"\r\n    class=\"modal-body body-mt-20\"\r\n    style=\"padding: 0px !important;\"\r\n    role=\"document\"\r\n    [ngSwitch]=\"bm.selectedBMO?.BmoType\"\r\n  >\r\n\r\n  <div class=\"parentsection\">\r\n    <div *ngIf=\"!isDraggingStart\"></div>\r\n    <div id=\"sidebar\" [ngStyle]=\"{ 'width': isDrawerOpen ? '300px' : sideNavModel ? '19px' :'1px' }\" *ngIf=\"!(bm.published)\">\r\n      <div   [ngClass]=\"isDrawerOpen && sideNavModel ? 'container-new-open' : 'container-new-close'\">\r\n      <div>\r\n        <div class=\"open-side-menu-button\"  [ngClass]=\"isDrawerOpen ? 'drawer-open' : 'drawer-closed' \" *ngIf=\"sideNavModel\">\r\n          <div class=\"open-close-side-menu-button\" [class]=\"isDrawerOpen ? 'open-close-side-menu-arrow' : 'open-close-side-menu-arrow-black'\">\r\n            <img \r\n            [src]=\"isDrawerOpen ? leftDrawerIconUrl : rightDrawerIconUrl\" \r\n            alt=\"Toggle Drawer Icon\"\r\n            (click)=\"toggleDrawer()\"\r\n          />\r\n          </div>\r\n        </div>\r\n        <div  class=\"side-nav stick-side-bar-nav\" [ngClass]=\"{ 'open': isDrawerOpen }\">\r\n        <div *ngIf=\"isDrawerOpen\">\r\n          <app-left-side-panel \r\n          [sideNavModel] =\"sideNavModel\"  \r\n          (UpdatedDataForSidepanle)=\"GetUpdatedDataForSidepanle($event)\" \r\n          [selectedItemFromchild]=\"selectedItemFromchild\" \r\n          [isDraggingStart]=\"isDraggingStart\"\r\n          ></app-left-side-panel>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n\r\n\r\n    </div>\r\n\r\n<div class=\"main-content-section\">\r\n  <app-tabs\r\n  (tabSelected)=\"onTabSelect($event)\"\r\n  (tabClicked)=\"onTabClick($event)\"\r\n  (tabEdit)=\"onTabEdit($event)\"\r\n  (tabRemove)=\"onTabRemove($event)\"\r\n  [actions]=\"tabActions\"\r\n  [isNewDesign]=\"true\"\r\n  [isView]=\"true\"\r\n>\r\n  <ng-container *ngFor=\"let bmogId of bm?.Children\">\r\n    <app-tab\r\n      *ngIf=\"bm.childrenMap[bmogId] as bmog\"\r\n      [title]=\"bmog.Name\"\r\n      [data]=\"bmog\"\r\n      [active]=\"bmog.id === bm.selectedBMOG?.id\"\r\n      [shared]=\"bmog.shared\"\r\n      [showPlucIcon]=\"false\"\r\n    ></app-tab>\r\n  </ng-container>\r\n  <app-tab\r\n    title=\"Add BMOG\"\r\n      [disabled]=\"true\"\r\n      [data]=\"bm\"\r\n      *ngIf=\"!bm.published\"\r\n      [showPlucIcon]=\"true\"\r\n    >\r\n  </app-tab> \r\n</app-tabs>\r\n\r\n\r\n<app-tabs\r\n(tabSelected)=\"onTabSelect($event)\"\r\n(tabClicked)=\"onTabClick($event)\"\r\n(tabEdit)=\"onTabEdit($event)\"\r\n(tabRemove)=\"onTabRemove($event)\"\r\n(dropped)=\"dropped($event, bm?.selectedBMOG)\"\r\nm\r\n[actions]=\"tabActions\"\r\n[isSection]=\"true\"\r\n[isNewDesign]=\"true\"\r\n>\r\n<ng-container *ngFor=\"let bmoId of bm?.selectedBMOG?.Children\">\r\n  <app-tab\r\n    *ngIf=\"bm.selectedBMOG.childrenMap[bmoId] as bmo\"\r\n    [title]=\"bmo.DisplayName\"\r\n    [data]=\"bmo\"\r\n    [active]=\"bmo.id === bm.selectedBMO?.id\"\r\n    [shared]=\"bmo.shared\"\r\n    [isBMO]=\"true\"\r\n  ></app-tab>\r\n</ng-container>\r\n<app-tab\r\n  *ngIf=\"bm?.Children.length > 0 && !bm.published\"\r\n  [disabled]=\"true\"\r\n  [data]=\"bm.selectedBMOG\"\r\n  title=\"Add BMO\"\r\n  [showPlucIcon]=\"true\"\r\n></app-tab>\r\n</app-tabs>\r\n\r\n\r\n\r\n    <app-dmog-form-view\r\n      [SideNavModelData] =\"sideNavModel\"  \r\n      *ngSwitchCase=\"'Forms'\"\r\n      [UpdatedDataFromSideNav]=\"UpdatedData\"\r\n      [dmog]=\"bm.selectedDMOG\"\r\n      [bmo]=\"bmo\"\r\n      [bm]=\"bm\"\r\n      [selectedBMO]=\"bm.selectedBMO\"\r\n      (sideNavModelEmitter)=\"sideNavModelEmitter($event)\"\r\n      (isDrawerOpenEmitter)=\"isDrawerOpenEmitter($event)\"\r\n      (sideNavModel)=\"sideNavModelemit($event)\"\r\n      [readonly]=\"\r\n        bm.published\r\n      \"\r\n      [dmoMode]=\"dmoMode\"\r\n      (updatedbmo)=\"updatedbmo($event)\"\r\n      (DraggingStatus)=\"DraggingStatus($event)\"\r\n      (updatedbmEmitter)=\"updatedbmEmitter($event)\"\r\n    ></app-dmog-form-view>\r\n    <img\r\n      *ngSwitchCase=\"'Contacts'\"\r\n      width=\"100%\"\r\n      [src]=\"contactsImageUrl\"\r\n      alt=\"Contacts\"\r\n    />\r\n    <img\r\n      *ngSwitchCase=\"'Attachments'\"\r\n      width=\"100%\"\r\n      [src]=\"attachmentsImageUrl\"\r\n      alt=\"Contacts\"\r\n    />\r\n    <img\r\n      *ngSwitchCase=\"'Documents'\"\r\n      width=\"100%\"\r\n      [src]=\"documentsImageUrl\"\r\n      alt=\"Contacts\"\r\n    />\r\n    <div *ngSwitchCase=\"'Subprocess'\" class=\"custom-box\">\r\n      <span>{{clickedTabData?.DisplayName}}</span>\r\n      <button class=\"custom-button\"  *ngIf=\"this.proccessName\" (click)=\"goToBMGrid()\">\r\n          Go to Sub Process\r\n          <span class=\"icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-up-right\" viewBox=\"0 0 16 16\"> <path fill-rule=\"evenodd\" d=\"M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z\"/> <path fill-rule=\"evenodd\" d=\"M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z\"/> </svg></span> \r\n      </button>\r\n    </div>\r\n    <div *ngSwitchCase=\"'ChildProcess'\" class=\"custom-box\">\r\n      <span>{{clickedTabData?.DisplayName}}</span>\r\n      <button class=\"custom-button\" *ngIf=\"this.proccessName\" (click)=\"goToBMGrid()\">\r\n          Go to Child Process\r\n          <span class=\"icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-up-right\" viewBox=\"0 0 16 16\"> <path fill-rule=\"evenodd\" d=\"M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z\"/> <path fill-rule=\"evenodd\" d=\"M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z\"/> </svg></span> \r\n      </button>\r\n    </div>\r\n\r\n\r\n    <img\r\n      *ngSwitchCase=\"'SharedChildProcess'\"\r\n      width=\"100%\"\r\n      [src]=\"sharedChildProcessImageUrl\"\r\n      alt=\"Contacts\"\r\n    />\r\n  </div>\r\n  </div>\r\n  </section>\r\n\r\n\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DataModeler1Component } from './data-modeler1.component';\r\n\r\nconst routes: Routes = [{ path: '', component: DataModeler1Component }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DataModeler1RoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DataModeler1RoutingModule } from './data-modeler1-routing.module';\r\nimport { DataModeler1Component } from './data-modeler1.component';\r\n\r\nimport { SharedModule } from '../Shared/shared.module';\r\n\r\nimport * as fromComponents from './components1';\r\nimport * as lib  from '@app/admin/lib';\r\nimport { ResizeablePanelComponent } from './components1/resizeable-panel/resizeable-panel.component';\r\nimport { ResizableModule } from 'angular-resizable-element';\r\nimport { DmoFormControlsComponent } from './components1/dmo-form-controls/dmo-form-controls.component';\r\nimport { ShareDmoComponent } from './components1/share-dmo/share-dmo.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { DmogSettingsComponent } from './components1/dmog-settings/dmog-settings.component';\r\nimport { DmogContainerComponent } from './components1/dmog-new-design/dmog-container/dmog-container.component';\r\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\r\nimport { ContierParentRowSettingsComponent } from './components1/dmog-new-design/contier-parent-row-settings/contier-parent-row-settings.component';\r\nimport { ContainerColumnSettingsComponent } from './components1/dmog-new-design/container-column-settings/container-column-settings.component';\r\nimport { DMOControlsComponent } from './components1/dmog-new-design/dmocontrols/dmocontrols.component';\r\nimport { DmogSharedDmoComponent } from './components1/dmog-new-design/dmog-shared-dmo/dmog-shared-dmo.component';\r\nimport { DmogSubRowSettingsComponent } from './components1/dmog-new-design/dmog-sub-row-settings/dmog-sub-row-settings.component';\r\nimport { DmogSubColumnSettingsComponent } from './components1/dmog-new-design/dmog-sub-column-settings/dmog-sub-column-settings.component';\r\nimport { ResizableDirectiveDirective } from './directives/resizable-directive.directive';\r\nimport { ResizeColumnsDirective } from './directives/resize-columns.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n    CommonModule,\r\n    DataModeler1RoutingModule,\r\n    SharedModule,\r\n    lib.ObjectControlModule,\r\n    DragDropModule,\r\n    CdkAccordionModule,\r\n    DataModeler1Component,\r\n    fromComponents.BmDetailComponent,\r\n    fromComponents.DmoComponent,\r\n    fromComponents.DmoDetailComponent,\r\n    fromComponents.BmogDetailComponent,\r\n    fromComponents.BmoDetailComponent,\r\n    fromComponents.DmogDetailComponent,\r\n    fromComponents.DmoConditionComponent,\r\n    fromComponents.DmogFormViewComponent,\r\n    fromComponents.DmHeaderComponent,\r\n    fromComponents.DmMenuComponent,\r\n    fromComponents.DmBreadcrumbsComponent,\r\n    fromComponents.ResizeablePanelComponent,\r\n    fromComponents.ContextMenuComponent,\r\n    fromComponents.LeftSidePanelComponent,\r\n    fromComponents.DmogContainerComponent,\r\n    DmoFormControlsComponent,\r\n    ShareDmoComponent,\r\n    DmogSettingsComponent,\r\n    ContierParentRowSettingsComponent,\r\n    ContainerColumnSettingsComponent,\r\n    DMOControlsComponent,\r\n    DmogSharedDmoComponent,\r\n    DmogSubRowSettingsComponent,\r\n    DmogSubColumnSettingsComponent,\r\n    ResizableDirectiveDirective,\r\n    ResizeColumnsDirective,\r\n],\r\n    providers: []\r\n})\r\n\r\n\r\n\r\n\r\nexport class DataModeler1Module { }\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIM,IAAO,aAAP,MAAiB;EASrB,YAAY,MAAW,CAAA,GAAW,QAAS;AAAT,SAAA,SAAA;AAChC,SAAK,KAAK,IAAI,MAAM;AACpB,SAAK,OAAO,IAAI,QAAQ;AACxB,SAAK,UAAU,IAAI,WAAY,QAAgB,WAAW;AAC1D,SAAK,WAAW,IAAI,YAAY,CAAA;AAChC,SAAK,SAAS,IAAI,UAAU;AAC5B,SAAK,cAAc,CAAA;EACrB;EAEO,SAAS,MAAY;AAC3B,WAAO,KAAK,YAAY,IAAI;EAC7B;EAEO,SAAS,OAAQ;AACtB,QAAI,CAAC,KAAK,SAAS,SAAS,MAAM,EAAE,GAAE;AACpC,WAAK,SAAS,KAAK,MAAM,EAAE;IAC7B;AACA,SAAK,YAAY,MAAM,EAAE,IAAI;EAC/B;EAEO,WAAW,OAAU,OAAa;AACvC,QAAI,CAAC,KAAK,SAAS,SAAS,MAAM,EAAE,GAAG;AACrC,WAAK,WAAW,KAAK,SAAS,MAAM,GAAG,KAAK,EAAE,OAAO,MAAM,IAAI,KAAK,SAAS,MAAM,KAAK,CAAC;IAC3F;AACA,SAAK,YAAY,MAAM,EAAE,IAAI;EAC/B;EAEO,YAAY,IAAU;AAC3B,SAAK,WAAW,KAAK,SAAS,OAAO,SAAO,QAAQ,EAAE;AACtD,WAAO,KAAK,YAAY,EAAE;EAC5B;EAEO,OAAO,MAAkB,CAAA,GAAE;AAChC,WAAO,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC3C,WAAK,GAAG,IAAI;IACd,CAAC;EACH;EAEO,cAAW;AAChB,UAA6C,WAAtC,eAAa,QAAQ,KAhDhC,IAgDiD,IAAR,iBAAQ,IAAR,CAA9B,eAAa,UAAQ;AAC5B,QAAI,YAAY,MAAM;AACpB,aAAO,KAAK,UAAU;AACtB,aAAO,KAAK,UAAU;AACtB,aAAO,KAAK,OAAO;IACrB;AACA,WAAO;EACT;;;;ACrDI,IAAO,MAAP,cAAmB,WAAsB;EAc7C,YAAY,KAAoB,QAAY;AAC1C,UAAM,KAAK,MAAM;AACjB,SAAK,QAAQ,IAAI;AACjB,SAAK,cAAc,IAAI;AACvB,SAAK,YAAY,IAAI;AACrB,SAAK,WAAW,IAAI;AACpB,SAAK,SAAS,IAAI,UAAU,OAAO;AACnC,SAAK,QAAQ,IAAI,SAAS,CAAA;AAC1B,SAAK,OAAO,IAAI;AAChB,SAAK,UAAU,IAAI;AACnB,SAAK,eAAe,IAAI;AACxB,SAAK,iBAAiB,IAAI;AAC1B,SAAK,uBAAuB,IAAI;AAChC,SAAK,sBAAuB,IAAI;AAChC,SAAK,OAAO,OAAO;EACrB;EAEA,IAAI,SAAM;AACR,WAAO,KAAK,OAAO,MAAM,KAAK,CAAC,EAAC,MAAK,MAAM,UAAU,KAAK,EAAE;EAC9D;;;;ACjCI,IAAO,OAAP,cAAoB,WAAmB;EAQ3C,YAAY,KAAqB,QAAU;AACzC,UAAM,KAAK,MAAM;AACjB,SAAK,SAAS,IAAI;AAClB,SAAK,aAAa,IAAI;AACtB,SAAK,WAAW,IAAI;AACpB,SAAK,SAAS,IAAI,UAAU,OAAO;AACnC,SAAK,QAAQ,IAAI,SAAS,CAAA;AAC1B,SAAK,OAAO;AACZ,SAAK,iBAAiB,IAAI;EAC5B;;;;ACtBF,oBAAyB;;;ACqBzB,IAAY;CAAZ,SAAYA,WAAQ;AAClB,EAAAA,UAAA,UAAA,IAAA;AACA,EAAAA,UAAA,MAAA,IAAA;AACA,EAAAA,UAAA,WAAA,IAAA;AACF,GAJY,aAAA,WAAQ,CAAA,EAAA;;;ACHpB,IAAY;CAAZ,SAAYC,UAAO;AACjB,EAAAA,SAAA,MAAA,IAAA;AACA,EAAAA,SAAA,SAAA,IAAA;AACA,EAAAA,SAAA,YAAA,IAAA;AACA,EAAAA,SAAA,UAAA,IAAA;AACA,EAAAA,SAAA,YAAA,IAAA;AACA,EAAAA,SAAA,cAAA,IAAA;AAEF,GARY,YAAA,UAAO,CAAA,EAAA;AASnB,IAAY;CAAZ,SAAYC,cAAW;AACrB,EAAAA,aAAA,MAAA,IAAA;AACF,GAFY,gBAAA,cAAW,CAAA,EAAA;;;AChBvB,IAAY;CAAZ,SAAYC,aAAU;AACpB,EAAAA,YAAA,OAAA,IAAA;AACA,EAAAA,YAAA,MAAA,IAAA;AACA,EAAAA,YAAA,MAAA,IAAA;AACA,EAAAA,YAAA,OAAA,IAAA;AACA,EAAAA,YAAA,OAAA,IAAA;AACA,EAAAA,YAAA,OAAA,IAAA;AACA,EAAAA,YAAA,OAAA,IAAA;AACA,EAAAA,YAAA,OAAA,IAAA;AACA,EAAAA,YAAA,OAAA,IAAA;AACF,GAVY,eAAA,aAAU,CAAA,EAAA;AAYtB,IAAY;CAAZ,SAAYC,iBAAc;AACxB,EAAAA,gBAAA,KAAA,IAAA;AACA,EAAAA,gBAAA,IAAA,IAAA;AACF,GAHY,mBAAA,iBAAc,CAAA,EAAA;AAInB,IAAM,aAAyC;EACpD,cAAc,WAAW;EACzB,aAAa,WAAW;EACxB,aAAa,WAAW;EACxB,UAAU,WAAW;EACrB,UAAU,WAAW;EACrB,UAAU,WAAW;EACrB,UAAU,WAAW;EACrB,UAAU,WAAW;EACrB,UAAU,WAAW;;;;ACsSvB,IAAY;CAAZ,SAAYC,cAAW;AACrB,EAAAA,aAAA,KAAA,IAAA;AACA,EAAAA,aAAA,MAAA,IAAA;AACF,GAHY,gBAAA,cAAW,CAAA,EAAA;AAKvB,IAAY;CAAZ,SAAYC,qBAAkB;AAC5B,EAAAA,oBAAA,OAAA,IAAA;AACA,EAAAA,oBAAA,cAAA,IAAA;AACA,EAAAA,oBAAA,WAAA,IAAA;AACF,GAJY,uBAAA,qBAAkB,CAAA,EAAA;AAM9B,IAAY;CAAZ,SAAYC,aAAU;AACpB,EAAAA,YAAA,QAAA,IAAA;AACA,EAAAA,YAAA,OAAA,IAAA;AACF,GAHY,eAAA,aAAU,CAAA,EAAA;AAKtB,IAAY;CAAZ,SAAYC,mBAAgB;AAC1B,EAAAA,kBAAA,SAAA,IAAA;AACA,EAAAA,kBAAA,OAAA,IAAA;AACA,EAAAA,kBAAA,MAAA,IAAA;AACA,EAAAA,kBAAA,YAAA,IAAA;AACF,GALY,qBAAA,mBAAgB,CAAA,EAAA;AAO5B,IAAY;CAAZ,SAAYC,YAAS;AACnB,EAAAA,WAAA,YAAA,IAAA;AACA,EAAAA,WAAA,cAAA,IAAA;AACA,EAAAA,WAAA,SAAA,IAAA;AACA,EAAAA,WAAA,OAAA,IAAA;AACA,EAAAA,WAAA,SAAA,IAAA;AACA,EAAAA,WAAA,QAAA,IAAA;AACA,EAAAA,WAAA,QAAA,IAAA;AACF,GARY,cAAA,YAAS,CAAA,EAAA;AAUrB,IAAY;CAAZ,SAAYC,kBAAe;AACzB,EAAAA,iBAAA,QAAA,IAAA;AACA,EAAAA,iBAAA,SAAA,IAAA;AACA,EAAAA,iBAAA,IAAA,IAAA;AACA,EAAAA,iBAAA,KAAA,IAAA;AACA,EAAAA,iBAAA,OAAA,IAAA;AACF,GANY,oBAAA,kBAAe,CAAA,EAAA;;;ACvVrB,IAAgB,eAAhB,MAAgB,cAAY;EAiBhC,IAAI,IAAC;AACH,WAAO,KAAK,KAAK;EACnB;EAEA,YAAmB,KAA+B,IAAsB;AAArD,SAAA,MAAA;AAA+B,SAAA,KAAA;AAdzC,SAAA,cAA4B,CAAA;AAC3B,SAAA,SAAS,IAAI,aAAY;AAI5B,SAAA,YAAY;AACZ,SAAA,YAAY;AAET,SAAA,kBAAkB;EAM+C;EAE3E,WAAQ;AACN,SAAK,eAAc;AACnB,SAAK,SAAQ;EACf;EAEA,kBAAe;AACb,SAAK,gBAAe;AACpB,SAAK,cAAa;EACpB;EACQ,kBAAe;AACrB,SAAK,YAAY,QAAQ,CAAC,WAAU;AAClC,WAAK,KACF,IAAI,OAAO,WAAW,EACtB,aAAa,KAAK,UAAU,CAAC,MAAM,KAAK,eAAe,CAAC,EACxD,UAAU,CAAC,QAAQ,OAAO,QAAQ,GAAG,CAAC;IAC3C,CAAC;EACH;EAEU,iBAAc;EAAI;EAElB,WAAQ;EAAI;EAEZ,gBAAa;EAAI;EAEpB,WAAQ;AACb,SAAK,IAAI,MAAK;EAChB;EAEO,WAAQ;EAAI;EAEnB,cAAW;AACT,SAAK,kBAAkB;EACzB;;;uCAvDoB,eAAY,4BAAA,cAAA,GAAA,4BAAA,kBAAA,CAAA;IAAA;EAAA;;yEAAZ,eAAY,QAAA,EAAA,OAAA,SAAA,MAAA,QAAA,KAAA,OAAA,QAAA,UAAA,aAAA,cAAA,GAAA,SAAA,EAAA,QAAA,SAAA,EAAA,CAAA;EAAA;;;;ACJlC,IAAY;CAAZ,SAAYC,cAAW;AACrB,EAAAA,aAAAA,aAAA,IAAA,IAAA,CAAA,IAAA;AACA,EAAAA,aAAAA,aAAA,KAAA,IAAA,CAAA,IAAA;AACA,EAAAA,aAAAA,aAAA,IAAA,IAAA,CAAA,IAAA;AACF,GAJY,gBAAA,cAAW,CAAA,EAAA;;;ACjBvB,IAAY;CAAZ,SAAYC,SAAM;AAChB,EAAAA,QAAA,QAAA,IAAA;AACA,EAAAA,QAAA,UAAA,IAAA;AACF,GAHY,WAAA,SAAM,CAAA,EAAA;AAKlB,IAAY;CAAZ,SAAYC,YAAS;AACnB,EAAAA,WAAA,QAAA,IAAA;AACA,EAAAA,WAAA,UAAA,IAAA;AACF,GAHY,cAAA,YAAS,CAAA,EAAA;AAKrB,IAAY;CAAZ,SAAYC,qBAAkB;AAC5B,EAAAA,oBAAAA,oBAAA,MAAA,IAAA,CAAA,IAAA;AACA,EAAAA,oBAAAA,oBAAA,qBAAA,IAAA,CAAA,IAAA;AACF,GAHY,uBAAA,qBAAkB,CAAA,EAAA;;;APCxB,IAAO,cAAP,MAAO,aAAW;EA0ItB,IAAI,SAAM;AACR,WAAO,KAAK,OAAO,MAAM,KAAK,CAAC,EAAE,MAAK,MAAO,UAAU,KAAK,IAAI;EAClE;EAEA,YAAY,MAA6B,CAAA,GAAW,QAAY;AAAZ,SAAA,SAAA;AA5IpD,SAAA,MAAI;AAEJ,SAAA,aAAa;AACb,SAAA,YAAY;AAEZ,SAAA,eAAe;AACf,SAAA,yBAAyB;AACzB,SAAA,aAAa;AACb,SAAA,aAAa;AACb,SAAA,YAAY;AAEZ,SAAA,iBAAiB;AACjB,SAAA,cAAc;AACd,SAAA,iBAAiB;AACjB,SAAA,cAAc;AACd,SAAA,UAAU;AACV,SAAA,SAAS;AACT,SAAA,mBAAmB;AACnB,SAAA,iBAAiB;AACjB,SAAA,cAAc,EAAE,MAAM,MAAM,MAAM,MAAM,IAAI,GAAE;AAC9C,SAAA,cAAc;AACd,SAAA,aAA+B,CAAA;AAC/B,SAAA,cAAc;AACd,SAAA,qBAAqB;AACrB,SAAA,gBAAgB;AAChB,SAAA,UAAU,WAAW;AACrB,SAAA,UAAU;AACV,SAAA,gBAAgB;AAChB,SAAA,eAAe;AACf,SAAA,cAAc;AAId,SAAA,UAAkB;AAClB,SAAA,QAAgB;AAChB,SAAA,aAAa;AACb,SAAA,aAAa;AACb,SAAA,aAAa;AACb,SAAA,aAAa;AACb,SAAA,oBAAoB;AACpB,SAAA,WAAW;AAGX,SAAA,YAAY;AAEZ,SAAA,SAAK,wBAAQ;AACb,SAAA,QAAQ;AACR,SAAA,SAAS;AACT,SAAA,QAAQ;AACR,SAAA,YAAY;AACZ,SAAA,iBAAiB;AACjB,SAAA,iBAAiB;AACjB,SAAA,aAAa;AACb,SAAA,YAAY;AACZ,SAAA,WAAW;AAEX,SAAA,MAAM;AACN,SAAA,QAAQ;AACR,SAAA,cAAc;AACd,SAAA,gBAAgB;AAChB,SAAA,aAAa;AAEb,SAAA,OAAO;AACP,SAAA,YAAY;AACZ,SAAA,YAAY;AACZ,SAAA,WAAW;AACX,SAAA,aAAa;AACb,SAAA,cAAc;AACd,SAAA,SAAS;AACT,SAAA,YAAY;AACZ,SAAA,WAAW;AACX,SAAA,WAAW;AACX,SAAA,YAAY;AAEZ,SAAA,gBAAgB;AAChB,SAAA,cAAc;AACd,SAAA,eAAe;AACf,SAAA,cAAc;AAEd,SAAA,YAAY;AACZ,SAAA,SAAS,OAAO;AAChB,SAAA,SAAS;AACT,SAAA,WAAW;AACX,SAAA,YAAY;AACZ,SAAA,QAAQ;AACR,SAAA,UAAU;AACV,SAAA,OAAO;AACP,SAAA,OAAO;AACP,SAAA,SAAS;AAET,SAAA,cAAc;AACd,SAAA,aAAa;AAIb,SAAA,oBAAoB;AACpB,SAAA,aAAa;AACb,SAAA,SAAS,CAAA;AACT,SAAA,SAAS;AACT,SAAA,OAAO;MACL,QAAQ,CAAA;MACR,MAAM,CAAA;MACN,KAAK;MACL,SAAS,CAAA;MACT,UAAU;MACV,QAAQ;MACR,WAAW;MACX,QAAQ;MACR,aAAa;MACb,UAAS;MACT,YAAa;MACb,iBAAkB;MAClB,kBAAmB;MACnB,eAAgB;MAChB,WAAW;MACX,YAAY;MACZ,UAAU,CAAA;MACV,aAAa;MACb,gBAAgB,CAAA;MAChB,eAAe,CAAA;MACf,kBAAmB;;AAErB,SAAA,WAAW;MACT,UAAU;MACV,eAAe;MACf,WAAW;MACX,UAAU;MACV,QAAQ;MACR,UAAU;MACV,WAAW;MACX,UAAU;MACV,SAAS;;AAUT,WAAO,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC3C,UAAI,SAAS,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,KAAK,GAAG;AAC/D,eAAO,QAAQ,KAAK,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAK;AACvC,cAAI,CAAC,KAAK,GAAG;AAAG,iBAAK,GAAG,IAAI,CAAA;AAC5B,eAAK,GAAG,EAAE,CAAC,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI;QACzD,CAAC;MACH,OAAO;AACL,aAAK,GAAG,IAAI,IAAI,GAAG,KAAK,KAAK,GAAG;MAClC;IACF,CAAC;AACD,SAAK,OAAO,IAAI;EAClB;EAEO,QAAK;AACV,UAAM,SAAS,IAAI,aAAY,MAAM,KAAK,MAAM;AAChD,WAAO,QAAQ,OAAO,QAAQ,SAAS,KAAK,WAAW;AACvD,WAAO,UAAU,GAAG,OAAO,OAAO,SAAS,KAAK,WAAW;AAC3D,WAAO,KAAK,GAAG,OAAO,EAAE,GAAG,KAAK,WAAW;AAC3C,WAAO,cAAc;AACrB,WAAO,UAAU;AACjB,WAAO,OAAO,KAAK,OAAO,WAAW,KAAK,WAAW;AACrD,SAAK;AACL,WAAO;EACT;EAEO,WAAQ;AACb,UAAqD,WAA7C,cAAY,QAAQ,YAnLhC,IAmLyD,IAAT,iBAAS,IAAT,CAApC,cAAY,UAAQ;AAC5B,WAAO;EACT;EAEO,cAAc,MAAc;AACjC,UAAM,OAAyD,CAAA;AAC/D,WAAO,OAAO,KAAK,OAAO,KAAK,WAAW,EACvC,QAAQ,CAAC,SAAS,OAAO,OAAO,KAAK,WAAW,CAAC,EACjD,QAAQ,CAAC,QAAQ,OAAO,OAAO,IAAI,WAAW,CAAC,EAC/C,QAAQ,CAAC,SAAS,OAAO,OAAO,KAAK,WAAW,CAAC,EACjD,QAAQ,CAAC,QAAO;AACf,UAAI,MAAM;AACR,YAAI,IAAI,SAAS,QAAQ,IAAI,YAAY,KAAK,SAAS;AACrD,eAAK,KAAK;YACR,KAAK,IAAI;YACT,OAAO,IAAI;YACX,QAAQ,IAAI,OAAO;WACpB;QACH;MACF,OAAO;AACL,YAAI,CAAC,KAAK,KAAK,CAAC,QAAQ,IAAI,QAAQ,IAAI,IAAI;AAC1C,eAAK,KAAK;YACR,KAAK,IAAI;YACT,OAAO,IAAI;YACX,QAAQ,IAAI,OAAO;WACpB;MACL;IACF,CAAC;AACH,WAAO;EACT;EAEO,aAAa,WAAyB;AAC3C,SAAK,WAAW,KAAK,SAAS;EAChC;;;;AQ/MI,IAAO,OAAP,cAAoB,WAAoB;EAoB5C,YAAY,KAAqB,QAAW;AAC1C,UAAM,KAAK,MAAM;AAHH,SAAA,cAAoD,CAAA;AAIlE,SAAK,OAAO,IAAI;AAChB,SAAK,SAAS,IAAI;AAClB,SAAK,cAAc,IAAI;AACvB,SAAK,cAAc,IAAI;AACvB,SAAK,eAAe,IAAI;AACxB,SAAK,WAAW,IAAI;AACpB,SAAK,WAAW,IAAI;AACpB,SAAK,SAAS,IAAI,UAAU,OAAO;AACnC,SAAK,OAAO,IAAI;AAChB,SAAK,QAAQ,IAAI,SAAS,CAAA;AAC1B,SAAK,eAAe,IAAI;AACxB,SAAK,WAAW,IAAI;AACpB,SAAK,WAAW,IAAI,YAAY,CAAA;AAChC,SAAK,QAAQ,IAAI,SAAS,CAAA;AAC1B,SAAK,OAAO,OAAO,OAAO;AAC1B,SAAK,WAAW,KAAK,4BAA2B;AAChD,SAAK,YAAU,IAAI;AACnB,SAAK,cAAc,IAAI;EACzB;EAEA,IAAI,SAAM;AAKR,WAAO,KAAK,OAAO,MAAM,KAAK,CAAC,EAAC,MAAK,MAAM,UAAU,KAAK,EAAE;EAC9D;EAEO,YAAY,UAAiB;AAClC,QAAI,UAAU,YAAY,SAAS,GAAG;AACpC,WAAK,WAAW;IAClB;EACF;EAEO,SAAS,OAAkB;AAChC,QAAI,CAAC,KAAK,SAAS,SAAS,MAAM,OAAO,GAAE;AACzC,WAAK,SAAS,KAAK,MAAM,OAAO;IAClC;AACA,SAAK,YAAY,MAAM,OAAO,IAAI;EACpC;EAEO,YAAY,MAAY;AAC7B,SAAK,WAAW,KAAK,SAAS,OAAO,OAAK,MAAM,IAAI;AACpD,WAAO,KAAK,YAAY,IAAI;EAC9B;EAEA,SAAS,MAAY;AACnB,WAAO,KAAK,YAAY,IAAI;EAC9B;EAEO,QAAQ,MAAY;AACzB,QAAI,CAAC;AAAM,aAAO;AAClB,UAAM,OAAO,KAAK,SAAS;AAC3B,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAM,MAAM,KAAK,CAAC;AAKd,UAAI,IAAI,YAAY,MAAM;AACxB,eAAO;UACL,UAAU;UACX,aAAY;UACZ,UAAS;UACR;;MAEJ;IAGN;AAEA,WAAO;EACT;EAEO,eAAe,MAAc,IAA+C;AACjF,UAAM,QAAQ,KAAK,QAAQ,IAAI;AAC/B,OAAG,SAAS,IAAI;AAChB,WAAO;EACT;EAEO,OAAO,MAAsB,CAAA,GAAE;AACpC,WAAO,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC3C,WAAK,GAAG,IAAI;IACd,CAAC;EACH;EAEQ,8BAA2B;AACjC,WAAO;MACL,SAAS;;MAET,YAAY;QACV;UACE,OAAO;UACP,KAAK;UACL,OAAO;UACP,MAAM;;UAEN,SAAS;YACP;;cAEE,YAAY,CAAA;cAEZ,OAAO;cACP,QAAQ;cACR,MAAM;cACN,MAAM;cACN,MAAM;cACN,OAAO;cACP,KAAK;cACL,sBAAsB;cACtB,WAAW;;YAEb;cACE,YAAY,CAAA;cACZ,OAAO;cACP,QAAQ;cACR,MAAM;cACN,MAAM;cACN,MAAM;cACN,OAAO;cACP,KAAK;cACL,sBAAsB;cACtB,WAAW;;;UAGf,WAAW;UACX,SAAS;UACT,UAAU;YACR;cACE,OAAO;;YAET;cACE,OAAO;;;;;MAKf,KAAK,KAAK;;EAEd;;;;AC7JI,IAAO,KAAP,MAAO,YAAW,WAAgC;EAgBtD,IAAI,eAAY;AACd,WAAO,KAAK;EACd;EACA,IAAI,aAAa,MAAU;AACzB,SAAK,gBAAgB;EACvB;EAEA,IAAI,cAAW;AACb,WAAO,KAAK;EACd;EACA,IAAI,YAAY,KAAQ;AACtB,SAAK,eAAe;EACtB;EAEA,IAAI,eAAY;AACd,WAAO,KAAK;EACd;EACA,IAAI,aAAa,KAAS;AACxB,SAAK,gBAAgB;EACvB;EAEA,YAAY,KAAmB,QAAiB;AAC9C,UAAM,KAAK,MAAM;AACjB,SAAK,cAAc,IAAI;AACvB,SAAK,OAAO,IAAI;AAChB,SAAK,qBAAqB,IAAI,sBAAsB;AACpD,SAAK,cAAc,IAAI;AACvB,SAAK,OAAO,IAAI;AAChB,SAAK,QAAQ,IAAI,SAAS,CAAA;AAC1B,SAAK,cAAc,IAAI;AACvB,SAAK,SAAS,IAAI,UAAU;AAC5B,SAAK,aAAa,IAAI;AACtB,SAAK,YAAY,IAAI;AACrB,SAAK,SAAS,IAAI;AAClB,SAAK,OAAO;EACd;EAEA,IAAI,YAAS;AACX,WAAO,KAAK,SAAS;EACvB;EAEA,IAAI,UAAO;AACT,UAAmF,WAA3E,eAAa,cAAc,eAAe,eAAe,KAnErE,IAmEuF,IAAT,iBAAS,IAAT,CAAlE,eAAa,gBAAc,iBAAe,iBAAe;AACjE,UAAM,OAAO,KAAK,oBAAoB,WAAW;AACjD,UAAM,MAAM,CAAA;AACZ,UAAM,OAAO,CAAA;AACb,UAAM,MAAM,CAAA;AACZ,WAAO,OAAO,KAAK,WAAW,EAAE,QAAQ,CAAAC,UAAO;AAC7C,aAAO,QAAQA,MAAK,WAAW,EAAE,QAAQ,CAAC,CAAC,IAAI,QAAQ,MAAK;AAC1D,YAAI,EAAE,IAAI,SAAS,YAAW;AAC9B,eAAO,QAAQ,SAAS,WAAW,EAAE,QAAQ,CAAC,CAACC,KAAI,SAAS,MAAK;AAC/D,cAAIA,GAAE,IAAI,UAAU;AACpB,eAAKA,GAAE,IAAI,UAAU,YAAW;QAClC,CAAC;MACH,CAAC;IACH,CAAC;AACD,QAAI,eAAe,UAAU;AAC3B,UAAI,cAAc,EAAE,IAAI,cAAc;IACxC;AACA,UAAM,aAAa,CAAA;AACnB,WAAO;MACL,IAAI,iCACC,OADD;QAEF,cAAc,eAAe;QAC7B,aAAa,cAAc;QAC3B,cAAc,eAAe;;MAE/B;MACA;MACA;MACA;MACA;MACA,WAAW,eAAe;MAC1B,UAAU,cAAc;MACxB,WAAW,eAAe;;EAE9B;EAEO,iBAAc;AACnB,UAAmF,WAA3E,eAAa,cAAc,eAAe,eAAe,KAxGrE,IAwGuF,IAAT,iBAAS,IAAT,CAAlE,eAAa,gBAAc,iBAAe,iBAAe;AACjE,WAAO;EACT;EAEQ,oBAAoB,aAAwC;AAClE,UAAM,WAAW,CAAA;AACjB,WAAO,QAAQ,eAAe,CAAA,CAAE,EAAE,QAAQ,CAAC,CAAC,IAAI,GAAG,MAAK;AACtD,eAAS,EAAE,IAAI,IAAI,YAAW;IAChC,CAAC;AACD,WAAO;EACT;EAEO,sBAAsB,KAAgB;AAC3C,QAAI,CAAC;AAAK;AACV,QAAI,YAAY,KAAK;AACnB,WAAK,eAAe;IACtB;AACA,QAAI,WAAW,KAAK;AAClB,WAAK,cAAc;IACrB;AACA,QAAI,YAAY,KAAK;AACnB,WAAK,eAAe;IACtB;AACA,QAAI,aAAa,KAAK;AACpB;IACF;AACA,UAAM,UAAU,KAAK,SAAS,CAAC;AAC/B,QAAI,SAAS;AACX,YAAM,aAAa,IAAI,YAAY,OAAO;AAC1C,WAAK,sBAAsB,UAAiB;IAC9C,OAAO;AACL,cAAQ,IAAI,IAAI;QACd,KAAK,KAAK,cAAc;AACtB,eAAK,cAAc;AAAK;QAC1B,KAAK,KAAK,aAAa;AACrB,eAAK,eAAe;AAAK;QAC3B;AACE;MACJ;IACF;AACA,SAAK,eAAc;EACrB;EAEO,cAAc,iBAAuB;AAC1C,YAAQ,iBAAiB;MACvB,KAAK,KAAK,cAAc;AACtB,aAAK,eAAe;AAAK;MAC3B,KAAK,KAAK,aAAa;AACrB,aAAK,cAAc;AAAK;MAC1B,KAAK,KAAK,cAAc;AACtB,aAAK,eAAe;AAAK;MAC3B;AACE;IACJ;EACF;EAEA,OAAO,aAAa,KAAwB;AAC1C,UAAM,KAAK,IAAI,IAAG,IAAI,OAAO,MAAS;AACtC,OAAG,SAAS,QAAQ,CAAC,WAAU;AAC7B,YAAM,OAAO,IAAI,KAAK,IAAI,MAAM,MAAM,GAAG,EAAE;AAC3C,SAAG,SAAS,IAAI;AAChB,WAAK,SAAS,QAAQ,CAAC,UAAS;AAC9B,cAAM,MAAM,IAAI,IAAI,IAAI,MAAM,KAAK,GAAG,IAAI;AAC1C,aAAK,SAAS,GAAG;AACjB,YAAI,SAAS,QAAQ,CAAC,WAAU;AAC9B,gBAAM,OAAO,IAAI,KAAK,IAAI,MAAM,MAAM,GAAG,GAAG;AAC5C,cAAI,SAAS,IAAI;AACjB,cAAI,MAAM,MAAM,GAAG,WAAW,QAAQ,CAAC,WAAU;AAC3C,kBAAM,OAAO,OAAO,QAAQ,WAAW,OAAO,OAAO;AACrD,mBAAO,QAAQ,CAAC,KAAK,MAAM,OAAO,IAAI;AACtC,mBAAO,OAAO;AACd,kBAAM,MAAM,IAAI,YAAY,QAAQ,IAAI;AACxC,iBAAK,SAAS,GAAG;AACjB,iBAAK,MAAM,IAAI,IAAI,GAAG,UAAU,QAAQ,CAAC,SAAQ;AAC/C,kBAAI,aAAa,IAAI;YACvB,CAAC;UAGP,CAAC;AACD,eAAK,YAAY,IAAI,MAAM,MAAM,CAAC;QACpC,CAAC;MACH,CAAC;IACH,CAAC;AACD,OAAG,0BAAyB;AAC5B,WAAO;EACT;EAEQ,4BAAyB;AAC/B,UAAM,EAAE,cAAc,aAAa,aAAY,IAAK;AACpD,SAAK,0BAA0B,MAAM,CAAC,EAAC,aAAY,GAAG,EAAC,YAAW,GAAG,EAAC,aAAY,CAAC,CAAC;EACtF;;;;;;;EAQQ,0BAA0B,QAAa,KAA6B;AAC1E,QAAI,IAAI,WAAW;AAAG;AACtB,UAAM,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,OAAO,QAAQ,IAAI,IAAG,CAAE;AAC5C,UAAM,QAAQ,OAAO,YAAY,EAAE;AACnC,QAAI,OAAO;AACT,WAAK,GAAG,IAAI;AACZ,WAAK,0BAA0B,OAAO,GAAG;IAC3C,OAAO;AACL,YAAM,eAAe,OAAO,SAAS,CAAC;AACtC,sBAAgB,KAAK,sBAAsB,OAAO,YAAY,YAAY,CAAC;IAC7E;EACF;;EAGO,cAAc,KAAe;AAClC,QAAI,YAAY,KAAK;AACnB,mBAAa,eAAe,IAAI;IAClC;AACA,QAAI,WAAW,KAAK;AAClB,mBAAa,cAAc,IAAI;IACjC;AACA,QAAI,YAAY,KAAK;AACnB,mBAAa,eAAe,IAAI;IAClC;EACF;EAEQ,iBAAc;AACpB,iBAAa,eAAe,KAAK,cAAc;AAC/C,iBAAa,cAAc,KAAK,aAAa;AAC7C,iBAAa,eAAe,KAAK,cAAc;EACjD;;;;ACpOI,IAAO,gBAAP,MAAoB;EAgBxB,YAAY,QAA8B;AACxC,SAAK,OAAO,OAAO;AACnB,SAAK,QAAQ,QAAQ,SAAS,OAAO;AACrC,SAAK,OAAO,OAAO,QAAQ;AAC3B,SAAK,OAAO,OAAO,QAAQ,GAAG,IAAI;AAClC,SAAK,UAAU,OAAO;AACtB,SAAK,WAAW,OAAO;AACvB,SAAK,OAAO,OAAO;AACnB,SAAK,WAAW,OAAO;AACvB,SAAK,WAAW,OAAO;AACvB,SAAK,QAAQ,OAAO;AACpB,SAAK,QAAQ,OAAO;AACpB,SAAK,SAAS,OAAO;AACrB,SAAK,iBAAiB,OAAO;AAC7B,SAAK,cAAc,OAAO,eAAe;EAC3C;;;;;;AElCE,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,EAAA;;;;;AACtB,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;;;;AAAjB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,UAAA;;;;;AAQnB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAIE,IAAA,qBAAA,WAAA,KAAA;AAFA,IAAA,qBAAA,UAAA,UAAA,EAAkB,cAAA,OAAA,IAAA;;;;;AAHtB,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,gEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAWH,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,qDAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;ADFjB,IAAO,oBAAP,MAAO,2BAA0B,aAA2B;EAblE,cAAA;;AAcE,SAAA,QAAQ;AAIA,SAAA,SAAS,WAAW,MAAM;;EAElC,WAAQ;AACN,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,KAAK,KAAK,IAAI;MACrB,aAAa,CAAC,KAAK,KAAK,aAAa,CAAC,WAAW,QAAQ,CAAC;MAC1D,SAAS,CAAC,KAAK,KAAK,SAAS,CAAC,WAAW,QAAQ,CAAC;MAClD,aAAa,CAAC,KAAK,KAAK,WAAW;MACnC,QAAQ,CAAC,KAAK,OAAO,KAAK,OAAK,EAAE,OAAO,KAAK,KAAK,MAAM,GAAG,CAAC,WAAW,QAAQ,CAAC;MAChF,oBAAoB,CAAC,CAAC,KAAK,KAAK,kBAAkB;MAClD,aAAa,CAAC,KAAK,KAAK,WAAW;KACpC;AAED,SAAK,WAAW;MACd,IAAI,cAAc,EAAC,MAAM,QAAQ,UAAU,MAAM,UAAU,KAAI,CAAC;MAChE,IAAI,cAAc,EAAC,MAAM,eAAe,OAAO,iBAAiB,UAAU,KAAI,CAAC;MAC/E,IAAI,cAAc,EAAC,MAAM,WAAW,UAAU,KAAI,CAAC;MACnD,IAAI,cAAc,EAAC,MAAM,eAAe,OAAO,gBAAgB,UAAU,KAAI,CAAC;MAC9E,IAAI,cAAc;QAChB,MAAM;QAAU,MAAM;QACtB,UAAU;QAAM,SAAS,GAAG,KAAK,MAAM;OACxC;MACD,IAAI,cAAc,EAAC,MAAM,sBAAsB,OAAO,uBAAuB,MAAM,SAAQ,CAAC;MAC5F,IAAI,cAAc,EAAC,MAAM,eAAe,OAAO,oBAAoB,MAAM,QAAQ,OAAO,UAAS,CAAC;;EAEtG;EAEA,WAAQ;AACN,SAAK,YAAY;AACjB,QAAI,KAAK,KAAK,OAAO;AACnB,YAAM,MAAM,KAAK,KAAK;AACtB,YAAM,UAAe,gDAChB,KAAK,KAAK,eAAc,IACxB,MAFgB;QAGnB,QAAQ,IAAI,QAAQ,OAAO,IAAI;QAC/B,oBAAoB,CAAC,IAAI;;AAE3B,WAAK,OAAO,KAAK,OAAc;AAC/B,WAAK,IAAI,MAAM,OAAO;IACxB;EACF;;;;;8HA7CW,kBAAiB,IAAA,qBAAjB,kBAAiB;MAAA;IAAA,GAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,cAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,YAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACtB9B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,QAAA,qBAAA,GAAA,iCAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,iCAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,iBAAS,IAAA,IAAA,MAAA;QAAW,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAEnG,QAAA,oBAAA,GAAA,IAAA;AAEA,QAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,OAAA,CAAA;AAErB,QAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,gBAAA,CAAA;AAQF,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA4B,IAAA,UAAA,CAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,iBAAS,IAAA,SAAA;QAAU,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EAED;;;AA1BA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;AAKD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA;AAYyC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,KAAA,SAAA;;;MDPzE;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;MACA;IAAS,GAAA,eAAA,GAAA,iBAAA,EAAA,CAAA;EAAA;;;6EAGJ,mBAAiB,EAAA,WAAA,qBAAA,UAAA,kFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEbxB,IAAO,wBAAP,MAAO,+BAA8B,gBAAe;EAD1D,cAAA;;AAEW,SAAA,UAAU,GAAG,YAAY,QAAQ,UAAU;AAC5C,SAAA,YAAY,GAAG,YAAY,QAAQ,UAAU;AAC7C,SAAA,gBAAgB,GAAG,YAAY,QAAQ,aAAa;;EACrD,QAAQ,aAAqB,QAAgB,SAAe;AAEjE,QAAI,MAAM,GAAG,KAAK,aAAa,yBAAyB,WAAW,IAAI,MAAM;AAC7E,WAAO,KAAK,IAAoC,KAAK,EAAC,QAAO,CAAC,EAC3D,KAAK,IAAI,SAAe,GAAG,aAAa,GAAG,CAAC,CAAC;EAClD;EAEO,gBAAgB,eAAuB,WAA4B,IAAE;AAC1E,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAa,KAAK,MAAM,EAAC,MAAM,eAAe,UAAU,SAAS,SAAQ,EAAE,CAAC;EAC1F;EAEO,WAAW,MAAuB,MAAuB;AAC9D,UAAM,MAAM,GAAG,KAAK,aAAa,eAAe,IAAI,IAAI,IAAI;AAC5D,WAAO,KAAK,KAAc,KAAK,MAAM,IAAI;EAC3C;EAEO,OAAO,SAAyB,WAAmB;AACxD,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,EAAC,IAAI,QAAO,GAAG,MAAM,aAAa,EAAC,WAAW,OAAM,CAAC;EACtF;EAEO,WAAW,KAA4B,IAAgB,WAAmB;AAC/E,UAAM,EAAC,KAAK,QAAO,IAAI,KAAK,oBAAoB,KAAK,IAAI,MAAM;AAC/D,UAAM,UAAe,EAAC,aAAa,GAAG,YAAW;AACjD,QAAI,WAAW;AACb,cAAQ,YAAY;IACtB;AACA,WAAO,KAAK,KAAa,KAAK,SAAS,MAAM,OAAO;EACtD;EAEO,gBAAgB,KAAwB;AAC7C,QAAI,UAAU;AACd,QAAI,MAAM;AACV,QAAI,YAAY,KAAK;AACnB,YAAM,GAAG,KAAK,aAAa;AAC3B,gBAAU;QACR,QAAQ,IAAI;QACZ,OAAO,IAAI,SAAS,IAAI,UAAQ,IAAI,SAAS,IAAI,EAAE,KAAK;;IAE5D,WAAW,WAAW,KAAK;AACzB,YAAM,GAAG,KAAK,aAAa;AAC3B,gBAAU;QACR,OAAO,IAAI;QACX,QAAQ,IAAI,SAAS,IAAI,UAAQ,IAAI,SAAS,IAAI,EAAE,MAAM;;IAE9D,WAAW,YAAY,KAAK;AAC1B,cAAQ,IAAI,GAAG;AACf,YAAM,GAAG,KAAK,aAAa;AAC3B,gBAAU;QACR,QAAQ,IAAI;QACZ,SAAS,IAAI,SAAS,WAAW,QAAQ,SAAO,IAAI,QAAQ,IAAI,SAAO,IAAI,WAAW,IAAI,SAAO,IAAI,KAAK,CAAC,CAAC;;IAEhH;AACA,QAAI,CAAC;AAAK,aAAO;AACjB,WAAO,KAAK,KAAU,KAAK,OAAO;EAEpC;EAEO,iBAAiB,SAAY;AAClC,QAAI,MAAM,GAAG,KAAK,aAAa;AAC/B,WAAO,KAAK,KAAc,KAAK,OAAO;EACxC;EAEO,mBAAmB,IAAU;AAClC,UAAM,MAAM,GAAG,KAAK,aAAa,uBAAuB,EAAE;AAC1D,WAAO,KAAK,KAAc,KAAK,IAAI;EACrC;EAEK,aAAa,KAA0B,IAAc;AACxD,UAAM,eAAe,IAAI,YAAW;AACpC,UAAM,EAAC,KAAK,QAAO,IAAI,KAAK,oBAAoB,cAAc,IAAI,QAAQ;AAE1E,UAAM,cAAc,IAAI,MAAM,GAAG,EAAE,IAAG;AACtC,UAAM,SAAS,CAAC,UAAkB,SAClC,KAAK,KAAc,GAAG,KAAK,aAAa,IAAI,QAAQ,IAAG,MAAM,IAAI;AAEjE,QAAI,aAAa,SAAS,MAAM,GAAG;AAC/B,YAAM,SAAS,SAAS,OAAO,QAAQ;AACvC,YAAM,QAAQ,SAAS,MAAM,SAAS,QAAQ,GAAG;AACjD,YAAM,WAAW;AACjB,aAAO,OAAO,UAAU,EAAE,QAAQ,MAAK,CAAE;IAE3C,WAAW,aAAa,SAAS,KAAK,GAAG;AACvC,YAAM,SAAS,SAAS,OAAO,SAAS,SAAS,GAAG;AACpD,YAAM,QAAQ,SAAS,MAAM,OAAO;AACpC,YAAM,WAAW;AACjB,aAAO,OAAO,UAAU,EAAE,OAAO,OAAM,CAAE;IAE3C,OAAO;AACL,aAAO,KAAK,KAAc,KAAK,SAAS,MAAM,EAAE,aAAa,GAAG,YAAW,CAAE;IAC/E;EAEJ;EAGO,kBAAkB,MAA6B,IAAY,MAAc,SAAiB,aAAmB;AAClH,UAAM,MAAM,GAAG,KAAK,aAAa,cAAc,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,OAAO;AAC5E,WAAO,KAAK,IAAa,KAAK,MAAM,EAAC,YAAW,CAAC;EACnD;EAEO,eAAe,OAAe,QAAc;AACjD,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,MAAM,EAAC,OAAO,OAAM,CAAC;EACtD;EAEO,eAAe,QAAgB,QAAc;AAClD,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,MAAM,EAAC,QAAQ,OAAM,CAAC;EACvD;EAEO,eAAe,OAAe,QAAc;AACjD,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,MAAM,EAAC,OAAO,OAAM,CAAC;EACtD;EAEO,kBAAkB,MAAY;AACnC,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,IAAkB,KAAK,EAAC,KAAI,GAAG,EAAC,WAAW,YAAW,CAAC,EAAE,KAAK,YAAY,CAAC,CAAC;EAC1F;EAEO,oBAAoB,MAAY;AACrC,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,IAAkB,KAAK,EAAC,KAAI,GAAG,EAAC,WAAW,YAAW,CAAC,EAAE,KAAK,YAAY,CAAC,CAAC;EAC1F;EAEO,eAAe,WAAiB;AACrC,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,IAAkB,KAAK,EAAC,UAAS,GAAG,EAAC,WAAW,YAAW,CAAC,EAAE,KAAK,YAAY,CAAC,CAAC;EAC/F;EAEO,SAAS,aAAmB;AACjC,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,IAAsC,KAAK,MAAM,EAAC,aAAa,WAAW,YAAW,CAAC,EAAE,KAAK,YAAY,CAAC,CAAC;EACzH;EAEO,gBAAa;AAClB,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,IAAsB,GAAG;EACvC;EAEO,mBAAgB;AACrB,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,IAAsB,GAAG;EACvC;EAEO,YAAY,aAAmB;AACpC,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,IAAoC,KAAK,MAAM,EAAC,YAAW,CAAC;EAC1E;EAEO,OAAO,GAAS;AACrB,UAAM,MAAM,GAAG,KAAK,aAAa,eAAe,CAAC;AACjD,WAAO,KAAK,IAAY,GAAG;EAC7B;EAEO,eAAe,SAAwB;AAC5C,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,OAAO;EACxC;EAEQ,WAAW,OAAe,QAAc;AAC9C,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,MAAM,EAAC,OAAO,OAAM,CAAC;EACtD;EAEO,UAAU,OAAe,MAAY;AAC1C,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,MAAM,EAAC,OAAO,KAAI,CAAC;EACpD;EAEQ,WAAW,aAAqB,UAAiB;AACvD,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,MAAM,EAAC,SAAQ,GAAG,EAAC,YAAW,CAAC;EAChE;EACQ,UAAU,aAAqB,UAAmB,SAAc;AACtE,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,MAAM,EAAC,UAAS,QAAO,GAAG,EAAC,YAAW,CAAC;EACxE;EAEO,gBAAgB,OAAe,SAAe;AACnD,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,MAAM,EAAC,OAAO,QAAO,CAAC;EACvD;EACO,eAAe,QAAgB,QAAc;AAClD,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,KAAc,KAAK,MAAM,EAAC,QAAQ,OAAM,CAAC;EACvD;EAEO,uBAAuB,QAAa,MAAS;AAClD,QAAI,MAAM,GAAG,KAAK,aAAa;AAC/B,WAAO,KAAK,IAAS,KAAI,EAAC,QAAQ,KAAI,GAAG,MAAM,IAAI;EACrD;EAEO,wBAAwB,QAAa,MAAS;AACnD,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,IAAS,KAAI,EAAC,QAAQ,KAAI,CAAC;EACzC;EAEO,uBAAuB,QAAa,MAAS;AAClD,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,IAAS,KAAI,EAAC,QAAQ,KAAI,CAAC;EACzC;EACO,cAAc,OAAK;AACxB,UAAM,MAAM,GAAG,KAAK,aAAa;AAEjC,WAAO,KAAK,KAAc,KAAI,KAAK;EACrC;EACQ,oBAAoB,KAA4B,IAAgB,QAAyB;AAC/F,UAAM,UAAU,GAAG;AACnB,QAAI,OAAO;AACX,QAAI,YAAY,KAAK;AACnB,aAAO,GAAG,MAAM;AAChB,cAAQ,OAAO;IACjB,WACS,WAAW,KAAK;AACvB,aAAO,GAAG,MAAM;AAChB,cAAQ,MAAM;IAChB,WACS,YAAY,KAAK;AACxB,aAAO,GAAG,MAAM,OAAO,WAAW,SAAS,QAAQ,EAAE;AACrD,cAAQ,OAAO;IACjB,WACS,aAAa,KAAK;AACzB,aAAO,GAAG,MAAM;AAChB,cAAQ,aAAa;IACvB;AACA,UAAM,MAAM,GAAG,KAAK,aAAa,IAAI,IAAI;AACzC,WAAO,EAAC,SAAS,IAAG;EACtB;EACO,gBAAgB,MAA6B,IAAY,MAAc,SAAiB,aAAmB;AAChH,UAAM,MAAM,GAAG,KAAK,aAAa,kBAAkB,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,OAAO;AAChF,WAAO,KAAK,IAAa,KAAK,MAAM,EAAC,YAAW,CAAC;EACnD;EAEO,iBAAiB,OAAe,SAAe;AACpD,UAAM,MAAM,GAAG,KAAK,aAAa,6BAA6B,KAAK,YAAY,OAAO;AACtF,WAAO,KAAK,iBAA0B,KAAK,OAAO,OAAO;EAC3D;EAEO,sBAAsB,OAAK;AAChC,UAAM,MAAM,GAAG,KAAK,aAAa;AACjC,WAAO,KAAK,kBAA2B,KAAK,KAAK;EACnD;EAEO,eAAe,YAAoB,UAAkB,YAAoB,MAAS;AACvF,QAAI,UAAyB;AAE7B,YAAQ,YAAY,YAAW,GAAI;MACjC,KAAK;AACH,kBAAU,YAAY,QAAQ;AAC9B;MACF,KAAK;AACH,kBAAU,YAAY,QAAQ;AAC9B;MACF,KAAK;AACH,kBAAU,YAAY,QAAQ;AAC9B;MACF;AACE,eAAO;IACX;AAEA,UAAM,MAAM,GAAG,OAAO,IAAI,QAAQ;AAClC,YAAQ,YAAY,YAAW,GAAI;MACjC,KAAK;AACH,eAAO,KAAK,IAAI,KAAK,EAAE,QAAQ,KAAI,CAAE;MACvC,KAAK;AACH,eAAO,KAAK,KAAK,KAAK,IAAI;MAC5B,KAAK;AACH,eAAO,KAAK,OAAO,KAAK,EAAE,KAAI,CAAE;MAClC;AACE,eAAO;IACX;EACF;EACK,aAAa,MAAY;AAC5B,UAAM,MAAM,GAAG,YAAY,QAAQ,UAAU;AAC7C,WAAO,KAAK,KAAU,KAAI,MAAK,EAAC,KAAI,CAAC;EACvC;;;;;sIAzRW,sBAAqB,IAAA,qBAArB,sBAAqB;MAAA;IAAA,GAAA;EAAA;;4EAArB,wBAAqB,SAArB,uBAAqB,WAAA,YADT,OAAM,CAAA;EAAA;;;;;;AEN3B,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,EAAA;;;;;AACtB,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;;;;AAAjB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,UAAA;;;;;AAQnB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAIE,IAAA,qBAAA,WAAA,KAAA;AAFA,IAAA,qBAAA,UAAA,UAAA,EAAkB,cAAA,OAAA,IAAA;;;;;AAHtB,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,iEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;;AAOL,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyC,GAAA,OAAA,EAAA,EACM,GAAA,SAAA,EAAA;AACd,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;AAC5C,IAAA,yBAAA,GAAA,SAAA,EAAA;AAA6B,IAAA,iBAAA,GAAA,gBAAA;AAAc,IAAA,uBAAA,EAAQ;AAGrD,IAAA,yBAAA,GAAA,mBAAA,EAAA;AASE,IAAA,qBAAA,OAAA,SAAA,kEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAO,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,UAAA,SAAA,qEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChB,OAAA,cAAA,MAAA,CAAqB;IAAA,CAAA,EAAC,WAAA,SAAA,sEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACrB,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA,EAAC,eAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACnB,OAAA,cAAA,MAAA,CAAqB;IAAA,CAAA;AAGtC,IAAA,uBAAA,EAAkB;;;;AAdhB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,EAAkB,mBAAA,OAAA,qBAAA,EACuB,eAAA,OAAA,YAAA,EACb,cAAA,OAAA,WAAA,EACF,YAAA,KAAA,EACR,aAAA,OAAA,SAAA,EAGK,aAAA,IAAA;;;;;AAezB,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,sDAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;ADjBjB,IAAO,qBAAP,MAAO,4BAA2B,aAA8B;EAkBpE,YACE,KACA,IACQ,KACS,QACA,KACT,OAA4B;AAEpC,UAAM,KAAK,EAAE;AALL,SAAA,MAAA;AACS,SAAA,SAAA;AACA,SAAA,MAAA;AACT,SAAA,QAAA;AAvBV,SAAA,cAAoB;AACb,SAAA,QAAQ;AAEP,SAAA,cAAc,WAAW,OAAO;AAChC,SAAA,cAAY,WAAW,WAAW;AAClC,SAAA,SAAS,WAAW,MAAM;AAK1B,SAAA,uBAAuB,CAAA;AACvB,SAAA,eAAc,CAAA;AACtB,SAAA,WAAW,CAAA;AACX,SAAA,wBAAwB,CAAA;AACxB,SAAA,2BAA2B,CAAA;AAC3B,SAAA,gBAAgB;AAyRhB,SAAA,eAAe,CAAC,SAAqB,KAAK;AAC1C,SAAA,cAAc,CAAC,SAAqB,KAAK;AAEzC,SAAA,YAAY,CAAC,SACb,KAAK,IAAI,eAAe,KAAK,OAAO,SAAQ,GAAI,KAAK,OAAO,SAAQ,CAAE,EAAE,KACtE,IAAI,CAAC,YAAW;AACd,UAAI,CAAC,SAAS;AACZ,aAAK,OAAO,QAAQ,4BAA4B;MAClD;IACF,CAAC,CAAC;AAcJ,SAAA,iBAAiB,CAAC,UAAuB;AACvC,WAAK,wBAAwB;AAC7B,WAAK,gBAAgB;IACvB;AAEA,SAAA,kBAAkB,MAAK;AACrB,WAAK,SAAS,QAAQ,CAAC,SAAQ;AAC7B,cAAM,aAAa,KAAK,sBAAsB,KAAK,CAAC,SAAS,KAAK,QAAQ,KAAK,GAAG;AAClF,aAAK,WAAW;AAChB,aAAK,WAAW;MAClB,CAAC;AACD,WAAK,WAAW,KAAK;IACvB;AAjTE,SAAK,cAAc;MACjB,EAAC,aAAa,WAAW,SAAS,CAAC,SAAkB,KAAK,gBAAgB,IAAI,EAAC;MAC/E,EAAC,aAAa,kBAAkB,SAAS,CAAC,cAAsB,KAAK,uBAAuB,SAAS,EAAC;;EAE1G;EAEA,iBAAc;AACZ,SAAK,WAAW,KAAK,eAAc;AACnC,SAAK,wBAAwB,KAAK,SAAS,OAAO,UAAQ,KAAK,QAAQ,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM;AAE3G,SAAK,kBAAkB,KAAK,IAAI,kBAAkB,KAAK,OAAO,OAAO,KAAK,SAAQ,CAAE,EACjF,KAAK,KAAK,kBAAkB,cAAc,CAAC;AAC9C,SAAK,oBAAoB,KAAK,IAAI,oBAAoB,KAAK,OAAO,OAAO,KAAK,SAAQ,CAAE,EACrF,KAAK,KAAK,kBAAkB,gBAAgB,CAAC;AAChD,SAAK,qBAAqB,KAAK,IAAI,eAAe,KAAK,OAAO,OAAO,SAAS,EAC3E,KAAK,KAAK,kBAAkB,sBAAsB,CAAC;EACxD;EAEA,WAAQ;AACN,UAAM,aAAa,CAAC,GAAG,eAAe;AACtC,QAAI,KAAK,WAAW;AAClB,YAAM,UAAU,OAAO,OAAO,KAAK,OAAO,KAAK,WAAW,EACvD,QAAQ,UAAQ,OAAO,OAAO,KAAK,WAAW,CAAC;IAEpD;AAAC;AACD,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,KAAK,KAAK,MAAM,EAAC,YAAY,UAAU,OAAM,CAAC;MACrD,aAAa,CAAC,KAAK,KAAK,aAAa,CAAC,WAAW,QAAQ,CAAC;MAC1D,SAAS,CAAC,KAAK,KAAK,WAAW,KAAK,OAAO,SAAS,CAAC,WAAW,QAAQ,CAAC;MACzE,SAAS,CAAC,KAAK,YAAY,KAAK,OAAK,EAAE,QAAQ,KAAK,KAAK,OAAO,GAAG,CAAC,WAAW,QAAQ,CAAC;MACxF,QAAQ,CAAC,KAAK,OAAO,KAAK,OAAK,EAAE,QAAQ,KAAK,KAAK,UAAU,OAAO,OAAO,GAAG,CAAC,WAAW,QAAQ,CAAC;MACnG,WAAW,CAAC,KAAK,KAAK,WAAW,CAAC,WAAW,QAAQ,CAAC;MACtD,UAAU,CAAC,KAAK,KAAK,QAAQ;MAC7B,cAAc,CAAC,KAAK,KAAK,YAAY;MACrC,gBAAgB,CAAC,KAAK,KAAK,cAAc;MACzC,qBAAqB,CAAC,KAAK,KAAK,mBAAmB;MACnD,sBAAsB,CAAC,KAAK,KAAK,oBAAoB;KACtD;AAED,SAAK,WAAW;MACd,IAAI,cAAc,EAAC,MAAM,QAAQ,UAAU,CAAC,KAAK,WAAW,UAAU,KAAI,CAAC;MAC3E,IAAI,cAAc,EAAC,MAAM,eAAe,OAAO,iBAAiB,UAAU,KAAI,CAAC;MAC/E,IAAI,cAAc,EAAC,MAAM,WAAW,UAAU,KAAI,CAAC;MACnD,IAAI,cAAc;QAChB,MAAM;QAAW,OAAO;QAAQ,MAAM;QACtC,UAAU;QAAM,SAAS,GAAG,KAAK,OAAO,eAAa,SAAQ,KAAK,cAAa,KAAK,WAAW;OAChG;MACD,IAAI,cAAc;QAChB,MAAM;QAAU,MAAM;QACtB,UAAU;QAAM,SAAS,GAAG,KAAK,MAAM;OACxC;;;;;MAKD,IAAI,cAAc;QAChB,MAAM;QAAgB,OAAO;QAAmB,MAAM;QAAY,UAAU;QAC5E,SAAS,KAAK;QAAiB,MAAM,KAAK,KAAK,WAAW,QAAQ,UAAU;OAC7E;MACD,IAAI,cAAc;QAChB,MAAM;QAAkB,OAAO;QAAsB,MAAM;QAAY,UAAU;QACjF,SAAS,KAAK;QAAmB,MAAM,KAAK,KAAK,WAAW,QAAQ,YAAY;OACjF;MACD,IAAI,cAAc;QAChB,MAAM;QAAwB,OAAO;QAAuB,MAAM;QAAY,UAAU;QACxF,SAAS,KAAK;QAAoB,MAAM,KAAK,KAAK,WAAW,QAAQ,YAAY;OAClF;MACD,IAAI,cAAc;QAChB,MAAM;QAAuB,OAAO;QAAsB,MAAM;QAAY,UAAU;QACtF,SAAS,GAAG,CAAA,CAAE;QAAG,MAAM,KAAK,KAAK,WAAW,QAAQ,YAAY;OACjE;MACD,IAAI,cAAc,EAAC,MAAM,aAAa,OAAO,qBAAqB,UAAU,KAAI,CAAC;MACjF,IAAI,cAAc,EAAC,MAAM,YAAY,OAAO,oBAAoB,MAAM,QAAQ,OAAO,UAAS,CAAC;;AAGjG,SAAK,IAAI,wBAAwB,KAAK,OAAO,KAAK,aAAa,QAAQ,KAAK,OAAO,KAAK,IAAI,EAAE,UAAU,OAAG;AACzG,WAAK,uBAAsB,EAAE,gBAAgB,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM;AAE/E,YAAM,UAAU,KAAK,WAAU;AAC/B,WAAK,WAAU;IAGjB,CAAC;AAGD,SAAK,KAAK,IAAI,MAAM,EAAE,aAAa,UAAU,UAAM;AACjD,UAAG,KAAK,aAAa,QAAQ,KAAK,UAAQ,KAAM,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,WAAW,KACxF,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,SAAS,GAAE;AAC5C,aAAK,IAAI,kBAAkB,OAAM,GAAE,MAAK,KAAK,OAAO,KAAK,SAAQ,KAAK,OAAO,KAAK,WAAW,EAAE,UAAU,aAAS;AAChH,cAAG,SAAQ;AACP,kBAAM,cAAc,KAAK,KAAK,IAAI,MAAM;AACxC,wBAAY,UAAU;cACtB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACF,CAAC;EAGH;EAEQ,iBAAc;AACpB,QAAI,OAAmB,CAAA;AACvB,UAAM,QAAQ,KAAK,KAAK,SAAS,CAAA;AAEjC,WAAO,OAAO,KAAK,OAAO,KAAK,WAAW,EAAE,QAAQ,UAAO;AACzD,aAAO,OAAO,KAAK,WAAW,EAAE,OAAO,SAAO,CAAC,IAAI,MAAM,EAAE,QAAQ,SAAM;AACvE,eAAO,OAAO,IAAI,WAAW,EAC1B,OAAO,UAAQ,CAAC,KAAK,MAAM,EAC3B,QAAQ,UAAO;AACd,gBAAM,WAAW,MAAM,KAAK,CAACC,UAASA,MAAK,UAAU,KAAK,EAAE,KAAK,KAAK,MAAM,UAAU,KAAK,UAAQ,SAAS,KAAK,EAAE;AAGnH,gBAAM,OAAO;YACX,KAAK,KAAK;YACV,QAAQ,KAAK;YACb,OAAO,GAAG,KAAK,WAAW,KAAK,KAAK,IAAI;YACxC,QAAQ,KAAK,OAAO;YACpB,QAAQ,GAAG,KAAK,IAAI,MAAM,IAAI,WAAW;YACzC,UAAU,IAAI;YACd;YAAU,UAAU;;AACtB,eAAK,KAAK,IAAI;QAClB,CAAC;MACH,CAAC;IACH,CAAC;AACD,WAAO;EACT;EAEQ,aAAU;AAChB,QAAI,OAAmB,CAAA;AACvB,UAAM,QAAQ,KAAK,KAAK,SAAS,CAAA;AAEjC,SAAK,sBAAsB,QAAQ,CAAC,MAAM,MAAK;AAC7C,YAAM,QAAQ,MAAM,KAAK,CAACA,UAASA,MAAK,UAAU,KAAK,QAAQ,KAAK,KAAK,MAAM,UAAU,KAAK,UAAQ,SAAS,KAAK,QAAQ;AAC5H,YAAM,OAAO;QACX,KAAK,KAAK;QACV,OAAO,KAAK;QACZ,QAAQ,KAAK;QACb,QAAQ,KAAK,OAAO;QACpB,QAAQ,GAAG,KAAK,OAAO,IAAI,MAAM,KAAK,OAAO,OAAO,aAAa,IAAI;QACrE,UAAU,KAAK,OAAO,OAAO,aAAa;QAC1C,UAAU;QACV,UAAU;;AAGZ,WAAK,KAAK,IAAI;IAChB,CAAC;AAED,WAAO;EACT;EAES,uBAAoB;AAC3B,QAAI,OAAmB,CAAA;AACvB,UAAM,QAAQ,KAAK,KAAK,SAAS,CAAA;AAEjC,SAAK,yBAAyB,QAAQ,CAAC,MAAM,MAAK;AAEhD,YAAM,QAAQ,MAAM,KAAK,CAACA,UAASA,MAAK,UAAU,KAAK,QAAQ,KAAK,KAAK,MAAM,UAAU,KAAK,UAAQ,SAAS,KAAK,QAAQ;AAC5H,YAAM,OAAO;QACX,KAAK,KAAK;QACV,OAAO,KAAK;QACZ,QAAQ,KAAK;QACb,QAAQ,KAAK,OAAO;QACpB,QAAQ,GAAG,KAAK,OAAO,IAAI,MAAM,KAAK,OAAO,OAAO,aAAa,IAAI;QACrE,UAAU,KAAK,OAAO,OAAO,aAAa;QAC1C,UAAU;QACV,UAAU;;AAGZ,WAAK,KAAK,IAAI;IAChB,CAAC;AAED,WAAO;EACT;EAGA,gBAAa;AAEX,eAAW,MAAK;AACd,YAAM,MAAM,KAAK,YAAY,KAAK,CAAC,EAAC,IAAG,MAAM,QAAQ,KAAK,KAAK,OAAO;AACtE,WAAK,EAAE,QAAQ,WAAW,GAAG;IAC/B,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,YAAY;AACjB,QAAI,KAAK,KAAK,OAAO;AACnB,YAAM,MAAM,KAAK,KAAK;AACtB,YAAM,UAAgB,iCACjB,MADiB;QAEpB,QAAQ,KAAK,OAAO;QACpB,OAAO,KAAK,KAAK;QACjB,SAAS,IAAI,SAAS,OAAO,IAAI;QACjC,QAAQ,IAAI,QAAQ,OAAO,IAAI;QAC/B,UAAU,KAAK,MAAM,YAAY,CAAA;QACjC,IAAI,KAAK,MAAM,MAAM,IAAI;QACzB,MAAM,KAAK,MAAM,QAAQ,IAAI;QAC7B,cAAc,IAAI,cAAc,OAAO,IAAI;QAC3C,gBAAgB,IAAI,gBAAgB,OAAO,IAAI;QAC/C,qBAAqB,IAAI,qBAAqB,OAAO,IAAI;QACzD,sBAAsB,IAAI,sBAAsB,OAAO,IAAI;QAC3D,YAAY,KAAK,OAAO,KAAK;;AAG/B,YAAM,SAAS;QACb,OAAM,KAAK,KAAK;QAChB,SAAS,KAAK,gBAAgB,KAAK,sBAAsB,IAAI,CAAC,EAAE,OAAM,MAAO,MAAM,EAAE,SAAQ,IAAK;;AAEpG,YAAM,eAAe;QACjB,OAAM,KAAK,KAAK;QAChB,WAAY,KAAK,aAAa,SAAS,IAAI,KAAK,aAAa,KAAK,GAAG,GAAG,SAAQ,IAAK;;AAEzF,WAAK,OAAO,KAAK,OAAO;AACxB,WAAK,IAAI,MAAM,EAAE,SAAS,QAAS,aAAY,CAAG;IACpD;EACF;EAEQ,gBAAgB,KAAQ;AAC9B,UAAM,KAAK,OAAO;AAClB,SAAK,cAAY;AACjB,QAAI,QAAQ,QAAQ,YAAY;AAC9B,WAAK,EAAE,aAAa,cAAc,WAAW,QAAQ;AACrD,WAAK,EAAE,eAAe,gBAAe;AACrC,WAAK,EAAE,oBAAoB,gBAAe;AAC1C,WAAK,EAAE,qBAAqB,gBAAe;IAE7C,WAAW,QAAQ,QAAQ,cAAc;AACvC,WAAK,EAAE,aAAa,gBAAe;AACnC,WAAK,EAAE,eAAe,cAAc,WAAW,QAAQ;AACvD,WAAK,EAAE,oBAAoB,cAAc,WAAW,QAAQ;AAC5D,WAAK,EAAE,qBAAqB,cAAc,WAAW,QAAQ;IAG/D;AACA,QAAG,QAAM,QAAQ,MAAK;AACpB,WAAK,cAAY;IACnB;AACA,SAAK,KAAK,uBAAsB;EAClC;EAEQ,uBAAuB,WAAc;AAC3C,gBAAY,WAAW,OAAO;AAC9B,UAAM,UAAU,KAAK,SAAS,KAAK,OAAK,EAAE,SAAS,qBAAqB;AACxE,YAAQ,UAAU,KAAK,IAAI,eAAe,SAAS,EAChD,KAAK,KAAK,kBAAkB,qBAAqB,CAAC;AACrD,SAAK,EAAE,oBAAoB,MAAK;EAClC;EAEQ,kBAAkB,SAAmB;AAC3C,WAAO,CAAC,WAA6B;AACnC,aAAO,OAAO,KACZ,IAAI,UAAQ,YAAY,MAAM,SAAS,OAAO,CAAC,GAC/C,IAAI,UAAO;AACT,cAAM,MAAM,KAAK,KAAK,CAAC,EAAC,IAAG,MAAM,QAAQ,KAAK,KAAK,OAAO,CAAC;AAC3D,aAAK,EAAE,OAAO,EAAE,WAAW,GAAG;MAChC,CAAC,CAAC;IAEN;EACF;EAEQ,KAAK,aAAyB,WAAc;AAClD,WAAO,KAAK,KAAK,IAAI,WAAW,EAAE,aAAa,KAC7C,UAAU,KAAK,KAAK,IAAI,WAAW,EAAE,KAAK,GAC1C,IAAI,OAAK,GAAG,OAAO,CAAC,GACpB,IAAI,OAAK,MAAM,SAAS,CAAC;EAE7B;EAcA,WAAW,MAAgB;AACzB,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,IAAI;AACnE,SAAK,gBAAgB;AACrB,SAAK,gBAAe;EACtB;EACA,cAAc,MAAgB;AAC5B,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,CAAC,SAAS,KAAK,WAAW,KAAK,MAAM;AACpG,SAAK,gBAAgB;AACrB,SAAK,gBAAe;EACtB;EAgBA,cAAc,MAAS;AACjB,UAAM,YAAY,KAAK,MAAM,MAAM,aAAa;AAChD,UAAM,OAAO,YAAY,UAAU,CAAC,EAAE,KAAI,IAAK;AAC/C,UAAM,WAAW,KAAK,MAAM,MAAM,GAAG,EAAE,CAAC,EAAE,KAAI;AAC9C,SAAK,aAAa,KAAK,IAAI;AAC3B,SAAK,WAAW,KAAK,SAAS,OAAO,CAAC,SAAS,KAAK,WAAW,KAAK,MAAM;AAC1E,SAAK,gBAAgB;EAC3B;;;uCArVW,qBAAkB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,qBAAA,CAAA;IAAA;EAAA;;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,cAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,YAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,UAAA,GAAA,GAAA,CAAA,OAAA,IAAA,GAAA,QAAA,GAAA,CAAA,WAAA,YAAA,aAAA,YAAA,GAAA,OAAA,UAAA,WAAA,eAAA,SAAA,mBAAA,eAAA,cAAA,YAAA,aAAA,WAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AChC/B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,QAAA,qBAAA,GAAA,kCAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,kCAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,iDAAA;AAAA,iBAAS,IAAA,IAAA,MAAA;QAAW,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAEnG,QAAA,oBAAA,GAAA,IAAA;AAEA,QAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,OAAA,CAAA;AAErB,QAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,gBAAA,CAAA,EAA+C,IAAA,oCAAA,GAAA,GAAA,OAAA,CAAA;AAiCjD,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,iBAAS,IAAA,SAAA;QAAU,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,uCAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EAED;;;AAnDA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;AAKD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA;AASZ,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,WAAA;AA4BqD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,OAAA,KAAA,SAAA;;;MDvBzE;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;MACA;MACA;IAAS,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAGJ,oBAAkB,EAAA,WAAA,sBAAA,UAAA,oFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AG9B3B,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,EAAA;;;;;AACtB,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;;;;AAAjB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,UAAA;;;;;AAQnB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAIE,IAAA,qBAAA,WAAA,KAAA;AAFA,IAAA,qBAAA,cAAA,OAAA,IAAA,EAAmB,UAAA,UAAA;;;;;AAHvB,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,kEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAiCH,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,uDAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;ADfjB,IAAO,sBAAP,MAAO,6BAA4B,aAA8B;EAarE,YACE,KACA,IACiB,KACA,QACA,KAAmB;AAEpC,UAAM,KAAK,EAAE;AAJI,SAAA,MAAA;AACA,SAAA,SAAA;AACA,SAAA,MAAA;AAjBZ,SAAA,QAAQ;AACR,SAAA,iBAAiB,WAAW,UAAU;AACrC,SAAA,SAAS,WAAW,MAAM;AAE1B,SAAA,iBAAiB,WAAW,cAAc;AAE1C,SAAA,sBAAsB,CAAA;AACtB,SAAA,cAAc,CAAA;AACtB,SAAA,UAAU,CAAA;AACV,SAAA,wBAAwB,CAAA;AACxB,SAAA,gBAAgB;AAgMhB,SAAA,eAAe,CAAC,SAAqB,KAAK;AAC1C,SAAA,cAAc,CAAC,SAAqB,KAAK,QAAQ,KAAK;AAEtD,SAAA,YAAY,CAAC,SAAoB;AAC/B,YAAM,MAAM,KAAK,KAAK;AACtB,UAAG,IAAI,YAAY,OAAK,QAAU;AAChC,aAAK,OAAO,QAAQ,yCAAyC;AAC7D,eAAO,GAAG,KAAK;MACjB;AACA,UAAG,IAAI,YAAY,QAAM,UAAU,KAAK,QAAM,SAAQ;AACpD,aAAK,OAAO,QAAQ,gEAAgE;AACpF,eAAO,GAAG,KAAK;MACjB;AAED,aAAO,KAAK,IAAI,eAAe,KAAK,IAAI,SAAQ,IAAK,KAAK,KAAK,UAAU,IAAI,SAAQ,CAAE,EAAE,KACtF,IAAI,CAAC,YAAW;AACd,YAAI,CAAC,SAAS;AACZ,eAAK,OAAO,QAAQ,+BAA+B;QACrD;MACF,CAAC,CAAC;IAEN;AAaA,SAAA,iBAAiB,CAAC,UAAuB;AACvC,WAAK,wBAAwB;AAC7B,WAAK,gBAAgB;AACrB,WAAK,eAAc;IACrB;AAEA,SAAA,iBAAiB,MAAK;AACpB,WAAK,QAAQ,QAAQ,CAAC,SAAQ;AAC5B,cAAM,aAAa,KAAK,sBAAsB,KAAK,CAAC,SAAS,KAAK,SAAS,KAAK,IAAI;AACpF,aAAK,WAAW;AAChB,aAAK,WAAW;MAClB,CAAC;AACD,WAAK,UAAU,KAAK;IACtB;EArOA;EAEU,iBAAc;AACtB,SAAK,UAAU,KAAK,eAAc,KAAM,CAAA;AACxC,SAAK,wBAAwB,KAAK,QAAQ,OAAO,UAAQ,KAAK,QAAQ;EACxE;EAEA,WAAQ;AACN,UAAM,aAAa,CAAC,GAAG,eAAe;AAItC,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,KAAK,KAAK,MAAM,EAAC,YAAY,UAAU,OAAM,CAAC;MACrD,SAAS,CAAC,KAAK,KAAK,WAAW,KAAK,OAAO,SAAS,CAAC,WAAW,QAAQ,CAAC;MACzE,YAAY,CAAC,KAAK,eAAe,KAAK,OAAK,EAAE,QAAQ,KAAK,KAAK,UAAU,GAAG,CAAC,WAAW,QAAQ,CAAC;MACjG,QAAQ,CAAC,KAAK,OAAO,KAAK,OAAK,EAAE,OAAO,KAAK,KAAK,MAAM,GAAG,CAAC,WAAW,QAAQ,CAAC;MAChF,UAAU,CAAC,KAAK,KAAK,QAAQ;MAC7B,gBAAiB,CAAC,KAAK,gBAAgB,KAAK,OAAI,GAAG,OAAO,KAAK,MAAM,cAAc,GAAG,KAAM,CAAC,WAAW,QAAQ,CAAC;KACnH;AAEA,SAAK,WAAW;MACd,IAAI,cAAc,EAAC,MAAM,QAAQ,OAAO,QAAQ,UAAU,CAAC,KAAK,WAAW,UAAU,KAAI,CAAC;MAC1F,IAAI,cAAc,EAAC,MAAM,WAAW,OAAO,WAAW,UAAU,KAAI,CAAC;MACrE,IAAI,cAAc;QAChB,MAAM;QAAc,OAAO;QAAe,MAAM;QAChD,UAAU;QAAM,SAAS,GAAG,KAAK,cAAc;OAChD;MACD,IAAI,cAAc;QAChB,MAAM;QAAU,OAAO;QAAU,MAAM;QAAY,UAAU;QAC7D,SAAS,GAAG,KAAK,MAAM;OACxB;MACD,IAAI,cAAc,EAAC,MAAM,YAAY,OAAO,oBAAoB,MAAM,QAAQ,OAAO,UAAS,CAAC;MAC/F,IAAI,cAAc;QAAC,MAAK;QAAkB,OAAM;QAA0B,MAAK;QAAS,UAAU;QAClG,SAAS,GAAG,KAAK,cAAc;MAAC,CAAC;;AAGnC,SAAK,IAAI,uBAAuB,KAAK,KAAK,QAAQ,KAAK,OAAO,IAAI,EAAE,UAAU,OAAG;AAC/E,WAAK,sBAAqB;AAC1B,YAAM,SAAS,KAAK,UAAS;AAC7B,WAAK,UAAS;IAChB,CAAC;AAGD,SAAK,KAAK,IAAI,MAAM,EAAE,aAAa,UAAU,UAAM;AACjD,UAAG,KAAK,aAAa,QAAQ,KAAK,UAAQ,KAAM,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,WAAW,KACxF,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,SAAS,GAAE;AAC5C,aAAK,IAAI,kBAAkB,QAAO,GAAE,MAAK,KAAK,OAAO,KAAK,SAAQ,KAAK,OAAO,KAAK,WAAW,EAAE,UAAU,aAAS;AACjH,cAAG,SAAQ;AACP,kBAAM,cAAc,KAAK,KAAK,IAAI,MAAM;AACxC,wBAAY,UAAU;cACtB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACF,CAAC;AAED,SAAK,KAAK,IAAI,YAAY,EAAE,aAAa,UAAU,QAAI;AACrD,UAAG,GAAG,KAAK,EAAE,SAAO,GAAE;AACpB,aAAK,IAAI;UACP;UACA,KAAK,KAAK,UAAU;;UACpB,GAAG,KAAK;UACR,KAAK,OAAO,KAAK;UACjB,KAAK,OAAO,KAAK;QAAW,EAC5B,UAAU,aAAU;AACpB,cAAI,SAAS;AACX,kBAAM,cAAc,KAAK,KAAK,IAAI,YAAY;AAC9C,yBAAa,UAAU;cACrB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACL;AACA,UAAG,IAAI,QAAM,QAAO;AAClB,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AACjD,oBAAY,UAAU,IAAI;AAC1B,oBAAY,SAAS,IAAI;AAC1B,oBAAY,QAAO;MACrB,OAAK;AACH,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AAClD,oBAAY,OAAM;MACpB;IACA,CAAC;AACD,QAAG,KAAK,KAAK,MAAM,cAAa,MAAK;AACnC,UAAG,KAAK,KAAK,MAAM,WAAW,QAAM,QAAO;AAC1C,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AAC/C,oBAAY,UAAU,IAAI;AAC3B,oBAAY,QAAO;MACtB;IACD,OAEA;AACE,YAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AAC/C,kBAAY,UAAU,IAAI;AAC3B,kBAAY,QAAO;IACvB;AACC,SAAK,KAAK,IAAI,YAAY,EAAE,aAAa,UAAU,UAAM;AACxD,UAAG,MAAM,QAAM,QAAO;AACpB,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AACjD,oBAAY,UAAU,IAAI;AAC1B,oBAAY,SAAS,IAAI;AAC1B,oBAAY,QAAO;MACrB,OAAK;AACH,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AAClD,oBAAY,OAAM;MACpB;IACD,CAAC;EAEL;EAEQ,iBAAc;AACpB,QAAI,OAAmB,CAAA;AACvB,WAAO,OAAO,KAAK,OAAO,WAAW,EAAE,QAAQ,UAAO;AACpD,aAAO,OAAO,KAAK,WAAW,EAAE,OAAO,SAAO,CAAC,IAAI,MAAM,EAAE,QAAQ,SAAM;AACvE,cAAM,WAAW,KAAK,MAAM,OAAO,KAAK,CAACC,UAASA,MAAK,UAAU,IAAI,IAAI,KAAK,KAAK,MAAM,UAAU,KAAK,UAAQ,IAAI,SAAS,IAAI;AAGjI,cAAM,OAAO;UAAC,KAAK,IAAI,MAAM,SAAQ;UAAG;UAAS,UAAU;UAAU,MAAM,IAAI;UAAO,MAAK,IAAI;UAC7F,OAAM,GAAG,IAAI,WAAW,KAAK,IAAI,IAAI;UACrC,QAAQ,KAAK;UAAM,UAAU,KAAK;QAAE;AACtC,aAAK,KAAK,IAAI;MAChB,CAAC;IACH,CAAC;AACD,WAAO;EACT;EAEQ,YAAS;AACf,QAAI,OAAmB,CAAA;AACvB,UAAM,QAAQ,KAAK,KAAK,SAAS,CAAA;AAEjC,SAAK,oBAAoB,QAAQ,CAAC,KAAK,MAAK;AAC1C,YAAM,QAAQ,KAAK,MAAM,OAAO,KAAK,CAACA,UAASA,MAAK,UAAU,IAAI,OAAO,KAAK,KAAK,MAAM,UAAU,KAAK,UAAQ,IAAI,YAAY,IAAI;AACpI,YAAM,OAAO;QACX,KAAK,IAAI;QACT,MAAK,IAAI;QACT,OAAO,IAAI;QACX,QAAQ,KAAK,KAAK;QAClB,UAAU,KAAK,KAAK;QACpB,UAAU;QACV,UAAU;QACV,MAAK,IAAI;;AAGX,WAAK,KAAK,IAAI;IAChB,CAAC;AAED,WAAO;EACT;EAEA,WAAQ;AACN,SAAK,YAAY;AACjB,QAAI,KAAK,KAAK,OAAO;AACnB,YAAM,MAAM,KAAK,KAAK;AACtB,YAAM,UAAiB,iCAClB,MADkB;QAErB,QAAQ,KAAK,OAAO;QACpB,QAAQ,KAAK,KAAK;QAClB,UAAU,KAAK,MAAM,YAAY,CAAA;QACjC,IAAI,KAAK,MAAM,MAAM,IAAI;QACzB,YAAY,IAAI,YAAY,OAAO,IAAI;QACvC,QAAQ,IAAI,QAAQ,OAAO,IAAI;QAC/B,gBAAiB,IAAI,gBAAgB;;AAEvC,YAAM,SAAS;QACb,QAAQ,KAAK,KAAK,UAAU;QAC5B,QAAQ,KAAK,gBAAgB,KAAK,sBAAsB,IAAI,CAAC,EAAE,IAAG,MAAO,GAAG,EAAE,SAAQ,IAAK;;AAE5F,YAAM,eAAe;QACjB,QAAQ,KAAK,KAAK,UAAU;QAC5B,UAAW,KAAK,YAAY,SAAS,IAAI,KAAK,YAAY,KAAK,GAAG,GAAG,SAAQ,IAAK;;AAGvF,WAAK,OAAO,KAAK,OAAO;AACxB,WAAK,IAAI,MAAM,EAAC,SAAS,QAAO,aAAY,CAAC;IAC/C;EACF;EA0BA,WAAW,MAAgB;AACzB,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,IAAI;AACnE,SAAK,gBAAgB;AACrB,SAAK,eAAc;EACrB;EACA,cAAc,MAAgB;AAC5B,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,CAAC,QAAQ,IAAI,QAAQ,KAAK,IAAI,SAAQ,CAAE;AACvG,SAAK,gBAAgB;AACrB,SAAK,eAAc;EACrB;EAiBC,cAAc,MAAS;AAElB,UAAM,YAAY,KAAK,MAAM,MAAM,aAAa;AAChD,UAAM,OAAO,YAAY,UAAU,CAAC,EAAE,KAAI,IAAK;AAC/C,UAAM,WAAW,KAAK,MAAM,MAAM,GAAG,EAAE,CAAC,EAAE,KAAI;AAC9C,SAAK,YAAY,KAAK,IAAI;AAC1B,SAAK,UAAQ,KAAK,QAAQ,OAAO,CAAC,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAC9D,SAAK,gBAAgB;EAC3B;;;uCApQW,sBAAmB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,UAAA,GAAA,GAAA,CAAA,OAAA,IAAA,GAAA,QAAA,GAAA,CAAA,WAAA,YAAA,aAAA,YAAA,GAAA,OAAA,UAAA,WAAA,eAAA,SAAA,mBAAA,eAAA,cAAA,YAAA,aAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,UAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,QAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AC/BhC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,QAAA,qBAAA,GAAA,mCAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,mCAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,iBAAS,IAAA,IAAA,MAAA;QAAW,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAEnG,QAAA,oBAAA,GAAA,IAAA;AAEA,QAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,OAAA,CAAA;AAErB,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA;AAQA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAqB,IAAA,OAAA,CAAA,EAC0B,IAAA,SAAA,EAAA;AACd,QAAA,iBAAA,IAAA,oBAAA;AAAkB,QAAA,uBAAA;AAC/C,QAAA,yBAAA,IAAA,SAAA,EAAA;AAA6B,QAAA,iBAAA,IAAA,mBAAA;AAAiB,QAAA,uBAAA,EAAQ;AAExD,QAAA,yBAAA,IAAA,mBAAA,EAAA;AASE,QAAA,qBAAA,OAAA,SAAA,6DAAA,QAAA;AAAA,iBAAO,IAAA,WAAA,MAAA;QAAkB,CAAA,EAAC,UAAA,SAAA,gEAAA,QAAA;AAAA,iBAChB,IAAA,cAAA,MAAA;QAAqB,CAAA,EAAC,WAAA,SAAA,iEAAA,QAAA;AAAA,iBACrB,IAAA,eAAA,MAAA;QAAsB,CAAA,EAAC,eAAA,SAAA,qEAAA,QAAA;AAAA,iBACnB,IAAA,cAAA,MAAA;QAAqB,CAAA;AAGtC,QAAA,uBAAA,EAAkB,EACd;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,iBAAS,IAAA,SAAA;QAAU,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EAED;;;AAhDA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;AAKD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA;AAc9B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,OAAA,EAAiB,mBAAA,IAAA,qBAAA,EACwB,eAAA,IAAA,YAAA,EACb,cAAA,IAAA,WAAA,EACF,YAAA,KAAA,EACR,aAAA,IAAA,SAAA,EAGK,aAAA,IAAA;AAagD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,OAAA,SAAA;;;MDrBzE;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;MACA;MACA;IAAS,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAGJ,qBAAmB,EAAA,WAAA,uBAAA,UAAA,sFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AG5B7B,IAAA,yBAAA,GAAA,MAAA,CAAA;AAAwC,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,KAAA,MAAA,CAAgB;IAAA,CAAA;AAChE,IAAA,yBAAA,GAAA,KAAA,CAAA;AAAgB,IAAA,iBAAA,CAAA;AAA+B,IAAA,uBAAA,EAAI;;;;AAAnC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,OAAA,IAAA;;;;;AAFlB,IAAA,kCAAA,CAAA;AACC,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,MAAA,CAAA;;;;;AAA6B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,MAAA;;;ADO1B,IAAO,yBAAP,MAAO,wBAAsB;EANnC,cAAA;AAOqB,SAAA,SAAS,IAAI,aAAY;;EAC5C,IACI,GAAG,IAAM;AACX,SAAK,MAAM;EACb;EACA,IAAI,KAAE;AACJ,WAAO,KAAK;EACd;;;uCARW,yBAAsB;IAAA;EAAA;;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,QAAA,EAAA,IAAA,KAAA,GAAA,SAAA,EAAA,QAAA,SAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,cAAA,cAAA,GAAA,YAAA,SAAA,WAAA,QAAA,SAAA,QAAA,cAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,UAAA,KAAA,eAAA,KAAA,kBAAA,KAAA,aAAA,UAAA,OAAA,MAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,UAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACVnC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAoG,GAAA,MAAA,CAAA;AAElG,QAAA,qBAAA,GAAA,gDAAA,GAAA,GAAA,gBAAA,CAAA;AAKD,QAAA,uBAAA,EAAK;;;AAL0B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,IAAA,IAAA,IAAA,GAAA,cAAA,IAAA,GAAA,aAAA,IAAA,GAAA,YAAA,CAAA;;sBDMlB,SAAO,IAAI,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAEZ,wBAAsB,EAAA,WAAA,0BAAA,UAAA,4FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEgB7B,IAAO,oBAAP,MAAO,mBAAiB;EAvB9B,cAAA;AAwBW,SAAA,SAAS,YAAY,eAAe,4CAA4C;;;;uCAD9E,oBAAiB;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,OAAA,YAAA,GAAA,UAAA,QAAA,GAAA,KAAA,CAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AApB1B,QAAA,yBAAA,GAAA,QAAA;AACE,QAAA,oBAAA,GAAA,OAAA,CAAA;AACA,QAAA,yBAAA,GAAA,MAAA;AAAM,QAAA,iBAAA,GAAA,cAAA;AAAY,QAAA,uBAAA,EAAO;;;AADpB,QAAA,oBAAA;AAAA,QAAA,qBAAA,OAAA,IAAA,QAAA,uBAAA;;;;;;6EAmBE,mBAAiB,EAAA,WAAA,qBAAA,UAAA,kFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AET3B,IAAA,oBAAA,GAAA,KAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,KAAA,EAAA;;;;;;AAIA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAA+D,IAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,KAAA,OAAA,CAAqB;IAAA,CAAA;AAC7F,IAAA,iBAAA,CAAA;AACA,IAAA,uBAAA;;;;AADA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,GAAA;;;ADAG,IAAO,kBAAP,MAAO,iBAAe;EAc1B,IACI,KAAK,MAAU;AACjB,SAAK,QAAQ;EACf;EACA,IAAI,OAAI;AACN,WAAO,KAAK;EACd;EAGA,YACU,cACC,UACA,QACA,KACA,WACA,IACD,OAAsB;AANtB,SAAA,eAAA;AACC,SAAA,WAAA;AACA,SAAA,SAAA;AACA,SAAA,MAAA;AACA,SAAA,YAAA;AACA,SAAA,KAAA;AACD,SAAA,QAAA;AA7BS,SAAA,aAAa,IAAI,aAAY;AAC7B,SAAA,cAAc,IAAI,aAAY;AAC9B,SAAA,aAAa,IAAI,aAAY;AAKhD,SAAA,YAAqB;AACrB,SAAA,SAAS;AAEA,SAAA,gBAAqB;EAoB3B;EACH,WAAQ;AACN,SAAK,OAAO,KAAK,MAAM,SAAS,cAAc,IAAI,MAAM;AACxD,SAAK,SAAS,KAAK,MAAM,SAAS,cAAc,IAAI,QAAQ;EAC9D;EAEO,uBAAoB;;AACrB,YAAM,MAAM;AACZ,YAAM,QAAQ,KAAK,IAAI,cAAc,6BAA6B;QAChE,aAAa,CAAC,SAAqC,GAAG,KAAK,WAAW,MAAM,KAAK,YAAY,MAAM,KAAK,WAAW;QACnH,YAAY,CAAC,SAAqC,GAAG,KAAK,KAAK,GAAG,KAAK,MAAM,GAAG,KAAK,KAAK;QAC1F,qBAAqB,CAAC,YAAoB,KAAK,SAAS,kCAAkC,SAAS,KAAK,QAAQ,KAAK,IAAI;QACzH,SAAS;SACT,EAAE,MAAM,MAAM,UAAU,KAAI,CAAE;AAChC,YAAM,MAAM,MAAM,MAAM;AACxB,UAAI,KAAK;AACP,cAAM,WAAU,MAAM,KAAK,+BAA+B,KAAK,GAAG,OAAM;AACxE,YAAI,SAAS;AACZ,eAAK,OAAO,QAAQ,SAAS;QAC9B;MACF;IACJ;;EAEQ,+BAA+B,IAAS,KAAQ;AAE1D,UAAM,WAAW,oBAAI,IAAG,GAAI,YAAY,oBAAI,IAAG,GAAI,WAAW,oBAAI,IAAG;AAErE,UAAM,gBAAgB,KAAK;AAE3B,QAAI,MAAM,QAAQ,aAAa,GAAG;AAC/B,oBAA+C,QAAQ,UAAO;AAC7D,iBAAS,IAAI,KAAK,OAAO;AACzB,kBAAU,IAAI,KAAK,QAAQ;AAC3B,iBAAS,IAAI,KAAK,OAAO;MAC3B,CAAC;IACH,OAAO;AACL,cAAQ,KAAK,kCAAkC,aAAa;IAC9D;AAEA,UAAM,UAAwC;MAC5C,MAAM,KAAK;MACX,WAAW,KAAK;MAChB,WAAW,KAAK,aAAa;MAC7B,WAAW,KAAK,aAAa;MAC7B,UAAU,CAAC,GAAG,QAAQ,EAAE,SAAQ;MAChC,WAAW,CAAC,GAAG,SAAS,EAAE,SAAQ;MAClC,UAAU,CAAC,GAAG,QAAQ,EAAE,SAAQ;MAChC,WAAW,KAAK,aAAa;;AAG/B,WAAO,cAAc,KAAK,SAAS,sCAAsC,OAAO,CAAC;EACnF;EAIO,kBAAe;;AACpB,WAAK,OAAO,KAAK,MAAM,SAAS,cAAc,IAAI,MAAM;AACxD,WAAK,cAAc,eAAe,QAAQ,SAAS;AACnD,UAAI;AACF,cAAM,WAAW,MAAM,eAAe,KAAK,UAAU,UAAU,KAAK,aAAa,KAAK,IAAI,CAAC;AAC3F,aAAK,aAAa,SAAS,CAAC;AAC5B,cAAM,WAAW,KAAK,aAAa,KAAK,kBAAkB,EAAE,UAAU,UAAU,MAAM,MAAM,UAAU,MAAK,CAAE;AAC7G,cAAM,gBAAkC,SAAS;AACjD,cAAM,OAAO,KAAK;AAClB,sBAAc,OAAO,KAAK;AAC1B,sBAAc,WAAW;AACzB,sBAAc,SAAS;AACvB,sBAAc,cAAc,MAAM;AAClC,cAAM,SAAS,MAAM,SAAS;AAC9B,YAAI,QAAQ;AACV,eAAK,OAAO,QAAQ,0BAA0B;QAChD;MACF,SAAS,OAAO;AACd,gBAAQ,MAAM,wBAAwB,KAAK;MAC7C;IACF;;;;uCA1Ga,kBAAe,4BAAA,QAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAAf,kBAAe,WAAA,CAAA,CAAA,aAAA,CAAA,GAAA,QAAA,EAAA,eAAA,iBAAA,MAAA,OAAA,GAAA,SAAA,EAAA,YAAA,cAAA,aAAA,eAAA,YAAA,aAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,cAAA,aAAA,QAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,aAAA,GAAA,OAAA,GAAA,CAAA,SAAA,8BAAA,SAAA,MAAA,UAAA,MAAA,WAAA,aAAA,QAAA,MAAA,GAAA,CAAA,KAAA,ygDAAA,QAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,OAAA,qBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,8BAAA,SAAA,MAAA,UAAA,MAAA,WAAA,aAAA,QAAA,MAAA,GAAA,CAAA,KAAA,iOAAA,QAAA,OAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,qBAAA,UAAA,oBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,SAAA,GAAA,CAAA,eAAA,IAAA,GAAA,QAAA,QAAA,GAAA,CAAA,qBAAA,IAAA,GAAA,OAAA,QAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,aAAA,iBAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,OAAA,SAAA,GAAA,CAAA,GAAA,OAAA,SAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACvB5B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4C,GAAA,OAAA,CAAA,EAEd,GAAA,OAAA,CAAA;AACF,QAAA,iBAAA,CAAA;AAAgG,QAAA,uBAAA;AAC1H,QAAA,yBAAA,GAAA,OAAA,CAAA;AAAuB,QAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,iBAAS,IAAA,gBAAA;QAAiB,CAAA;;AAAE,QAAA,yBAAA,GAAA,OAAA,CAAA;AAClD,QAAA,oBAAA,GAAA,QAAA,CAAA;AACC,QAAA,uBAAA,EAAM,EAAM;;AAEf,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAyB,GAAA,UAAA,CAAA;AACqB,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,iBAAS,IAAA,YAAA,KAAA;QAAkB,CAAA;;AACvE,QAAA,yBAAA,GAAA,OAAA,CAAA;AACC,QAAA,oBAAA,IAAA,QAAA,CAAA;AACA,QAAA,uBAAA;AACA,QAAA,iBAAA,IAAA,gBAAA;AAAa,QAAA,uBAAA;;AACb,QAAA,yBAAA,IAAA,UAAA,EAAA;AAA4E,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,iBAAS,IAAA,qBAAA;QAAsB,CAAA;AAAE,QAAA,oBAAA,IAAA,KAAA,EAAA;AAA0B,QAAA,iBAAA,IAAA,qBAAA;AAAmB,QAAA,uBAAA;AAC5J,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqC,IAAA,UAAA,EAAA;AAEpC,QAAA,qBAAA,IAAA,+BAAA,GAAA,GAAA,KAAA,EAAA,EAA+C,IAAA,+BAAA,GAAA,GAAA,KAAA,EAAA;AAE/C,QAAA,iBAAA,EAAA;AACD,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,MAAA,EAAA;AACC,QAAA,qBAAA,IAAA,gCAAA,GAAA,GAAA,MAAA,EAAA;AAGD,QAAA,uBAAA,EAAK,EACC,EACD;;;AAxBqB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,iBAAA,OAAA,OAAA,IAAA,cAAA,gBAAA,kBAAA,OAAA,IAAA,iBAAA,OAAA,OAAA,IAAA,cAAA,YAAA,WAAA,GAAA;AAaC,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,IAAA,SAAA,SAAA,2BAAA,aAAA;AACF,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA,MAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA,WAAA;AACxB,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,GAAA;AAGqC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,GAAAC,IAAA,CAAA;;sBDD1B,aAAa,mBAAmB,MAAM,iBAAiB,SAAO,eAAe,GAAA,QAAA,CAAA,uhFAAA,GAAA,iBAAA,EAAA,CAAA;EAAA;;;6EAE9E,iBAAe,EAAA,WAAA,mBAAA,UAAA,8EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEhB5B,IAAAC,iBAAiC;;;;AC6BnB,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,IAAA,CAAkB;IAAA,CAAA;AACnC,IAAA,oBAAA,GAAA,KAAA,EAAA;AAC3B,IAAA,uBAAA;;;;;;AAVJ,IAAA,yBAAA,GAAA,IAAA,EAAwD,GAAA,IAAA,EAClD,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA,EAAO;AACnC,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAkD,IAAA,uBAAA,EAAO;AACnE,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA,EAAO;AACxC,IAAA,yBAAA,IAAA,MAAA,EAAA,EAA6D,IAAA,KAAA,EAAA;AAC1B,IAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,YAAA,eAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,YAAA,eAAA,sBAAA,EAAA;AAAS,aAAA,cAAA,YAAA;AAAwB,aAAA,sBAAE,aAAA,KAAA,CAAgB;IAAA,CAAA;AACzD,IAAA,oBAAA,IAAA,KAAA,EAAA;AAC3B,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,KAAA,EAAA;AAGF,IAAA,uBAAA,EAAK;;;;;AAVK,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,IAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,WAAA,MAAA,WAAA,UAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,SAAA;AAKyD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,QAAA;;;;;AAgBrE,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAAoB,IAAA,qBAAA,cAAA,OAAA,IAAA,EAAmB,UAAA,UAAA;;;;;AADzC,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,qEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AAA4D,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAM5D,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,CAAiB;IAAA,CAAA;AAC7E,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,gBAAA,EAAA,EAAgC,GAAA,yDAAA,GAAA,GAAA,gBAAA,EAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;;;;AASrB,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AAAoB,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA;;;ADpC9F,IAAO,wBAAP,MAAO,+BAA8B,aAAyC;EAkBzE;EAOT,YAAY,KAAqB,IAAyC,KAA0B;AAClG,UAAM,KAAK,EAAE;AAD2D,SAAA,MAAA;AAvBjE,SAAA,WAAW;AAEb,SAAA,YAAY;AAEZ,SAAA,aAA+B,CAAA;AACrB,SAAA,oBAAsC,CAAA;AAC/C,SAAA,UAAU,CAAA;AACD,SAAA,SAAS,WAAW,MAAM;AAC1B,SAAA,kBAAkB,IAAI,gBAA4C,CAAA,CAAE;AAG7E,SAAA,gBAAkC,CAAA;AAClC,SAAA,oBAAoB,CAAA;AACpB,SAAA,qBAAqB,CAAA;AACrB,SAAA,oBAAoB,CAAA;AAEnB,SAAA,SAA+C;MACtD,EAAE,KAAK,uBAAuB,OAAO,UAAS;MAC9C,EAAE,KAAK,kBAAkB,OAAO,OAAM;MACtC,EAAE,KAAK,mBAAmB,OAAO,oBAAmB;MACpD,EAAE,KAAK,WAAW,OAAO,UAAS;;AA8R5B,SAAA,qBAAqB,CAAC,SAAQ;AACpC,aAAO,KAAK,WAAW,IAAI,CAAC,MAAK;AAC/B,eAAO,iCACF,IADE;UAEL,KAAK,EAAE,KAAK,OAAO,EAAE;UACrB,KAAK,EAAE,KAAK,OAAO,EAAE;UACrB,SAAS,EAAE,SAAS,OAAO,EAAE;UAC7B,OAAO,EAAE,KAAK,SAAS,EAAE;;MAE7B,CAAC;IACH;EAnSA;EAEA,iBAAc;AACZ,SAAK,aAAa,CAAC,GAAG,KAAK,OAAO,UAAU;AAC5C,SAAK,UAAU,KAAK,OAAO,cAAa,EAAG,IAAI,CAAC,SAAU,iCAAI,OAAJ,EAAU,UAAW,KAAK,QAAQ,KAAK,OAAO,KAAK,EAAE;AAC/G,SAAK,uBAAsB;AAC3B,SAAK,2BAA0B;EACjC;EAEA,WAAQ;AACN,UAAM,aAAa,CAAC,GAAG,eAAe;AAItC,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,IAAI,EAAE,YAAY,UAAU,OAAM,CAAE;MAC3C,SAAS,CAAC,KAAK,OAAO,OAAO,SAAS,CAAC,WAAW,QAAQ,CAAC;MAC3D,QAAQ,CAAC,KAAK,OAAO,CAAC,CAAC;MACvB,WAAW,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;MACrC,aAAa,CAAC,IAAI;MAClB,YAAY,YAAY,CAAA,GAAI,EAAE,aAAa,KAAI,CAAE;MACjD,eAAe,KAAK,GAAG,MAAM;QAC3B,KAAK,CAAC,EAAE;QACR,OAAO,CAAC,CAAA,CAAE;OACX;MACD,QAAQ,KAAK,GAAG,MAAM;QACpB,SAAS;QACT,WAAW;QACX,SAAS,CAAA;OACV;KACF;AACD,SAAK,iBAAgB;AAErB,SAAK,WAAW;MACd,IAAI,cAAc,EAAE,MAAM,QAAQ,OAAO,kBAAkB,UAAU,MAAM,UAAU,CAAC,KAAK,UAAS,CAAE;MACtG,IAAI,cAAc,EAAE,MAAM,WAAW,UAAU,MAAM,UAAU,KAAI,CAAE;MACrE,IAAI,cAAc,EAAE,MAAM,UAAU,SAAS,GAAG,KAAK,MAAM,GAAG,MAAM,WAAU,CAAE;MAChF,IAAI,cAAc,EAAE,MAAM,aAAa,OAAO,qBAAqB,UAAU,KAAI,CAAE;MACnF,IAAI,cAAc,EAAE,MAAM,eAAe,OAAO,iBAAiB,MAAM,SAAQ,CAAE;MACjF,IAAI,cAAc,EAAE,MAAM,cAAc,MAAM,QAAQ,QAAQ,KAAK,kBAAkB,OAAO,UAAS,CAAE;MACvG,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,SAAS,GAAG,KAAK,MAAM;OACxB;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,SAAS,KAAK;QACd,UAAU;QACV,gBAAgB;OACjB;MACD,IAAI,cAAmB;QACrB,MAAM;QACN,MAAM;QACN,OAAO;QACP,SAAS,GAAG,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;QAC5D,OAAO,KAAK,EAAE;OACf;MACD,IAAI,cAAmB;QACrB,MAAM;QACN,MAAM;QACN,OAAO;QACP,SAAS,GAAG,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;QAC5D,OAAO,KAAK,EAAE;OACf;MACD,IAAI,cAAmB;QACrB,MAAM;QACN,MAAM;QACN,OAAO;QACP,SAAS,GAAG,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;QAC5D,OAAO,KAAK,EAAE;OACf;;AAGL,SAAK,KAAK,IAAI,MAAM,EAAE,aAAa,UAAU,UAAM;AACjD,UAAI,KAAK,aAAa,QAAQ,KAAK,UAAQ,KAAK,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,WAAW,KACpF,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,SAAS,GAAG;AACjD,aAAK,IAAI,kBAAkB,aAAY,GAAE,MAAK,KAAK,OAAO,OAAO,SAAQ,KAAK,OAAO,OAAO,KAAK,WAAW,EAAE,UAAU,aAAS;AAC/H,cAAG,SAAQ;AACT,kBAAM,cAAc,KAAK,KAAK,IAAI,MAAM;AACxC,wBAAY,UAAU;cACpB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACH,CAAC;EAEA;EACA,gBAAa;AACX,SAAK,EAAE,cAAc,IAAI,KAAK,EAC3B,aAAa,KAAK,UAAU,CAAC,MAAM,KAAK,eAAe,CAAC,EACxD,UAAU,CAAC,QAAQ,KAAK,qBAAqB,GAAG,CAAC;EACtD;EAEO,cAAc,WAAyB;AAC5C,SAAK,kBAAkB;AACvB,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,CAAC,EAAE,WAAW,CAAC,KAAK;IACpC;AAEA,UAAM,YAAY,UAAU,WAAW,KAAK,UAAQ,KAAK,QAAQ,KAAK,OAAO,IAAI;AACjF,UAAM,MAAM,KAAK,QAAQ,KAAK,CAAAC,SAAOA,KAAI,QAAQ,KAAK,OAAO,IAAI;AACjE,QAAI,WAAW;AAEf,UAAM,aAAa,CAAC,GAAG,eAAe;AACtC,SAAK,EAAE,KAAK,gBAAe;AAC3B,SAAK,EAAE,KAAK,cAAc,UAAU;AACpC,SAAK,KAAK,WAAW,iCAChB,YADgB;MAEnB,eAAe,iCACV,UAAU,gBADA;QAEb,OAAO,KAAK,mBAAmB,UAAU,aAAa;;MAExD,QAAQ,KAAK,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,UAAU,MAAM;MACzD,aAAY,UAAU,eAAa,MAAM,QAAQ;MACjD,QAAQ;QACN,SAAS,YAAY,UAAU,OAAO,CAAC,EAAE,SAAS,CAAC;QACnD,WAAW,YAAY,UAAU,OAAO,CAAC,EAAE,SAAS,CAAC;QACrD,SAAS,YAAY,UAAU,OAAO,CAAC,EAAE,SAAS,CAAC;;MAEtD;AACA,SAAK,EAAE,WAAgC,MAAK;AAC7C,cAAU,WACP,IAAI,UAAS,iCAAI,OAAJ,EAAU,KAAK,EAAC,KAAK,KAAK,KAAK,OAAO,KAAK,QAAQ,KAAK,CAAAA,SAAOA,KAAI,QAAQ,KAAK,GAAG,EAAE,MAAK,EAAC,EAAE,EAC1G,IAAI,UAAQ,YAAY,MAAM,EAAC,aAAa,KAAK,IAAI,QAAQ,KAAK,OAAO,MAAM,WAAW,KAAK,IAAI,QAAQ,KAAK,OAAO,KAAI,CAAC,CAAC,EAC7H,QAAQ,WAAU,KAAK,EAAE,WAAgC,KAAK,KAAK,CAAC;AACvE,QAAI,CAAC,WAAW;AACd,WAAK,iBAAgB;IACvB;AAEA,SAAK,KAAK,uBAAsB;EAClC;EAEQ,mBAAgB;AACtB,UAAM,QAA6B;MACjC,KAAK,EAAC,KAAK,KAAK,OAAO,MAAM,OAAO,KAAK,OAAO,OAAO,QAAQ,KAAK,OAAO,OAAO,YAAW;MAC7F,KAAK;MACL,SAAS;MACT,OAAO,KAAK,OAAO;MACnB,OAAO;;AAER,SAAK,EAAE,WAAgC,KAAK,YAAY,OAAO,EAAC,aAAa,OAAO,WAAW,MAAK,CAAC,CAAC;EACzG;EAEO,gBAAgB,GAAS;AAC9B,SAAK,kBAAkB,KAAK,KAAK,WAAW,CAAC,CAAC;AAC9C,SAAK,aAAa,KAAK,WAAW,OAAO,CAAC,GAAG,QAAQ,QAAQ,CAAC;EAChE;EAEO,kBAAe;AACpB,SAAK,YAAY;AACjB,QAAI,KAAK,KAAK,OAAO;AACnB,YAAM,IAAI,KAAK,KAAK;AACpB,YAAM,YAA4B,iCAC7B,IAD6B;QAEhC,QAAQ,OAAO,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,OAAO,IAAI,YAAY,CAAW,EAAE,SAAQ,IAAK,YAAY,GAAE,EAAG;QAC7H,QAAQ,EAAE,QAAQ,OAAO,EAAE,UAAU;QACrC,YAAY,KAAK,EAAE,WAAW,MAAM,IAAI,UAAS,iCAAI,OAAJ,EAAU,KAAK,KAAK,KAAK,OAAO,KAAK,IAAG,EAAE;QAC3F,aAAa,CAAC,EAAE;QAChB,eAAe;UACb,KAAK,EAAE,cAAc,OAAO;UAC5B,OAAO,KAAK,sBAAsB,EAAE,cAAc,SAAS,CAAA,CAAE;;;AAGjE,YAAM,MAAM,KAAK,WAAW,UAAU,CAAC,MAAM,EAAE,SAAS,UAAU,IAAI;AACtE,UAAI,QAAQ;AAAI,aAAK,WAAW,GAAG,IAAI;;AAClC,aAAK,WAAW,KAAK,SAAS;AACnC,WAAK,QAAO;IACd;EACF;EAEQ,6BAA0B;AAChC,UAAM,KAAK,KAAK,OAAO,OAAO;AAC9B,UAAM,EAAE,aAAa,aAAY,IAAK;AACtC,WAAO,OAAO,GAAG,WAAW,EAAE,QAAQ,CAAC,SAAQ;AAC7C,aAAO,OAAO,KAAK,WAAW,EAC3B,OAAO,CAAC,QAAQ,CAAC,IAAI,MAAM,EAC3B,QAAQ,CAAC,QAAO;AACf,YAAI,IAAI,OAAO,YAAY,IAAI;AAC7B,gBAAM,UAAU,EAAE,KAAK,IAAI,IAAI,OAAO,IAAI,aAAa,QAAQ,KAAK,MAAM,UAAU,KAAK,GAAE;AAC3F,eAAK,kBAAkB,KAAK,OAAO;QACrC;AACA,eAAO,OAAO,IAAI,WAAW,EAC1B,OAAO,CAAC,SAAS,CAAC,KAAK,MAAM,EAC7B,QAAQ,CAAC,SAAQ;AAChB,cAAI,KAAK,OAAO,aAAa,IAAI;AAC/B,kBAAM,WAAW,EAAE,KAAK,KAAK,IAAI,OAAO,KAAK,aAAa,QAAQ,GAAG,KAAK,IAAI,MAAM,IAAI,WAAW,IAAI,UAAU,IAAI,GAAE;AACvH,iBAAK,mBAAmB,KAAK,QAAQ;UACvC;AACA,iBAAO,OAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,QAAO;AAC9C,kBAAM,UAAU;cACd,KAAK,IAAI;cACT,OAAO,IAAI;cACX,QAAQ,GAAG,KAAK,IAAI,MAAM,IAAI,WAAW,MAAM,KAAK,WAAW;cAC/D,UAAU,KAAK;;AAEjB,iBAAK,kBAAkB,KAAK,OAAO;AACnC,iBAAK,cAAc,KAAK,GAAG,IAAI,UAAU;UAC3C,CAAC;QACH,CAAC;MACL,CAAC;IACL,CAAC;EACH;EAEQ,qBAAqB,KAAqB;AAChD,QAAI,OAAmC,CAAA;AACvC,SAAK,EAAE,cAAc,IAAI,OAAO,EAAE,MAAM,CAAA,CAAE;AAC1C,QAAI,OAAO,uBAAuB;AAChC,aAAO,KAAK;IACd,WAAW,QAAQ,kBAAkB;AACnC,aAAO,KAAK;IACd,WAAW,QAAQ,mBAAmB;AACpC,aAAO,KAAK;IACd,WAAW,QAAQ,WAAW;AAC5B,UAAI,CAAC,KAAK,wBAAwB;AAChC,aAAK,IAAI,YAAY,KAAK,OAAO,OAAO,KAAK,WAAW,EAAE,UAAU,CAAC,QAAO;AAC1E,eAAK,yBAAyB,YAAY,KAAK,OAAO,OAAO;AAE7D,eAAK,gBAAgB,KAAK,KAAK,sBAAsB;AACrD,eAAK,EAAE,cAAc,IAAI,OAAO,EAAE,WAAW,KAAK,mBAAmB,KAAK,iBAAiB,aAAa,CAAC;QAC3G,CAAC;MACH,OAAO;AACL,aAAK,gBAAgB,KAAK,KAAK,sBAAsB;MACvD;AACA;IACF;AACA,SAAK,gBAAgB,KAAK,IAAI;EAChC;EAEO,UAAO;AACZ,SAAK,KAAK,MAAM,EAAE,SAAS,KAAK,OAAO,OAAO,QAAO,CAAE;AACvD,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,CAAC,EAAE,WAAW;IAC9B;AACC,SAAK,EAAE,WAAgC,MAAK;AAC7C,SAAK,iBAAgB;AACrB,SAAK,YAAY;EACnB;EAEA,WAAQ;AACN,UAAM,KAAK,KAAK,OAAO,OAAO;AAC9B,UAAM,MAAM,KAAK,YAAY;AAC7B,UAAM,WAAW,KAAK,YAAY;AAElC,QAAI,KAAK,OAAO,OAAO,aAAa;AAClC,SAAG,aAAa,SAAS,MAAM,KAAK,YAAY;IAClD;AACA,UAAM,UAAU;MACd,QAAQ,GAAG;MACX,UAAU,GAAG,aAAa;MAC1B,SAAS,GAAG,YAAY;MACxB,UAAU;MACV,YAAY,GAAG,aAAa;MAC5B,aAAa,GAAG;MAChB,SAAS,GAAG;MACZ;MACA,cAAc;QACZ,CAAC,KAAK,OAAO,IAAI,GAAG;UAClB,WAAW,KAAK,WAAW,IAAI,CAAC,QAAO;AACrC,mBAAO,iCACF,MADE;cAEL,YAAY,KAAK,mBAAmB,GAAG;;UAE3C,CAAC;;;;AAIP,UAAM,MAAM,EAAE,SAAS,mBAAmB,KAAK,kBAAiB;AAChE,SAAK,OAAO,KAAK,GAAU;AAC3B,SAAK,IAAI,MAAM,GAAG;EACpB;EAcQ,sBAAsB,OAAY;AACxC,WAAO,MAAM,IAAI,CAAC,UAAU,EAAE,KAAK,KAAK,UAAU,OAAO,KAAK,IAAG,EAAG;EACtE;EAEQ,mBAAmB,MAAmB;AAC5C,QAAI,CAAC;AAAM,aAAO,CAAA;AAClB,UAAM,eAAe,CAAC,aAAgB,iCAAiB,MAAM,KAAK,OAAO,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK;AACpG,YAAQ,KAAK,KAAK;MAChB,KAAK;AACH,eAAO,aAAa,KAAK,iBAAiB;MAC5C,KAAK;AACH,eAAO,aAAa,KAAK,kBAAkB;MAC7C,KAAK;AACH,eAAO,aAAa,KAAK,iBAAiB;MAC5C,KAAK;AACH,eAAO,aAAa,KAAK,sBAAsB;MACjD;AAAS,eAAO,CAAA;IAClB;EACF;EAEQ,yBAAsB;AAC5B,UAAM,YAAY,CAAC,OAAO,IAAI;AAC9B,UAAM,cAAc,CAAC,SAAS,WAAW;AACzC,SAAK,mBAAmB;MACtB,SAAS;QACP,EAAE,KAAK,OAAO,cAAc,qBAAqB,MAAM,eAAe,UAAU,YAAY,CAAC,WAAW,QAAQ,EAAC;QACjH,EAAE,KAAK,OAAO,cAAc,cAAc,MAAM,eAAe,UAAU,YAAY,CAAC,WAAW,QAAQ,EAAC;QAC1G,EAAE,KAAK,SAAS,cAAc,SAAS,YAAY,CAAC,WAAW,QAAQ,EAAC;QACxE,EAAE,KAAK,WAAW,cAAc,YAAY,MAAM,eAAe,SAAQ;;MAE3E,eAAe;QACb,KAAK,qBAAqB,WAAW;QACrC,SAAS,qBAAqB,SAAS;QACvC,KAAK,KAAK;;MAEZ,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;MAC9C,UAAU;;EAEd;;;uCAtWW,wBAAqB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,CAAA;IAAA;EAAA;;yEAArB,wBAAqB,WAAA,CAAA,CAAA,mBAAA,CAAA,GAAA,QAAA,EAAA,QAAA,UAAA,UAAA,YAAA,aAAA,cAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,gBAAA,KAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,YAAA,SAAA,kBAAA,YAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,SAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,SAAA,MAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,wBAAA,GAAA,CAAA,SAAA,QAAA,GAAA,YAAA,GAAA,UAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,eAAA,GAAA,CAAA,SAAA,UAAA,SAAA,YAAA,SAAA,oBAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,SAAA,UAAA,GAAA,YAAA,GAAA,UAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,CAAA,GAAA,cAAA,UAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,QAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,UAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;AChClC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACU,GAAA,IAAA;AACrB,QAAA,oBAAA,GAAA,KAAA,CAAA;AAAyD,QAAA,iBAAA,CAAA;AAA4B,QAAA,uBAAA;AACzF,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,IAAA,MAAA,CAAW;QAAA,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAGnG,QAAA,yBAAA,GAAA,uBAAA,CAAA,EAAwC,GAAA,4BAAA;AAEtC,QAAA,iBAAA,GAAA,cAAA;AACA,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,SAAA,CAAA,EAAwD,IAAA,SAAA,CAAA,EAC5B,IAAA,MAAA,CAAA,EACH,IAAA,IAAA,EACf,IAAA,MAAA;AACI,QAAA,iBAAA,IAAA,WAAA;AAAS,QAAA,uBAAA,EAAO;AAExB,QAAA,yBAAA,IAAA,MAAA,EAAA,EAAyB,IAAA,MAAA;AACjB,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA,EAAO;AAErB,QAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,MAAA;AACI,QAAA,iBAAA,IAAA,kBAAA;AAAgB,QAAA,uBAAA,EAAO;AAE/B,QAAA,yBAAA,IAAA,MAAA,EAAA,EAA6C,IAAA,MAAA;AACrC,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA,EAAO,EACjB,EACF;AAEP,QAAA,yBAAA,IAAA,OAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,IAAA,GAAA,MAAA,EAAA;AAaJ,QAAA,uBAAA,EAAQ,EACF;AAGV,QAAA,yBAAA,IAAA,uBAAA,IAAA,CAAA,EAA0E,IAAA,4BAAA;AAExE,QAAA,iBAAA,EAAA;AACA,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,QAAA,EAAA,EAAyB,IAAA,OAAA,EAAA;AAErB,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,gBAAA,EAAA;AAGF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqB,IAAA,UAAA,EAAA;AACgC,QAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,QAAA,CAAS;QAAA,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC7E,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EAED;AAGT,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,SAAA,CAAU;QAAA,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA;AACF,QAAA,uBAAA,EAAM;;;AAnEG,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,IAAA,OAAA,KAAA;AAAsD,QAAA,oBAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,OAAA,MAAA,aAAA;AAI1C,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,YAAA,KAAA;AAsBa,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,UAAA;AAiBF,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,CAAA,IAAA,WAAA,UAAA,IAAA,QAAA;AAE9B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,WAAA,qBAAA,IAAA,YAAA,qBAAA,oBAAA,GAAA;AAEM,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA;AAMgD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,QAAA;AAWX,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,QAAA;;;MD7CvE;MACA;MACA;MACA;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;IAAS,GAAA,QAAA,CAAA,k1EAAA,EAAA,CAAA;EAAA;;;6EAGJ,uBAAqB,EAAA,WAAA,yBAAA,UAAA,0FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;AGZd,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,4FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,MAAA,CAAY;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,KAAA,EAAA;AAA6C,IAAA,uBAAA;AACvE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,4FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,IAAA,CAAY;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAqD,IAAA,uBAAA;;;;;;;AAG/E,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,2FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,MAAA,CAAY;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,KAAA,EAAA;AAA6C,IAAA,uBAAA;AACvE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,2FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,MAAA,CAAe;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgD,IAAA,uBAAA;;;;;;AAKjF,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAiC,IAAA,2BAAA,iBAAA,SAAA,0GAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,MAAA,6BAAA,OAAA,WAAA,MAAA,MAAA,OAAA,YAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAEjC,IAAA,uBAAA;;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,WAAA;AAAsB,IAAA,2BAAA,WAAA,OAAA,SAAA;AAA4B,IAAA,qBAAA,YAAA,CAAA,OAAA,SAAA,EAA2B,cAAA,IAAA;;;;;AAMxF,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;;;;AAAnB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,SAAA;;;;;;AAWV,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,aAAA,EAAA;AAA+B,IAAA,2BAAA,iBAAA,SAAA,2GAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,MAAA,6BAAA,OAAA,UAAA,MAAA,MAAA,OAAA,WAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAEjC,IAAA,uBAAA;;;;;;AAFa,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,SAAA;AAAoB,IAAA,2BAAA,WAAA,OAAA,QAAA;AAA2B,IAAA,qBAAA,YAAA,CAAA,OAAA,SAAA,EAA2B,cAAA,IAAA;;;;;AAMrF,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;;;;AAAlB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,QAAA;;;;;;AAtClB,IAAA,yBAAA,GAAA,IAAA,EAAqD,GAAA,MAAA,EAAA;AAE7C,IAAA,qBAAA,GAAA,wEAAA,GAAA,GAAA,gBAAA,EAAA,EAAoD,GAAA,uEAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAQxD,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,IAAA;AAEI,IAAA,qBAAA,GAAA,wEAAA,GAAA,GAAA,gBAAA,EAAA,EAAwD,GAAA,uEAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAW5D,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,IAAA,EAAI,IAAA,SAAA,EAAA;AAC4B,IAAA,2BAAA,iBAAA,SAAA,wFAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,MAAA,6BAAA,OAAA,aAAA,MAAA,MAAA,OAAA,cAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAA5B,IAAA,uBAAA,EAAwF;AAE5F,IAAA,yBAAA,IAAA,IAAA;AAEI,IAAA,qBAAA,IAAA,yEAAA,GAAA,GAAA,gBAAA,EAAA,EAAwD,IAAA,wEAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAW5D,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,SAAA,EAAA;AAC4B,IAAA,2BAAA,iBAAA,SAAA,wFAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,MAAA,MAAA,OAAA,QAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAC5B,IAAA,qBAAA,WAAA,SAAA,kFAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAW,OAAA,2BAAA,QAAA,MAAA,CAAuC;IAAA,CAAA;AADlD,IAAA,uBAAA,EACsD,EACrD;;;;;;;AA7Cc,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA,EAAsB,YAAA,YAAA;AAWtB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,EAAqB,YAAA,iBAAA;AAcR,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,WAAA;AAA8B,IAAA,qBAAA,YAAA,CAAA,OAAA,SAAA;AAI3C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,EAAqB,YAAA,iBAAA;AAcR,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,KAAA;AAAwB,IAAA,qBAAA,YAAA,CAAA,OAAA,SAAA;;;;;;AA/DxE,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA0E,GAAA,UAAA,CAAA;AAElE,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA,EAAS;AAGpD,IAAA,yBAAA,GAAA,SAAA,CAAA,EAA4E,GAAA,SAAA,CAAA,EAC7C,GAAA,IAAA,EACnB,GAAA,MAAA,CAAA;AACgB,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;AACvB,IAAA,yBAAA,GAAA,MAAA,CAAA;AAAgB,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACtB,IAAA,yBAAA,IAAA,MAAA,CAAA;AAAgB,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AAC5B,IAAA,yBAAA,IAAA,MAAA,CAAA;AAAgB,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA;AACzB,IAAA,yBAAA,IAAA,MAAA,CAAA;AAAgB,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA,EAAK,EAC7B;AAGT,IAAA,yBAAA,IAAA,OAAA;AACI,IAAA,qBAAA,IAAA,yDAAA,IAAA,IAAA,MAAA,CAAA;AAkDD,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,MAAA,EAAA,EAC2C,IAAA,KAAA,EAAA;AACnC,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,CAAQ;IAAA,CAAA;AACpB,IAAA,oBAAA,IAAA,KAAA,EAAA;AACA,IAAA,uBAAA,EAAI;AAGR,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,aAAA,EAAA;AAGA,IAAA,2BAAA,iBAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,WAAA,MAAA,MAAA,OAAA,OAAA,YAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAIA,IAAA,uBAAA,EAAY;AAGhB,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,SAAA,EAAA;AAGA,IAAA,2BAAA,iBAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,aAAA,MAAA,MAAA,OAAA,OAAA,cAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAFA,IAAA,uBAAA,EAIE;AAGN,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,aAAA,EAAA;AAIA,IAAA,2BAAA,iBAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,UAAA,MAAA,MAAA,OAAA,OAAA,WAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAIA,IAAA,uBAAA,EAAY;AAGhB,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,SAAA,EAAA;AAGA,IAAA,2BAAA,iBAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,OAAA,MAAA,MAAA,OAAA,OAAA,QAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAFA,IAAA,uBAAA,EAGE,EACD,EACR,EAGG;;;;;AA/G8C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,CAAA,OAAA,mBAAA,CAAA;AAItB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAC,IAAA,CAAA;AAYR,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,aAAA;AAqD4B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAA,GAAA,CAAA;AAMxC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,WAAA;AACA,IAAA,2BAAA,WAAA,OAAA,OAAA,SAAA;AACA,IAAA,qBAAA,cAAA,IAAA;AASA,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,OAAA,WAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,iBAAA,IAAA,EAAsB,SAAA,OAAA,SAAA;AAEtB,IAAA,2BAAA,WAAA,OAAA,OAAA,QAAA;AACA,IAAA,qBAAA,cAAA,IAAA;AASA,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,OAAA,KAAA;;;AD5Fd,IAAO,4BAAP,MAAO,2BAAyB;EAE3B;EAOT,YAA8B,QAAqB;AAArB,SAAA,SAAA;AAPrB,SAAA,cAAc,OAAO,qBAAqB;AACnD,SAAA,cAAc,CAAA;AACd,SAAA,sBAAqB,CAAA;AACrB,SAAA,YAAY,CAAC,YAAY,QAAQ,UAAU,MAAM;AAEjD,SAAA,SAAS,EAAE,WAAW,MAAM,aAAa,IAAI,UAAU,MAAM,OAAO,GAAE;AACtE,SAAA,iBAA0B;EAC8B;EAEzD,WAAQ;AACP,QAAG,KAAK,oBAAmB;AAC1B,WAAK,eAAc;IACpB;EACD;EAEC,SAAM;AACJ,UAAM,kBAAmB,OAAO,OAAO,KAAK,MAAM,EAAE,KAAK,SAAO,QAAQ,MAAM,QAAQ,QAAQ,QAAQ,MAAS;AAC/G,QAAI,iBAAiB;AACnB;IACF;AACA,UAAM,aAAa,KAAK,cAAa,IAAM,OAAO,KAAK,OAAO,KAAK,KAAK;AAAE;AAC1E,QAAI,aAAa,KAAK;AAClB,WAAK,OAAO,MAAM,yCAAyC;AAC3D;IACH;AACD,SAAK,cAAc,KAAK,iCACnB,KAAK,SADc;MAEtB,WAAW;MACX,UAAU;MACX;AACD,SAAK,SAAS,EAAE,WAAW,MAAM,aAAa,IAAI,UAAU,MAAM,OAAO,GAAE;AAC3E,SAAK,uBAAsB;EAC7B;EAEA,QAAQ,KAAQ;AAEd,QAAI,YAAY;EAClB;EAEA,QAAQ,KAAQ;AACd,UAAM,aAAa,KAAK,cAAa;AACrC,QAAI,aAAa,KAAK;AAClB,WAAK,OAAO,MAAM,yCAAyC;AAC5D;IACH;AACA,SAAK,uBAAsB;AAC3B,QAAI,YAAY;EAClB;EAEA,UAAU,OAAa;AACrB,SAAK,cAAc,OAAO,OAAO,CAAC;EACpC;EAEA,qBAAkB;AAChB,SAAK,gBAAgB,KAAK,cAAc,OAAO,SAAO,CAAC,IAAI,QAAQ;EACrE;EAEA,WAAW,KAAQ;AACjB,QAAI,YAAY;EAClB;EAEA,kBAAe;AACb,SAAK,cAAc,QAAQ,SAAM;AAC/B,UAAI,WAAW,KAAK;IACtB,CAAC;EACH;EAEA,gBAAa;AACX,SAAK,iBAAiB,KAAK,cAAc,SAAS,KAAK,KAAK,cAAc,MAAM,SAAO,IAAI,QAAQ;EACrG;EAEA,qBAAkB;AAChB,UAAM,EAAE,SAAS,KAAI,IAAK,KAAK,YAAY,SAAS,CAAA;AACpD,UAAM,cAAc,MAAM;AAC1B,WAAO,CAAC,EAAE,SAAS,SAAS,MAAM,YAAY,MAAM,cAAc,eAAe,OAAO,KAAK,WAAW,EAAE;EAC5G;EAGA,iBAAc;AACZ,UAAM,EAAE,SAAS,KAAI,IAAK,KAAK,YAAY,SAAS,CAAA;AACpD,UAAM,cAAc,MAAM;AAC1B,UAAM,aAAa,SAAS;AAC5B,UAAM,WAAW,MAAM;AACvB,UAAM,aAAa,MAAM,WAAW,OAAO,MAAM;AACjD,UAAM,OAAO,KAAK,MAAM,WAAW;AAEnC,SAAK,YAAY,eAAe,YAAY,UAAU,YAAY,IAAI,EAAE,UAAU,CAAC,aAAY;AAC7F,UAAI,MAAM,QAAQ,SAAS,IAAI,GAAG;AAChC,aAAK,cAAc,SAAS;AAC5B,cAAM,YAAY,SAAS,KAAK,CAAC;AACjC,YAAI,WAAW;AACb,eAAK,cAAc,OAAO,KAAK,SAAS;AACxC,eAAK,sBAAsB,KAAK;AAChC,cAAG,KAAK,aAAY;AAClB,iBAAK,uBAAsB;UAC7B;QACF;MACF;IACF,CAAC;EACH;EAED,yBAAsB;AACrB,SAAK,cAAc,KAAK,oBAAoB,OAC1C,SAAO,CAAC,KAAK,cAAc,KAAK,OAAK,EAAE,cAAc,GAAG,CAAC;EAE7D;EAIA,gBAAa;AACX,WAAO,KAAK,cACT,IAAI,SAAO,OAAO,IAAI,KAAK,KAAK,CAAC,EACjC,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC;EAC7B;EACA,2BAA2B,OAAsB,YAAe;AAC/D,UAAM,MAAM,MAAM;AAElB,UAAM,cAAc,CAAC,aAAa,OAAO,aAAa,cAAc,QAAQ;AAC5E,QAAI,YAAY,SAAS,GAAG,GAAG;AAC7B;IACF;AAEA,QAAI,CAAC,OAAO,KAAK,GAAG,GAAG;AACrB,YAAM,eAAc;AACpB;IACF;AAEA,UAAM,eAAe,OAAO,WAAW,SAAS,EAAE;AAClD,UAAM,iBAAkB,MAAM,OAA4B,kBAAkB,aAAa;AACzF,UAAM,eAAgB,MAAM,OAA4B,gBAAgB,aAAa;AAErF,UAAM,WACJ,aAAa,UAAU,GAAG,cAAc,IACxC,MACA,aAAa,UAAU,YAAY;AAErC,UAAM,eAAe,SAAS,UAAU,EAAE,KAAK;AAE/C,UAAM,cAAc,KAAK,cACtB,OAAO,SAAO,QAAQ,UAAU,EAChC,IAAI,SAAO,OAAO,IAAI,KAAK,KAAK,CAAC;AAEpC,UAAM,QAAQ,YAAY,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI;AAEvD,QAAI,QAAQ,KAAK;AACf,YAAM,eAAc;IACtB;EACF;;;uCArJa,4BAAyB,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAzB,4BAAyB,WAAA,CAAA,CAAA,wBAAA,CAAA,GAAA,QAAA,EAAA,YAAA,cAAA,eAAA,gBAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,YAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,mBAAA,UAAA,uBAAA,QAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,uBAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,SAAA,kBAAA,GAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,SAAA,KAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,WAAA,YAAA,cAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,SAAA,OAAA,GAAA,OAAA,WAAA,QAAA,GAAA,SAAA,GAAA,CAAA,eAAA,aAAA,GAAA,iBAAA,SAAA,WAAA,YAAA,GAAA,CAAA,eAAA,IAAA,GAAA,gBAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,eAAA,aAAA,GAAA,iBAAA,iBAAA,SAAA,WAAA,YAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,QAAA,UAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,iBAAA,WAAA,UAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,iBAAA,WAAA,WAAA,UAAA,GAAA,CAAA,SAAA,QAAA,GAAA,OAAA,WAAA,MAAA,GAAA,CAAA,SAAA,UAAA,GAAA,OAAA,gBAAA,MAAA,GAAA,CAAA,SAAA,QAAA,GAAA,OAAA,WAAA,MAAA,GAAA,CAAA,SAAA,UAAA,GAAA,OAAA,YAAA,MAAA,GAAA,CAAA,eAAA,aAAA,GAAA,iBAAA,SAAA,WAAA,YAAA,YAAA,GAAA,CAAA,eAAA,aAAA,GAAA,iBAAA,SAAA,WAAA,YAAA,YAAA,CAAA,GAAA,UAAA,SAAA,mCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACftC,QAAA,qBAAA,GAAA,mDAAA,IAAA,IAAA,gBAAA,CAAA;;;AAAe,QAAA,qBAAA,QAAA,IAAA,UAAA;;sBDYH,cAAY,SAAA,MAAA,SAAC,gBAAc,mBAAE,aAAW,sBAAA,iBAAA,SAAE,mBAAmB,GAAA,QAAA,CAAA,05EAAA,EAAA,CAAA;EAAA;;;6EAG5D,2BAAyB,EAAA,WAAA,6BAAA,UAAA,oGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;;AGCd,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,iGAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,MAAA,CAAY;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,KAAA,EAAA;AAA8C,IAAA,uBAAA;AACxE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,iGAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,IAAA,CAAY;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAoD,IAAA,uBAAA;;;;;;;AAG9E,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,gGAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,MAAA,CAAY;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,KAAA,EAAA;AAA6C,IAAA,uBAAA;AACvE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,gGAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,MAAA,CAAe;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgD,IAAA,uBAAA;;;;;;AAIjF,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAiC,IAAA,2BAAA,iBAAA,SAAA,+GAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,MAAA,6BAAA,OAAA,WAAA,MAAA,MAAA,OAAA,YAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAEjC,IAAA,uBAAA;;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,WAAA;AAAsB,IAAA,2BAAA,WAAA,OAAA,SAAA;AAA4B,IAAA,qBAAA,YAAA,CAAA,OAAA,SAAA,EAA2B,cAAA,IAAA;;;;;AAMxF,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;;;;AAAnB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,SAAA;;;;;;AAKV,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,aAAA,EAAA;AACI,IAAA,2BAAA,iBAAA,SAAA,gHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,MAAA,6BAAA,OAAA,YAAA,MAAA,MAAA,OAAA,aAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAEJ,IAAA,uBAAA;;;;;;AAHW,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,aAAA,EAAuB,aAAA,UAAA,EAAyB,aAAA,KAAA;AACvD,IAAA,2BAAA,WAAA,OAAA,UAAA;AAA6B,IAAA,qBAAA,YAAA,CAAA,OAAA,SAAA,EAA2B,cAAA,IAAA;;;;;AAM5D,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAsC,IAAA,uBAAA;;;;;AAAtC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,kBAAA,OAAA,UAAA,CAAA;;;;;AAhClB,IAAA,yBAAA,GAAA,IAAA,EAAmD,GAAA,MAAA,EAAA;AAE3C,IAAA,qBAAA,GAAA,6EAAA,GAAA,GAAA,gBAAA,EAAA,EAAoD,GAAA,4EAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAQxD,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,qBAAA,GAAA,6EAAA,GAAA,GAAA,gBAAA,EAAA,EAAwD,GAAA,4EAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAS5D,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,qBAAA,IAAA,8EAAA,GAAA,GAAA,gBAAA,EAAA,EAAyD,IAAA,6EAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAU7D,IAAA,uBAAA,EAAK;;;;;;;AAhCc,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA,EAAsB,YAAA,WAAA;AAUtB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,EAAqB,YAAA,iBAAA;AAYrB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,EAAqB,YAAA,kBAAA;;;;;;AAtC5D,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAwE,GAAA,UAAA,CAAA;AAE7B,IAAA,qBAAA,SAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;AAC3E,IAAA,yBAAA,GAAA,SAAA,CAAA,EAAqB,GAAA,SAAA,CAAA,EACU,GAAA,IAAA,EACnB,GAAA,MAAA,CAAA;AACyB,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;AAChC,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AACf,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA,EAAK,EAChB;AAGT,IAAA,yBAAA,IAAA,OAAA;AACI,IAAA,qBAAA,IAAA,8DAAA,IAAA,GAAA,MAAA,CAAA;AAuCA,IAAA,yBAAA,IAAA,MAAA,EAAA,EAAoB,IAAA,MAAA,EAAA,EACkD,IAAA,KAAA,EAAA;AAC3D,IAAA,qBAAA,SAAA,SAAA,6EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,CAAQ;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,KAAA,EAAA;AACsB,IAAA,uBAAA,EAAI;AAEpD,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,aAAA,EAAA;AACiC,IAAA,2BAAA,iBAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,WAAA,MAAA,MAAA,OAAA,OAAA,YAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAEjC,IAAA,uBAAA,EAAY;AAEhB,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,aAAA,EAAA;AAEI,IAAA,2BAAA,iBAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,YAAA,MAAA,MAAA,OAAA,OAAA,aAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACJ,IAAA,uBAAA,EAAY,EAEX,EACJ,EAGD,EACJ;;;;;AAxEW,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAC,IAAA,CAAA;AACmC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAC,IAAA,CAAA,EAAyD,YAAA,CAAA,OAAA,mBAAA,CAAA;AAYnF,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA;AA0CR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAA,GAAA,CAAA;AAGO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,WAAA;AAAsB,IAAA,2BAAA,WAAA,OAAA,OAAA,SAAA;AAA+B,IAAA,qBAAA,cAAA,IAAA;AAKrD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,aAAA,EAAuB,aAAA,UAAA,EAAyB,aAAA,KAAA;AACvD,IAAA,2BAAA,WAAA,OAAA,OAAA,UAAA;AAAgC,IAAA,qBAAA,cAAA,IAAA;;;ADlDtD,IAAO,iCAAP,MAAO,gCAA8B;EAEjC;EAOR,YAA6B,OAAqB;AAArB,SAAA,QAAA;AAPrB,SAAA,cAAc,OAAO,qBAAqB;AAClD,SAAA,cAAc,CAAA;AACd,SAAA,YAAY,CAAC,QAAQ,QAAQ;AAE7B,SAAA,SAAS,EAAE,WAAW,MAAM,YAAa,KAAI;AAC7C,SAAA,iBAA0B;AAC1B,SAAA,gBAAuB,CAAA;AAGN,SAAA,OAAO,KAAK,MAAM,SAAS,YAAY;EAFF;EAGtD,WAAQ;AACN,SAAK,WAAW,aAAa,UAAU,MAAK;AAClC,WAAK,mBAAkB;IAClC,CAAC;EACF;EAEA,SAAM;AACJ,UAAM,YAAY,OAAO,OAAO,KAAK,MAAM,EAAE,MAAM,SAAO,QAAQ,MAAM,QAAQ,QAAQ,QAAQ,MAAS;AACzG,QAAI,WAAW;AACb;IACF;AACA,SAAK,YAAY,KAAK,iCACjB,KAAK,SADY;MAEpB,WAAW;MACX,UAAU;MACX;AACD,SAAK,SAAS,EAAE,WAAW,MAAM,YAAY,KAAI;EACnD;EAEA,QAAQ,KAAQ;AACd,QAAI,YAAY;EAClB;EAEA,QAAQ,KAAQ;AACd,QAAI,YAAY;EAClB;EAEA,UAAU,OAAa;AACrB,SAAK,YAAY,OAAO,OAAO,CAAC;EAClC;EAEA,qBAAkB;AAChB,SAAK,cAAc,KAAK,YAAY,OAAO,SAAO,CAAC,IAAI,QAAQ;EACjE;EAEA,WAAW,KAAQ;AACjB,QAAI,YAAY;EAClB;EAEA,kBAAe;AACb,SAAK,YAAY,QAAQ,SAAM;AAC7B,UAAI,WAAW,KAAK;IACtB,CAAC;EACH;EAEA,gBAAa;AACX,SAAK,iBAAiB,KAAK,YAAY,SAAS,KAAK,KAAK,YAAY,MAAM,SAAO,IAAI,QAAQ;EACjG;EAEA,qBAAkB;AAChB,UAAM,EAAE,KAAI,IAAK,KAAK,YAAY,SAAS,CAAA;AAC3C,UAAM,cAAc,MAAM;AAC1B,WAAO,CAAC,EAAE,MAAM,oBAAoB,MAAM,YAAY,MAAM,cAAc,eAAe,OAAO,KAAK,WAAW,EAAE;EACpH;EAIF,kBAAe;AACb,UAAM,EAAE,KAAI,IAAK,KAAK,YAAY,SAAS,CAAA;AAC3C,UAAM,cAAc,MAAM;AAC1B,UAAM,aAAa,MAAM,kBAAkB,SAAS,MAAM;AAC1D,UAAM,WAAW,MAAM;AACvB,UAAM,aAAa,MAAM,YAAY,OAAO,MAAM;AAClD,UAAM,OAAO,KAAK,MAAM,WAAW;AACnC,SAAK,cAAc,CAAA;AAEnB,UAAM,cAAc,KAAK,YAAY,eAAe,YAAY,UAAU,YAAY,IAAI;AAC1F,UAAM,WAAW,KAAK,YAAY,aAAa,KAAK,IAAI;AAExD,aAAS,CAAC,aAAa,QAAQ,CAAC,EAAE,UAAU,CAAC,CAAC,iBAAiB,YAAY,MAAK;AAE9E,wBAAmB,gBAAgB;AACnC,UAAI,MAAM,QAAQ,gBAAgB,IAAI,GAAG;AACvC,cAAM,YAAY,gBAAgB,KAAK,CAAC;AACxC,YAAI,WAAW;AACZ,eAAK,cAAc,OAAO,KAAK,SAAS;QAC3C;MACF;AACA,WAAK,gBAAgB,aAAa,QAAQ,CAAA;IAC5C,CAAC;EACH;EAEA,kBAAkB,KAAW;AAC3B,UAAM,MAAM,KAAK,eAAe,KAAK,OAAK,EAAE,QAAQ,GAAG;AACvD,WAAO,MAAM,GAAG,IAAI,QAAQ,KAAK,IAAI,GAAG,MAAM;EAChD;;;uCAjGa,iCAA8B,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAA9B,iCAA8B,WAAA,CAAA,CAAA,6BAAA,CAAA,GAAA,QAAA,EAAA,YAAA,cAAA,aAAA,cAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,YAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,SAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,uBAAA,GAAA,SAAA,WAAA,UAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,WAAA,UAAA,uBAAA,oBAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,SAAA,OAAA,GAAA,OAAA,WAAA,QAAA,GAAA,SAAA,GAAA,CAAA,eAAA,aAAA,GAAA,iBAAA,SAAA,WAAA,YAAA,GAAA,CAAA,eAAA,aAAA,GAAA,iBAAA,SAAA,aAAA,aAAA,WAAA,YAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,QAAA,UAAA,GAAA,CAAA,SAAA,QAAA,GAAA,OAAA,WAAA,MAAA,GAAA,CAAA,SAAA,UAAA,GAAA,OAAA,gBAAA,MAAA,GAAA,CAAA,SAAA,QAAA,GAAA,OAAA,WAAA,MAAA,GAAA,CAAA,SAAA,UAAA,GAAA,OAAA,YAAA,MAAA,GAAA,CAAA,eAAA,aAAA,GAAA,iBAAA,SAAA,WAAA,YAAA,YAAA,GAAA,CAAA,eAAA,aAAA,GAAA,iBAAA,SAAA,aAAA,aAAA,WAAA,YAAA,YAAA,CAAA,GAAA,UAAA,SAAA,wCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACf3C,QAAA,qBAAA,GAAA,wDAAA,IAAA,IAAA,gBAAA,CAAA;;;AAAe,QAAA,qBAAA,QAAA,IAAA,UAAA;;sBDaF,cAAY,SAAA,MAAA,SAAC,gBAAc,mBAAE,aAAW,iBAAA,SAAE,mBAAmB,GAAA,QAAA,CAAA,sgFAAA,EAAA,CAAA;EAAA;;;6EAE7D,gCAA8B,EAAA,WAAA,kCAAA,UAAA,8GAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGZrC,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAwD,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA;;;;AAA1E,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,KAAA;AAAqD,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,MAAA,EAAA;;;;;AAC9E,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAyD,IAAA,iBAAA,CAAA;AAAyB,IAAA,uBAAA;;;;AAA/E,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,KAAA;AAAsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,MAAA,UAAA;;;;;AAO5E,IAAA,6BAAA,CAAA;;;;;AAGA,IAAA,6BAAA,CAAA;;;;;AAEE,IAAA,6BAAA,CAAA;;;;;AADF,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,qFAAA,GAAA,GAAA,gBAAA,EAAA;;;;;;AAAe,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,oBAAA;;;;;AAGf,IAAA,6BAAA,CAAA;;;;;AADF,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,qFAAA,GAAA,GAAA,gBAAA,EAAA;;;;;;AAAe,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,wBAAA;;;;;AANrB,IAAA,yBAAA,GAAA,WAAA,CAAA;AACI,IAAA,qBAAA,GAAA,sEAAA,GAAA,GAAA,gBAAA,EAAA,EAAoF,GAAA,sEAAA,GAAA,GAAA,gBAAA,CAAA,EACpC,GAAA,sEAAA,GAAA,GAAA,gBAAA,CAAA;AAMlD,IAAA,uBAAA;;;;;AAR4D,IAAA,qBAAA,SAAA,MAAA,EAAgB,kBAAA,OAAA,aAAA,OAAA,gBAAA;AAC3D,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,iBAAA,EAAkC,2BAAA,0BAAA,GAAAC,MAAA,OAAA,YAAA,CAAA;AAClC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA,SAAA,SAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA,SAAA,uBAAA,OAAA,oBAAA,CAAA;;;;;AAKf,IAAA,6BAAA,CAAA;;;;;AADF,IAAA,yBAAA,GAAA,WAAA,CAAA;AACE,IAAA,qBAAA,GAAA,sEAAA,GAAA,GAAA,gBAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAFiC,IAAA,qBAAA,SAAA,YAAA,EAAsB,kBAAA,OAAA,aAAA,OAAA,sBAAA;AACtC,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,iBAAA,EAAkC,2BAAA,0BAAA,GAAAA,MAAA,OAAA,kBAAA,CAAA;;;;;AAOjD,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,qEAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,qEAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;;;;AA/BzB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,IAAA,qBAAA,GAAA,iDAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,iDAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,IAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,IAAA,MAAA,CAAW;IAAA,CAAA;AAAE,IAAA,uBAAA,EAAI,EAAO;AAGnG,IAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,UAAA,EACb,GAAA,WAAA,CAAA;AAEN,IAAA,qBAAA,IAAA,4DAAA,GAAA,GAAA,gBAAA,EAAA;AACF,IAAA,uBAAA;AACF,IAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,WAAA,EAAA,EAAgI,IAAA,uDAAA,GAAA,GAAA,WAAA,EAAA;AAYhI,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AAC9E,IAAA,qBAAA,IAAA,sDAAA,GAAA,GAAA,UAAA,EAAA;AAIF,IAAA,uBAAA,EAAM,EAED;;;;;;AAhCA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;AAID,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,IAAA;AAEO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,SAAA,EAAmB,kBAAA,OAAA,aAAA,OAAA,mBAAA;AACX,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,iBAAA,EAAkC,2BAAA,0BAAA,IAAAA,MAAA,OAAA,eAAA,CAAA;AAE3C,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA,WAAA,OAAA,OAAA,SAAA,UAAA;AASE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA,QAAA;AAOiE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,OAAA,KAAA,aAAA,CAAA,OAAA,QAAA;;;;;AAe7E,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAAoB,IAAA,qBAAA,aAAA,OAAA,SAAA,EAAuB,cAAA,OAAA,IAAA,EAAoB,UAAA,UAAA;;;;;AADjE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,+EAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AAAoF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAFxF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,gBAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJgC,IAAA,qBAAA,aAAA,OAAA,IAAA;AACI,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,WAAA;;;;;AAOpC,IAAA,oBAAA,GAAA,0BAAA,EAAA;;;;AAAyB,IAAA,qBAAA,cAAA,OAAA,IAAA,EAAmB,iBAAA,OAAA,gBAAA;;;;;AAI5C,IAAA,oBAAA,GAAA,+BAAA,EAAA;;;;AAA8B,IAAA,qBAAA,cAAA,OAAA,IAAA,EAAmB,eAAA,OAAA,gBAAA;;;ADc7C,IAAO,qBAAP,MAAO,4BAA2B,aAAgC;EAoFvE,YACG,KACA,IACiB,KACA,QAAqB;AAEtC,UAAM,KAAK,EAAE;AAHI,SAAA,MAAA;AACA,SAAA,SAAA;AAjFV,SAAA,WAAW;AAMb,SAAA,sBAAsB;AACtB,SAAA,mBAAmB;AACnB,SAAA,yBAAyB;AAOf,SAAA,cAAc,WAAW,UAAU;AACnC,SAAA,qBAAsB,WAAW,kBAAkB;AACnD,SAAA,oBAAoB,WAAW,gBAAgB;AAC/C,SAAA,aAAa,WAAW,SAAS;AACjC,SAAA,mBAAmB,WAAW,eAAe;AAC7C,SAAA,SAAS,WAAW,SAAS;AAC7B,SAAA,cAAc,qBAAqB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;AACnF,SAAA,kBAA0E,CAAA;AAC1E,SAAA,oBAA4E,CAAA;AAC5E,SAAA,mBAAwB,CAAA;AACP,SAAA,iBAAuC;MACtD,SAAS;QACP;UACE,KAAK;UACL,cAAc;UACd,YAAY,CAAC,WAAW,QAAQ;;;MAGpC,UAAU;MACV,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;;AAG/B,SAAA,aAAmC;MAClD,SAAS;QACP;UACE,KAAK;UACL,cAAc;UACd,YAAY,CAAC,WAAW,QAAQ;;QAElC;UACE,KAAK;UACL,cAAc;UACd,YAAY,CAAC,WAAW,QAAQ;;QAElC;UACE,KAAK;UACL,cAAc;UACd,YAAY,CAAC,WAAW,QAAQ;;;MAGpC,UAAU;MACV,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;;AAG/B,SAAA,gBAAwC;MACvD,SAAS;QACP,EAAE,KAAK,QAAQ,cAAc,QAAQ,YAAY,CAAC,WAAW,QAAQ,EAAC;QACtE,EAAE,KAAK,QAAQ,cAAc,QAAQ,YAAY,CAAC,WAAW,QAAQ,EAAC;;MAExE,UAAU;MACV,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;;AAG/B,SAAA,YAAoC;MACnD,SAAS;QACP,EAAE,KAAK,QAAQ,MAAM,eAAe,UAAW,cAAc,YAAY,YAAY,CAAC,WAAW,QAAQ,EAAC;QACzG,EAAE,KAAK,QAAQ,cAAc,eAAe,YAAY,CAAC,WAAW,QAAQ,EAAC;;MAEhF,UAAU;MACV,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;;AA8wB/B,SAAA,kBAAkB,CAAC,WAA6B;AAC/D,YAAM,EAAE,gBAAgB,eAAe,kBAAkB,WAAU,IACjE;AACF,aAAO,eAAe,aAAa,KACjC,UAAU,CAAC,MAAM,KAAK,eAAe,GACrC,UAAU,eAAe,KAAK,GAC9B,IAAI,CAAC,QAAO;AACV,YAAI,cAAc,GAAG,GAAG;AACtB,2BAAiB,cAAc,UAAU;QAC3C,OAAO;AACL,2BAAiB,gBAAe;QAClC;AACA,yBAAiB,uBAAsB;MACzC,CAAC,CAAC;IAEN;EAnxBA;EACA,IAAI,SAAM;AACR,WAAO,KAAK,KAAK;EACnB;EACA,iBAAc;AACZ,SAAK,YAAY,IAAI,YAAY,KAAK,MAAM,KAAK,MAAM;AACvD,YAAQ,IAAI,KAAK,MAAM,KAAK,SAAS;AACrC,SAAK,UAAU,OAAO,KAAK,OAAO;AAClC,SAAK,cAAc,KAAK,IACrB,cAAa,EACb,KAAK,IAAI,CAAC,SAAc,YAAY,MAAM,SAAS,OAAO,CAAC,CAAC;AAC/D,UAAM,EAAE,YAAW,IAAK,KAAK,OAAO;AACpC,SAAK,SAAS,KAAK,IAChB,SAAS,WAAW,EACpB,KAAK,IAAI,CAAC,SAAc,YAAY,MAAM,SAAS,OAAO,CAAC,CAAC;AAE/D,SAAK,QAAQ,UAAU,WAAW,QAAQ,CAAC,QAAO;AAC9C,UAAI,IAAI,SAAS,UAAU;AACzB,YAAI,IAAI,QAAQ,KAAK,UAAU;AAC7B,eAAK,gBAAgB,KAAK;YACxB,KAAK,IAAI;YACT,SAAS,IAAI;YACb,OAAO,IAAI;WACZ;MACL;AACA,UAAI,IAAI,SAAS,mBAAmB;AAClC,YAAI,IAAI,QAAQ,KAAK,UAAU;AAC7B,eAAK,kBAAkB,KAAK;YAC1B,KAAK,IAAI;YACT,SAAS,IAAI;YACb,OAAO,IAAI;WACZ;MACL;IAEJ,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,OAAO,KAAK,YAAW;AAC5B,SAAK,qBAAoB;AACzB,QAAI,CAAC,WAAU,mBAAmB,EAAE,SAAS,KAAK,OAAO,IAAI,KAAK,CAAC,KAAK,aAAa,KAAK,KAAK,UAAU;AACvG,UAAG;AACA,aAAK,mBAAmB,KAAK,MAAM,KAAK,KAAK,QAAQ;MACxD,QAAM;AACF,aAAK,mBAAmB,CAAA;MAC7B;IACD;AAEA,SAAK,kBAAkB;MACrB,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;QACN,UAAU,CAAC,KAAK;OACjB;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;;;OAGP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO;QACP,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM,GAAG,KAAK,OAAO,SAAS,mBAAmB;OAClD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM,GAAG,KAAK,OAAO,SAAS,mBAAmB;OAClD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GACP,CAAC,MAAM,MAAM,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,OAAO,IAAG,EAAG,CAAC;QAE9D,MAAM,GAAG,CAAC,YAAY,eAAe,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAClE;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,KAAK,UAAU,cAAc,KAAK,OAAO,IAAI,CAAC;QAC1D,MAAM;QACN,MAAM,GAAG,CAAC,YAAY,eAAe,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAClE;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,aAAa;QACb,MAAM;QACN,MAAM,GAAG,CAAC,YAAY,eAAe,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAClE;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,aAAa;OAC5C;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,KAAK,eAAe;QAChC,MAAM,GAAG,CAAC,UAAU,aAAa,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAC9D;OACA,MAAK;AACJ,cAAM,OAAO,IAAI,cAAc;UAC7B,MAAM;UACN,OAAO;UACP,MAAM;UACN,SAAS,GAAG,KAAK,iBAAiB;UAClC,MAAM,GAAG,KAAK,OAAO,SAAS,iBAAiB;SAChD;AACA,aAAa,YAAY;AAC1B,eAAO;MACT,GAAE;MACF,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,KAAK,MAAM;OACxB;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GACJ,CAAC,UAAU,EAAE,SACX,KAAK,OAAO,IAAI,CACjB;OAEJ;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,UAAS;QACT,MAAK;QACL,MAAM;QACN,MAAM,KAAK,OACb,KAAK,KAAK,IAAI,KAAK,EAAG,aAAa,KACjC,UAAU,KAAK,KAAK,IAAI,KAAK,EAAG,KAAK,GACrC,IAAI,SAAO,QAAQ,QAAQ,KAAK,OAAO,SAAS,UAAU,CAAC,IAE7D,GAAG,KAAK;OACP;;AAGH,SAAK,eAAe;MAClB,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,QAAQ,KAAK;QACb,MAAM,GAAG,CAAC,eAAe,OAAO,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAC7D;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,UAAU,KAAK,OAAO,SAAS;QAC/B,MAAM,GAAG,CAAC,gBAAgB,MAAM,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAC7D;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,KAAK,OAAO,SAAQ,YAAa,GAAG,WAAW,kBAAkB,CAAC,IAAI,GAAG,WAAW,UAAU,CAAC;QACxG,MAAM,GAAG,CAAC,UAAU,eAAc,SAAS,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OACxE;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,UAAU;QACV,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,QAAQ;UACvD;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,OAAO;UACtD;UACA;SACD;OACF;MAED,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,OAAO;UACtD;UACA;SACD;OACF;MAED,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,UAAU;QACV,SAAS,KAAK;QACd,MAAM,GAAG,KAAK,OAAO,SAAS,aAAa;OAC5C;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM,GAAG,KAAK,OAAO,SAAS,IAAI;OACnC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM,GAAG,KAAK,OAAO,SAAS,IAAI;QAClC,UAAU;OACX;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,IAAI;OACnC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,IAAI;OACnC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,OAAO,KAAK,EAAE;QACd,SAAS,KAAK;QACd,MAAM,GAAG,KAAK,OAAO,SAAS,UAAU;OACzC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,WAAW,SAAS,CAAC;QACjC,MAAM,GACJ,CAAC,YAAY,aAAa,OAAO,UAAU,EAAE,SAC3C,KAAK,OAAO,IAAI,CACjB;OAEJ;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,KAAK,KAAK,KAAK,MAAM,YAAY,UAAU,QAAQ;UACvD;UACA;UACA;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GACJ,CAAC,YAAY,aAAa,OAAO,UAAU,EAAE,SAC3C,KAAK,OAAO,IAAI,CACjB;OAEJ;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GACJ;UACE;UACA;UACA;UACA;UACA;UACA;UACA,SAAS,KAAK,OAAO,IAAI,CAAC;OAE/B;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,MAAM;OACrC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,aAAa;OAC5C;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,KAAK,WAAW;QAC5B,MAAM,GAAG,KAAK,OAAO,SAAS,aAAa;QAC3C,UAAU;OACX;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM,GACJ;UACE;UACA;UACA;UACA,SAAS,KAAK,OAAO,IAAI,CAAC;QAE9B,UAAU;QACV,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,UAAU;QACV,MAAM,GACJ;UACE;UACA;UACA;UACA,SAAS,KAAK,OAAO,IAAI,CAAC;OAE/B;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,OAAO,KAAK,EAAE;QACd,MAAM,GACJ;UACE;UACA;UACA;UACA,SAAS,KAAK,OAAO,IAAI,CAAC;OAE/B;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,UAAU;QACV,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB,KAAK,OAAO,SAAO,UAAU;OACnF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,KAAK,OAAO,SAAS,mBAAmB;OAClD;MACA,IAAI,cAAc;QACjB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,SAAS,GAAG,WAAW,kBAAkB,CAAC;QAC1C,MAAM,KAAK,gBAAe;OAC3B;MACC,IAAI,cAAc;QAClB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM,KAAK,yBAAwB;OACpC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,SAAS,GAAG,WAAW,WAAW,CAAC;QACnC,MAAM,KAAK,yBAAwB;OACpC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,KAAK,yBAAwB;OACpC;;AAIH,SAAK,qBAAqB;MACxB,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,QAAQ;OAChC;MAED,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,QAAQ;OAChC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,UAAU,SAAS;OACzC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM;QACN,UAAU;QACV,MAAM,GAAG,KAAK,OAAO,UAAU,SAAS;OACzC;;AAGH,SAAK,qBAAoB;AACzB,SAAK,KAAK,IAAI,SAAS,EAAE,aAAa,UAAU,MAAK;AACnD,WAAK,qBAAoB;IAC3B,CAAC;AAED,QAAI,gBAAgB,KAAK,KAAK,SAAS,UAAU,EAAE,UAAU,EAAE;AAC/D,QAAI,gBAAgB,KAAK,KAAK,SAAS,UAAU,EAAE,UAAU,EAAE;AAE/D,kBAAc,aAAa,UAAU,CAAC,QAAO;AAC3C,UAAI,OAAO,cAAc,OAAO;AAC9B,sBAAc,SAAS,KAAK;MAC9B;IACF,CAAC;AAED,kBAAc,aAAa,UAAU,CAAC,QAAO;AAC3C,UAAI,OAAO,cAAc,OAAO;AAC9B,sBAAc,SAAS,KAAK;MAC9B;IACF,CAAC;AAED,SAAK,KAAK,cAAc,UAAU,MAAK;AACrC,UAAI,KAAK,WAAW;AAClB,aAAK,eAAc;MACrB;IACF,CAAC;EACH;EACM,uBAAoB;;AACxB,YAAM,OAAO,KAAK,KAAK,IAAI,SAAS,EAAE;AAEtC,UACE,KAAK,aACL,QACA,KAAK,UAAU,KACf,CAAC,KAAK,KAAK,IAAI,SAAS,GAAG,SAAS,WAAW,KAC/C,CAAC,KAAK,KAAK,IAAI,SAAS,GAAG,SAAS,SAAS,GAC7C;AACA,aAAK,IACJ,kBACC,OACA,GACA,MACA,KAAK,OAAO,KAAK,SACjB,KAAK,OAAO,KAAK,WAAW,EAE7B,UAAU,CAAC,YAAW;AACrB,cAAI,SAAS;AACX,iBAAK,KAAK,IAAI,SAAS,GAAG,UAAU;cAClC,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACF;;EAEQ,KACN,OACA,MACA,WACA,MAAyB;AAEzB,WAAO,MAAM,IAAI,IAAI,EAAE,aAAa,KAClC,UAAU,MAAM,IAAI,IAAI,EAAE,KAAK,GAC/B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,GACtB,IAAI,CAAC,MAAK;AACR,YAAM,QAAQ,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,IAAI;AAChD,aAAO,MAAM,aAAa,MAAM,SAAS,KAAK,OAAO,IAAI;IAC3D,CAAC,CAAC;EAEN;EACF,kBAAe;AACb,UAAM,gBAAgB,KAAK,EAAE,KAAK,IAAI,iBAAiB;AACvD,QAAI,CAAC,eAAe;AAClB,aAAO,GAAG,KAAK;IACjB;AAEA,WAAO,cAAc,aAAa,KAChC,UAAU,cAAc,KAAK,GAC7B,IAAI,WAAS,UAAU,IAAI,CAAC;EAEhC;EAGA,sBAAmB;AACjB,WAAO,KAAK,EAAE,KAAK,IAAI,iBAAiB,GAAG,UAAU;EACvD;EAEA,2BAAwB;AACtB,UAAM,gBAAgB,KAAK,EAAE,KAAK,IAAI,iBAAiB;AACvD,QAAI,iBAAiB,MAAM;AACzB,cAAQ,IAAI,mCAAmC;AAC/C,aAAO,GAAG,KAAK;IACjB;AACA,WAAO,cAAc,aAAa,KAChC,UAAU,cAAc,KAAK,GAC7B,IAAI,iBAAc;AAChB,UAAI,KAAK,OAAO,SAAS,WAAW;AAClC,eAAO;MACT;AACA,UAAI,KAAK,OAAO,SAAS,qBAAqB;AAC5C,eAAO,gBAAgB;MACzB;AACA,aAAO;IACT,CAAC,CAAC;EAEN;EAGU,cAAW;AACjB,UAAM,QAA8D,CAAA;AACpE,WAAO,QAAQ,KAAK,SAAS,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AACtD,UAAI,QAAQ,aAAa,KAAK,OAAO,SAAQ,WAAW;AACtD,gBAAQ,KAAK,YAAY,KAAK,CAAC,EAAE,KAAAC,KAAG,MAAOA,SAAQ,KAAK;MAC1D,WAAS,QAAO,aAAa,KAAK,OAAO,SAAQ,WAAU;AACzD,gBAAQ,KAAK,mBAAmB,KAAK,CAAC,EAAE,KAAAA,KAAG,MAAOA,SAAQ,KAAK;MACjE,WAAW,QAAQ,YAAY;AAC7B,gBAAQ,KAAK,WAAW,KAAK,CAAC,EAAE,KAAAA,KAAG,MAAOA,SAAQ,KAAK;MACzD,WAAW,QAAQ,iBAAiB;AAClC,gBAAQ,KAAK,iBAAiB,KAAK,CAAC,EAAE,KAAAA,KAAG,MAAOA,SAAQ,KAAK;MAC/D;AACA,YAAM,GAAG,IAAI,KAAK,GAAG,QAAQ,KAAK;IACpC,CAAC;AACD,UAAM,aAAa,CAAC,GAAG,eAAe;AACtC,UAAM,UAAU,KAAK,GAAG,QAAQ,KAAK,UAAU,SAAS;MACtD;MACA,UAAU;KACX;AACD,UAAM,MAAM,KAAK,GAAG,QAAQ,KAAK,UAAU,OAAO,KAAK;AACvD,UAAM,SAAO,KAAK,GAAG,QAAQ,KAAK,UAAU,UAAQ,EAAE;AACtD,UAAM,SAAS,YAAY,KAAK,UAAU,QAAQ,EAAE,aAAa,KAAI,CAAE;AACvE,UAAM,SAAS,KAAK,GAAG,QACrB,KAAK,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,KAAK,UAAU,MAAM,CAAC;AAEzD,QAAI,KAAK,OAAO,SAAS,eAAe;AACtC,YAAM,cAAc,KAAK,GAAG,QAC1B,KAAK,YAAY,KACf,CAAC,UAAU,MAAM,QAAQ,CAAC,KAAK,UAAU,WAAW,KACjD,MACL,CAAC,WAAW,QAAQ,CAAC;IAEzB;AAEA,UAAM,OAAO,CAAA;AACb,WAAO,QAAQ,KAAK,UAAU,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC3D,UACE;QACE;QACA;QACA;QACA;QACA;QACA,SAAS,GAAG,GACd;AACA,aAAK,GAAG,IAAI,KAAK,GAAG,QAAQ,KAAK;AACjC;MACF;AACA,UAAI,QAAQ,UAAU;AACpB,YAAI,KAAK,OAAO,SAAS,YAAY;AACnC,kBAAQ,YAAY,OAAO,SAAS,OAAO;QAC7C,OAAO;AACL,kBAAQ,MAAM,IAAI,CAAC,EAAE,OAAAC,OAAK,OAAQ,EAAE,KAAKA,QAAO,OAAAA,OAAK,EAAG;QAC1D;AACA,YACE,CAAC,gBAAgB,UAAU,QAAQ,aAAa,EAAE,SAChD,KAAK,OAAO,IAAI,GAElB;AACA,eAAK,GAAG,IAAI,YAAY,OAAO,EAAE,aAAa,KAAI,CAAE;AACpD;QACF;MACF,WAAU,QAAQ,cAAc,KAAK,OAAO,SAAS,UAAU;AAC7D,gBAAQ,KAAK,kBAAkB,KAAK,CAAC,EAAE,KAAAD,KAAG,MAAOA,SAAQ,KAAK;MAChE,WAAU,CAAC,QAAQ,kBAAkB,iBAAiB,UAAU,EAAE,SAAS,GAAG,GAAG;AAC/E,aAAK,GAAG,IAAI,YAAY,OAAO,EAAE,aAAa,KAAI,CAAE;AACpD;MACF;AAEA,WAAK,GAAG,IAAI,KAAK,GAAG,QAAQ,KAAK;IACnC,CAAC;AACD,UAAM,OAAO,KAAK,GAAG,MAAM,IAAI;AAE/B,UAAM,WAAW,CAAA;AACjB,WAAO,QAAQ,KAAK,UAAU,QAAQ,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC/D,UAAI,QAAQ,eAAe,KAAK,OAAO,UAAU,WAAW;AAC1D,iBAAS,GAAG,IAAI,KAAK,GAAG,QAAQ,OAAO,CAAC,WAAW,QAAQ,CAAC;MAC9D,OAAO;AACL,iBAAS,GAAG,IAAI,KAAK,GAAG,QAAQ,KAAK;MACvC;IACF,CAAC;AACD,UAAM,WAAW,KAAK,GAAG,MAAM,QAAQ;AAEvC,UAAM,IAAI,aAAa,UAAU,MAAK;AACxC,YAAM,OAAO,MAAM,EAAE;IACvB,CAAC;AAEG,WAAO,KAAK,GAAG,MAAM,KAAK;EAC5B;EAEQ,uBAAoB;AAC1B,QAAI,CAAC,UAAU,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AAC/C,YAAM,aAAa,KAAK,EAAE;AAC1B,YAAM,gBAAgB,KAAK,EAAE;AAE7B,UAAI,cAAc,eAAe;AAC/B,aAAK,gBAAgB;UACnB,gBAAgB;UAChB,eAAe,CAAC,QAAQ,QAAQ;UAChC,kBAAkB;UAClB,YAAY,WAAW;SACxB,EAAE,UAAS;MACd;IACF;AAEI,QAAI,CAAC,UAAU,QAAQ,aAAa,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AAChE,WAAK,gBAAgB;QACnB,gBAAgB,KAAK,EAAE;QACvB,eAAe,CAAC,SAAS,KAAK,OAAO,SAAS,WAAW;QACzD,kBAAkB,KAAK,EAAE,KAAK,IAAI,QAAQ;QAC1C,YAAY,WAAW;OACxB,EAAE,UAAS;IACd;AACA,QAAI,CAAC,eAAe,OAAO,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AACvD,WAAK,gBAAgB;QACnB,gBAAgB,KAAK,EAAE;QACvB,eAAe,CAAC,SAAS,SAAS,KAAK,OAAO;QAC9C,kBAAkB,KAAK,EAAE;QACzB,YAAY,WAAW;OACxB,EAAE,UAAS;IACd;AACA,QAAI,CAAC,IAAI,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AACnC,YAAM,qBAAqB,CAAC,WAAW;AACvC,yBAAmB,QAAQ,CAAC,gBAAe;AAC5C,cAAM,UAAU,KAAK,EAAE,WAAW;AACnC,YAAI,SAAS;AACX,eAAK,gBAAgB;YACnB,gBAAgB,KAAK,EAAE;YACvB,eAAe,CAAC,SAAS,SAAS,KAAK,OAAO;YAC9C,kBAAkB;YAClB,YAAY,WAAW;WACxB,EAAE,UAAS;QACd;MACF,CAAC;IACD;AACA,QAAI,CAAC,uBAAuB,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AACxD,YAAM,qBAAqB,CAAC,YAAY,cAAc,eAAc,WAAW;AAC/E,yBAAmB,QAAQ,CAAC,gBAAe;AAC3C,cAAM,UAAU,KAAK,EAAE,KAAK,IAAI,WAAW;AAC3C,YAAI,SAAS;AACX,eAAK,gBAAgB;YACnB,gBAAgB,KAAK,EAAE;YACvB,eAAe,CAAC,SAAS,SAAS,KAAK,OAAO;YAC9C,kBAAkB;YAClB,YAAY,WAAW;WACxB,EAAE,UAAS;QACd;MACF,CAAC;IACF;AACC,QAAI,CAAC,qBAAoB,sBAAsB,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AAC3E,YAAM,qBAAqB,CAAC,cAAc,eAAc,WAAW;AACnE,yBAAmB,QAAQ,CAAC,gBAAe;AAC3C,cAAM,UAAU,KAAK,EAAE,KAAK,IAAI,WAAW;AAC3C,YAAI,SAAS;AACX,eAAK,gBAAgB;YACnB,gBAAgB,KAAK,EAAE;YACvB,eAAe,CAAC,SAAS,SAAS,KAAK,OAAO;YAC9C,kBAAkB;YAClB,YAAY,WAAW;WACxB,EAAE,UAAS;QACd;MACF,CAAC;IACF;EACD;EAmBQ,iBAAc;AACpB,SAAK,sBAAsB,KAAK,gBAAgB,KAAK,aAAU;AAC7D,YAAM,cAAc,QAAQ;AAC5B,YAAM,cAAc,KAAK,KAAK,IAAI,WAAW;AAC7C,aAAO,aAAa;IACtB,CAAC;AAED,QAAI,KAAK,OAAO,SAAS;AACvB,WAAK,mBAAmB,KAAK,aAAa,KAAK,aAAU;AACvD,YAAI;AACJ,cAAM,cAAc,QAAQ;AAC5B,YAAI,QAAQ,OAAO;AACjB,wBAAc,QAAQ,MAAM,IAAI,WAAW;QAC7C,WAAW,YAAY,SAAS,GAAG,GAAG;AACpC,wBAAc,KAAK,KAAK,IAAI,WAAW;QACzC,OAAO;AACL,wBAAc,KAAK,KAAK,IAAI,WAAW;QACzC;AACA,eAAO,aAAa;MACtB,CAAC;IACH;AAEA,QAAI,KAAK,OAAO,UAAU;AACxB,WAAK,yBAAyB,KAAK,mBAAmB,KAAK,aAAU;AACnE,YAAI;AACJ,cAAM,cAAc,QAAQ;AAC5B,YAAI,QAAQ,OAAO;AACjB,wBAAc,QAAQ,MAAM,IAAI,WAAW;QAC7C,WAAW,YAAY,SAAS,GAAG,GAAG;AACpC,wBAAc,KAAK,KAAK,IAAI,WAAW;QACzC,OAAO;AACL,wBAAc,KAAK,KAAK,IAAI,WAAW;QACzC;AACA,eAAO,aAAa;MACtB,CAAC;IACH;EACF;EAEA,WAAQ;AACR,QAAI,KAAK,4BAA2B,GAAI;AACtC,WAAK,OAAO,QACV,6EACA,SAAS;AAEX,aAAO;IACT;AAEA,SAAK,YAAY;AACjB,SAAK,eAAc;AAEnB,QAAI,CAAC,KAAK,KAAK;AAAO;AAEtB,UAAyB,UAAK,KAAK,OAA3B,SAx+BV,IAw+B2B,IAAN,cAAM,IAAN,CAAX;AACR,UAAM,aAAa,KAAK,cAAc,CAAC;AACvC,UAAM,eAAe,KAAK,gBAAgB,CAAC;AAE3C,QAAI,gBAAgB;AACpB,QAAI,KAAK,OAAO,SAAS,aAAa,KAAK,uBAAuB;AAChE,sBAAgB,KAAK,gBAAgB,GAAG,KAAK,sBAAsB,aAAa;IAClF,WAAW,KAAK,OAAO,SAAS,uBAAuB,KAAK,gCAAgC;AAC1F,sBAAgB,KAAK,yBAAyB,GAAG,KAAK,+BAA+B,WAAW;IAClG,WAAS,KAAK,OAAO,SAAS,YAAW;AACvC,YAAM,cAAc;QACpB,KAAK,KAAK,KAAK,IAAI,KAAK,EAAG,UAAU,OAAO,QAAQ;QACpD,MAAM,KAAK,KAAK,IAAI,KAAK,EAAG,UAAU,QAAO,KAAG,KAAK,KAAK,IAAI,QAAQ,EAAG;;AAG3E,sBAAgB,KAAK,UAAU,WAAW;IAC1C;AAEA,UAAM,YAA0B,KAAK,eAAe,GAAG,YAAY,cAAc,aAAa;AAC9F,SAAK,OAAO,KAAK,SAAS;AAC1B,SAAK,IAAI,MAAM,SAAS;EAC1B;EAEU,8BAA2B;AACnC,WACE,KAAK,MAAM,OAAO,QAAQ,SAAS,UACnC,CAAC,eAAe,MAAM,EAAE,SAAS,KAAK,OAAO,IAAI;EAErD;EAEQ,cAAc,GAAM;AAC1B,QAAI,CAAC,YAAY,aAAa,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AAC1D,aAAO,gBAAgB,EAAE,KAAK,QAAQ,SAAS,OAAO;IACxD;AACA,WAAO,EAAE,KAAK,OAAO,IAAI,CAAC,EAAE,OAAO,IAAG,OAAQ;MAC5C,OAAO;MACP;MACA;EACJ;EAEQ,gBAAgB,GAAM;AAC5B,WAAO,EAAE,KAAK,UAAU,OAAO,EAAE,KAAK,YAAY;EACpD;EAEQ,eAAe,GAAQ,YAAmB,cAAsB,eAAqB;AAC3F,WAAO,iCACF,IADE;MAEL,MAAM,KAAK,OAAO;MAClB,eAAe,EAAE;MACjB,QAAQ,EAAE,OAAO,IAAI,CAAC,EAAE,MAAK,OAAQ,EAAE,OAAO,OAAO,MAAK,EAAG;MAC7D,eAAe;MACf,MAAM,iCACD,EAAE,OADD;QAEJ,QAAQ;QACR,UAAU;QACV,MAAM,EAAE,KAAK,MAAM,OAAO,EAAE,KAAK;QACjC,YAAY,EAAE,MAAM,YAAY;QAChC,iBAAiB,EAAE,MAAM,mBAAmB;QAC5C,kBAAkB,EAAE,MAAM,kBAAkB,SAAS,EAAE,MAAM;QAC7D,eAAe,EAAE,MAAM,iBAAiB;;MAE1C,SAAS,EAAE,SAAS,OAAO,EAAE;MAC7B,UAAU,EAAE,UAAU,OAAO,EAAE;MAC/B,QAAQ,EAAE,QAAQ,OAAO,EAAE;MAC3B,aAAa,EAAE,aAAa,OAAO,EAAE;MACrC,YAAY,EAAE,WAAW;;EAE7B;EAGE,gBAAgB,UAAe,eAAkB;AAC/C,kBAAc,QAAQ,UAAO;AACxB,aAAO,KAAK;AACZ,aAAO,KAAK;IACjB,CAAC;AACD,UAAM,aAAa;MACjB,aAAa,SAAS,MAAM,YAAY,OAAO,SAAS,MAAM,cAAc;MAC5E,UAAU,SAAS,kBAAkB,SAAS,SAAS,MAAM,oBAAoB;MACjF,cAAc,SAAS,MAAM,YAAY;MACzC,gBAAgB,iBAAiB,CAAA;MACjC,cAAc,SAAS,MAAM,iBAAiB,CAAA;;AAEhD,WAAO,KAAK,UAAU,UAAU;EAClC;EAEC,yBAAyB,UAAe,MAAS;AAChD,SAAK,QAAQ,UAAO;AACf,aAAO,KAAK;AACZ,aAAO,KAAK;IACjB,CAAC;AACD,UAAM,aAAa;MACjB,mBAAmB,SAAS,MAAM,mBAAmB;MACrD,aAAa,SAAS,MAAM,YAAY,OAAO,SAAS,MAAM,cAAc;MAC5E,UAAU,SAAS,MAAM,kBAAkB,SAAS,SAAS,MAAM,oBAAoB;MACvF,cAAc,SAAS,MAAM,YAAY;MACzC,gBAAgB,QAAQ,CAAA;MACxB,cAAc,SAAS,MAAM,iBAAiB,CAAA;;AAEhD,WAAO,KAAK,UAAU,UAAU;EAClC;;;uCAvgCW,qBAAkB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,WAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BACnB,2BAAyB,CAAA;8BAExB,gCAA8B,CAAA;;;;;;;;;ACvE3C,QAAA,qBAAA,GAAA,4CAAA,IAAA,IAAA,gBAAA,CAAA,EAAgC,GAAA,2CAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAyCqB,GAAA,2CAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAQrB,GAAA,2CAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;;;AAjDjB,QAAA,qBAAA,QAAA,IAAA,SAAA;;sBDkED,MAAM,qBAAmB,oBAAA,sBAAA,oBAAE,eAAe,cAAa,2BAA2B,kBAAkB,SAAO,wBAAwB,WAAU,8BAA8B,GAAA,QAAA,CAAA,2IAAA,EAAA,CAAA;EAAA;;;6EAE5K,oBAAkB,EAAA,WAAA,sBAAA,UAAA,oFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;AGhE3B,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAwD,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;;;;;AAIzD,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,UAAA,EAAA;AAA8C,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;;;;;AAAf,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,IAAA,KAAA;;;;;AAEhD,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAAK,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,iBAAA,uBAAA,EAAuB,MAAA,OAAA,IAAA,OAAA,EAET,WAAA,OAAA,iBAAA,CAAA;;;;;AAIrB,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA,EAEL,eAAA,OAAA,IAAA,WAAA,EACC,aAAA,OAAA,IAAA,UAAA,QAAA,OAAA,IAAA,WAAA,IAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAc7B,IAAA,oBAAA,GAAA,QAAA,EAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmB,IAAA,iBAAA,CAAA;AAAW,IAAA,uBAAA;;;;;;AADE,IAAA,sBAAA,oBAAA,OAAA,SAAA,OAAA,CAAA;AACb,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA;;;;;AAGnB,IAAA,oBAAA,GAAA,QAAA,EAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmB,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;;;;;AADH,IAAA,sBAAA,oBAAA,OAAA,SAAA,OAAA,CAAA;AACb,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,KAAA;;;;;AAfzB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AAQE,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,eAAA,EAAA,EAA4D,GAAA,0DAAA,GAAA,GAAA,eAAA,EAAA;AAQ9D,IAAA,uBAAA;;;;;AAfE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA,EAA2B,cAAA,IAAA,EACR,MAAA,OAAA,IAAA,OAAA,EAED,WAAA,OAAA,iBAAA,CAAA,EACY,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAsB9B,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAgE,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAjC,IAAA,qBAAA,SAAA,MAAA,KAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,MAAA,KAAA;;;;;AATpE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AAQE,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AARE,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,eAAA,WAAA,EACQ,MAAA,OAAA,IAAA,OAAA,EACT,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA;AAIT,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,cAAA;;;;;AAK1B,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAmE,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAjC,IAAA,qBAAA,SAAA,MAAA,KAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,MAAA,KAAA;;;;;AAFvE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AACE,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,iBAAA,CAAA,EAA8B,cAAA,IAAA,EAAoB,iBAAA,IAAA,EAAuB,MAAA,OAAA,IAAA,OAAA,EAAwC,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAChG,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA;;;;;AAI9B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA,EAAA;;;;;AAAW,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,iBAAA,CAAA,EAA8B,cAAA,IAAA,EAAoB,iBAAA,IAAA,EAAuB,MAAA,OAAA,IAAA,OAAA,EAAwC,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAO1H,IAAA,yBAAA,GAAA,QAAA;AAA8C,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAd,IAAA,oBAAA;AAAA,IAAA,4BAAA,MAAA,KAAA;;;;;AAFlD,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,UAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAFS,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EAAoC,WAAA,OAAA,iBAAA,CAAA;AACrC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA;;;;;AAG5B,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,oBAAA,GAAA,mBAAA,EAAA;AASF,IAAA,uBAAA;;;;;AARI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,YAAA,IAAA,EAClB,WAAA,IAAA,EACD,SAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,YAAA;;;;;AAOtB,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA,EAAA;;;;;AACE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA,EAA2B,YAAA,OAAA,IAAA,QAAA,EACF,iBAAA,KAAA,EACF,MAAA,OAAA,IAAA,OAAA,EAIL,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA;;;;;;AAcjC,IAAA,yBAAA,GAAA,IAAA,EAAqC,GAAA,QAAA,EAAA;AAC7B,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,YAAA,WAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,QAAA,CAAkB;IAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACvF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,YAAA,WAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AAAiB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgC,IAAA,uBAAA,EAAI;;;;AADzE,IAAA,oBAAA;AAAA,IAAA,gCAAA,SAAA,SAAA,WAAA;AAA+B,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;;;;;AAHxE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAoD,GAAA,IAAA;AAEhD,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,MAAA,EAAA;AAIF,IAAA,uBAAA,EAAK;;;;AAJkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA;;;;;;AAQrB,IAAA,yBAAA,GAAA,IAAA,EAAsC,GAAA,QAAA,EAAA;AAC9B,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,QAAA,CAAkB;IAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACvF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AAAiB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgC,IAAA,uBAAA,EAAI;;;;AADzE,IAAA,oBAAA;AAAA,IAAA,gCAAA,SAAA,SAAA,WAAA;AAA+B,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;;;;;AAHxE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsD,GAAA,IAAA;AAElD,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,MAAA,EAAA;AAIF,IAAA,uBAAA,EAAK;;;;AAJkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;;AAhB3B,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,SAAA,EAAA;AACkD,IAAA,qBAAA,UAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAU,OAAA,OAAA,QAAA,OAAA,IAAA,IAAA,OAAA,IAAA,OAAA,CAAmC;IAAA,CAAA;AAAtH,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,SAAA,EAAA,EAAgG,GAAA,SAAA,EAAA;AAElG,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,EAAA,EAAoD,GAAA,mDAAA,GAAA,GAAA,OAAA,EAAA;;;;;AAJ/B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EAAmC,YAAA,IAAA;AACf,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AACxB,IAAA,oBAAA;AAAA,IAAA,gCAAA,OAAA,aAAA,OAAA,IAAA,EAAA;AAEV,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,SAAA,CAAA;AAQA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,WAAA,CAAA;;;;;;AAkBrB,IAAA,yBAAA,GAAA,IAAA,EAAkC,GAAA,QAAA,EAAA;AAC1B,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,QAAA,CAAkB;IAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACvF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AAAiB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgC,IAAA,uBAAA,EAAI;;;;AADzE,IAAA,oBAAA;AAAA,IAAA,gCAAA,SAAA,SAAA,WAAA;AAA+B,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;;;;;;AAOpE,IAAA,yBAAA,GAAA,IAAA,EAAsC,GAAA,QAAA,EAAA;AAC9B,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,QAAA,CAAkB;IAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACvF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AAAiB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgC,IAAA,uBAAA,EAAI;;;;AADzE,IAAA,oBAAA;AAAA,IAAA,gCAAA,SAAA,SAAA,WAAA;AAA+B,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;;;;;AAHxE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsD,GAAA,IAAA;AAElD,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,MAAA,EAAA;AAIF,IAAA,uBAAA,EAAK;;;;AAJkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;;AAjB3B,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,SAAA,IAAA,CAAA;AACyB,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,gBAAA,sBAAA,CAAA;AAAA,aAAA,sBAAA,cAAA,QAA2B,IAAI;IAAA,CAAA,EAAC,UAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAqC,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA;AAAxI,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,SAAA,EAAA,EAAkG,GAAA,SAAA,EAAA;AAEpG,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwB,GAAA,IAAA;AAEpB,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,MAAA,EAAA;AAIF,IAAA,uBAAA,EAAK;AAEP,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,EAAA;;;;;AAbgC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA;AACX,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AACJ,IAAA,oBAAA;AAAA,IAAA,gCAAA,OAAA,iBAAA,OAAA,IAAA,EAAA;AAKV,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,QAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,WAAA,CAAA;;;;;AAkBvB,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAgE,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAjC,IAAA,qBAAA,SAAA,OAAA,KAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AATpE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AAQE,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AARE,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,eAAA,WAAA,EACQ,MAAA,OAAA,IAAA,OAAA,EACT,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA;AAIT,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,cAAA;;;;;AAK1B,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAmE,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAjC,IAAA,qBAAA,SAAA,OAAA,KAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAFvE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AACE,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,iBAAA,IAAA,EAAuB,WAAA,OAAA,iBAAA,CAAA,EAAoD,MAAA,OAAA,IAAA,OAAA,EAAmB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAChG,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA;;;;;AAG9B,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,QAAA,EAAA;AAED,IAAA,oBAAA,GAAA,SAAA,EAAA;AASF,IAAA,uBAAA,EAAO;;;;;AAPH,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,SAAA,OAAA,IAAA,aAAA,EAER,WAAA,OAAA,iBAAA,CAAA;;;;;AAOnC,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,0BAAA,GAAAE,MAAA,OAAA,IAAA,CAAA,EAA2B,MAAA,OAAA,IAAA,OAAA,EACT,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,SAAA,OAAA,IAAA,aAAA,EAER,WAAA,OAAA,iBAAA,CAAA,EACG,aAAA,OAAA,IAAA,UAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAIlC,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAGE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,WAAA,OAAA,iBAAA,CAAA,EAEY,eAAA,OAAA,IAAA,eAAA,QAAA;;;;;AAKlC,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA,EAEL,SAAA,OAAA,IAAA,aAAA,EACH,aAAA,OAAA,IAAA,SAAA,aAAA,OAAA,OAAA,OAAA,IAAA,SAAA,SAAA;;;;;AAI/B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA,EAEL,SAAA,OAAA,IAAA,aAAA,EACH,SAAA,OAAA,IAAA,aAAA,EACA,aAAA,OAAA,IAAA,SAAA,aAAA,OAAA,OAAA,OAAA,IAAA,SAAA,SAAA;;;;;AAI/B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA,EAEL,SAAA,OAAA,IAAA,aAAA,EACH,SAAA,OAAA,IAAA,aAAA,EACA,aAAA,OAAA,IAAA,UAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAI/B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AACE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA,EAEL,SAAA,OAAA,IAAA,aAAA,EACH,SAAA,OAAA,IAAA,aAAA,EACA,aAAA,OAAA,IAAA,UAAA,QAAA,OAAA,IAAA,WAAA,IAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAI/B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAAmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,WAAA,OAAA,iBAAA,CAAA,EAA+B,aAAA,OAAA,IAAA,UAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAEtE,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA,EAAA;;;;;AACE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA,EAA0B,YAAA,IAAA,EACT,iBAAA,KAAA,EACM,MAAA,OAAA,IAAA,OAAA,EAIL,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA;;;;;AAQnC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,SAAA,EAAA;AACG,IAAA,iBAAA,CAAA;AACD,IAAA,oBAAA,GAAA,SAAA,EAAA,EAA8G,GAAA,QAAA,EAAA;AAEhH,IAAA,uBAAA;;;;;;;AAHG,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,WAAA,OAAA,GAAA;AACmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,IAAA,QAAA,EAAyB,SAAA,WAAA,KAAA,EAAuB,MAAA,OAAA,IAAA,KAAA,KAAA,EAAkB,QAAA,OAAA,IAAA,OAAA;AAC7D,IAAA,oBAAA;AAAA,IAAA,sBAAA,oBAAA,OAAA,IAAA,WAAA,YAAA,aAAA;;;;;AANjC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,gBAAA,EAAA;AAOF,IAAA,uBAAA;;;;;AAPmC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAWjC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,SAAA,EAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA,EAME,GAAA,KAAA,EAAA;AAEF,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA,EAAO;;;;;;AAN9B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,YAAA,KAAA,EAAuB,WAAA,YAAA,UAAA,OAAA,IAAA,aAAA,EACwB,MAAA,OAAA,IAAA,OAAA,EAC7B,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAGF,IAAA,oBAAA;AAAA,IAAA,sBAAA,qBAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,YAAA,YAAA,aAAA;AACZ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,YAAA,KAAA;;;;;AAZd,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,gBAAA,EAAA;AAaF,IAAA,uBAAA;;;;;AAboC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;;AAetC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,OAAA,EAAA,EACoF,GAAA,UAAA,EAAA;AAEvG,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAS;AAEX,IAAA,yBAAA,GAAA,SAAA,IAAA,CAAA;AAUE,IAAA,qBAAA,cAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAc,OAAA,aAAA,MAAA,CAAoB;IAAA,CAAA,EAAC,SAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAG1B,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAb5B,IAAA,uBAAA,EAcE;;;;;AAnB+B,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,qBAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,YAAA,YAAA,aAAA;AAO/B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,UAAA,EAA0B,MAAA,OAAA,IAAA,OAAA,EACR,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,OAAA,EAIhB,SAAA,OAAA,WAAA,OAAA,YAAA,CAAA,EACe,WAAA,OAAA,OAAA,EAEf,WAAA,OAAA,iBAAA,CAAA;;;;;AAOzB,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,0BAAA,GAAAC,MAAA,OAAA,UAAA,OAAA,qBAAA,CAAA,EAAqF,MAAA,OAAA,IAAA,OAAA,EAEnE,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA;;;;;;AAKvC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,OAAA,EAAA,EACoF,GAAA,UAAA,EAAA;AAErG,IAAA,oBAAA,GAAA,KAAA,EAAA;AACJ,IAAA,uBAAA,EAAS;AAEX,IAAA,yBAAA,GAAA,SAAA,IAAA,CAAA;AAQE,IAAA,qBAAA,cAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAc,OAAA,aAAA,MAAA,CAAoB;IAAA,CAAA;AARpC,IAAA,uBAAA,EAaE;;;;;AAlB+B,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,qBAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,YAAA,YAAA,aAAA;AAO/B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,UAAA,EAA0B,MAAA,OAAA,IAAA,OAAA,EACR,SAAA,OAAA,WAAA,OAAA,YAAA,CAAA,EAIgB,WAAA,OAAA,OAAA,EAEf,WAAA,OAAA,OAAA,EACA,WAAA,OAAA,iBAAA,CAAA,EACW,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;;AAKpC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0F,GAAA,OAAA,EAAA,EACnD,GAAA,OAAA,EAAA,EACwE,GAAA,UAAA,EAAA;AAEvG,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAS;AAEX,IAAA,yBAAA,GAAA,SAAA,IAAA,CAAA;AAQE,IAAA,qBAAA,cAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAc,OAAA,aAAA,MAAA,CAAoB;IAAA,CAAA;AARpC,IAAA,uBAAA,EAUE;AAEJ,IAAA,oBAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AApBK,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAEc,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,qBAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,YAAA,YAAA,aAAA;AAO/B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,iBAAA,CAAA,EAA8B,eAAA,OAAA,UAAA,EACJ,SAAA,OAAA,WAAA,OAAA,YAAA,CAAA,EAIQ,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAK3B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EAAmC,SAAA,OAAA,WAAA,EAAsB,WAAA,OAAA,iBAAA,CAAA,EAA+B,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAGvG,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAME,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,kBAAA,uBAAA;;;;;AAMJ,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAME,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,kBAAA,uBAAA;;;;;;AAMJ,IAAA,kCAAA,CAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,OAAA,EAAA,EACY,GAAA,UAAA,EAAA;AAE7B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAS;AAEX,IAAA,yBAAA,GAAA,SAAA,IAAA,CAAA;AAUE,IAAA,qBAAA,cAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAc,OAAA,aAAA,MAAA,CAAoB;IAAA,CAAA,EAAC,SAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAG1B,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAb5B,IAAA,uBAAA,EAcE;;;;;AAZA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,cAAA,EAA8B,MAAA,OAAA,IAAA,OAAA,EACZ,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,OAAA,EAIhB,SAAA,OAAA,WAAA,OAAA,YAAA,CAAA,EACe,WAAA,OAAA,OAAA,EAEf,WAAA,OAAA,iBAAA,CAAA;;;;;AAMzB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;AACF,IAAA,uBAAA;;;;;AADyC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAG7D,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAAmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EAAoC,WAAA,OAAA,iBAAA,CAAA,EAA+B,SAAA,OAAA,IAAA,aAAA;;;;;AAE1G,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAAmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EAAoC,WAAA,OAAA,iBAAA,CAAA,EAA+B,SAAA,OAAA,IAAA,aAAA;;;;;AAE1G,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA,EAQE,GAAA,oBAAA,EAAA;;;;;AANA,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,iBAAA,CAAA,EAEL,SAAA,OAAA,IAAA,aAAA;AAId,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,WAAA;;;;;AAEpB,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,cAAA,EAAA;;;;;AAA6C,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,WAAA,OAAA,iBAAA,CAAA,EAA+B,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAGhG,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgC,GAAA,iBAAA,EACb,GAAA,oBAAA,EAAA,EACc,GAAA,QAAA,EAAA;AACG,IAAA,iBAAA,GAAA,IAAA;AAAE,IAAA,uBAAA,EAAO;AAEzC,IAAA,yBAAA,GAAA,oBAAA,EAAA,EAA8B,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,GAAA,KAAA;AAAG,IAAA,uBAAA,EAAO,EACvB,EACH;;;;;;AAGtB,IAAA,6BAAA,CAAA;;;;;AAtdJ,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAiH,GAAA,SAAA,CAAA;AAE7G,IAAA,oBAAA,GAAA,KAAA,CAAA;AACA,IAAA,iBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,oCAAA,GAAA,GAAA,QAAA,CAAA;AACF,IAAA,uBAAA;AAEA,IAAA,kCAAA,GAAA,CAAA;AACE,IAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,gBAAA,CAAA,EAAuC,GAAA,4CAAA,GAAA,GAAA,gBAAA,CAAA,EAGM,GAAA,4CAAA,GAAA,GAAA,gBAAA,CAAA,EAOH,GAAA,4CAAA,GAAA,GAAA,gBAAA,CAAA,EAWE,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAmBA,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAYL,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAMS,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAMV,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAKM,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAaH,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAeJ,IAAA,6CAAA,IAAA,GAAA,gBAAA,CAAA,EAuBO,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAwBA,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAYU,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAKb,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAeG,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAYG,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAWT,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAWI,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAYN,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAYK,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAWN,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAGS,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAeN,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAWM,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAiBE,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAyBV,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAWK,IAAA,6CAAA,GAAA,IAAA,gBAAA,CAAA,EAuBI,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAuBL,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAaO,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAaH,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAwBL,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAKG,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAGE,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAGM,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAYG,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA,EAIJ,IAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA;;AAcrD,IAAA,uBAAA;;;;AAxdiB,IAAA,qBAAA,MAAA,cAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,EAAgC,WAAA,OAAA,UAAA,CAAA;AACxC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,kBAAA,CAAA,EAA+B,MAAA,YAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,EAA+B,UAAA,0BAAA,IAAAC,IAAA,EAAA,SAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,IAAA,CAAA;AAChE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,mBAAA,CAAA;AACH,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,IAAA,OAAA,GAAA;AACO,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAGK,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,IAAA,IAAA;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,QAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,cAAA;AAOA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,WAAA;AAWA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAmBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,QAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,iBAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,MAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAaA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,UAAA;AAeA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,MAAA;AAuBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAwBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,uBAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,UAAA;AAeA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,gBAAA;AAWA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA;AAWA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,WAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,KAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,UAAA;AAWA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,IAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAeA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA;AAWA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAiBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,eAAA;AAyBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,KAAA;AAWA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,UAAA;AAuBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,cAAA;AAuBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,SAAA;AAaA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,gBAAA;AAaA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAwBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,QAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,WAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,mBAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,sBAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,kBAAA;;;AD/Zb,IAAO,eAAP,MAAO,cAAY;EAUvB,IAAI,cAAW;AACb,QAAI,KAAK,SAAS,qBAAqB,SAAS,GAAG;AACjD,WAAK,SAAS,qBAAqB,QAAQ,CAAC,YAAW;AACrD,YAAI,KAAK,SAAS,SAAS,GAAG;AAC5B,gBAAM,QAAQ,KAAK,SAAS,UAAU,CAAC,MAAM,EAAE,UAAU,MAAM,QAAQ,QAAQ;AAC/E,cAAI,UAAU,IAAI;AAChB,iBAAK,SAAS,OAAO,OAAO,CAAC;UAC/B;QACF,OAAO;AACL,cAAI,KAAK,aAAa,SAAS,KAAK,QAAQ,UAAU,QAAW;AAC/D,kBAAM,QAAQ,KAAK,aAAa,UAAU,CAAC,MAAM,EAAE,UAAU,MAAM,QAAQ,QAAQ;AACnF,gBAAI,UAAU,IAAI;AAChB,mBAAK,aAAa,OAAO,OAAO,CAAC;YACnC;UACF;QACF;MACF,CAAC;IACH;AACA,WAAO,KAAK,SAAS,SAAS,IAAI,KAAK,WAAW,KAAK;EACzD;EASA,YAAmB,OAA2B,UAAyC,wBAA8C;AAAlH,SAAA,QAAA;AAA2B,SAAA,WAAA;AAAyC,SAAA,yBAAA;AAlCvF,SAAA,WAAW,CAAA;AACX,SAAA,kBAAkB,YAAY,eAAe,uCAAuC;AACpF,SAAA,mBAAmB,YAAY,eAAe,oCAAoC;AAClF,SAAA,UAAU,EAAE,MAAM,MAAM,OAAO,IAAI,KAAK,GAAE;AAC1C,SAAA,UAAU,EAAE,MAAM,MAAM,OAAO,GAAG,KAAK,EAAC;AACxC,SAAA,eAAqC;AAqBrC,SAAA,eAA8B,CAAA;AAC9B,SAAA,uBAA0C;MACxC,QAAQ;MACR,qBAAqB,YAAY,QAAQ;MACzC,aAAa;MACb,iBAAiB;;AA8QnB,SAAA,aAAa,YAAY,QAAQ;AACjC,SAAA,iBAAiB,YAAY,QAAQ;AA3QnC,SAAK,UAAU,EAAE,MAAM,MAAM,OAAO,IAAI,KAAK,GAAE;AAC/C,SAAK,UAAU,EAAE,MAAM,MAAM,OAAO,GAAG,KAAK,EAAC;EAC/C;EACA,WAAQ;EAER;EACA,YAAY,QAAM;AAChB,WAAO,SAAS,OAAO,gBAAgB,OAAO,OAAO,cAAc,MAAM;EAC3E;EAEA,SAAS,OAAwB;AAC/B,WAAO,MAAM,MAAM,YAAW;EAChC;EACA,YAAS;AACR,QAAG,KAAK,gBAAe;AACtB,UAAG,KAAK,eAAe,YAAY,KAAK,eAAe,SAAS,kBAAgB,QAAO;AACrF,eAAO;UACJ,WAAW;;MAEhB;IACD;EACD;EACA,qBAAkB;AAChB,QAAG,KAAK,gBAAe;AACtB,UAAG,KAAK,eAAe,YAAY,KAAK,eAAe,SAAS,kBAAgB,QAAO;AAEtF,cAAM,aAAa,KAAK,eAAe;AACvC,YAAI,WAAW,mBAAmB,QAAQ;AACxC,gBAAMC,SAAQ;YACZ,OAAO;;AAGT,kBAAQ,WAAW,aAAa;YAC9B,KAAK;AACH,cAAAA,OAAM,YAAY,IAAI;AACtB;YACF,KAAK;AACH,cAAAA,OAAM,YAAY,IAAI;AACtB;YACF,KAAK;AACH,cAAAA,OAAM,YAAY,IAAI;AACtB;UACJ;AAEA,iBAAOA;QACT;MACD;AACD,UAAG,KAAK,eAAe,YAAY,KAAK,eAAe,SAAS,kBAAgB,OAAM;AAEpF,cAAM,aAAa,KAAK,eAAe;AACvC,YAAI,WAAW,mBAAmB,OAAO;AACvC,gBAAMA,SAAQ;YACZ,OAAO;;AAGT,kBAAQ,WAAW,aAAa;YAC9B,KAAK;AACH,cAAAA,OAAM,YAAY,IAAI;AACtB;YACF,KAAK;AACH,cAAAA,OAAM,YAAY,IAAI;AACtB;YACF,KAAK;AACH,cAAAA,OAAM,YAAY,IAAI;AACtB;UACJ;AAEA,iBAAOA;QACT;AACD;MACD;IAAC;AAAC;EACH;EAGA,oBAAiB;AAChB,QAAIA,SAAQ,CAAA;AACZ,QAAI,KAAK,kBAAkB,KAAK,eAAe,UAAU;AACvD,YAAM,aAAa,KAAK,eAAe;AACvC,UAAI,WAAW,mBAAmB,QAAQ;AACxC,QAAAA,OAAM,OAAO,IAAI;MACnB;AACE,UAAI,WAAW,mBAAmB,OAAO;AACzC,QAAAA,OAAM,OAAO,IAAI;MACnB;IACF;AAGA,QAAI,KAAK,kBAAkB,KAAK,eAAe,UAAU;AACvD,YAAM,aAAa,KAAK,eAAe;AAEvC,cAAQ,WAAW,aAAa;QAC9B,KAAK;AACH,UAAAA,OAAM,YAAY,IAAI;AACtB;QACF,KAAK;AACH,UAAAA,OAAM,YAAY,IAAI;AACtB;QACF,KAAK;AACH,UAAAA,OAAM,YAAY,IAAI;AAAS;QAC/B,KAAK;AACL,UAAAA,OAAM,YAAY,IAAI;AACtB;MACJ;AACA,UAAI,WAAW,aAAa;AAC1B,QAAAA,OAAM,OAAO,IAAI,WAAW;MAC9B;IACF;AAEA,WAAOA;EACT;EAKA,qBAAkB;AAChB,QAAIA,SAAQ,CAAA;AACZ,QAAI,KAAK,kBAAkB,KAAK,eAAe,UAAU;AACvD,YAAM,aAAa,KAAK,eAAe;AAEvC,cAAQ,WAAW,aAAa;QAC9B,KAAK;AACH,UAAAA,OAAM,YAAY,IAAI;AACtB;QACF,KAAK;AACH,UAAAA,OAAM,YAAY,IAAI;AACtB;QACF,KAAK;AACH,UAAAA,OAAM,YAAY,IAAI;AAAS;QAC/B,KAAK;AACL,UAAAA,OAAM,YAAY,IAAI;AACtB;MACJ;AACA,UAAI,WAAW,aAAa;AAC1B,QAAAA,OAAM,OAAO,IAAI,WAAW;MAC9B;IACF;AACA,WAAOA;EACT;EAGA,mBAAgB;AACd,QAAG,KAAK,gBAAe;AACtB,UAAG,KAAK,eAAe,YAAY,KAAK,eAAe,SAAS,kBAAgB,QAAO;AACrF,eAAO;UACN,OAAO;;MAEV;AAEA,aAAO;QACN,OAAO;;IAET;EACD;EAID,KAAK,UAAQ;AACX,QAAI,YAAY,SAAS,QAAQ,QAAQ,EAAE,EAAE,SAAS,IAAI;AACxD,aAAO,CAAC,KAAK,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;IAC1F,WAAW,YAAY,SAAS,QAAQ,QAAQ,EAAE,EAAE,SAAS,IAAI;AAC/D,aAAO,CAAC,KAAK,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;IACpF,OAAO;AACL,aAAO,CAAC,KAAK,SAAS,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,IAAI;IAC3F;EACF;EAEA,OAAO,aAAkB,SAAiB,SAAc,QAAa,QAAW,aAAa,QAAS;AACpG,QAAI,WAAW;AAEf,SAAK,SAAS,QAAQ,KAAK,SAAS,QAAQ;AAC5C,QAAI,YAAY;AACd,iBAAW,WAAW;AACtB,WAAK,SAAS,eAAe,KAAK;QAChC,MAAM,WAAW;QACjB,aAAa,WAAW;QACxB,MAAM;QACN,OAAO,KAAK,SAAS;QACrB;OACD;IACH,OAAO;AACL,iBAAW,YAAY,OAAO,MAAM,CAAC,EAAE;AACvC,UAAI,YAAY,cAAc,OAAO,EAAE,WAAW,GAAG;AACnD;MACF;AACA,UAAI,YAAY,cAAc,OAAO,EAAE,OAAO,KAAK,QAAW;AAC5D,aAAK,SAAS,eAAe,KAAK;UAChC,MAAM,EAAE,MAAM,YAAY,cAAc,OAAO,EAAE,OAAO,EAAE,CAAC,EAAC;UAC5D,aAAa;UACb,MAAM;UACN,OAAO,KAAK,SAAS;UACrB;SACD;MACH,OAAO;AACL,aAAK,SAAS,eAAe,KAAK;UAChC,MAAM,EAAE,MAAM,YAAY,cAAc,OAAO,EAAE,CAAC,EAAC;UACnD,aAAa;UACb,MAAM;UACN,OAAO,KAAK,SAAS;UACrB;SACD;MACH;IACF;AACA,UAAM,MAAM;MACV,UAAU;MACV,UAAU;MACV,aAAa;MACb,WAAW;MACX,WAAW;MACX,UAAU;MACV,cAAc;MACd,aAAa;MACb,IAAI;MACJ,KAAK,KAAK,SAAS;MACnB;;AAEF,SAAK,aAAa,KAAK,GAAG;AAC1B,SAAK,SAAS,KAAK,GAAG;AACtB,QAAI,OAAO;AACT,YAAM,QAAQ,aAAa;IAC7B;EACF;EAEA,YAAY,OAAU;AACpB,QAAI,CAAC,KAAK,IAAI,cAAc,KAAK,SAAS,QAAQ;AAChD;IACF;AACA,UAAM,OAAO,MAAM,OAAO,MAAM,KAAK,CAAC;AACtC,UAAM,MAAM,KAAK,KAAK,MAAM,GAAG,EAAE,IAAG,EAAG,YAAW;AAClD,QAAI,CAAC,CAAC,OAAO,QAAQ,KAAK,EAAE,SAAS,GAAG,GAAG;AACzC;IACF;AACA,SAAK,OAAO,OAAO,KAAK,IAAI,IAAI,KAAK,IAAI,OAAO;EAClD;EAEA,WAAW,SAAY;AACrB,QAAI,QAAQ,KAAK;AACf,UAAI,MAAM,KAAK,aAAa,UAAU,CAAC,MAAM,EAAE,KAAK,MAAM,QAAQ,GAAG;AACrE,UAAI,MAAM,IAAI;AACZ,aAAK,aAAa,OAAO,KAAK,CAAC;MACjC;AACA,YAAM;AACN,YAAM,KAAK,SAAS,QAAQ,OAAO;AACnC,UAAI,MAAM,IAAI;AACZ,aAAK,SAAS,OAAO,KAAK,CAAC;MAC7B;AACA,YAAM;AACN,YAAM,KAAK,SAAS,eAAe,UAAU,CAAC,MAAM,EAAE,OAAO,MAAM,QAAQ,GAAG;AAC9E,UAAI,MAAM,IAAI;AACZ,aAAK,SAAS,eAAe,OAAO,KAAK,CAAC;MAC5C;AACA;IACF;AACA,SAAK,SAAS,qBAAqB,KAAK,iCACnC,UADmC;MAEtC,yBAAyB,YAAY,QAAQ,wBAAwB,SAAQ;MAC9E;AACD,UAAM,QAAQ,KAAK,SAAS,QAAQ,OAAO;AAC3C,UAAM,SAAS,KAAK,aAAa,QAAQ,OAAO;AAChD,QAAI,QAAQ,IAAI;AACd,WAAK,SAAS,OAAO,OAAO,CAAC;AAC7B,WAAK,SAAS,eAAe,OAAO,OAAO,CAAC;IAC9C;AACA,QAAI,SAAS,IAAI;AACf,WAAK,aAAa,OAAO,OAAO,CAAC;IACnC;EACF;EAGA,aAAa,MAAmB;AAC9B,SAAK,eAAe;EACtB;EAEA,WAAW,MAA0B;AACnC,QAAI,CAAC;AAAM,aAAO;AAClB,UAAM,KAAK,OAAO,KAAK,KAAK,EAAE,SAAS,GAAG,GAAG;AAC7C,UAAM,KAAK,OAAO,KAAK,GAAG,EAAE,SAAS,GAAG,GAAG;AAC3C,UAAM,OAAO,KAAK;AAClB,WAAO,GAAG,EAAE,IAAI,EAAE,IAAI,IAAI;EAC5B;;;uCA7TW,eAAY,4BAAA,UAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,sBAAA,CAAA;IAAA;EAAA;;yEAAZ,eAAY,WAAA,CAAA,CAAA,SAAA,CAAA,GAAA,QAAA,EAAA,KAAA,OAAA,gBAAA,iBAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAvBV,CAAC,EAAE,SAAS,wBAAwB,UAAU,yBAAwB,CAAE,CAAC,GAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,KAAA,eAAA,GAAA,CAAA,SAAA,cAAA,SAAA,eAAA,GAAA,MAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,SAAA,QAAA,GAAA,MAAA,SAAA,GAAA,CAAA,GAAA,eAAA,aAAA,GAAA,WAAA,MAAA,QAAA,GAAA,CAAA,GAAA,OAAA,iBAAA,YAAA,GAAA,SAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,KAAA,GAAA,CAAA,GAAA,OAAA,eAAA,UAAA,QAAA,GAAA,CAAA,OAAA,YAAA,GAAA,OAAA,MAAA,SAAA,GAAA,CAAA,QAAA,QAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,WAAA,eAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,SAAA,cAAA,MAAA,WAAA,UAAA,GAAA,CAAA,gBAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,cAAA,eAAA,MAAA,YAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,WAAA,cAAA,iBAAA,MAAA,UAAA,GAAA,CAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,UAAA,QAAA,GAAA,MAAA,YAAA,SAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,aAAA,QAAA,QAAA,WAAA,GAAA,MAAA,YAAA,YAAA,WAAA,OAAA,GAAA,CAAA,aAAA,SAAA,aAAA,SAAA,eAAA,aAAA,GAAA,gBAAA,GAAA,SAAA,YAAA,iBAAA,MAAA,YAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,QAAA,QAAA,GAAA,qBAAA,GAAA,UAAA,UAAA,GAAA,CAAA,QAAA,UAAA,QAAA,cAAA,GAAA,MAAA,UAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,KAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,SAAA,OAAA,GAAA,CAAA,QAAA,sBAAA,SAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,CAAA,QAAA,QAAA,GAAA,qBAAA,GAAA,SAAA,UAAA,UAAA,GAAA,CAAA,QAAA,QAAA,GAAA,WAAA,QAAA,GAAA,MAAA,UAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,cAAA,iBAAA,WAAA,MAAA,UAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,wBAAA,GAAA,MAAA,YAAA,SAAA,SAAA,GAAA,CAAA,QAAA,OAAA,GAAA,gBAAA,GAAA,YAAA,MAAA,YAAA,SAAA,WAAA,WAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,UAAA,wBAAA,GAAA,MAAA,WAAA,aAAA,GAAA,CAAA,QAAA,SAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,WAAA,SAAA,WAAA,GAAA,CAAA,QAAA,QAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,WAAA,SAAA,WAAA,GAAA,CAAA,QAAA,QAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,WAAA,SAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,kBAAA,GAAA,MAAA,YAAA,WAAA,SAAA,WAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,MAAA,WAAA,WAAA,GAAA,CAAA,GAAA,UAAA,aAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,QAAA,SAAA,GAAA,YAAA,SAAA,MAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,iBAAA,MAAA,GAAA,CAAA,QAAA,YAAA,GAAA,SAAA,WAAA,MAAA,UAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,QAAA,UAAA,YAAA,0BAAA,GAAA,OAAA,UAAA,uBAAA,GAAA,CAAA,eAAA,QAAA,GAAA,OAAA,iBAAA,GAAA,CAAA,QAAA,QAAA,iBAAA,IAAA,GAAA,gBAAA,GAAA,cAAA,SAAA,eAAA,MAAA,YAAA,WAAA,SAAA,WAAA,SAAA,GAAA,CAAA,QAAA,QAAA,WAAA,wBAAA,GAAA,gBAAA,GAAA,YAAA,MAAA,YAAA,SAAA,GAAA,CAAA,QAAA,QAAA,iBAAA,IAAA,GAAA,gBAAA,GAAA,cAAA,eAAA,MAAA,SAAA,WAAA,WAAA,WAAA,UAAA,GAAA,CAAA,GAAA,UAAA,kBAAA,GAAA,MAAA,UAAA,GAAA,CAAA,GAAA,eAAA,aAAA,GAAA,CAAA,QAAA,QAAA,iBAAA,IAAA,GAAA,gBAAA,eAAA,GAAA,cAAA,WAAA,eAAA,SAAA,UAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,YAAA,SAAA,SAAA,GAAA,CAAA,QAAA,eAAA,QAAA,OAAA,QAAA,MAAA,MAAA,eAAA,YAAA,QAAA,GAAA,kBAAA,GAAA,UAAA,QAAA,SAAA,QAAA,GAAA,KAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,UAAA,uBAAA,GAAA,CAAA,eAAA,QAAA,GAAA,OAAA,mBAAA,GAAA,eAAA,MAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,WAAA,OAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,WAAA,OAAA,GAAA,CAAA,aAAA,QAAA,GAAA,aAAA,GAAA,CAAA,GAAA,gBAAA,eAAA,GAAA,MAAA,WAAA,UAAA,GAAA,CAAA,SAAA,IAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,SAAA,KAAA,CAAA,GAAA,UAAA,SAAA,sBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACpBxF,QAAA,qBAAA,GAAA,6BAAA,IAAA,IAAA,OAAA,CAAA;;;AAAM,QAAA,qBAAA,QAAA,IAAA,GAAA;;;MDwBE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAAmB;MAAA;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;IAAc,GAAA,QAAA,CAAA,opTAAA,EAAA,CAAA;EAAA;;;6EAGT,cAAY,EAAA,WAAA,gBAAA,UAAA,sEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGzCrB,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;;;;AAAf,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,EAAA;;;;;AACtB,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;;;;AAAnB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,UAAA;;;;;AAQnB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAAwF,IAAA,qBAAA,WAAA,KAAA;AAAvC,IAAA,qBAAA,UAAA,UAAA,EAAkB,cAAA,OAAA,IAAA;;;;;AADrE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,kEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AAAqB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAKrB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAAwF,IAAA,qBAAA,WAAA,KAAA;AAAvC,IAAA,qBAAA,UAAA,UAAA,EAAkB,cAAA,OAAA,IAAA;;;;;AADrE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,mEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AAAqB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;;AAIvB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsD,GAAA,OAAA,EAAA,EACP,GAAA,SAAA,EAAA;AACd,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;AAC5C,IAAA,yBAAA,GAAA,SAAA,EAAA;AAA6B,IAAA,iBAAA,GAAA,gBAAA;AAAc,IAAA,uBAAA,EAAQ;AAGrD,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAQE,IAAA,qBAAA,OAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAO,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,UAAA,SAAA,sEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChB,OAAA,cAAA,MAAA,CAAqB;IAAA,CAAA,EAAC,WAAA,SAAA,uEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACrB,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AAEnC,IAAA,uBAAA,EAAkB;;;;AAXhB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,cAAA,EAAwB,mBAAA,OAAA,qBAAA,EACiB,eAAA,OAAA,YAAA,EACb,cAAA,OAAA,WAAA,EACF,YAAA,KAAA;;;;;AAiB5B,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,uDAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;ADhBjB,IAAO,sBAAP,MAAO,6BAA4B,aAA+B;EA2BtE,YAAY,KAAqB,IAAgC,KAA6C,QAAuC,mBAAoC;AACvL,UAAM,KAAK,EAAE;AADkD,SAAA,MAAA;AAA6C,SAAA,SAAA;AAAuC,SAAA,oBAAA;AA1B9I,SAAA,QAAQ;AAIP,SAAA,eAAe,WAAW,QAAQ,EAAE,OAAO,OAAK,EAAE,QAAQ,WAAW;AACrE,SAAA,SAAS,WAAW,MAAM;AAE1B,SAAA,sBAAsB,CAAA;AAC9B,SAAA,cAAc;AACd,SAAA,UAAU,CAAA;AAEV,SAAA,iBAAgB,CAAA;AAGhB,SAAA,0BAA0B,CAAA;AAC1B,SAAA,2BAA2B,CAAA;AAE3B,SAAA,oBAAoB;AACpB,SAAA,qBAAqB;AAGrB,SAAA,WAAW,CAAA;AACX,SAAA,wBAAwB,CAAA;AACxB,SAAA,gBAAgB;AAChB,SAAA,wBAAwB,CAAA;AAyQzB,SAAA,eAAe,CAAC,SAAqB,KAAK;AACzC,SAAA,cAAc,CAAC,SAAqB,KAAK;AAE3C,SAAA,YAAY,CAAC,SACX,KAAK,IAAI,eAAe,KAAK,OAAO,SAAQ,GAAI,KAAK,OAAO,SAAQ,CAAE,EAAE,KACtE,IAAI,CAAC,YAAW;AACd,UAAI,CAAC,SAAS;AACZ,aAAK,OAAO,QAAQ,4BAA4B;MAClD;IACF,CAAC,CAAC;AAmCJ,SAAA,iBAAiB,CAAC,UAAuB;AACvC,WAAK,wBAAwB;AAC7B,WAAK,gBAAgB;AACrB,WAAK,cAAc;IACrB;AAEA,SAAA,kBAAkB,MAAK;AACrB,WAAK,SAAS,QAAQ,CAAC,SAAQ;AAC7B,cAAM,aAAa,KAAK,sBAAsB,KAAK,CAAC,SAAS,KAAK,QAAQ,KAAK,GAAG;AAClF,aAAK,WAAW;AAChB,aAAK,WAAW;MAClB,CAAC;IACH;AA7TE,SAAK,cAAc,CAAC,EAAE,aAAa,QAAQ,SAAS,CAAC,SAAmB,KAAK,iBAAiB,IAAI,EAAC,CAAE;EACvG;EAMA,qBAAkB;AAChB,SAAK,kBAAkB,cAAa;EACtC;EACA,iBAAc;AACZ,QAAG,KAAK,KAAK,SAAQ,aAAY;AAC/B,WAAK,QAAS;AACd,WAAK,iBAAiB,KAAK,mBAAkB;AAC7C,WAAK,wBAAwB,KAAK,eAAe,OAAO,UACtD,KAAK,aAAa,MAAM,GAAG,EAAE,SAAS,KAAK,KAAK,OAAO,SAAQ,CAAE,CAAC;AAEpE,WAAK,wBAAuB,KAAK;IACnC;AACA,UAAM,EAAE,YAAW,IAAK,KAAK,OAAO;AACpC,SAAK,SAAS,KAAK,IAAI,SAAS,WAAW,EAAE,KAAK,IAAI,CAAC,SAAS,YAAY,MAAM,SAAS,OAAO,CAAC,CAAC;EAEtG;EAGQ,gBAAa;AACnB,UAAM,SAAgB,CAAA;AAEtB,WAAO,OAAO,KAAK,OAAO,WAAW,EAAE,QAAQ,CAAC,SAAa;AAC3D,YAAM,WAAW,KAAK,SAAS;AAC/B,YAAM,cAAc,KAAK,aAAa,MAAM,GAAG,EAAE,SAAS,KAAK,KAAK,OAAO,SAAQ,CAAE;AAErF,UAAI,YAAY,aAAa;AAC3B,eAAO,KAAK;UACV,KAAK,KAAK;UACV,QAAQ,KAAK;UACb,OAAO,GAAG,KAAK,WAAW,KAAK,KAAK,IAAI;UACxC,QAAQ,KAAK,OAAO,OAAO;UAC3B,QAAQ,GAAG,KAAK,OAAO,IAAI,MAAM,KAAK,OAAO,WAAW;UACxD,UAAU,KAAK,OAAO;UACtB,UAAU;UACV,UAAU;SACX;MACH;IACF,CAAC;AAED,WAAO;EACT;EAGQ,qBAAkB;AACxB,UAAM,SAAgB,CAAA;AAEpB,WAAO,OAAO,KAAK,OAAO,WAAW,EAAE,QAAQ,CAAC,SAAa;AAC3D,YAAM,WAAW,KAAK,SAAS;AAE/B,YAAM,cACJ,KAAK,gBAAgB,QACrB,KAAK,gBAAgB,MACrB,OAAO,KAAK,gBAAgB;AAE9B,UAAI,YAAY,aAAa;AAC3B,cAAM,OAAO;UACX,KAAK,KAAK;UACV,QAAQ,KAAK;UACb,OAAO,GAAG,KAAK,WAAW,KAAK,KAAK,IAAI;UACxC,QAAQ,KAAK,OAAO,OAAO;UAC3B,QAAQ,GAAG,KAAK,OAAO,IAAI,MAAM,KAAK,OAAO,WAAW;UACxD,UAAU,KAAK,OAAO;;AAGxB,eAAO,KAAK,IAAI;MAClB;AACA,YAAM,WAAW,KAAK,aAAa,KAAI;AACvC,UAAG,UAAS;AACZ,YAAI,YAAU,SAAS,MAAM,GAAG;AAChC,cAAM,cAAc,UAAU,SAAS,KAAK,KAAK,OAAO,SAAQ,CAAE;AAGhE,YAAI,YAAY,aAAa;AAC3B,gBAAM,OAAO;YACX,KAAK,KAAK;YACV,QAAQ,KAAK;YACb,OAAO,GAAG,KAAK,WAAW,KAAK,KAAK,IAAI;YACxC,QAAQ,KAAK,OAAO,OAAO;YAC3B,QAAQ,GAAG,KAAK,OAAO,IAAI,MAAM,KAAK,OAAO,WAAW;YACxD,UAAU,KAAK,OAAO;YACtB,aAAa,KAAK;YAClB,SAAS;YACT,UAAU;;AAGZ,iBAAO,KAAK,IAAI;QAClB;MACF;IAGF,CAAC;AAGH,WAAO;EACT;EAGA,WAAQ;AACN,UAAM,aAAa,CAAC,GAAG,eAAe;AACtC,QAAI,KAAK,WAAW;AAClB,YAAM,WAAW,OAAO,OAAO,KAAK,OAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,SACpE,OAAO,OAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,QAAQ,OAAO,OAAO,IAAI,WAAW,CAAC,CAAC;IAGpF;AACA,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,KAAK,KAAK,MAAM,EAAE,YAAY,UAAU,OAAM,CAAE;MACvD,cAAc,CAAC,CAAC,KAAK,KAAK,gBAAgB,CAAC;MAC3C,aAAa,CAAC,KAAK,KAAK,aAAa,CAAC,WAAW,QAAQ,CAAC;MAC1D,aAAa,CAAC,CAAC,KAAK,KAAK,eAAe,CAAC;MACzC,UAAU,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC;MACnC,UAAU,CAAC,KAAK,KAAK,QAAQ;MAC7B,OAAO,CAAC,YAAY,KAAK,KAAK,OAAO,SAAS,KAAK,CAAC;;MAEpD,QAAQ,CAAC,KAAK,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,KAAK,KAAK,MAAM,GAAG,CAAC,WAAW,QAAQ,CAAC;MAClF,MAAM,CAAC,KAAK,aAAa,KAAK,CAAC,MAAM,EAAE,QAAQ,KAAK,KAAK,IAAI,GAAG,CAAC,WAAW,QAAQ,CAAC;MACrF,SAAS,CAAC,KAAK,KAAK,WAAW,KAAK,OAAO,SAAS,CAAC,WAAW,QAAQ,CAAC;MACzE,UAAU,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC;KACpC;AAED,SAAK,WACD,KAAK,KAAK,SAAS,cACrB;MACE,IAAI,cAAc,EAAE,MAAM,QAAQ,OAAO,QAAQ,UAAU,CAAC,KAAK,WAAW,UAAU,KAAI,CAAE;MAC5F,IAAI,cAAc,EAAE,MAAM,eAAe,OAAO,iBAAiB,UAAU,KAAI,CAAE;QAEnF;MACE,IAAI,cAAc,EAAE,MAAM,QAAQ,OAAO,QAAQ,UAAU,CAAC,KAAK,WAAW,UAAU,KAAI,CAAE;MAC5F,IAAI,cAAc,EAAE,MAAM,eAAe,OAAO,iBAAiB,UAAU,KAAI,CAAE;MACjF,IAAI,cAAc,EAAE,MAAM,WAAW,OAAO,WAAW,UAAU,KAAI,CAAE;MACvE,IAAI,cAAc,EAAE,MAAM,UAAU,OAAO,UAAU,MAAM,YAAY,UAAU,MAAM,SAAS,GAAG,KAAK,MAAM,EAAC,CAAE;MACjH,IAAI,cAAc,EAAE,MAAM,QAAQ,OAAO,QAAQ,MAAM,YAAY,UAAU,MAAM,SAAS,GAAG,KAAK,YAAY,EAAC,CAAE;MACnH,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,SAAS,KAAK;QACd,MAAM,KAAK,KAAK,QAAQ,SAAS,IAAI;QACrC,UAAU;OACX;MACD,IAAI,cAAc,EAAE,MAAM,YAAY,OAAO,oBAAoB,MAAM,QAAQ,OAAO,UAAS,CAAE;MACjG,IAAI,cAAc,EAAE,MAAM,YAAY,OAAO,iCAAiC,MAAM,SAAQ,CAAE;MAC9F,IAAI,cAAc,EAAE,MAAM,eAAe,OAAO,kBAAkB,MAAM,SAAQ,CAAE;MAClF,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,KAAK,KAAK,eAAe,IAAI;OACpC;MACD,IAAI,cAAc,EAAE,MAAM,YAAY,OAAO,aAAa,MAAM,SAAQ,CAAE;;AAM9E,SAAK,KAAK,IAAI,MAAM,EAAE,aAAa,UAAU,UAAM;AACjD,UAAG,KAAK,aAAa,QAAQ,KAAK,UAAQ,KAAK,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,WAAW,KACvF,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,SAAS,GAAE;AAC5C,aAAK,IAAI,kBAAkB,QAAO,GAAE,MAAK,KAAK,OAAO,KAAK,SAAQ,KAAK,OAAO,KAAK,WAAW,EAAE,UAAU,aAAS;AACjH,cAAG,SAAQ;AACP,kBAAM,cAAc,KAAK,KAAK,IAAI,MAAM;AACxC,wBAAY,UAAU;cACtB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACF,CAAC;EAIH;EAEA,gBAAa;AAEX,UAAM,MAAM,KAAK,aAAa,KAAK,CAAC,EAAE,IAAG,MAAO,KAAK,KAAK,SAAS,GAAG;AACtE,SAAK,EAAE,KAAK,WAAW,GAAG;EAC5B;EAEA,WAAQ;AACN,QAAG,KAAK,KAAK,SAAQ,aAAY;AAE3B,YAAM,MAAM,KAAK,KAAK;AACtB,YAAM,QAAQ;QACZ,MAAM,IAAI;QACV,aAAa,IAAI;QACjB,OAAO,KAAK,OAAO;QACnB,QAAQ,KAAK,KAAK;QAClB,SAAS,KAAK,sBAAsB,IAAI,UAAQ,KAAK,MAAM,EAAE,KAAK,GAAG;QACrE,SAAS,KAAK,sBAAsB,IAAI,UAAQ,KAAK,UAAU,SAAS,OAAO,EAAE,KAAK,GAAG;QACzF,aAAa,KAAK,sBAAsB,IAAI,UAAQ,KAAK,eAAe,MAAM,EAAE,KAAK,GAAG;QACxF,QAAQ;QACR,iBAAiB,KAAK;;AAExB,WAAK,IAAI,MAAM,EAAC,SAAQ,OAAM,QAAO,KAAK,KAAK,KAAI,CAAC;IAE1D,OACI;AACF,WAAK,YAAY;AACjB,UAAI,KAAK,KAAK,OAAO;AACnB,cAAM,MAAM,KAAK,KAAK;AACtB,cAAM,UAAiB,iCAClB,MADkB;UAErB,QAAQ,KAAK,KAAK,UAAU,KAAK,OAAO;UACxC,QAAQ,KAAK,KAAK;UAClB,IAAI,KAAK,KAAK,MAAM,IAAI;UACxB,OAAO,KAAK,KAAK,QAAS,IAAI,MAAiB,QAAQ,KAAK,EAAE;UAC9D,cAAc,KAAK,KAAK;UACxB,MAAM,IAAI,MAAM,OAAO,IAAI;UAC3B,QAAQ,IAAI,QAAQ,OAAO,IAAI;UAC/B,eAAe,CAAC,IAAI,cAAc,SAAQ;UAC1C,cAAc,CAAC,IAAI,aAAa,SAAQ;UACxC,WAAW,CAAC,IAAI,UAAU,SAAQ;UAClC,WAAW,CAAC,IAAI,UAAU,SAAQ;UAClC,OAAO,gBAAgB,IAAI,OAAO,SAAS,KAAK;UAChD,aAAa,KAAK,KAAK,eAAe;;AAExC,cAAM,SAAS;UACb,aAAa,KAAK,OAAO,KAAK;UAC9B,QAAQ,KAAK,OAAO,KAAK;UACzB,WAAW,KAAK,OAAO,KAAK;UAC5B,UAAU,IAAI;UACd,cAAc,KAAK,oBAAoB,KAAK,wBAAwB,IAAI,CAAC,EAAE,IAAG,MAAO,GAAG,EAAE,SAAQ,IAAK;UACvG,eAAe,KAAK,qBAAqB,KAAK,yBAAyB,IAAI,CAAC,EAAE,IAAG,MAAO,GAAG,EAAE,SAAQ,IAAK;;AAG5G,aAAK,OAAO,KAAK,OAAO;AACxB,aAAK,IAAI,MAAM,EAAE,SAAS,OAAM,CAAE;MACpC;IACF;EAGF;EAEQ,iBAAiB,KAAQ;AAC/B,UAAM,KAAK,OAAO;AAClB,QAAI,QAAQ,SAAS,MAAM;AACzB,WAAK,EAAE,MAAM,cAAc,WAAW,QAAQ;IAChD,OAAO;AACL,WAAK,EAAE,MAAM,gBAAe;IAC9B;AACC,SAAK,EAAE,MAAM,uBAAsB;EACtC;EAEQ,KAAK,aAA0B,WAAc;AACnD,WAAO,KAAK,KAAK,IAAI,WAAW,EAAE,aAAa,KAC7C,UAAU,KAAK,KAAK,IAAI,WAAW,EAAE,KAAK,GAC1C,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,GACtB,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;EAE9B;EAcA,WAAW,MAAgB;AACzB,SAAK,UAAS;AACd,SAAK,cAAc,KAAK,KAAK,OAAO,SAAQ;AAC5C,SAAK,YAAY,IAAI;AACrB,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,IAAI;AACnE,SAAK,gBAAgB;AACrB,SAAK,gBAAe;EACtB;EAEA,cAAc,MAAgB;AAC5B,SAAK,UAAS;AACd,SAAK,cAAc,KAAK,KAAK,OAAO,SAAQ;AAC5C,SAAK,YAAY,IAAI;AACrB,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,CAAC,SAAS,KAAK,WAAW,KAAK,MAAM;AACrG,SAAK,gBAAgB;AACpB,SAAK,gBAAe;EACtB;EAGA,YAAY,MAAgB;AAC1B,UAAM,cAAc,iCAAK,OAAL,EAAW,SAAS,KAAK,SAAS,aAAa,KAAK,KAAK,OAAO,SAAQ,EAAE;AAE9F,UAAM,QAAQ,KAAK,sBAAsB,UAAU,UAAQ,KAAK,WAAW,KAAK,MAAM;AAEtF,QAAI,QAAQ,IAAI;AACd,WAAK,sBAAsB,KAAK,IAAI;IACtC,OAAO;AACL,WAAK,wBAAwB,CAAC,GAAG,KAAK,uBAAuB,WAAW;IAC1E;EACF;;;uCA3UW,sBAAmB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,iBAAA,CAAA;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,cAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,YAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,UAAA,GAAA,GAAA,CAAA,OAAA,IAAA,GAAA,QAAA,GAAA,CAAA,WAAA,YAAA,aAAA,YAAA,GAAA,OAAA,UAAA,WAAA,SAAA,mBAAA,eAAA,cAAA,UAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AChChC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,QAAA,qBAAA,GAAA,mCAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,mCAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,iBAAS,IAAA,IAAA,MAAA;QAAW,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAEnG,QAAA,oBAAA,GAAA,IAAA;AAEA,QAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,OAAA,CAAA;AAErB,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA;;AAKA,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,gBAAA,CAAA;;AAKA,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,OAAA,CAAA;AAsBF,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,iBAAS,IAAA,SAAA;QAAU,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EACD;;;AAjDA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;AAKD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,sBAAA,IAAA,GAAA,IAAA,UAAA,GAAA,CAAA,CAAA;AAKA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,sBAAA,IAAA,IAAA,IAAA,UAAA,CAAA,CAAA;AAKZ,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,SAAA,WAAA;AA0BqD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,OAAA,KAAA,SAAA;;;MDvBzE;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;MACA;MACA;MACA;IAAS,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAGJ,qBAAmB,EAAA,WAAA,uBAAA,UAAA,sFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEvBhC,IAAAC,iBAA+B;;;AEFxB,IAAMC,QAA+B;EAC1C,gBAAe,EAAE,MAAM,oBAAoB,MAAM,kBAAkB,WAAW,QAAQ,OAAO,gBAAe;EAC5G,QAAQ,EAAE,MAAM,UAAU,MAAM,UAAU,WAAW,UAAU,OAAO,aAAY;EAClF,aAAa,EAAE,MAAM,iBAAiB,MAAM,eAAe,WAAW,YAAY,OAAO,qBAAqB,SAAS,MAAM,UAAU,CAAA,EAAE;EACzI,aAAa,EAAE,MAAM,qBAAqB,MAAM,eAAe,WAAW,QAAQ,OAAO,kBAAkB,SAAS,MAAM,UAAU,CAAA,EAAE;EACtI,aAAa,EAAE,MAAM,gBAAgB,MAAM,eAAe,WAAW,QAAQ,OAAO,wBAAwB,UAAU,CAAA,EAAE;EACxH,KAAK,EAAE,MAAM,aAAa,MAAM,OAAO,WAAW,QAAQ,OAAO,sBAAsB,UAAU,CAAA,EAAE;EACnG,UAAU,EAAE,MAAM,sBAAsB,MAAM,YAAY,WAAW,QAAQ,OAAO,uBAAuB,UAAU,CAAA,EAAE;EACvH,cAAc,EAAE,MAAM,kBAAkB,MAAM,gBAAgB,WAAW,QAAQ,OAAO,kBAAkB,SAAS,MAAM,UAAU,CAAA,EAAE;EACrI,QAAQ,EAAE,MAAM,kBAAkB,MAAM,UAAU,WAAW,QAAQ,OAAO,iBAAiB,SAAS,MAAM,UAAU,CAAA,EAAE;EACxH,OAAO,EAAE,MAAM,kBAAkB,MAAM,SAAS,WAAW,SAAS,OAAO,YAAY,UAAU,EAAC,WAAW,MAAM,WAAW,KAAI,EAAC;EACnI,SAAS,EAAE,MAAM,aAAa,MAAM,WAAW,WAAW,QAAQ,OAAO,YAAY,SAAS,KAAI;EAClG,QAAQ,EAAE,MAAM,UAAU,MAAM,UAAU,WAAW,UAAU,OAAO,oBAAmB;EACzF,OAAO,EAAE,MAAM,SAAS,MAAM,SAAS,WAAW,QAAQ,OAAO,YAAW;EAC5E,MAAM,EAAE,MAAM,YAAY,MAAM,QAAQ,WAAW,QAAQ,OAAO,iBAAiB,SAAS,MAAM,UAAU,CAAA,EAAE;EAC9G,IAAI,EAAE,MAAM,MAAM,MAAM,MAAM,WAAW,QAAQ,OAAO,kBAAkB,SAAS,MAAM,UAAU,CAAA,EAAE;EACrG,aAAa,EAAE,MAAM,kBAAkB,MAAM,eAAe,WAAW,OAAO,OAAO,sBAAsB,UAAU,CAAA,EAAE;EACvH,aAAa,EAAE,MAAM,gBAAgB,MAAM,eAAe,WAAW,QAAQ,OAAO,iBAAgB;EACpG,OAAO,EAAE,MAAM,qBAAqB,MAAM,SAAS,WAAW,SAAS,OAAO,0BAA0B,SAAS,MAAM,UAAU,CAAA,EAAE;EACnI,UAAU,EAAE,MAAM,aAAa,MAAM,YAAY,WAAW,QAAQ,OAAO,oBAAoB,SAAS,MAAM,UAAU,CAAA,EAAE;EAC1H,gBAAgB,EAAE,MAAM,oBAAoB,MAAM,kBAAkB,WAAW,UAAU,OAAO,oBAAmB;EACnH,UAAU,EAAE,MAAM,aAAa,MAAM,YAAY,WAAW,QAAQ,OAAO,cAAc,SAAS,MAAM,UAAU,EAAE,WAAW,KAAI,EAAC;EACpI,WAAW,EAAE,MAAM,YAAY,MAAM,aAAa,WAAW,QAAQ,OAAO,kBAAkB,SAAS,MAAM,UAAU,EAAE,WAAW,KAAI,EAAC;EACzI,MAAM,EAAE,MAAM,mBAAmB,MAAM,QAAQ,WAAW,QAAQ,OAAO,gBAAgB,SAAS,MAAM,UAAU,CAAA,EAAE;EACpH,aAAa,EAAE,MAAM,gBAAgB,MAAM,eAAe,WAAW,QAAQ,OAAO,qBAAqB,SAAS,MAAM,UAAU,CAAA,EAAE;EACpI,KAAK,EAAE,MAAM,gBAAgB,MAAM,OAAO,WAAW,OAAO,OAAO,cAAc,SAAS,MAAM,UAAU,EAAC,WAAW,MAAM,WAAW,KAAI,EAAC;EAC5I,aAAa,EAAE,MAAM,mBAAmB,MAAM,eAAe,WAAW,QAAQ,OAAO,wBAAwB,UAAU,CAAA,EAAE;EAC3H,WAAW,EAAE,MAAM,cAAc,MAAM,aAAa,WAAW,QAAQ,OAAO,eAAe,UAAU,CAAA,EAAE;EACzG,WAAW,EAAE,MAAM,cAAc,MAAM,aAAa,WAAW,QAAQ,OAAO,iBAAgB;EAC9F,aAAa,EAAE,MAAM,gBAAgB,MAAM,eAAe,WAAW,QAAQ,OAAO,iBAAgB;EACpG,mBAAmB,EAAE,MAAM,uBAAuB,MAAM,qBAAqB,WAAW,QAAQ,OAAO,iBAAiB,SAAS,MAAM,UAAU,CAAA,EAAE;EACnJ,sBAAsB,EAAE,MAAM,yBAAyB,MAAM,wBAAwB,WAAW,QAAQ,OAAO,iBAAiB,SAAS,MAAM,UAAU,CAAA,EAAE;EAC3J,aAAa,EAAE,MAAM,gBAAgB,MAAM,eAAe,WAAW,QAAQ,OAAO,sBAAsB,UAAU,CAAA,EAAE;EACtH,UAAU,EAAE,MAAM,YAAY,MAAM,YAAY,WAAW,QAAQ,OAAO,kBAAkB,SAAS,MAAM,UAAU,EAAC,WAAW,MAAM,WAAW,KAAI,EAAC;EACvJ,uBAAuB,EAAE,MAAM,2BAA2B,MAAM,yBAAyB,WAAW,QAAQ,OAAO,iBAAiB,SAAS,MAAM,UAAU,CAAA,EAAE;EAC/J,eAAe,EAAE,MAAM,iBAAiB,MAAM,iBAAiB,WAAW,QAAQ,OAAO,uBAAuB,UAAU,CAAA,EAAE;EAC5H,aAAa,EAAE,MAAM,4BAA4B,MAAM,eAAe,WAAW,QAAQ,OAAO,iBAAiB,SAAS,MAAM,UAAU,CAAA,EAAE;EAC5I,iBAAgB,EAAE,MAAM,wBAAwB,MAAM,mBAAmB,WAAW,QAAQ,OAAO,iBAAkB,UAAU,CAAA,EAAE;EACjI,cAAe,EAAC,MAAM,iBAAiB,MAAM,gBAAgB,WAAW,SAAS,OAAO,aAAY;EACpG,kBAAmB,EAAE,MAAM,qBAAqB,MAAM,oBAAoB,WAAW,SAAS,OAAO,cAAgB,UAAU,CAAA,EAAE;;AAO5H,IAAM,aAAY;EACxB,EAAE,MAAM,SAAS,OAAO,gBAAe;;;AAKjC,IAAM,cAAa;;EAExB,EAAE,MAAM,QAAO;EACf,EAAE,MAAM,SAAQ;EAChB,EAAE,MAAM,SAAQ;EAChB,EAAE,MAAM,SAAQ;EAChB,EAAE,MAAM,QAAO;EACf,EAAE,MAAM,SAAQ;EAChB,EAAE,MAAM,OAAM;;;;AC7DV,IAAO,sBAAP,MAA0B;EAgB9B,cAAA;AACE,SAAK,0BAA0B;AAC/B,SAAK,0BAA0B;AAC/B,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,MAAM;AACX,SAAK,SAAS;AACd,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,UAAU;EACjB;;;;;;;AExBI,IAAA,yBAAA,GAAA,MAAA,CAAA;AAEqC,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,OAAA,CAAe;IAAA,CAAA;AAC3D,IAAA,oBAAA,GAAA,KAAA,CAAA;AAAkC,IAAA,iBAAA,CAAA;AACpC,IAAA,uBAAA;;;;AADoC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,QAAA,OAAA,MAAA,QAAA,SAAA,IAAA;;;;;;AAZ1C,IAAA,yBAAA,GAAA,OAAA,CAAA,EAG4C,GAAA,OAAA,CAAA,EAEhB,GAAA,OAAA,CAAA,EAC6B,GAAA,SAAA,CAAA;AACoD,IAAA,qBAAA,SAAA,SAAA,wDAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,OAAA,OAAA,KAAA,CAA8B;IAAA,CAAA;AAAhJ,IAAA,uBAAA;AAEE,IAAA,qBAAA,GAAA,uCAAA,GAAA,GAAA,MAAA,CAAA;AAKF,IAAA,uBAAA,EAAM,EACF;;;;AAbW,IAAA,sBAAA,QAAA,OAAA,wBAAA,CAAA,EAAwC,OAAA,OAAA,wBAAA,CAAA;AAD3D,IAAA,qBAAA,WAAA,OAAA,KAAA,EAAiB,mBAAA,MAAA;AAUQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;ADkBnB,IAAO,oBAAP,MAAO,mBAAiB;EAY5B,cAAA;AAXU,SAAA,eAAe,CAAA;AACzB,SAAA,mBAAmB,CAAA;AACV,SAAA,qBAA0B;AAC1B,SAAA,sBAA2C;AAC1C,SAAA,iBAAiB,IAAI,aAAY;AAC3C,SAAA,0BAA0B,EAAE,GAAG,OAAO,GAAG,MAAK;AACvC,SAAA,QAAgB,CAAA;AACd,SAAA,kBAA2B;AAC5B,SAAA,OAAuB,CAAA;EAGf;EAEhB,WAAQ;AACN,QAAG,KAAK,KAAK,UAAU,KAAK,gBAAgB,KAAK,aAAa,SAAO,GAAE;AACrE,eAAS,QAAQ,GAAG,QAAQ,KAAK,KAAK,QAAQ,SAAS;AACrD,cAAM,IAAI,KAAK,KAAK,KAAK;AACzB,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,QAAQ,KAAK;AACzC,gBAAM,MAAM,EAAE,QAAQ,CAAC;AACvB,cAAG,IAAI,WAAS,MAAK;AACnB,qBAAS,SAAS,GAAG,SAAS,IAAI,QAAQ,QAAQ,UAAU;AAC1D,oBAAM,UAAU,IAAI,QAAQ,MAAM;AAClC,kBAAG,SAAQ;AACX,qBAAK,eAAa,KAAK,aAAa,OAAO,OAAG,EAAE,QAAM,QAAQ,YAAW,CAAE;cAC3E;YACF;UACF;AACE,mBAAS,KAAK,GAAG,KAAK,IAAI,KAAK,QAAQ,MAAM;AAC3C,kBAAM,MAAM,IAAI,KAAK,EAAE;AACvB,qBAAS,OAAO,GAAG,OAAO,IAAI,QAAQ,QAAQ,QAAQ;AACpD,oBAAM,UAAU,IAAI,QAAQ,IAAI;AAChC,kBAAG,QAAQ,WAAS,MAAK;AACvB,yBAAS,SAAS,GAAG,SAAS,QAAQ,QAAQ,QAAQ,UAAU;AAC9D,wBAAM,UAAU,QAAQ,QAAQ,MAAM;AACtC,sBAAG,SAAQ;AACX,yBAAK,eAAa,KAAK,aAAa,OAAO,OAAG,EAAE,QAAM,QAAQ,YAAW,CAAE;kBAC3E;gBACD;cACA;YACL;UACF;QAGJ;MAEF;IACF;AACA,SAAK,mBAAiB,KAAK;EAC7B;EACA,UAAU,MAAI;AACZ,SAAK,kBAAgB;AACtB,SAAK,eAAe,KAAK,IAAI;EAC9B;EACA,UAAU,KAAG;AAEX,QAAG,KAAK,aAAa,SAAO,GAAE;AAC5B,UAAG,OAAO,OAAK,MAAM,IAAI,SAAO,GAAG;AACjC,aAAK,eAAa,KAAK,iBAAiB,OAAO,OAAG,EAAE,KAAK,YAAW,EAAG,SAAS,IAAI,YAAW,CAAE,KACvD,EAAE,QAAQ,YAAW,EAAG,SAAS,IAAI,YAAW,CAAE,CAAC;MAE/F,OAAK;AACH,aAAK,eAAa,KAAK;MACzB;IACF,OAAK;AACH,WAAK,eAAa,KAAK;IACzB;EACF;EACA,cAAW;AACT,QAAI,KAAK,qBAAqB;AAE5B,WAAK,wBAAwB,IAAK,KAAK,oBAAoB,0BAAyB,MAAQ;AAC5F,WAAK,wBAAwB,IAAK,KAAK,oBAAoB,0BAAwB,MAAO;IAE5F;EACF;EAEA,iBAAc;AACZ,SAAK,kBAAkB;EACzB;;;uCA/EW,oBAAiB;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,uBAAA,CAAA,GAAA,cAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AAAjB,QAAA,qBAAA,UAAA,SAAA,8CAAA;AAAA,iBAAA,IAAA,eAAA;QAAgB,GAAA,OAAA,yBAAA;;;;AC7B7B,QAAA,qBAAA,GAAA,kCAAA,GAAA,GAAA,OAAA,CAAA;;;AAAM,QAAA,qBAAA,QAAA,IAAA,eAAA;;;MDwBE;MACA;MACA;IAAK,GAAA,QAAA,CAAA,2iKAAA,GAAA,MAAA,EAAA,WAhBG;MACR,QAAQ,kBAAkB;QACtB,WAAW,UAAU;UACjB,MAAM,EAAE,WAAW,kBAAkB,SAAS,EAAC,CAAE;UACjD,QAAQ,SAAS,MAAM,EAAE,WAAW,iBAAiB,SAAS,EAAC,CAAE,CAAC;SACrE;QACD,WAAW,UAAU;UACjB,MAAM,EAAE,WAAW,iBAAiB,SAAS,EAAC,CAAE;UAChD,QAAQ,SAAS,MAAM,EAAE,WAAW,kBAAkB,SAAS,EAAC,CAAE,CAAC;SACtE;OACJ;MACJ,EAAA,CAAA;EAAA;;;6EAQQ,mBAAiB,EAAA,WAAA,qBAAA,UAAA,kFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGlB1B,IAAA,yBAAA,GAAA,OAAA,CAAA;AAEK,IAAA,qBAAA,SAAA,SAAA,+DAAA,QAAA;AAAA,YAAA,cAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,QAAA,YAAA,SAAA,CAA8C;IAAA,CAAA;AAC1D,IAAA,oBAAA,GAAA,KAAA,CAAA;AAEF,IAAA,uBAAA;;;;AAFK,IAAA,oBAAA;AAAA,IAAA,iCAAA,IAAA,YAAA,UAAA,WAAA;AAAuC,IAAA,gCAAA,cAAA,YAAA,QAAA;;;;;;AAdhD,IAAA,yBAAA,GAAA,OAAA,CAAA;AAIK,IAAA,qBAAA,SAAA,SAAA,yDAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAkB,OAAA,SAAA,MAAA,CAAgB;IAAA,GAAA,OAAA,2BAAA;AAMrC,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,OAAA,CAAA;;AAOJ,IAAA,uBAAA;;;;AAbK,IAAA,sBAAA,QAAA,OAAA,oBAAA,SAAA,IAAA,EAA6C,OAAA,OAAA,oBAAA,SAAA,IAAA,EACD,aAAA,wBAAA;AAH5C,IAAA,sBAAA,wBAAA,OAAA,eAAA;AADA,IAAA,qBAAA,WAAA,OAAA,KAAA;AAUyB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,gBAAA;;;ADIxB,IAAO,uBAAP,MAAO,sBAAoB;EAC/B,IAAI,kBAAe;AACjB,WAAO,CAAC,EAAE,KAAK,wBAAwB,KAAK,oBAAoB,YAAY,KAAK,KAAK,oBAAoB,YAAY;EACxH;EAcA,YAAoB,MACN,SACA,OACS,UAAmB;AAHtB,SAAA,OAAA;AACN,SAAA,UAAA;AACA,SAAA,QAAA;AACS,SAAA,WAAA;AAfd,SAAA,SAAc;AACd,SAAA,qBAA0B;AAC1B,SAAA,sBAA2C;AAC3C,SAAA,OAAY;AAErB,SAAA,0BAA0B,EAAE,GAAG,OAAO,GAAG,MAAK;AACvC,SAAA,QAAgB,CAAA;AACb,SAAA,sBAAsB,IAAI,aAAY;AACvC,SAAA,gBAAgB,OAAO,OAAOC,KAAI,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,YAAW,EAAG,cAAc,EAAE,KAAK,YAAW,CAAE,CAAC;AACpH,SAAA,mBAA6C,CAAA;AAC7C,SAAA,kBAA2B;AAClB,SAAA,aAAuB;AAO9B,SAAK,mBAAmB,CAAA;AAIxB,YAAQ,mBAAkB,EAAG,UAAU,YAAS;AAC9C,UAAG,CAAC,OAAO,QAAO;AAChB,aAAK,kBAAgB;MACvB;IAEF,CAAC;EAGH;EAEA,cAAW;AACT,QAAI,eAAa;AACjB,QAAG,KAAK,QAAM;AAEd,WAAK,QAAQ;;;QAGX,OAAO;QACP,SAAS;;AAIX,QAAI,KAAK,oBAAoB;AAC3B,WAAK,mBAAiB,CAAA;AACrB,UAAG,KAAK,mBAAmB,SAAQ,aAAY;AAC9C,YAAI,YAAU;AAEd,YAAI,OAAK,KAAK,mBAAmB;AACjC,iBAAS,QAAQ,GAAG,QAAQ,KAAK,QAAQ,QAAQ,SAAS;AACxD,yBAAa;AACb,gBAAM,KAAK,KAAK,QAAQ,KAAK;AAE3B,cAAG,GAAG,WAAW,GAAG,QAAQ,SAAO,KAAK,KAAK,YAAW;AACtD,wBAAU;AACV;UACF,WACM,GAAG,MAAK;AACZ,qBAASC,SAAQ,GAAGA,SAAQ,GAAG,KAAK,QAAQA,UAAS;AACnD,oBAAM,UAAU,GAAG,KAAKA,MAAK;AAC7B,kBAAI,iBAAe,QAAQ,QAAQ,OAAO,OAAG,EAAE,QAAQ,SAAO,CAAC;AAC/D,kBAAG,eAAe,SAAO,KAAK,KAAK,YAAW;AAC5C,4BAAU;AACV;cACA;YAEJ;UACF;QACJ;AACA,YAAG,CAAC,WAAU;AACZ,eAAK,mBAAiB;;;;;;;;;;;;;YAcxB;cACE,UAAU;cACV,UAAU;cACV,WAAU;;;QAKd;MAGC,WACQ,KAAK,mBAAmB,SAAQ,UAAS;AAChD,YAAI,YAAU;AACd,YAAI,aAAW;AACf,YAAI,WAAS;AACb,YAAI,OAAK,KAAK,mBAAmB;AACjC,YAAI,OAAK,EAAC,YAAW,KAAK,mBAAmB,UAAS,YAAW,KAAK,mBAAmB,SAAQ;AAEjG,YAAI,WAAiB,KAAK;AAC1B,YAAI,WAAiB,KAAK;AACxB,YAAI,SAAQ,KAAK,QAAQ,QAAQ;AACjC,YAAI,QAAQ;AACV,qBAAS,OAAO,KAAK,SAAO;AAC5B,cAAG,OAAO,QAAQ,SAAO,KAAK,KAAK,YAAW;AAC5C,wBAAU;AACV,yBAAW,OAAO,KAAK,UAAQ;UACjC;AACA,mBAAS,QAAQ,GAAG,QAAQ,OAAO,KAAK,QAAQ,SAAS;AACvD,kBAAM,UAAU,OAAO,KAAK,KAAK;AACjC,gBAAI,iBAAe,QAAQ,QAAQ,OAAO,OAAG,EAAE,QAAQ,SAAO,CAAC;AAC/D,gBAAG,eAAe,SAAO,KAAK,KAAK,YAAW;AAC5C,0BAAU;AACV;YACA;UACD;QAEH;AAED,YAAG,WAAU;AACZ,cAAG,YAAW;AACZ,iBAAK,mBAAiB;cACpB;gBACA,UAAU;gBACV,UAAU;gBACT,WAAU;;cAEb;gBACE,UAAU;gBACV,UAAU;gBACT,WAAU;;cAEb;gBACE,UAAU;gBACV,UAAU;gBACT,WAAU;;cAEb;gBACE,UAAU;gBACV,UAAU;gBACV,WAAU;;;UAKd,OACI;UAQR;QACG,OAAK;AACJ,cAAG,CAAC,UACF;AACN,iBAAK,mBAAiB;;;;;;cAMtB;gBACE,UAAU;gBACV,UAAU;gBACT,WAAU;;;;;;;;;;;;UAajB;QACA;MACG,WACQ,KAAK,mBAAmB,SAAQ,aAAY;AACnD,YAAI,YAAU;AACd,YAAI,OAAK,KAAK,mBAAmB;AACjC,YAAI,OAAK,EAAC,YAAW,KAAK,mBAAmB,UAAS,YAAW,KAAK,mBAAmB,UAAS,kBAAiB,KAAK,mBAAmB,aAAY,qBAAoB,KAAK,mBAAmB,kBAAiB;AAEpN,YAAI,WAAiB,KAAK;AAC1B,YAAI,WAAiB,KAAK;AACxB,YAAI,SAAQ,KAAK,QAAQ,QAAQ;AACjC,YAAI,QAAQ;AACV,gBAAM,iBAAiB,QAAQ,OAAO,KAAK,cAAc;AAC1D,gBAAM,UAAU,gBAAgB,UAAU,KAAK,iBAAiB,GAAG;AAClE,cAAI,SAAS,SAAS,KAAK,KAAK,YAAY;AAC1C,wBAAY;UACd;QACF;AACD,YAAG,WAAU;AACZ,eAAK,mBAAiB;YAEtB;cACE,UAAU;cACV,UAAU;cACT,WAAU;;YAEb;cACE,UAAU;cACV,UAAU;cACT,WAAU;;YAEb;cACE,UAAU;cACV,UAAU;cACT,WAAU;;YAEb;cACE,UAAU;cACV,UAAU;cACV,WAAU;;;QAGb,OAAK;AACJ,eAAK,mBAAiB;;;;;;YAOtB;cACE,UAAU;cACV,UAAU;cACT,WAAU;;;;;;;;;;;;;QAad;MAEF,WACQ,KAAK,mBAAmB,SAAQ,mBAAkB;AACzD,YAAI,YAAU;AACd,YAAI,OAAK,KAAK,mBAAmB;AACjC,YAAI,OAAK,EAAC,YAAW,KAAK,mBAAmB,UAAS,YAAW,KAAK,mBAAmB,UAAS,kBAAiB,KAAK,mBAAmB,YAAW;AAEtJ,YAAI,WAAiB,KAAK;AAC1B,YAAI,WAAiB,KAAK;AACxB,YAAI,SAAQ,KAAK,QAAQ,QAAQ;AACjC,YAAI,QAAQ;AACV,gBAAM,iBAAiB,QAAQ,OAAO,KAAK,cAAc;AACzD,cAAI,gBAAgB,SAAS,SAAS,KAAK,KAAK,YAAY;AAC1D,wBAAY;UACd;QACJ;AACC,YAAG,CAAC,WAAU;AACb,eAAK,mBAAiB;YACpB;cACE,UAAU;cACV,UAAU;cACV,WAAU;;;QAIlB;MAEC;IAGH;AAEA,QAAI,KAAK,qBAAqB;AAC5B,UAAI,CAAC,KAAK,oBAAoB,WAAW,CAAC,KAAK,oBAAoB,SAAS;AAC1E,YAAI,KAAK,oBAAoB,SAAS,UAClC,KAAK,oBAAoB,UAAU,QAAW;AAChD,eAAK,oBAAoB,UAAU,KAAK,oBAAoB,OACzB,KAAK,oBAAoB,QAAQ;QACtE,OAAO;AACL,eAAK,oBAAoB,UAAU,KAAK,oBAAoB;QAC9D;AAEA,YAAI,KAAK,oBAAoB,QAAQ,UACjC,KAAK,oBAAoB,WAAW,QAAW;AACjD,eAAK,oBAAoB,UAAU,KAAK,oBAAoB,MACzB,KAAK,oBAAoB,SAAS;QACvE,OAAO;AACL,eAAK,oBAAoB,UAAU,KAAK,oBAAoB;QAC9D;AACA,aAAK,kBAAkB;MACzB;AACA,UAAI,cAAc;AAChB,cAAM,YAAY,SAAS,eAAe,KAAK,aAAa;AAC5D,YAAI,WAAW;AACb,gBAAM,WAAW,UAAU;AAC3B,gBAAM,OAAO,UAAU,sBAAqB;AAC5C,gBAAM,SAAS,KAAK,oBAAoB;AACxC,eAAK,oBAAoB,UAAU,SAAS,WAAW;AACvD,eAAK,oBAAoB,UAAU,KAAK;AACxC,eAAK,kBAAkB;QACzB;MACF;IAEF;EACF;EACA,kBAAe;AACb,eAAW,MAAK;AACd,YAAM,YAAY,SAAS,cAAc,YAAY;AACrD,UAAI,WAAW;AACb,aAAK,SAAS,OAAO,WAAW,UAAU,MAAK;AAC7C,eAAK,kBAAkB;QACzB,CAAC;MACH,OAAO;AACL,gBAAQ,KAAK,iCAAiC;MAChD;IACF,CAAC;EACH;;;;;;;;;;;;;EAkBA,mBAAmB,OAAO,MAAY;AACpC,SAAK,oBAAoB,KAAK,EAAE,QAAQ,MAAM,oBAAoB,KAAK,oBAAmB,UAAS,KAAK,wBAAuB,CAAE;AACjI,eAAW,MAAK;AACd,WAAK,kBAAkB;AACvB,WAAK,QAAQ,gBAAgB,IAAI;IACnC,GAAG,GAAG;EACR;EAEA,iBAAc;AACZ,SAAK,kBAAkB;EACzB;EAEA,SAAS,OAAY;AACnB,SAAK,kBAAkB;EACzB;;;uCA7WW,uBAAoB,4BAAA,UAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,SAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,cAAA,SAAA,kCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AAApB,QAAA,qBAAA,UAAA,SAAA,iDAAA;AAAA,iBAAA,IAAA,eAAA;QAAgB,GAAA,OAAA,yBAAA,EAAI,SAAA,SAAA,8CAAA,QAAA;AAAA,iBAApB,IAAA,SAAA,MAAA;QAAgB,GAAA,OAAA,2BAAA;;;;AChB7B,QAAA,qBAAA,GAAA,qCAAA,GAAA,IAAA,OAAA,CAAA;;;AAAM,QAAA,qBAAA,QAAA,IAAA,eAAA;;sBDaQ,MAAM,SAAS,SAAO,UAAU,GAAA,QAAA,CAAA,yuBAAA,EAAA,CAAA;EAAA;;;6EAGjC,sBAAoB,EAAA,WAAA,wBAAA,UAAA,sFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEhB1B,IAAM,iBAAiB,CAAC,QAAa,aAAqB,eAAiC;AAC9F,QAAM,iBAAiB,WAAW;AAElC,aAAW,QAAQ,YAAY,MAAW;AACxC,QAAI,CAAC,KAAK;AAAqB;AAC/B,WAAO,eAAe,MAAM,MAAM,IAAI;EACxC;AAEA,SAAO;AACT;;;ACCI,IAAO,yBAAP,MAAO,wBAAsB;EAiB/B,YAA6B,IAAc;AAAd,SAAA,KAAA;AAfpB,SAAA,WAAmB;AACnB,SAAA,sBAAsB;AACrB,SAAA,WAAW,IAAI,aAAY;AAKrC,SAAA,aAAa;AACb,SAAA,kBAAkB;AAClB,SAAA,SAAS;AACT,SAAA,aAAa;AAEL,SAAA,mBAAkC;AAClC,SAAA,iBAAyB;EAEa;EAG9C,kBAAe;AACX,SAAK,YAAY,KAAK,GAAG,cAAc,iBAAiB,MAAM;AAC9D,QAAI,KAAK,UAAU,SAAS,GAAG;AAC3B,WAAK,UAAU,QAAQ,CAAC,UAAU,UAAS;AACvC,iBAAS,iBAAiB,aAAa,CAAC,UAAU,KAAK,iBAAiB,OAAO,KAAK,CAAC;MACzF,CAAC;IACL;AACA,SAAK,iBAAiB,KAAK,GAAG,cAAc;EAChD;EAGA,aAAU;AACN,QAAI,KAAK,kBAAkB;AACvB,2BAAqB,KAAK,gBAAgB;AAC1C,WAAK,mBAAmB;IAC5B;AACA,SAAK,aAAa;EACtB;EAEA,iBAAiB,OAAmB,UAAgB;AAChD,UAAM,iBAAkB,MAAM,QAAwB,UAAU,SAAS,SAAS;AAClF,QAAI,gBAAgB;AAChB,WAAK,aAAa;AAClB,WAAK,kBAAkB;AACvB,WAAK,SAAS,MAAM;AACpB,WAAK,aAAa,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,QAAQ,GAAG;AAC9D,WAAK,iBAAiB,KAAK,GAAG,cAAc;AAC5C,YAAM,eAAc;IACxB;EACJ;EAGA,aAAa,OAAiB;AAC1B,SAAK,WAAU;EACnB;EAGA,UAAU,OAAiB;AACvB,QAAI,KAAK,YAAY;AACjB,WAAK,SAAS,KAAK;QACf,SAAS,KAAK,KAAK,KAAK,QAAQ,EAAE;QAClC,UAAU,KAAK;OAClB;IACL;AACA,SAAK,WAAU;EACnB;EAIA,YAAY,OAAiB;AACzB,QAAI,CAAC,KAAK;AAAY;AAEtB,QAAI,KAAK,kBAAkB;AACvB,2BAAqB,KAAK,gBAAgB;IAC9C;AAEA,SAAK,mBAAmB,sBAAsB,MAAK;AAC/C,YAAM,WAAW;AACjB,YAAM,KAAK,MAAM,UAAU,KAAK;AAEhC,YAAM,aAAc,KAAK,aAAa,KAAK,iBAAiB,MAAO;AACnE,YAAM,WAAY,aAAa,KAAK,iBAAkB;AAEtD,UAAI,kBAAkB;AACtB,eAAS,IAAI,KAAK,kBAAkB,GAAG,IAAI,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,QAAQ,KAAK;AACrF,2BAAmB,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,CAAC,GAAG;MAC5D;AAEA,YAAM,WAAW,MACb,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,MAAM,GAAG,KAAK,eAAe,EAAE,OAAO,CAAC,KAAK,QAAQ,MAAM,IAAI,OAAO,CAAC,KACtG,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,SAAS,KAAK,kBAAkB,KAAK;AAE3E,YAAM,mBAAmB,KAAK,IAC1B,UACA,KAAK,IAAI,UAAU,QAAQ,CAAC;AAGhC,YAAM,QAAQ,mBAAmB,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,KAAK,eAAe,GAAG;AAEzF,WAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,KAAK,eAAe,MAAM,CAAA;AAC3D,WAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,KAAK,eAAe,EAAE,QAAQ;AAE/D,UAAI,kBAAkB,GAAG;AACrB,iBAAS,IAAI,KAAK,kBAAkB,GAAG,IAAI,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,QAAQ,KAAK;AACrF,eAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAA;AACxC,gBAAM,QAAQ,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,CAAC,GAAG,QAAQ;AAC3D,eAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,CAAC,EAAE,QAAQ,KAAK,IAAI,UAAU,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,CAAC,GAAG,QAAS,QAAQ,KAAM;QAC/H;MACJ;IACJ,CAAC;EACL;;;uCA9GS,yBAAsB,4BAAA,UAAA,CAAA;IAAA;EAAA;;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,IAAA,gBAAA,EAAA,CAAA,GAAA,cAAA,SAAA,oCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AAAtB,QAAA,qBAAA,cAAA,SAAA,qDAAA,QAAA;AAAA,iBAAA,IAAA,aAAA,MAAA;QAAoB,CAAA,EAAE,WAAA,SAAA,kDAAA,QAAA;AAAA,iBAAtB,IAAA,UAAA,MAAA;QAAiB,CAAA,EAAK,aAAA,SAAA,oDAAA,QAAA;AAAA,iBAAtB,IAAA,YAAA,MAAA;QAAmB,CAAA;;;;;AAoB5B,WAAA;EADC;;AAYD,WAAA;EADC;;AAuCD,WAAA;EAFC;;;;ACxDL,IAAMC,OAAM,CAAC,iBAAiB,EAAE;AAChC,IAAMC,OAAM,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,IAAI,mBAAmB,EAAE,CAAC,GAAG,GAAG;AAC7D,IAAMC,OAAM,CAAC,+BAA+B,GAAG;AAC/C,SAAS,mCAAmC,IAAI,KAAK;AACnD,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe;AAClB,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,oBAAU,GAAG,WAAW,CAAC;AAC5B,IAAG,uBAAa;AAAA,EAClB;AACF;AACA,IAAM,MAAM,CAAC,GAAG;AAChB,SAAS,+BAA+B,IAAI,KAAK;AAC/C,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,2BAAiB;AAChC,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,qBAAW,WAAW,SAAS,sDAAsD,QAAQ;AAC9F,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,eAAe,MAAM,CAAC;AAAA,IACrD,CAAC,EAAE,SAAS,SAAS,sDAAsD;AACzE,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,OAAO,KAAK,OAAO,CAAC;AAAA,IACnD,CAAC,EAAE,wBAAwB,SAAS,4EAA4E,QAAQ;AACtH,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,kBAAkB,MAAM,CAAC;AAAA,IACxD,CAAC,EAAE,uBAAuB,SAAS,2EAA2E,QAAQ;AACpH,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,iBAAiB,MAAM,CAAC;AAAA,IACvD,CAAC;AACD,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,uBAAa,CAAC;AACjB,IAAG,uBAAa,EAAE;AAAA,EACpB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,qBAAW,OAAO,UAAU;AAC/B,IAAG,qBAAW,MAAM,OAAO,OAAO,EAAE,kBAAkB,OAAO,oBAAoB;AACjF,IAAG,sBAAY,cAAc,OAAO,aAAa,IAAI,EAAE,mBAAmB,OAAO,kBAAkB,IAAI,EAAE,oBAAoB,OAAO,mBAAmB,IAAI;AAAA,EAC7J;AACF;AACA,IAAM,iBAAiB,IAAI,eAAe,gBAAgB;AAK1D,IAAM,cAAN,MAAM,aAAY;AAAA,EAChB,YAAY,aAAa,WAAW,eAAe,aAAa,oBAAoB;AAClF,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,gBAAgB;AACrB,SAAK,cAAc;AACnB,SAAK,qBAAqB;AAE1B,SAAK,OAAO;AAEZ,SAAK,WAAW;AAEhB,SAAK,gBAAgB;AAErB,SAAK,WAAW,IAAI,QAAQ;AAE5B,SAAK,WAAW,IAAI,QAAQ;AAE5B,SAAK,eAAe;AAEpB,SAAK,mBAAmB;AACxB,iBAAa,UAAU,IAAI;AAAA,EAC7B;AAAA;AAAA,EAEA,MAAM,QAAQ,SAAS;AACrB,QAAI,KAAK,iBAAiB,QAAQ;AAChC,WAAK,cAAc,SAAS,KAAK,gBAAgB,GAAG,QAAQ,OAAO;AAAA,IACrE,OAAO;AACL,WAAK,gBAAgB,EAAE,MAAM,OAAO;AAAA,IACtC;AACA,SAAK,SAAS,KAAK,IAAI;AAAA,EACzB;AAAA,EACA,kBAAkB;AAChB,QAAI,KAAK,eAAe;AAItB,WAAK,cAAc,QAAQ,KAAK,aAAa,KAAK;AAAA,IACpD;AAAA,EACF;AAAA,EACA,cAAc;AACZ,QAAI,KAAK,eAAe;AACtB,WAAK,cAAc,eAAe,KAAK,WAAW;AAAA,IACpD;AACA,QAAI,KAAK,eAAe,KAAK,YAAY,YAAY;AACnD,WAAK,YAAY,WAAW,IAAI;AAAA,IAClC;AACA,SAAK,SAAS,SAAS;AACvB,SAAK,SAAS,SAAS;AAAA,EACzB;AAAA;AAAA,EAEA,eAAe;AACb,WAAO,KAAK,WAAW,OAAO;AAAA,EAChC;AAAA;AAAA,EAEA,kBAAkB;AAChB,WAAO,KAAK,YAAY;AAAA,EAC1B;AAAA;AAAA,EAEA,eAAe,OAAO;AACpB,QAAI,KAAK,UAAU;AACjB,YAAM,eAAe;AACrB,YAAM,gBAAgB;AAAA,IACxB;AAAA,EACF;AAAA;AAAA,EAEA,oBAAoB;AAClB,SAAK,SAAS,KAAK,IAAI;AAAA,EACzB;AAAA;AAAA,EAEA,WAAW;AACT,UAAM,QAAQ,KAAK,YAAY,cAAc,UAAU,IAAI;AAC3D,UAAM,QAAQ,MAAM,iBAAiB,2BAA2B;AAEhE,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAM,CAAC,EAAE,OAAO;AAAA,IAClB;AACA,WAAO,MAAM,aAAa,KAAK,KAAK;AAAA,EACtC;AAAA,EACA,gBAAgB,eAAe;AAK7B,SAAK,eAAe;AACpB,SAAK,oBAAoB,aAAa;AAAA,EACxC;AAAA,EACA,oBAAoB,iBAAiB;AAEnC,SAAK,mBAAmB;AACxB,SAAK,oBAAoB,aAAa;AAAA,EACxC;AAAA,EACA,YAAY;AACV,WAAO,KAAK,aAAa,KAAK,UAAU,kBAAkB,KAAK,gBAAgB;AAAA,EACjF;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,oBAAoB,mBAAmB;AAC1D,aAAO,KAAK,qBAAqB,cAAgB,4BAAqB,UAAU,GAAM,4BAAkB,QAAQ,GAAM,4BAAqB,YAAY,GAAM,4BAAkB,gBAAgB,CAAC,GAAM,4BAAqB,iBAAiB,CAAC;AAAA,IAC/O;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC;AAAA,MACrC,WAAW,CAAC,GAAG,qBAAqB,yBAAyB;AAAA,MAC7D,UAAU;AAAA,MACV,cAAc,SAAS,yBAAyB,IAAI,KAAK;AACvD,YAAI,KAAK,GAAG;AACV,UAAG,qBAAW,SAAS,SAAS,qCAAqC,QAAQ;AAC3E,mBAAO,IAAI,eAAe,MAAM;AAAA,UAClC,CAAC,EAAE,cAAc,SAAS,4CAA4C;AACpE,mBAAO,IAAI,kBAAkB;AAAA,UAC/B,CAAC;AAAA,QACH;AACA,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,QAAQ,IAAI,IAAI,EAAE,YAAY,IAAI,aAAa,CAAC,EAAE,iBAAiB,IAAI,QAAQ,EAAE,YAAY,IAAI,YAAY,IAAI;AAChI,UAAG,sBAAY,iCAAiC,IAAI,YAAY,EAAE,qCAAqC,IAAI,gBAAgB;AAAA,QAC7H;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,UAAU,CAAC,GAAG,YAAY,YAAY,gBAAgB;AAAA,QACtD,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,gBAAgB;AAAA,MACvE;AAAA,MACA,UAAU,CAAC,aAAa;AAAA,MACxB,YAAY;AAAA,MACZ,UAAU,CAAI,oCAA6B,6BAAmB;AAAA,MAC9D,OAAOF;AAAA,MACP,oBAAoBE;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,CAAC,CAAC,GAAG,wBAAwB,GAAG,CAAC,aAAa,IAAI,GAAG,uBAAuB,GAAG,qBAAqB,kBAAkB,GAAG,CAAC,WAAW,YAAY,aAAa,SAAS,eAAe,QAAQ,GAAG,2BAA2B,GAAG,CAAC,UAAU,cAAc,CAAC;AAAA,MACjQ,UAAU,SAAS,qBAAqB,IAAI,KAAK;AAC/C,YAAI,KAAK,GAAG;AACV,UAAG,0BAAgBD,IAAG;AACtB,UAAG,uBAAa,CAAC;AACjB,UAAG,yBAAe,GAAG,QAAQ,CAAC;AAC9B,UAAG,uBAAa,GAAG,CAAC;AACpB,UAAG,uBAAa;AAChB,UAAG,oBAAU,GAAG,OAAO,CAAC;AACxB,UAAG,qBAAW,GAAG,oCAAoC,GAAG,GAAG,YAAY,CAAC;AAAA,QAC1E;AACA,YAAI,KAAK,GAAG;AACV,UAAG,oBAAU,CAAC;AACd,UAAG,qBAAW,qBAAqB,IAAI,iBAAiB,IAAI,QAAQ,EAAE,oBAAoB,IAAI,gBAAgB,CAAC;AAC/G,UAAG,oBAAU;AACb,UAAG,wBAAc,IAAI,mBAAmB,IAAI,EAAE;AAAA,QAChD;AAAA,MACF;AAAA,MACA,cAAc,CAAC,SAAS;AAAA,MACxB,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,aAAa,CAAC;AAAA,IACpF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,eAAe;AAAA,QACf,SAAS;AAAA,QACT,yCAAyC;AAAA,QACzC,6CAA6C;AAAA,QAC7C,mBAAmB;AAAA,QACnB,wBAAwB;AAAA,QACxB,mBAAmB;AAAA,QACnB,WAAW;AAAA,QACX,gBAAgB;AAAA,MAClB;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,oBAAkB;AAAA,MACjC,YAAY;AAAA,MACZ,SAAS,CAAC,SAAS;AAAA,MACnB,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,cAAc;AAAA,IACvB,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAOH,SAAS,+BAA+B;AACtC,QAAM,MAAM;AAAA,wEAC0D;AACxE;AAMA,SAAS,+BAA+B;AACtC,QAAM,MAAM;AAAA,uEACyD;AACvE;AAMA,SAAS,6BAA6B;AACpC,QAAM,MAAM,oJAAyJ;AACvK;AAOA,IAAM,mBAAmB,IAAI,eAAe,gBAAgB;AAE5D,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,YAAY,WAAW,2BAA2B,SAAS,WAAW,mBAAmB,WAAW,oBAAoB;AACtH,SAAK,YAAY;AACjB,SAAK,4BAA4B;AACjC,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,oBAAoB;AACzB,SAAK,YAAY;AACjB,SAAK,qBAAqB;AAE1B,SAAK,YAAY,IAAI,QAAQ;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,UAAU,CAAC,GAAG;AACnB,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,UAAU,IAAI,eAAe,KAAK,WAAW,KAAK,iBAAiB;AAAA,IAC1E;AACA,SAAK,OAAO;AACZ,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,UAAU,IAAI,gBAAgB,KAAK,UAAU,cAAc,KAAK,GAAG,KAAK,2BAA2B,KAAK,SAAS,KAAK,SAAS;AAAA,IACtI;AACA,UAAM,UAAU,KAAK,UAAU,WAAW;AAI1C,YAAQ,WAAW,aAAa,KAAK,QAAQ,eAAe,OAAO;AAOnE,SAAK,oBAAoB,aAAa;AACtC,SAAK,QAAQ,OAAO,KAAK,SAAS,OAAO;AACzC,SAAK,UAAU,KAAK;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,QAAI,KAAK,QAAQ,YAAY;AAC3B,WAAK,QAAQ,OAAO;AAAA,IACtB;AAAA,EACF;AAAA,EACA,cAAc;AACZ,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,QAAQ;AAAA,IACvB;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,uBAAuB,mBAAmB;AAC7D,aAAO,KAAK,qBAAqB,iBAAmB,4BAAqB,WAAW,GAAM,4BAAqB,0BAAwB,GAAM,4BAAqB,cAAc,GAAM,4BAAqB,QAAQ,GAAM,4BAAqB,gBAAgB,GAAM,4BAAkB,QAAQ,GAAM,4BAAqB,iBAAiB,CAAC;AAAA,IAC7U;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,eAAe,kBAAkB,EAAE,CAAC;AAAA,MACjD,YAAY;AAAA,MACZ,UAAU,CAAI,6BAAmB,CAAC;AAAA,QAChC,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC,CAAC,CAAC;AAAA,IACL,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAQH,IAAM,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASxB,eAAe,QAAQ,iBAAiB,CAAC,MAAM,QAAQ,MAAM;AAAA,IAC3D,SAAS;AAAA,IACT,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,WAAW,iBAAiB,QAAQ,oCAAoC,MAAM;AAAA,IACjF,SAAS;AAAA,IACT,WAAW;AAAA,EACb,CAAC,CAAC,CAAC,GAAG,WAAW,aAAa,QAAQ,qBAAqB,MAAM;AAAA,IAC/D,SAAS;AAAA,EACX,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKL,aAAa,QAAQ,eAAe;AAAA;AAAA;AAAA,IAGpC,MAAM,WAAW,MAAM;AAAA,MACrB,SAAS;AAAA,IACX,CAAC,CAAC;AAAA,IAAG,WAAW,aAAa,CAAC,MAAM;AAAA,MAClC,SAAS;AAAA,IACX,CAAC,GAAG,QAAQ,8CAA8C,CAAC,CAAC;AAAA,EAAC,CAAC;AAChE;AAMA,IAAM,cAAc,kBAAkB;AAMtC,IAAM,gBAAgB,kBAAkB;AACxC,IAAI,eAAe;AAEnB,IAAM,2BAA2B,IAAI,eAAe,4BAA4B;AAAA,EAC9E,YAAY;AAAA,EACZ,SAAS;AACX,CAAC;AAED,SAAS,mCAAmC;AAC1C,SAAO;AAAA,IACL,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,WAAW;AAAA,IACX,eAAe;AAAA,EACjB;AACF;AACA,IAAM,UAAN,MAAM,SAAQ;AAAA;AAAA,EAEZ,IAAI,YAAY;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,UAAU,OAAO;AACnB,QAAI,UAAU,YAAY,UAAU,YAAY,OAAO,cAAc,eAAe,YAAY;AAC9F,mCAA6B;AAAA,IAC/B;AACA,SAAK,aAAa;AAClB,SAAK,mBAAmB;AAAA,EAC1B;AAAA;AAAA,EAEA,IAAI,YAAY;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,UAAU,OAAO;AACnB,QAAI,UAAU,WAAW,UAAU,YAAY,OAAO,cAAc,eAAe,YAAY;AAC7F,mCAA6B;AAAA,IAC/B;AACA,SAAK,aAAa;AAClB,SAAK,mBAAmB;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,WAAW,SAAS;AACtB,UAAM,qBAAqB,KAAK;AAChC,UAAM,eAAe,mBAChB,KAAK;AAEV,QAAI,sBAAsB,mBAAmB,QAAQ;AACnD,yBAAmB,MAAM,GAAG,EAAE,QAAQ,eAAa;AACjD,qBAAa,SAAS,IAAI;AAAA,MAC5B,CAAC;AAAA,IACH;AACA,SAAK,sBAAsB;AAC3B,QAAI,WAAW,QAAQ,QAAQ;AAC7B,cAAQ,MAAM,GAAG,EAAE,QAAQ,eAAa;AACtC,qBAAa,SAAS,IAAI;AAAA,MAC5B,CAAC;AACD,WAAK,YAAY,cAAc,YAAY;AAAA,IAC7C;AACA,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,YAAY;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,UAAU,SAAS;AACrB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,YAAY,aAKZ,eAAe,gBAEf,oBAAoB;AAClB,SAAK,cAAc;AACnB,SAAK,qBAAqB;AAC1B,SAAK,mBAAmB;AACxB,SAAK,iBAAiB;AAEtB,SAAK,yBAAyB,IAAI,UAAU;AAE5C,SAAK,aAAa,CAAC;AAEnB,SAAK,uBAAuB;AAE5B,SAAK,iBAAiB,IAAI,QAAQ;AAElC,SAAK,SAAS,IAAI,aAAa;AAM/B,SAAK,QAAQ,KAAK;AAClB,SAAK,UAAU,kBAAkB,cAAc;AAC/C,SAAK,YAAY,OAAO,QAAQ;AAChC,SAAK,oBAAoB,eAAe,qBAAqB;AAC7D,SAAK,aAAa,eAAe;AACjC,SAAK,aAAa,eAAe;AACjC,SAAK,gBAAgB,eAAe;AACpC,SAAK,iBAAiB,eAAe;AACrC,SAAK,cAAc,eAAe;AAAA,EACpC;AAAA,EACA,WAAW;AACT,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,qBAAqB;AACnB,SAAK,yBAAyB;AAC9B,SAAK,cAAc,IAAI,gBAAgB,KAAK,sBAAsB,EAAE,SAAS,EAAE,cAAc,EAAE,eAAe;AAC9G,SAAK,YAAY,OAAO,UAAU,MAAM,KAAK,OAAO,KAAK,KAAK,CAAC;AAI/D,SAAK,uBAAuB,QAAQ,KAAK,UAAU,KAAK,sBAAsB,GAAG,UAAU,WAAS,MAAM,GAAG,MAAM,IAAI,UAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,UAAU,iBAAe,KAAK,YAAY,iBAAiB,WAAW,CAAC;AACxN,SAAK,uBAAuB,QAAQ,UAAU,eAAa;AAIzD,YAAM,UAAU,KAAK;AACrB,UAAI,KAAK,yBAAyB,WAAW,QAAQ,YAAY,UAAU,GAAG;AAC5E,cAAM,QAAQ,UAAU,QAAQ;AAChC,cAAM,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,MAAM,SAAS,GAAG,QAAQ,mBAAmB,CAAC,CAAC;AAClF,YAAI,MAAM,KAAK,KAAK,CAAC,MAAM,KAAK,EAAE,UAAU;AAC1C,kBAAQ,cAAc,KAAK;AAAA,QAC7B,OAAO;AACL,kBAAQ,kBAAkB;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,aAAa,QAAQ;AAC1B,SAAK,uBAAuB,QAAQ;AACpC,SAAK,OAAO,SAAS;AACrB,SAAK,oBAAoB,QAAQ;AAAA,EACnC;AAAA;AAAA,EAEA,WAAW;AAET,UAAM,cAAc,KAAK,uBAAuB;AAChD,WAAO,YAAY,KAAK,UAAU,KAAK,sBAAsB,GAAG,UAAU,WAAS,MAAM,GAAG,MAAM,IAAI,UAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;AAAA,EAChI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,OAAO;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOhB,WAAW,OAAO;AAAA,EAAC;AAAA;AAAA,EAEnB,eAAe,OAAO;AACpB,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,KAAK;AACrB,YAAQ,SAAS;AAAA,MACf,KAAK;AACH,YAAI,CAAC,eAAe,KAAK,GAAG;AAC1B,gBAAM,eAAe;AACrB,eAAK,OAAO,KAAK,SAAS;AAAA,QAC5B;AACA;AAAA,MACF,KAAK;AACH,YAAI,KAAK,cAAc,KAAK,cAAc,OAAO;AAC/C,eAAK,OAAO,KAAK,SAAS;AAAA,QAC5B;AACA;AAAA,MACF,KAAK;AACH,YAAI,KAAK,cAAc,KAAK,cAAc,OAAO;AAC/C,eAAK,OAAO,KAAK,SAAS;AAAA,QAC5B;AACA;AAAA,MACF;AACE,YAAI,YAAY,YAAY,YAAY,YAAY;AAClD,kBAAQ,eAAe,UAAU;AAAA,QACnC;AACA,gBAAQ,UAAU,KAAK;AACvB;AAAA,IACJ;AAGA,UAAM,gBAAgB;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,SAAS,WAAW;AAEjC,SAAK,oBAAoB,QAAQ;AACjC,SAAK,qBAAqB,gBAAgB,MAAM;AAC9C,UAAI,YAAY;AAChB,UAAI,KAAK,uBAAuB,QAAQ;AAKtC,oBAAY,KAAK,uBAAuB,MAAM,gBAAgB,EAAE,QAAQ,eAAe;AAAA,MACzF;AAEA,UAAI,CAAC,aAAa,CAAC,UAAU,SAAS,SAAS,aAAa,GAAG;AAC7D,cAAM,UAAU,KAAK;AACrB,gBAAQ,eAAe,MAAM,EAAE,mBAAmB;AAIlD,YAAI,CAAC,QAAQ,cAAc,WAAW;AACpC,oBAAU,MAAM;AAAA,QAClB;AAAA,MACF;AAAA,IACF,GAAG;AAAA,MACD,UAAU,KAAK;AAAA,IACjB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB;AAChB,SAAK,YAAY,cAAc,EAAE;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,OAAO;AAGlB,QAAI,KAAK,mBAAmB,MAAM;AAChC,YAAM,SAAS,OAAO,qBAAqB,aAAa,iBAAiB,KAAK,YAAY,aAAa,IAAI;AAC3G,YAAM,QAAQ,QAAQ,iBAAiB,iCAAiC,KAAK;AAC7E,WAAK,iBAAiB,SAAS,KAAK;AAAA,IACtC;AAGA,UAAM,YAAY,KAAK,IAAI,KAAK,iBAAiB,OAAO,EAAE;AAC1D,UAAM,eAAe,GAAG,KAAK,gBAAgB,GAAG,SAAS;AACzD,UAAM,kBAAkB,OAAO,KAAK,KAAK,UAAU,EAAE,KAAK,eAAa;AACrE,aAAO,UAAU,WAAW,KAAK,gBAAgB;AAAA,IACnD,CAAC;AACD,QAAI,CAAC,mBAAmB,oBAAoB,KAAK,oBAAoB;AACnE,YAAM,eAAe,mBAChB,KAAK;AAEV,UAAI,KAAK,oBAAoB;AAC3B,qBAAa,KAAK,kBAAkB,IAAI;AAAA,MAC1C;AACA,mBAAa,YAAY,IAAI;AAC7B,WAAK,qBAAqB;AAC1B,WAAK,aAAa;AAAA,IACpB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,mBAAmB,OAAO,KAAK,WAAW,OAAO,KAAK,WAAW;AAC/D,SAAK,aAAa,iCACb,KAAK,aADQ;AAAA,MAEhB,CAAC,iBAAiB,GAAG,SAAS;AAAA,MAC9B,CAAC,gBAAgB,GAAG,SAAS;AAAA,MAC7B,CAAC,gBAAgB,GAAG,SAAS;AAAA,MAC7B,CAAC,gBAAgB,GAAG,SAAS;AAAA,IAC/B;AAEA,SAAK,oBAAoB,aAAa;AAAA,EACxC;AAAA;AAAA,EAEA,kBAAkB;AAEhB,SAAK,uBAAuB;AAAA,EAC9B;AAAA;AAAA,EAEA,kBAAkB;AAEhB,SAAK,uBAAuB;AAAA,EAC9B;AAAA;AAAA,EAEA,iBAAiB,OAAO;AACtB,SAAK,eAAe,KAAK,KAAK;AAC9B,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,kBAAkB,OAAO;AACvB,SAAK,eAAe;AAOpB,QAAI,MAAM,YAAY,WAAW,KAAK,YAAY,oBAAoB,GAAG;AACvE,YAAM,QAAQ,YAAY;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,2BAA2B;AACzB,SAAK,UAAU,QAAQ,KAAK,UAAU,KAAK,SAAS,CAAC,EAAE,UAAU,WAAS;AACxE,WAAK,uBAAuB,MAAM,MAAM,OAAO,UAAQ,KAAK,gBAAgB,IAAI,CAAC;AACjF,WAAK,uBAAuB,gBAAgB;AAAA,IAC9C,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,gBAAgB,mBAAmB;AACtD,aAAO,KAAK,qBAAqB,UAAY,4BAAqB,UAAU,GAAM,4BAAqB,MAAM,GAAM,4BAAkB,wBAAwB,GAAM,4BAAqB,iBAAiB,CAAC;AAAA,IAC5M;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,UAAU,CAAC;AAAA,MACxB,gBAAgB,SAAS,uBAAuB,IAAI,KAAK,UAAU;AACjE,YAAI,KAAK,GAAG;AACV,UAAG,yBAAe,UAAU,kBAAkB,CAAC;AAC/C,UAAG,yBAAe,UAAU,aAAa,CAAC;AAC1C,UAAG,yBAAe,UAAU,aAAa,CAAC;AAAA,QAC5C;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,cAAc,GAAG;AAClE,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,YAAY;AAC7D,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,QAAQ;AAAA,QAC3D;AAAA,MACF;AAAA,MACA,WAAW,SAAS,cAAc,IAAI,KAAK;AACzC,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,aAAa,CAAC;AAAA,QAC/B;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,cAAc,GAAG;AAAA,QACpE;AAAA,MACF;AAAA,MACA,UAAU;AAAA,MACV,cAAc,SAAS,qBAAqB,IAAI,KAAK;AACnD,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,cAAc,IAAI,EAAE,mBAAmB,IAAI,EAAE,oBAAoB,IAAI;AAAA,QACtF;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,eAAe;AAAA,QACf,WAAW,CAAC,GAAG,cAAc,WAAW;AAAA,QACxC,gBAAgB,CAAC,GAAG,mBAAmB,gBAAgB;AAAA,QACvD,iBAAiB,CAAC,GAAG,oBAAoB,iBAAiB;AAAA,QAC1D,WAAW;AAAA,QACX,WAAW;AAAA,QACX,gBAAgB,CAAC,GAAG,kBAAkB,kBAAkB,gBAAgB;AAAA,QACxE,aAAa,CAAC,GAAG,eAAe,eAAe,WAAS,SAAS,OAAO,OAAO,iBAAiB,KAAK,CAAC;AAAA,QACtG,YAAY,CAAC,GAAG,SAAS,YAAY;AAAA,QACrC,WAAW;AAAA,MACb;AAAA,MACA,SAAS;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,MACT;AAAA,MACA,UAAU,CAAC,SAAS;AAAA,MACpB,YAAY;AAAA,MACZ,UAAU,CAAI,6BAAmB,CAAC;AAAA,QAChC,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC,CAAC,GAAM,oCAA6B,6BAAmB;AAAA,MACxD,oBAAoB;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,CAAC,CAAC,YAAY,MAAM,QAAQ,QAAQ,GAAG,sBAAsB,8BAA8B,GAAG,WAAW,SAAS,IAAI,GAAG,CAAC,GAAG,sBAAsB,CAAC;AAAA,MAC5J,UAAU,SAAS,iBAAiB,IAAI,KAAK;AAC3C,YAAI,KAAK,GAAG;AACV,UAAG,0BAAgB;AACnB,UAAG,qBAAW,GAAG,gCAAgC,GAAG,GAAG,aAAa;AAAA,QACtE;AAAA,MACF;AAAA,MACA,QAAQ,CAAC,ylIAA2lI;AAAA,MACpmI,eAAe;AAAA,MACf,MAAM;AAAA,QACJ,WAAW,CAAC,kBAAkB,eAAe,kBAAkB,WAAW;AAAA,MAC5E;AAAA,MACA,iBAAiB;AAAA,IACnB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,SAAS,CAAC;AAAA,IAChF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,oBAAkB;AAAA,MACjC,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,qBAAqB;AAAA,QACrB,0BAA0B;AAAA,QAC1B,2BAA2B;AAAA,MAC7B;AAAA,MACA,YAAY,CAAC,kBAAkB,eAAe,kBAAkB,WAAW;AAAA,MAC3E,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,YAAY;AAAA,MACZ,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACV,QAAQ,CAAC,ylIAA2lI;AAAA,IACtmI,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,wBAAwB;AAAA,IACjC,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,QAClB,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM,CAAC,kBAAkB;AAAA,IAC3B,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,QAClB,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW,WAAS,SAAS,OAAO,OAAO,iBAAiB,KAAK;AAAA,MACnE,CAAC;AAAA,IACH,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,OAAO;AAAA,IAChB,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAGH,IAAM,2BAA2B,IAAI,eAAe,4BAA4B;AAAA,EAC9E,YAAY;AAAA,EACZ,SAAS,MAAM;AACb,UAAM,UAAU,OAAO,OAAO;AAC9B,WAAO,MAAM,QAAQ,iBAAiB,WAAW;AAAA,EACnD;AACF,CAAC;AAED,SAAS,iCAAiC,SAAS;AACjD,SAAO,MAAM,QAAQ,iBAAiB,WAAW;AACnD;AAEA,IAAM,4CAA4C;AAAA,EAChD,SAAS;AAAA,EACT,MAAM,CAAC,OAAO;AAAA,EACd,YAAY;AACd;AAEA,IAAM,8BAA8B,gCAAgC;AAAA,EAClE,SAAS;AACX,CAAC;AAQD,IAAM,iBAAN,MAAM,gBAAe;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnB,IAAI,+BAA+B;AACjC,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,6BAA6B,GAAG;AAClC,SAAK,OAAO;AAAA,EACd;AAAA;AAAA,EAEA,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,KAAK,MAAM;AACb,QAAI,SAAS,KAAK,OAAO;AACvB;AAAA,IACF;AACA,SAAK,QAAQ;AACb,SAAK,uBAAuB,YAAY;AACxC,QAAI,MAAM;AACR,UAAI,SAAS,KAAK,wBAAwB,OAAO,cAAc,eAAe,YAAY;AACxF,mCAA2B;AAAA,MAC7B;AACA,WAAK,yBAAyB,KAAK,MAAM,UAAU,YAAU;AAC3D,aAAK,aAAa,MAAM;AAExB,aAAK,WAAW,WAAW,WAAW,UAAU,KAAK,qBAAqB;AACxE,eAAK,oBAAoB,OAAO,KAAK,MAAM;AAAA,QAC7C;AAAA,MACF,CAAC;AAAA,IACH;AACA,SAAK,mBAAmB,oBAAoB,KAAK,gBAAgB,CAAC;AAAA,EACpE;AAAA,EACA,YAAY,UAAU,UAAU,mBAAmB,gBAAgB,YAGnE,mBAAmB,MAAM,eAAe,SAAS;AAC/C,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,oBAAoB;AACzB,SAAK,oBAAoB;AACzB,SAAK,OAAO;AACZ,SAAK,gBAAgB;AACrB,SAAK,UAAU;AACf,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,8BAA8B,aAAa;AAChD,SAAK,qBAAqB,aAAa;AACvC,SAAK,yBAAyB,aAAa;AAC3C,SAAK,qBAAqB,OAAO,iBAAiB;AAKlD,SAAK,oBAAoB,WAAS;AAChC,UAAI,CAAC,iCAAiC,KAAK,GAAG;AAC5C,aAAK,YAAY;AAAA,MACnB;AAAA,IACF;AAGA,SAAK,YAAY;AAMjB,SAAK,eAAe;AAEpB,SAAK,aAAa,IAAI,aAAa;AAOnC,SAAK,aAAa,KAAK;AAEvB,SAAK,aAAa,IAAI,aAAa;AAOnC,SAAK,cAAc,KAAK;AACxB,SAAK,kBAAkB;AACvB,SAAK,sBAAsB,sBAAsB,UAAU,aAAa;AACxE,aAAS,cAAc,iBAAiB,cAAc,KAAK,mBAAmB,2BAA2B;AAAA,EAC3G;AAAA,EACA,qBAAqB;AACnB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,cAAc;AACZ,QAAI,KAAK,aAAa;AACpB,WAAK,YAAY,QAAQ;AACzB,WAAK,cAAc;AAAA,IACrB;AACA,SAAK,SAAS,cAAc,oBAAoB,cAAc,KAAK,mBAAmB,2BAA2B;AACjH,SAAK,uBAAuB,YAAY;AACxC,SAAK,4BAA4B,YAAY;AAC7C,SAAK,mBAAmB,YAAY;AAAA,EACtC;AAAA;AAAA,EAEA,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAAA;AAAA,EAEA,IAAI,MAAM;AACR,WAAO,KAAK,QAAQ,KAAK,KAAK,UAAU,QAAQ,QAAQ;AAAA,EAC1D;AAAA;AAAA,EAEA,kBAAkB;AAChB,WAAO,CAAC,EAAE,KAAK,qBAAqB,KAAK,uBAAuB,KAAK;AAAA,EACvE;AAAA;AAAA,EAEA,aAAa;AACX,WAAO,KAAK,YAAY,KAAK,UAAU,IAAI,KAAK,SAAS;AAAA,EAC3D;AAAA;AAAA,EAEA,WAAW;AACT,UAAM,OAAO,KAAK;AAClB,QAAI,KAAK,aAAa,CAAC,MAAM;AAC3B;AAAA,IACF;AACA,UAAM,aAAa,KAAK,eAAe,IAAI;AAC3C,UAAM,gBAAgB,WAAW,UAAU;AAC3C,UAAM,mBAAmB,cAAc;AACvC,SAAK,aAAa,MAAM,gBAAgB;AACxC,kBAAc,cAAc,KAAK,eAAe,OAAO,CAAC,KAAK,gBAAgB,IAAI,KAAK;AACtF,eAAW,OAAO,KAAK,WAAW,IAAI,CAAC;AACvC,QAAI,KAAK,aAAa;AACpB,WAAK,YAAY,OAAO,KAAK,QAAQ;AAAA,IACvC;AACA,SAAK,8BAA8B,KAAK,oBAAoB,EAAE,UAAU,MAAM,KAAK,UAAU,CAAC;AAC9F,SAAK,UAAU,IAAI;AACnB,QAAI,gBAAgB,SAAS;AAC3B,WAAK,gBAAgB;AACrB,WAAK,uBAAuB,QAAQ,KAAK,UAAU,KAAK,KAAK,CAAC,EAAE,UAAU,MAAM;AAG9E,yBAAiB,mBAAmB,KAAK,EAAE,oBAAoB;AAC/D,yBAAiB,mBAAmB,IAAI;AAAA,MAC1C,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA,EAEA,YAAY;AACV,SAAK,MAAM,MAAM,KAAK;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,QAAQ,SAAS;AACrB,QAAI,KAAK,iBAAiB,QAAQ;AAChC,WAAK,cAAc,SAAS,KAAK,UAAU,QAAQ,OAAO;AAAA,IAC5D,OAAO;AACL,WAAK,SAAS,cAAc,MAAM,OAAO;AAAA,IAC3C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB;AACf,SAAK,aAAa,eAAe;AAAA,EACnC;AAAA;AAAA,EAEA,aAAa,QAAQ;AACnB,QAAI,CAAC,KAAK,eAAe,CAAC,KAAK,UAAU;AACvC;AAAA,IACF;AACA,UAAM,OAAO,KAAK;AAClB,SAAK,4BAA4B,YAAY;AAC7C,SAAK,YAAY,OAAO;AAKxB,QAAI,KAAK,iBAAiB,WAAW,aAAa,CAAC,KAAK,aAAa,CAAC,KAAK,gBAAgB,IAAI;AAC7F,WAAK,MAAM,KAAK,SAAS;AAAA,IAC3B;AACA,SAAK,YAAY;AACjB,QAAI,gBAAgB,SAAS;AAC3B,WAAK,gBAAgB;AACrB,UAAI,KAAK,aAAa;AAEpB,aAAK,eAAe;AAAA,UAAK,OAAO,WAAS,MAAM,YAAY,MAAM;AAAA,UAAG,KAAK,CAAC;AAAA;AAAA,UAE1E,UAAU,KAAK,YAAY,SAAS;AAAA,QAAC,EAAE,UAAU;AAAA,UAC/C,MAAM,MAAM,KAAK,YAAY,OAAO;AAAA;AAAA,UAEpC,UAAU,MAAM,KAAK,eAAe,KAAK;AAAA,QAC3C,CAAC;AAAA,MACH,OAAO;AACL,aAAK,eAAe,KAAK;AAAA,MAC3B;AAAA,IACF,OAAO;AACL,WAAK,eAAe,KAAK;AACzB,YAAM,aAAa,OAAO;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU,MAAM;AACd,SAAK,aAAa,KAAK,gBAAgB,IAAI,KAAK,sBAAsB;AACtE,SAAK,YAAY,KAAK;AACtB,SAAK,kBAAkB,IAAI;AAC3B,SAAK,eAAe,KAAK,aAAa,SAAS;AAC/C,SAAK,eAAe,IAAI;AAAA,EAC1B;AAAA;AAAA,EAEA,kBAAkB,MAAM;AACtB,QAAI,KAAK,cAAc;AACrB,UAAI,QAAQ;AACZ,UAAI,aAAa,KAAK;AACtB,aAAO,YAAY;AACjB;AACA,qBAAa,WAAW;AAAA,MAC1B;AACA,WAAK,aAAa,KAAK;AAAA,IACzB;AAAA,EACF;AAAA;AAAA,EAEA,eAAe,QAAQ;AACrB,QAAI,WAAW,KAAK,WAAW;AAC7B,WAAK,YAAY;AACjB,WAAK,YAAY,KAAK,WAAW,KAAK,IAAI,KAAK,WAAW,KAAK;AAC/D,UAAI,KAAK,gBAAgB,GAAG;AAC1B,aAAK,kBAAkB,gBAAgB,MAAM;AAAA,MAC/C;AACA,WAAK,mBAAmB,aAAa;AAAA,IACvC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,MAAM;AACnB,QAAI,CAAC,KAAK,aAAa;AACrB,YAAM,SAAS,KAAK,kBAAkB,IAAI;AAC1C,WAAK,sBAAsB,MAAM,OAAO,gBAAgB;AACxD,WAAK,cAAc,KAAK,SAAS,OAAO,MAAM;AAI9C,WAAK,YAAY,cAAc,EAAE,UAAU;AAAA,IAC7C;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB,MAAM;AACtB,WAAO,IAAI,cAAc;AAAA,MACvB,kBAAkB,KAAK,SAAS,SAAS,EAAE,oBAAoB,KAAK,QAAQ,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,sBAAsB,sCAAsC;AAAA,MACnL,eAAe,KAAK,iBAAiB;AAAA,MACrC,YAAY,KAAK;AAAA,MACjB,gBAAgB,KAAK,gBAAgB;AAAA,MACrC,WAAW,KAAK;AAAA,IAClB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,sBAAsB,MAAM,UAAU;AACpC,QAAI,KAAK,oBAAoB;AAC3B,eAAS,gBAAgB,UAAU,YAAU;AAC3C,cAAM,OAAO,OAAO,eAAe,aAAa,UAAU,UAAU;AACpE,cAAM,OAAO,OAAO,eAAe,aAAa,QAAQ,UAAU;AAIlE,YAAI,KAAK,SAAS;AAChB,eAAK,QAAQ,IAAI,MAAM,KAAK,mBAAmB,MAAM,IAAI,CAAC;AAAA,QAC5D,OAAO;AACL,eAAK,mBAAmB,MAAM,IAAI;AAAA,QACpC;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,MAAM,kBAAkB;AACnC,QAAI,CAAC,SAAS,eAAe,IAAI,KAAK,cAAc,WAAW,CAAC,OAAO,OAAO,IAAI,CAAC,SAAS,KAAK;AACjG,QAAI,CAAC,UAAU,gBAAgB,IAAI,KAAK,cAAc,UAAU,CAAC,UAAU,KAAK,IAAI,CAAC,OAAO,QAAQ;AACpG,QAAI,CAAC,SAAS,eAAe,IAAI,CAAC,UAAU,gBAAgB;AAC5D,QAAI,CAAC,UAAU,gBAAgB,IAAI,CAAC,SAAS,eAAe;AAC5D,QAAI,UAAU;AACd,QAAI,KAAK,gBAAgB,GAAG;AAG1B,yBAAmB,UAAU,KAAK,cAAc,WAAW,UAAU;AACrE,wBAAkB,WAAW,YAAY,QAAQ,UAAU;AAC3D,UAAI,KAAK,qBAAqB;AAC5B,YAAI,KAAK,uBAAuB,MAAM;AACpC,gBAAM,YAAY,KAAK,oBAAoB,MAAM;AACjD,eAAK,sBAAsB,YAAY,UAAU,gBAAgB,EAAE,YAAY;AAAA,QACjF;AACA,kBAAU,aAAa,WAAW,KAAK,sBAAsB,CAAC,KAAK;AAAA,MACrE;AAAA,IACF,WAAW,CAAC,KAAK,gBAAgB;AAC/B,gBAAU,aAAa,QAAQ,WAAW;AAC1C,wBAAkB,qBAAqB,QAAQ,WAAW;AAAA,IAC5D;AACA,qBAAiB,cAAc,CAAC;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAG;AAAA,MACD,SAAS;AAAA,MACT;AAAA,MACA,UAAU;AAAA,MACV;AAAA,MACA;AAAA,IACF,GAAG;AAAA,MACD;AAAA,MACA,SAAS;AAAA,MACT;AAAA,MACA,UAAU;AAAA,MACV,SAAS,CAAC;AAAA,IACZ,GAAG;AAAA,MACD,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,MACV,UAAU;AAAA,MACV,SAAS,CAAC;AAAA,IACZ,CAAC,CAAC;AAAA,EACJ;AAAA;AAAA,EAEA,sBAAsB;AACpB,UAAM,WAAW,KAAK,YAAY,cAAc;AAChD,UAAM,cAAc,KAAK,YAAY,YAAY;AACjD,UAAM,cAAc,KAAK,sBAAsB,KAAK,oBAAoB,SAAS,GAAG;AACpF,UAAM,QAAQ,KAAK,sBAAsB,KAAK,oBAAoB,SAAS,EAAE,KAAK,OAAO,YAAU,WAAW,KAAK,iBAAiB,GAAG,OAAO,MAAM,KAAK,SAAS,CAAC,IAAI,GAAG;AAC1K,WAAO,MAAM,UAAU,aAAa,OAAO,WAAW;AAAA,EACxD;AAAA;AAAA,EAEA,iBAAiB,OAAO;AACtB,QAAI,CAAC,gCAAgC,KAAK,GAAG;AAG3C,WAAK,YAAY,MAAM,WAAW,IAAI,UAAU;AAIhD,UAAI,KAAK,gBAAgB,GAAG;AAC1B,cAAM,eAAe;AAAA,MACvB;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,eAAe,OAAO;AACpB,UAAM,UAAU,MAAM;AAEtB,QAAI,YAAY,SAAS,YAAY,OAAO;AAC1C,WAAK,YAAY;AAAA,IACnB;AACA,QAAI,KAAK,gBAAgB,MAAM,YAAY,eAAe,KAAK,QAAQ,SAAS,YAAY,cAAc,KAAK,QAAQ,QAAQ;AAC7H,WAAK,YAAY;AACjB,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AAAA;AAAA,EAEA,aAAa,OAAO;AAClB,QAAI,KAAK,gBAAgB,GAAG;AAE1B,YAAM,gBAAgB;AACtB,WAAK,SAAS;AAAA,IAChB,OAAO;AACL,WAAK,WAAW;AAAA,IAClB;AAAA,EACF;AAAA;AAAA,EAEA,eAAe;AAEb,QAAI,CAAC,KAAK,gBAAgB,KAAK,CAAC,KAAK,qBAAqB;AACxD;AAAA,IACF;AACA,SAAK,qBAAqB,KAAK,oBAAoB,SAAS,EAI3D,KAAK,OAAO,YAAU,WAAW,KAAK,qBAAqB,CAAC,OAAO,QAAQ,GAAG,MAAM,GAAG,aAAa,CAAC,EAAE,UAAU,MAAM;AACtH,WAAK,YAAY;AAIjB,UAAI,KAAK,gBAAgB,WAAW,KAAK,KAAK,cAAc;AAG1D,aAAK,KAAK,eAAe,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,aAAa,GAAG,UAAU,KAAK,oBAAoB,SAAS,CAAC,CAAC,EAAE,UAAU,MAAM,KAAK,SAAS,CAAC;AAAA,MACjJ,OAAO;AACL,aAAK,SAAS;AAAA,MAChB;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,WAAW,MAAM;AAIf,QAAI,CAAC,KAAK,WAAW,KAAK,QAAQ,gBAAgB,KAAK,aAAa;AAClE,WAAK,UAAU,IAAI,eAAe,KAAK,aAAa,KAAK,iBAAiB;AAAA,IAC5E;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,uBAAuB,mBAAmB;AAC7D,aAAO,KAAK,qBAAqB,iBAAmB,4BAAuB,OAAO,GAAM,4BAAqB,UAAU,GAAM,4BAAqB,gBAAgB,GAAM,4BAAkB,wBAAwB,GAAM,4BAAkB,gBAAgB,CAAC,GAAM,4BAAkB,aAAa,EAAE,GAAM,4BAAqB,gBAAgB,CAAC,GAAM,4BAAqB,YAAY,GAAM,4BAAqB,MAAM,CAAC;AAAA,IACzZ;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,wBAAwB,EAAE,GAAG,CAAC,IAAI,qBAAqB,EAAE,CAAC;AAAA,MAC3E,WAAW,CAAC,GAAG,sBAAsB;AAAA,MACrC,UAAU;AAAA,MACV,cAAc,SAAS,4BAA4B,IAAI,KAAK;AAC1D,YAAI,KAAK,GAAG;AACV,UAAG,qBAAW,SAAS,SAAS,wCAAwC,QAAQ;AAC9E,mBAAO,IAAI,aAAa,MAAM;AAAA,UAChC,CAAC,EAAE,aAAa,SAAS,4CAA4C,QAAQ;AAC3E,mBAAO,IAAI,iBAAiB,MAAM;AAAA,UACpC,CAAC,EAAE,WAAW,SAAS,0CAA0C,QAAQ;AACvE,mBAAO,IAAI,eAAe,MAAM;AAAA,UAClC,CAAC;AAAA,QACH;AACA,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,iBAAiB,IAAI,OAAO,SAAS,IAAI,EAAE,iBAAiB,IAAI,QAAQ,EAAE,iBAAiB,IAAI,WAAW,IAAI,KAAK,UAAU,IAAI;AAAA,QAClJ;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,8BAA8B,CAAC,GAAG,wBAAwB,8BAA8B;AAAA,QACxF,MAAM,CAAC,GAAG,qBAAqB,MAAM;AAAA,QACrC,UAAU,CAAC,GAAG,sBAAsB,UAAU;AAAA,QAC9C,cAAc,CAAC,GAAG,8BAA8B,cAAc;AAAA,MAChE;AAAA,MACA,SAAS;AAAA,QACP,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,aAAa;AAAA,MACf;AAAA,MACA,UAAU,CAAC,gBAAgB;AAAA,MAC3B,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,wBAAwB;AAAA,QACxB,wBAAwB;AAAA,QACxB,wBAAwB;AAAA,QACxB,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,MACA,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAW;AAAA,EACb,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,wBAAwB;AAAA,IACjC,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,cAAc;AAAA,IACvB,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,8BAA8B,CAAC;AAAA,MAC7B,MAAM;AAAA,MACN,MAAM,CAAC,sBAAsB;AAAA,IAC/B,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,MACN,MAAM,CAAC,mBAAmB;AAAA,IAC5B,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,IAC7B,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC,4BAA4B;AAAA,IACrC,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,gBAAN,MAAM,eAAc;AAAA,EAClB,OAAO;AACL,SAAK,YAAO,SAAS,sBAAsB,mBAAmB;AAC5D,aAAO,KAAK,qBAAqB,gBAAe;AAAA,IAClD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,2BAAiB;AAAA,MAC7C,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,2BAAiB;AAAA,MAC7C,WAAW,CAAC,yCAAyC;AAAA,MACrD,SAAS,CAAC,cAAc,iBAAiB,iBAAiB,eAAe,qBAAqB,eAAe;AAAA,IAC/G,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,eAAe,CAAC;AAAA,IACtF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,cAAc,iBAAiB,iBAAiB,eAAe,SAAS,aAAa,gBAAgB,cAAc;AAAA,MAC7H,SAAS,CAAC,qBAAqB,SAAS,iBAAiB,aAAa,gBAAgB,cAAc;AAAA,MACpG,WAAW,CAAC,yCAAyC;AAAA,IACvD,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;;;;AEniDG,IAAA,yBAAA,GAAA,MAAA,CAAA;AAEsC,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,kBAAA,OAAA,CAAuB;IAAA,CAAA;AACpE,IAAA,oBAAA,GAAA,KAAA,CAAA;AAAsD,IAAA,iBAAA,CAAA;AACxD,IAAA,uBAAA;;;;AADK,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA;AAAmD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,QAAA,MAAA,GAAA;;;;;AAX9D,IAAA,yBAAA,GAAA,OAAA,CAAA,EAG4C,GAAA,OAAA,CAAA,EAEhB,GAAA,OAAA,CAAA;AAGtB,IAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,MAAA,CAAA;AAKF,IAAA,uBAAA,EAAM,EACF;;;;AAZW,IAAA,sBAAA,QAAA,OAAA,wBAAA,CAAA,EAAwC,OAAA,OAAA,wBAAA,CAAA;AAD3D,IAAA,qBAAA,WAAA,OAAA,KAAA,EAAiB,mBAAA,MAAA;AASQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,aAAA;;;ADmBnB,IAAO,2BAAP,MAAO,0BAAwB;EAUnC,cAAA;AATS,SAAA,gBAAgB,OAAO,OAAOE,KAAI,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,YAAW,EAAG,cAAc,EAAE,KAAK,YAAW,CAAE,CAAC;AAC3G,SAAA,qBAA0B;AAC1B,SAAA,sBAA2C;AAC1C,SAAA,oBAAoB,IAAI,aAAY;AAC9C,SAAA,0BAA0B,EAAE,GAAG,OAAO,GAAG,MAAK;AACvC,SAAA,QAAgB,CAAA;AACd,SAAA,kBAA2B;EAGpB;EAEhB,WAAQ;EACR;EACA,kBAAkB,MAAI;AACpB,SAAK,kBAAgB;AACtB,SAAK,kBAAkB,KAAK,IAAI;EACjC;EACA,cAAW;AACT,QAAI,KAAK,qBAAqB;AAE5B,WAAK,wBAAwB,IAAK,KAAK,oBAAoB,0BAAyB,MAAQ;AAC5F,WAAK,wBAAwB,IAAK,KAAK,oBAAoB,0BAAwB,MAAO;IAE5F;EACF;;;uCAzBW,2BAAwB;IAAA;EAAA;;yEAAxB,2BAAwB,WAAA,CAAA,CAAA,uBAAA,CAAA,GAAA,QAAA,EAAA,oBAAA,sBAAA,qBAAA,uBAAA,iBAAA,kBAAA,GAAA,SAAA,EAAA,mBAAA,oBAAA,GAAA,YAAA,MAAA,UAAA,CAAA,gCAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,SAAA,wBAAA,GAAA,WAAA,QAAA,OAAA,GAAA,MAAA,GAAA,CAAA,GAAA,wBAAA,GAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,cAAA,WAAA,GAAA,CAAA,SAAA,iFAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,mBAAA,0BAAA,2BAAA,kBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,gBAAA,KAAA,CAAA,GAAA,UAAA,SAAA,kCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AC7BrC,QAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,OAAA,CAAA;;;AAAM,QAAA,qBAAA,QAAA,IAAA,eAAA;;;MDwBE;MACA;MACA;IAAK,GAAA,QAAA,CAAA,2wIAAA,GAAA,MAAA,EAAA,WAhBG;MACR,QAAQ,kBAAkB;QACtB,WAAW,UAAU;UACjB,MAAM,EAAE,WAAW,kBAAkB,SAAS,EAAC,CAAE;UACjD,QAAQ,SAAS,MAAM,EAAE,WAAW,iBAAiB,SAAS,EAAC,CAAE,CAAC;SACrE;QACD,WAAW,UAAU;UACjB,MAAM,EAAE,WAAW,iBAAiB,SAAS,EAAC,CAAE;UAChD,QAAQ,SAAS,MAAM,EAAE,WAAW,kBAAkB,SAAS,EAAC,CAAE,CAAC;SACtE;OACJ;MACJ,EAAA,CAAA;EAAA;;;6EAQQ,0BAAwB,EAAA,WAAA,4BAAA,UAAA,kGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;;;AGF7B,IAAA,yBAAA,GAAA,MAAA;AAA+C,IAAA,oBAAA,GAAA,KAAA,EAAA;AAA2B,IAAA,uBAAA;;;;;;AAkBhF,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiG,GAAA,OAAA,EAAA;;AAG/F,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAsH,IAAA,oBAAA,GAAA,QAAA,EAAA,EAA6N,GAAA,QAAA,EAAA,EAAmO,GAAA,QAAA,EAAA,EAAmO,GAAA,QAAA,EAAA,EAAyO,GAAA,QAAA,EAAA,EAAsO,GAAA,QAAA,EAAA;AAA4O,IAAA,uBAAA;;AACp9C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkC,IAAA,OAAA,EAAA;AACA,IAAA,qBAAA,SAAA,SAAA,kEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,QAAA,MAAyB,OAAO,CAAC;IAAA,CAAA,EAAC,WAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;;AACtG,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAwC,IAAA,QAAA,EAAA;AAE1C,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAgC,IAAA,qBAAA,SAAA,SAAA,kEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,QAAA,MAAyB,OAAO,CAAC;IAAA,CAAA,EAAC,WAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;;AACtG,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAwC,IAAA,QAAA,EAAA;AAE1C,IAAA,uBAAA,EAAM,EACF,EACF,EACA;;;;;;AAGN,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAkH,IAAA,qBAAA,SAAA,SAAA,iEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,MAAA,OAAA,KAAA,KAA4B,UAAO,aAAU,EAAA,QAAQ,aAAW,GAAA,MAAA,UAAA,YAAA,CAAa,CAAC;IAAA,CAAA,EAAC,WAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAG,IAAA,iBAAA,GAAA,MAAA;AAAM,IAAA,uBAAA;;;;;;AA0B5O,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAK,IAAA,qBAAA,QAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAQ,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,aAAA,SAAA,uFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChB,OAAA,YAAA,QAAmB,EAAA,QAAQ,UAAQ,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,aAAA,GAAuB,OAAA,KAAA,KAAS,oBAAiB,cAAU,MAAG,YAAA,CAAU;IAAA,CAAA,EAAC,aAAA,SAAA,uFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAC5G,OAAA,YAAA,QAAmB,EAAA,QAAQ,UAAQ,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,aAAA,GAAuB,OAAA,KAAA,KAAS,oBAAiB,cAAU,MAAG,YAAA,CAAU;IAAA,CAAA,EAAC,YAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC7G,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA;;AAC9B,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;;;;;AAH0F,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,YAAA,aAAA,KAAA,cAAA,EAAA;;;;;;AAMhG,IAAA,yBAAA,GAAA,OAAA,EAAA;AAGA,IAAA,qBAAA,SAAA,SAAA,mFAAA,QAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,MAAA,OAAA,IAA8B,OAAA,gBAAA,QAAuB,EAAA,QAAQ,UAAQ,WAAA,UAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,aAAA,GAAsC,WAAM,aAAU,cAAU,MAAG,YAAA,IAAW,IAAI;IAAA,CAAA,EAAC,aAAA,SAAA,uFAAA,QAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACpJ,OAAA,YAAA,QAAmB,EAAA,QAAQ,UAAQ,WAAA,UAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,aAAA,CAAsC,CAAC;IAAA,CAAA,EAAC,aAAA,SAAA,uFAAA,QAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAC3E,OAAA,YAAA,QAAmB,EAAA,QAAQ,UAAQ,WAAA,UAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,aAAA,CAAsC,CAAC;IAAA,CAAA,EAAC,WAAA,SAAA,qFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC7E,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAS1B,IAAA,yBAAA,GAAA,WAAA,EAAA;AAGH,IAAA,qBAAA,YAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,aAAA,SAAA,2FAAA,QAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAEjB,OAAA,QAAA,QAAA,UAAA,OAAA,KAAA,EAAA,CAA4B;IAAA,CAAA,EAAC,WAAA,SAAA,yFAAA,QAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC/B,OAAA,iBAAA,QAAA,QAAA,CAA6B;IAAA,CAAA,EAAC,cAAA,SAAA,4FAAA,QAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAI3B,OAAA,2BAAA,QAAA,QAAA,CAAuC;IAAA,CAAA,EAAC,cAAA,SAAA,4FAAA,QAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACxC,OAAA,2BAAA,QAAA,QAAA,CAAuC;IAAA,CAAA;AAC9C,IAAA,uBAAA,EAAU;;;;;;;;;AApBjB,IAAA,sBAAA,oBAAA,OAAA,gBAAA,WAAA,aAAA,cAAA,MAAA,YAAA,CAAA;AALqD,IAAA,iCAAA,MAAA,IAAA,UAAA,YAAA,aAAA,KAAA,cAAA,EAAA;AAMrD,IAAA,qBAAA,WAAA,0BAAA,IAAAC,OAAA,MAAA,WAAA,OAAA,OAAA,MAAA,QAAA,UAAA,CAAA,CAAA;AASE,IAAA,oBAAA;AAAA,IAAA,qBAAA,kBAAA,OAAA,cAAA,EAAiC,OAAA,OAAA,cAAA,QAAA,CAAA;;;;;;;AA5BrC,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAK,IAAA,qBAAA,YAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,QAAA,SAAA,4EAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA;AAE1D,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,OAAA,EAAA,EAGoJ,GAAA,+DAAA,GAAA,IAAA,OAAA,EAAA;AAoCtJ,IAAA,uBAAA;;;;;;;;AAzCwF,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,YAAA,aAAA,KAAA,cAAA,EAAA;AAK7B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,mBAAA,MAAA,OAAA,CAAA;AAQvC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,kBAAA,MAAA,OAAA,CAAA;;;;;;AAoDnB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACA,IAAA,qBAAA,WAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAW,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,SAAA,SAAA,yFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACpB,OAAA,gBAAA,QAAuB,EAAA,QAAQ,mBAAiB,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,gBAAA,GAAsC,OAAA,KAAA,KAAS,aAAU,cAAU,MAAG,eAAU,MAAG,eAAA,CAAa;IAAA,CAAA;AACxJ,IAAA,iBAAA,GAAA,QAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiC,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,yFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,QAAuB,EAAA,QAAQ,aAAW,GAAA,MAAA,UAAA,YAAA,GAAa,OAAA,KAAA,KAAS,UAAO,WAAA,CAAU;IAAA,CAAA,EAAC,WAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAG,IAAA,iBAAA,GAAA,KAAA;AAAG,IAAA,uBAAA;AAC/J,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAyC,IAAA,qBAAA,SAAA,SAAA,yFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,QAAuB,EAAA,QAAQ,UAAQ,WAAA,OAAA,MAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,aAAA,GAAsC,OAAA,KAAA,KAAS,oBAAiB,cAAU,MAAG,YAAA,CAAU;IAAA,CAAA,EAAC,WAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAG,IAAA,iBAAA,GAAA,SAAA;AAAM,IAAA,uBAAA;AACvN,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAgC,IAAA,qBAAA,SAAA,SAAA,yFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,QAAuB,EAAA,QAAQ,mBAAiB,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,gBAAA,GAAsC,OAAA,KAAA,KAAS,aAAU,cAAU,MAAG,eAAU,MAAG,eAAA,CAAa;IAAA,CAAA,EAAC,WAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA,EAAM,EACpO;;;;;;AAhBP,IAAA,yBAAA,GAAA,OAAA,EAAA;AACA,IAAA,qBAAA,cAAA,SAAA,wFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,eAAA,wBAAA,EAAA;AAAA,YAAA,cAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,OAAA,WAAA,OAAA,QAAA,UAA+C,IAAE,OAAA,qBAAA,QAAA,OAAA,KAAA,KAAoC,aAAU,cAAU,MAAG,eAAU,MAAG,iBAAa,YAAY,IAAE,IAAI;IAAA,CAAA,EAAC,cAAA,SAAA,wFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,eAAA,wBAAA,EAAA;AAAA,YAAA,cAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,OAAA,WAAA,OAAA,QAAA,UAC1G,IAAG,OAAA,qBAAA,QAAA,OAAA,KAAA,KAAoC,aAAU,cAAU,MAAG,eAAU,MAAG,iBAAa,YAAY,IAAE,IAAI;IAAA,CAAA;AAMzJ,IAAA,qBAAA,GAAA,qEAAA,GAAA,GAAA,OAAA,EAAA;AAUH,IAAA,uBAAA;;;;;AAVS,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,OAAA,QAAA,UAAA,KAAA,CAAA,OAAA,QAAA;;;;;;AA2BN,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwH,GAAA,OAAA,EAAA;;AAGvH,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAsH,IAAA,oBAAA,GAAA,QAAA,EAAA,EAA6N,GAAA,QAAA,EAAA,EAAmO,GAAA,QAAA,EAAA,EAAmO,GAAA,QAAA,EAAA,EAAyO,GAAA,QAAA,EAAA,EAAsO,GAAA,QAAA,EAAA;AAA4O,IAAA,uBAAA;;AACl9C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8B,IAAA,OAAA,EAAA;AAEI,IAAA,qBAAA,SAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,OAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,QAAA,MAAyB,OAAO,CAAC;IAAA,CAAA,EAAC,WAAA,SAAA,4FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;;AACtG,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAwC,IAAA,QAAA,EAAA;AAE1C,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAgC,IAAA,qBAAA,SAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,OAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,QAAA,MAAyB,OAAO,CAAC;IAAA,CAAA,EAAC,WAAA,SAAA,4FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;;AACtG,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAwC,IAAA,QAAA,EAAA;AAE1C,IAAA,uBAAA,EAAM;;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAgC,IAAA,qBAAA,SAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,QAAA,wBAAA,EAAA;AAAA,YAAA,OAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,QAAA,MAAA,OAAA,QAAqC,SAAO,eAAA,CAAc;IAAA,CAAA,EAAC,WAAA,SAAA,4FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;;AAC/H,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAwC,IAAA,QAAA,EAAA;AAE1C,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAgC,IAAA,qBAAA,SAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,QAAA,wBAAA,EAAA;AAAA,YAAA,OAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,QAAA,MAAA,OAAA,QAAqC,SAAO,eAAA,CAAc;IAAA,CAAA,EAAC,WAAA,SAAA,4FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;;AAC/H,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAwC,IAAA,QAAA,EAAA;AAE1C,IAAA,uBAAA,EAAM,EACF,EAEF,EACF;;;;;;AAGN,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA0E,IAAA,qBAAA,WAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAW,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,SAAA,SAAA,yFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAW,OAAA,gBAAA,QAAuB,EAAA,QAAQ,mBAAiB,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,gBAAA,GAAsC,OAAA,KAAA,KAAS,aAAU,cAAU,MAAG,eAAU,MAAG,eAAA,CAAa;IAAA,CAAA;AAChQ,IAAA,iBAAA,GAAA,QAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiC,GAAA,OAAA,EAAA;AACzB,IAAA,qBAAA,SAAA,SAAA,yFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,QAAuB,EAAA,QAAQ,aAAW,GAAA,MAAA,UAAA,YAAA,GAAa,OAAA,KAAA,KAAS,UAAO,WAAA,CAAU;IAAA,CAAA,EAAC,WAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA;AACpI,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAc,IAAA,qBAAA,SAAA,SAAA,yFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,QAAuB,EAAA,QAAQ,UAAQ,WAAA,OAAA,MAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,aAAA,GAAsC,OAAA,KAAA,KAAS,oBAAiB,cAAU,MAAG,YAAA,CAAU;IAAA,CAAA,EAAC,WAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;AAC5L,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAK,IAAA,qBAAA,SAAA,SAAA,yFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,QAAuB,EAAA,QAAQ,mBAAiB,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,gBAAA,GAAsC,OAAA,KAAA,KAAS,aAAU,cAAU,MAAG,eAAU,MAAG,eAAA,CAAa;IAAA,CAAA,EAAC,WAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA,EAAM,EAC1M;;;;;;AAER,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAK,IAAA,qBAAA,QAAA,SAAA,wFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAQ,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,YAAA,SAAA,4FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACjB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,aAAA,SAAA,6FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,wBAAA,wBAAA,EAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAClB,OAAA,YAAA,QAAmB,EAAA,QAAQ,aAAW,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,iBAAA,mBAAA,sBAAA,GAAwD,OAAA,KAAA,KAAS,gBAAa,cAAU,MAAG,eAAU,MAAG,kBAAa,MAAG,qBAAA,CAAmB;IAAA,CAAA,EAAC,aAAA,SAAA,6FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,wBAAA,wBAAA,EAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAClL,OAAA,YAAA,QAAmB,EAAA,QAAQ,aAAW,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,iBAAA,mBAAA,sBAAA,GAAwD,OAAA,KAAA,KAAS,gBAAa,cAAU,MAAG,eAAU,MAAG,kBAAa,MAAG,qBAAA,CAAmB;IAAA,CAAA;;AAG9L,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;;;;;;;AAP4F,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,eAAA,aAAA,KAAA,cAAA,KAAA,iBAAA,KAAA,uBAAA,EAAA;;;;;;AAUlG,IAAA,yBAAA,GAAA,OAAA,EAAA;AACA,IAAA,qBAAA,WAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAW,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,SAAA,SAAA,yFAAA,QAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,UAAA,QAAA;AAAA,YAAA,wBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAEpB,OAAA,mBAAA,QAAA,OAAA,IAAgC,OAAA,gBAAA,QAAuB,EAAA,QAAQ,aAAW,WAAA,WAAA,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,iBAAA,mBAAA,sBAAA,GAAwE,YAAO,gBAAa,cAAU,MAAG,eAAU,MAAG,kBAAa,MAAG,qBAAA,IAAoB,IAAI;IAAA,CAAA,EAAC,aAAA,SAAA,6FAAA,QAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,wBAAA,wBAAA,EAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACrO,OAAA,YAAA,QAAmB,EAAA,QAAQ,aAAW,WAAA,WAAA,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,iBAAA,mBAAA,sBAAA,GAAwE,OAAA,KAAA,KAAS,gBAAa,cAAU,MAAG,eAAU,MAAG,kBAAa,MAAG,qBAAA,CAAmB;IAAA,CAAA,EAAC,aAAA,SAAA,6FAAA,QAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,wBAAA,wBAAA,EAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAClM,OAAA,YAAA,QAAmB,EAAA,QAAQ,aAAW,WAAA,WAAA,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,iBAAA,mBAAA,sBAAA,GAAwE,OAAA,KAAA,KAAS,gBAAa,cAAU,MAAG,eAAU,MAAG,kBAAa,MAAG,qBAAA,CAAmB;IAAA,CAAA;AAS9M,IAAA,yBAAA,GAAA,WAAA,EAAA;AAEA,IAAA,qBAAA,YAAA,SAAA,gGAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,aAAA,SAAA,iGAAA,QAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAGlB,OAAA,QAAA,QAAA,WAAA,OAAA,KAAA,EAAA,CAA6B;IAAA,CAAA,EAAC,WAAA,SAAA,+FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAChC,OAAA,iBAAA,QAAA,OAAA,IAAA,CAA6B;IAAA,CAAA,EAAC,cAAA,SAAA,kGAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC3B,OAAA,2BAAA,QAAA,OAAA,IAAA,CAAuC;IAAA,CAAA,EAAC,cAAA,SAAA,kGAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACxC,OAAA,2BAAA,QAAA,OAAA,IAAA,CAAuC;IAAA,CAAA;AAKpD,IAAA,uBAAA,EAAU;;;;;;;;;;;AArBX,IAAA,sBAAA,oBAAA,OAAA,gBAAA,YAAA,gBAAA,cAAA,MAAA,eAAA,MAAA,kBAAA,MAAA,qBAAA,CAAA;AAJ+E,IAAA,iCAAA,MAAA,IAAA,WAAA,eAAA,aAAA,KAAA,cAAA,KAAA,iBAAA,KAAA,uBAAA,EAAA;AAK/E,IAAA,qBAAA,WAAA,0BAAA,IAAA,MAAA,QAAA,WAAA,OAAA,OAAA,QAAA,QAAA,UAAA,CAAA,CAAA;AAQA,IAAA,oBAAA;AAAA,IAAA,qBAAA,kBAAA,OAAA,cAAA,EAAiC,OAAA,OAAA,cAAA,SAAA,CAAA;;;;;;;AArFlC,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEA,IAAA,qBAAA,SAAA,SAAA,mFAAA,QAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,QAAA;AAAA,YAAA,wBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,QAAA,WAAyB,QAAI,QAAA,QAAA,SAAuB,IAAG,OAAA,gBAAA,QAAuB,EAAA,QAAQ,aAAW,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,iBAAA,mBAAA,sBAAA,GAAwD,OAAA,KAAA,KAAS,gBAAa,cAAU,MAAG,eAAU,MAAG,kBAAa,MAAG,qBAAA,IAAoB,IAAI;IAAA,CAAA,EAAC,WAAA,SAAA,qFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAGtO,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,QAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACrB,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,YAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAGZ,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,cAAA,SAAA,wFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,kBAAA,wBAAA,EAAA;AAAA,YAAA,eAAA,wBAAA,EAAA;AAAA,YAAA,cAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAEjB,OAAA,qBAAA,QAAA,OAAA,KAAA,KAAoC,aAAU,cAAU,MAAG,eAAU,MAAG,iBAAa,YAAY,CAAC;IAAA,CAAA,EAAC,cAAA,SAAA,wFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,kBAAA,wBAAA,EAAA;AAAA,YAAA,eAAA,wBAAA,EAAA;AAAA,YAAA,cAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACnG,OAAA,qBAAA,QAAA,OAAA,KAAA,KAAoC,aAAU,cAAU,MAAG,eAAU,MAAG,iBAAa,YAAY,CAAC;IAAA,CAAA;AAGjH,IAAA,qBAAA,GAAA,qEAAA,IAAA,GAAA,OAAA,EAAA,EAAwH,GAAA,qEAAA,GAAA,GAAA,OAAA,EAAA,EAoC6I,GAAA,qEAAA,GAAA,GAAA,OAAA,EAAA,EAYnQ,GAAA,qEAAA,GAAA,IAAA,OAAA,EAAA;AAoCD,IAAA,oBAAA,GAAA,OAAA,EAAA;AAEF,IAAA,uBAAA;;;;;;;;;;;AA7FE,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,eAAA,aAAA,KAAA,cAAA,KAAA,iBAAA,KAAA,uBAAA,EAAA;AAJA,IAAA,qBAAA,WAAA,OAAA,iBAAA,OAAA,CAAA,EAAiC,WAAA,OAAA,gBAAA,OAAA,KAAA,KAAA,gBAAA,cAAA,MAAA,eAAA,MAAA,kBAAA,MAAA,qBAAA,CAAA;AAW5B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,QAAA,SAAA,KAAA,0BAAA,OAAA,QAAA,SAAA,KAAA,CAAA,OAAA,QAAA;AAoCyB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,YAAA,0BAAA,CAAA;AAS4B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,mBAAA,QAAA,OAAA,CAAA;AAYxC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,kBAAA,QAAA,OAAA,CAAA;;;;;;AA1GpB,IAAA,yBAAA,GAAA,OAAA,IAAA,CAAA;AAEC,IAAA,qBAAA,SAAA,SAAA,6EAAA,QAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,QAAuB,EAAA,QAAQ,mBAAiB,IAAA,QAAA,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,cAAA,aAAA,gBAAA,GAAsC,OAAA,KAAA,KAAS,aAAU,cAAU,MAAG,eAAU,MAAG,eAAA,CAAa;IAAA,CAAA,EAAC,WAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAG/I,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,YAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAMjB,OAAA,gBAAA,OAAA,SAAA,OAAA,QAAA,CAAgD;IAAA,CAAA;AAG5D,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,OAAA,EAAA,EAIC,GAAA,+DAAA,GAAA,IAAA,OAAA,EAAA;AAwHF,IAAA,uBAAA;;;;;;;;;;AAvIC,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,YAAA,aAAA,KAAA,cAAA,KAAA,iBAAA,EAAA;AACA,IAAA,qBAAA,WAAA,OAAA,gBAAA,OAAA,KAAA,KAAA,aAAA,cAAA,MAAA,eAAA,MAAA,eAAA,CAAA,EAAqF,QAAA,MAAA,IAAA,EAKtE,YAAA,eAAA;AAKT,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,OAAA,QAAA,UAAA,CAAA;AAqBW,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA;;;;;;AAvFlB,IAAA,yBAAA,GAAA,OAAA,EAAA;AAKE,IAAA,qBAAA,SAAA,SAAA,uEAAA,QAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,MAAA,WAAuB,QAAI,MAAA,QAAA,SAAqB,IAAG,OAAA,gBAAA,QAAuB,EAAA,QAAQ,UAAQ,GAAA,MAAA,GAAA,OAAA,UAAA,aAAA,UAAA,aAAA,GAAuB,OAAA,KAAA,KAAS,oBAAiB,cAAU,MAAG,YAAA,IAAW,IAAI;IAAA,CAAA,EAAC,WAAA,SAAA,yEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC7J,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAC9B,IAAA,oBAAA,GAAA,OAAA,EAAA;AAEA,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,OAAA,EAAA,EAAsO,GAAA,yDAAA,GAAA,IAAA,OAAA,EAAA;AAuLxO,IAAA,uBAAA;;;;;;;AA7LI,IAAA,gCAAA,MAAA,OAAA,KAAA,KAAA,oBAAA,cAAA,MAAA,YAAA;AAFF,IAAA,qBAAA,WAAA,OAAA,gBAAA,OAAA,KAAA,KAAA,oBAAA,cAAA,MAAA,YAAA,CAAA,EAA4E,WAAA,OAAA,YAAA,KAAA,CAAA;AAQb,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,MAAA,QAAA,OAAA,OAAA,MAAA,KAAA,WAAA,CAAA;AA2C3C,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,MAAA,IAAA;;;;;;AAlEtB,IAAA,yBAAA,GAAA,OAAA,IAAA,CAAA;AAIK,IAAA,qBAAA,SAAA,SAAA,iEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,MAAA,OAAA,KAAA,KAA4B,UAAO,aAAU,EAAA,QAAQ,aAAW,GAAA,MAAA,UAAA,YAAA,CAAa,CAAC;IAAA,CAAA,EAAC,WAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC7E,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,YAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAMjB,OAAA,gBAAA,OAAA,SAAA,OAAA,QAAA,CAAgD;IAAA,CAAA;AAG/D,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,EAAA;AAiMF,IAAA,uBAAA;;;;;;;AA5MK,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,SAAA,aAAA,EAAA;AAFA,IAAA,qBAAA,WAAA,KAAA,QAAA,SAAA,IAAA,KAAA,WAAA,EAAiD,WAAA,OAAA,gBAAA,OAAA,KAAA,KAAA,UAAA,WAAA,CAAA,EACI,uBAAA,EAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,WAAA,EAMF,QAAA,OAAA,IAAA,EACtC,YAAA,WAAA;AAKG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,KAAA,OAAA;;;;;;AA1CvB,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAK,IAAA,qBAAA,QAAA,SAAA,0DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAQ,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,SAAA,SAAA,2DAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAEkF,OAAA,gBAAA,QAAuB,EAAA,QAAQ,aAAW,GAAA,MAAA,UAAA,YAAA,GAAa,OAAA,KAAA,KAAS,UAAO,WAAA,CAAU;IAAA,CAAA,EAAC,WAAA,SAAA,6DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACtL,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAG5B,IAAA,qBAAA,GAAA,6CAAA,IAAA,GAAA,OAAA,EAAA,EAAiG,GAAA,6CAAA,GAAA,GAAA,OAAA,EAAA,EAqB2I,GAAA,6CAAA,GAAA,GAAA,OAAA,EAAA;AAkNxO,IAAA,oBAAA,GAAA,KAAA,EAAA;AAEJ,IAAA,uBAAA;;;;;;AA/O2E,IAAA,gCAAA,MAAA,KAAA,QAAA,SAAA,IAAA,KAAA,OAAA,KAAA,KAAA,UAAA,WAAA;AAC3E,IAAA,qBAAA,WAAA,KAAA,QAAA,SAAA,KAAA,OAAA,mBAAA,IAAA,IAAA,8DAAA,KAAA,QAAA,SAAA,KAAA,OAAA,gBAAA,OAAA,KAAA,KAAA,UAAA,WAAA,IAAA,qBAAA,EAAA;AAKM,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA,QAAA,SAAA,KAAA,OAAA,mBAAA,IAAA,KAAA,CAAA,OAAA,QAAA;AAqBE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA,QAAA,SAAA,KAAA,OAAA,mBAAA,IAAA,KAAA,CAAA,OAAA,QAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA,QAAA,SAAA,CAAA;;;;;;AAwNR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2E,GAAA,UAAA,EAAA;AAEjD,IAAA,qBAAA,SAAA,SAAA,+DAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA,EAAS;;;;;;AAExE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2E,GAAA,UAAA,EAAA;AAEjD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA,EAAS;;;;;;AAuBlE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAKE,IAAA,qBAAA,SAAA,SAAA,uFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,SAAA,UAAA,SAAA,QAAA,CAA2C;IAAA,CAAA;AAEpD,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;AAJE,IAAA,qBAAA,qBAAA,OAAA,IAAA;;;;;;AAKF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAIE,IAAA,qBAAA,SAAA,SAAA,uFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,SAAA,UAAA,SAAA,QAAA,CAA4C;IAAA,CAAA;AAErD,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;;;AAhCJ,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAKE,GAAA,KAAA,EAAA;AAIF,IAAA,qBAAA,SAAA,SAAA,mFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,QAAA,CAAsB;IAAA,CAAA;;AAE/B,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;AAEJ,IAAA,qBAAA,GAAA,mEAAA,GAAA,GAAA,KAAA,EAAA,EAMC,GAAA,mEAAA,GAAA,GAAA,KAAA,EAAA;AAaH,IAAA,uBAAA;;;;;;AAhCE,IAAA,oBAAA;AAAA,IAAA,sBAAA,UAAA,OAAA,oBAAA,SAAA,YAAA,OAAA,uBAAA,SAAA,QAAA;AAaI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,SAAA,QAAA,KAAA,UAAA,CAAA;AASA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,SAAA,QAAA,KAAA,UAAA,CAAA;;;;;AAzBR,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,gBAAA,CAAA;;;;AAAe,IAAA,qBAAA,QAAA,CAAA,OAAA,QAAA;;;;;;AAwCf,IAAA,yBAAA,GAAA,OAAA,EAAA,EAGC,GAAA,KAAA,EAAA;AAIG,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,MAAA,CAAiB;IAAA,CAAA;AAE5B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,uBAAA;AACE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEA,IAAA,qBAAA,SAAA,SAAA,0DAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA;AAGjC,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEA,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,MAAA,CAAsB;IAAA,CAAA;AAG/B,IAAA,oBAAA,GAAA,KAAA,EAAA;AAEF,IAAA,uBAAA,EAAI;;;;AAnBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,OAAA,KAAA,SAAA,cAAA,sBAAA,cAAA;AAGC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,KAAA,SAAA,cAAA,qBAAA,eAAA;AAKD,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,OAAA,KAAA,SAAA,cAAA,wBAAA,eAAA;AAOF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,OAAA,KAAA,SAAA,cAAA,oBAAA,WAAA;;;;;;AAaF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAIA,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,MAAA,CAAiB;IAAA,CAAA;AAE1B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,uBAAA;;;;AAJA,IAAA,qBAAA,cAAA,OAAA,KAAA,SAAA,cAAA,sBAAA,aAAA;;;;;;AAPA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAIA,IAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,KAAA,EAAA;AAQA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEA,IAAA,qBAAA,SAAA,SAAA,0DAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA;AAGjC,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEA,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,MAAA,CAAsB;IAAA,CAAA;AAG/B,IAAA,oBAAA,GAAA,KAAA,EAAA;AAEA,IAAA,uBAAA,EAAI;;;;AArBH,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,WAAA;AAUD,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,OAAA,KAAA,SAAA,cAAA,wBAAA,eAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,OAAA,KAAA,SAAA,cAAA,oBAAA,WAAA;;;;;AA+CF,IAAA,oBAAA,GAAA,OAAA,EAAA;;;ADnZI,IAAO,yBAAP,MAAO,wBAAsB;EAC/B,SAAM;AACF;EACJ;EACA,UAAU,QAAW;AACjB;EACJ;EACA,UAAO;AACH;EACJ;EAwBA,YACY,OACA,YACA,KACA,OACA,cACA,OACA,YACD,WACC,cAAsB;AARtB,SAAA,QAAA;AACA,SAAA,aAAA;AACA,SAAA,MAAA;AACA,SAAA,QAAA;AACA,SAAA,eAAA;AACA,SAAA,QAAA;AACA,SAAA,aAAA;AACD,SAAA,YAAA;AACC,SAAA,eAAA;AA/BK,SAAA,UAAU,GAAG,YAAY,QAAQ,UAAU;AAI3C,SAAA,WAAU,IAAI,QAAO;AAEtC,SAAA,sBAA2B,CAAA;AAC3B,SAAA,aAAa;AAEb,SAAA,mBAAmB;AAInB,SAAA,kBAAkB;AAET,SAAA,cAAuB;AAChC,SAAA,qBAA+B,CAAA;AAK/B,SAAA,aAAW;AAmHF,SAAA,SAAS;AACT,SAAA,iBAAiB;AAYjB,SAAA,OAAO;AACP,SAAA,MAAM;AACN,SAAA,WAAW;AAKpB,SAAA,OAAuB,CAAA;AAIvB,SAAA,MAAM,EAAE,SAAS,MAAK;AAGZ,SAAA,qBAAqB,IAAI,aAAY;AACrC,SAAA,iBAAiB,IAAI,aAAY;AACjC,SAAA,YAAY,IAAI,aAAY;AAC5B,SAAA,UAAU,IAAI,aAAY;AAC1B,SAAA,iBAAiB,IAAI,aAAY;AACnC,SAAA,mBAAmB,IAAI,aAAY;AACjC,SAAA,YAAY,IAAI,aAAY;AAC5B,SAAA,eAAe,IAAI,aAAY;AAE/B,SAAA,YAAY,IAAI,aAAY;AAC5B,SAAA,cAAc,IAAI,aAAY;AAC9B,SAAA,qBAAqB,IAAI,aAAY;AACrC,SAAA,eAAe,IAAI,aAAY;AAC/B,SAAA,uBAAuB,IAAI,aAAY;AACvC,SAAA,uBAAuB,IAAI,aAAY;AACvC,SAAA,cAAc,IAAI,aAAY;AAMxC,SAAA,sBAA2C;AAC3C,SAAA,0BAA+C;AAC/C,SAAA,kBAAuB;AACvB,SAAA,kBAAkB;AAClB,SAAA,sBAAsB;AACtB,SAAA,0BAA0B;AAclB,SAAA,sBAA+B;AAC9B,SAAA,gBAAgB,OAAO,OAAOC,KAAI,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,YAAW,EAAG,cAAc,EAAE,KAAK,YAAW,CAAE,CAAC;AA0Q7G,SAAA,QAAgB,CAAA;AAChB,SAAA,cAAsB,CAAA;AArbzB,SAAK,aAAa,mBAAkB,EAAG,UAAU,YAAS;AACtD,UAAI,OAAO,UAAU,OAAO,UAAU,KAAK,KAAK,QAAQ;AACpD,YAAI,KAAK;AACL,eAAK,wBAAwB,kBAAkB;MACvD;AACA,WAAK,eAAc;IACvB,CAAC;AAED,SAAK,aAAa,aAAY,EAC7B,KAAK,UAAU,KAAK,QAAQ,CAAC,EAC7B,UAAU,YAAS;AAChB,WAAK,oBAAoB,KAAK,iBAAiB,MAAM;IACzD,CAAC;AAED,SAAK,aAAa,sBAAqB,EAAG,UAAU,YAAS;AACzD,UAAI,OAAO,UAAU,KAAK,KAAK,QAAQ;AACnC,aAAK,qBAAqB,KAAK,MAAM,OAAO,SAAS;AACrD,YAAI,KAAK,oBAAoB;AACzB,eAAK,OAAO,KAAK,mBAAmB;AACpC,eAAK,aAAa,KAAK,IAAI;QAE/B;MACJ;IACJ,CAAC;AAED,SAAK,aAAa,aAAY,EAAG,UAAU,YAAS;AAChD,UAAI,OAAO,UAAU,KAAK,KAAK,MAAM;AACjC,aAAK,kBAAkB,OAAO,OAAO;AACrC,aAAK,UAAS;MAClB;IACJ,CAAC;AACD,SAAK,aAAa,2BAA0B,EAAG,UAAU,YAAS;AAC9D,UAAI,OAAO,UAAU,KAAK,KAAK,QAAQ;AAEnC,YAAI,WAAW,KAAK,MAAM,OAAO,SAAS;AAC1C,YAAI,UAAU;AAEV,eAAK,iBAAiB,SAAS;QACnC;AACA,aAAK,YAAW;MACpB;IACJ,CAAC;AAED,SAAK,aAAa,WAAU,EAAG,UAAU,YAAS;AAC9C,UAAI,OAAO,UAAU,KAAK,KAAK,QAAQ;AACnC,YAAI,aAAW,KAAK,oBAAoB,KAAK,KAAK,IAAI;AACtD,YAAG,YAAW;AACV,eAAK,qBAAqB,KAAK,MAAM,WAAW,SAAS;AAC7D,cAAI,KAAK,oBAAoB;AACzB,iBAAK,OAAO,KAAK,mBAAmB;UACxC;QACA;AACA,aAAK,kBAAkB,OAAO,OAAO;AACrC,aAAK,iBAAiB,OAAO,UAAU,OAAO,OAAO;AAEjD,aAAK,UAAU,MAAM,MAAM;AAEhC,mBAAW,MAAK;AACf,cAAG,KAAK,yBAAwB;AAC7B,iBAAK,wBAAwB,kBAAgB;UAChD;QACJ,GAAG,GAAG;MAEN;AACA,UAAI,OAAO,cAAc,KAAK,KAAK,QAAQ;AACvC,YAAI,aAAW,KAAK,oBAAoB,KAAK,KAAK,IAAI;AACtD,YAAG,YAAW;AACV,eAAK,qBAAqB,KAAK,MAAM,WAAW,SAAS;AAC7D,cAAI,KAAK,oBAAoB;AACzB,iBAAK,OAAO,KAAK,mBAAmB;UACxC;QACA;AACA,aAAK,kBAAkB,OAAO,OAAO;AACrC,aAAK,UAAU,IAAI;AACnB,mBAAW,MAAK;AACZ,cAAG,KAAK,yBAAwB;AAC7B,iBAAK,wBAAwB,kBAAgB;UAChD;QACJ,GAAG,GAAG;MAEV;IAEJ,CAAC;AAED,SAAK,aAAa,oBAAmB,EAAG,UAAU,YAAS;AACvD,UAAI,OAAO,UAAU,KAAK,KAAK,QAAQ;AACnC,aAAK,qBAAqB,KAAK,MAAM,OAAO,SAAS;AACrD,YAAI,KAAK,oBAAoB;AACzB,eAAK,OAAO,KAAK,mBAAmB;AACpC,eAAK,aAAa,KAAK,IAAI;QAE/B;MACJ;IACJ,CAAC;AAED,SAAK,aAAa;EACtB;EACA,cAAW;AACV,SAAK,SAAS,KAAI;AAClB,SAAK,SAAS,SAAQ;EACvB;;EA8DA,IACI,KAAK,MAAU;AACf,SAAK,QAAQ;EACjB;EACA,IAAI,OAAI;AACJ,WAAO,KAAK;EAChB;EAGA,WAAQ;AACJ,SAAK,QAAQ;MACT,OAAO;MACP,QAAQ;;AAEZ,QAAI,KAAK,QAAQ,KAAK,KAAK,WAAW;AAElC,WAAK,qBAAqB,KAAK,MAAM,KAAK,KAAK,SAAS;AACxD,UAAI,KAAK,oBAAoB;AACzB,aAAK,OAAO,KAAK,mBAAmB;AACpC,aAAK,iBAAiB,KAAK,mBAAmB;MAClD;AACA,WAAK,YAAW;AAChB,UAAI,KAAK,KAAK,QAAQ,KAAK,uBAAuB;AAC9C,aAAK,aAAY;MACrB;IACJ;AAEA,QAAI,KAAK,MAAM,UAAU,YAAY;AACjC,WAAK,0BAA0B,KAAK,KAAK,SAAS,WAAW,IAAI,OAAK,EAAE,IAAI;IAChF,OAAO;AACH,WAAK,0BAA0B,CAAA;IACnC;AAEA,QAAI,KAAK,kBAAkB,KAAK,eAAe,SAAS,GAAG;AACvD,WAAK,kCAAmC,KAAK,eAAyB,IAAI,OAAK,EAAE,IAAI;IACzF,OAAO;AACH,WAAK,kCAAkC,CAAA;IAC3C;EAEJ;EAGA,YAAY,SAAsB;AAC9B,QAAG,QAAQ,yBAAyB,KAAK,KAAK,2BAA2B,KAAK,2BAA2B,QAAU;AAC9G,UAAI,KAAK,wBAAwB,MAAM,SAAS,KAAK,MAAM,MAAM;AAClE,aAAK,qBAAqB,KAAK,wBAAwB;AACtD,YAAG,KAAK,oBAAmB;AACvB,gBAAM,cAAc,KAAK,UAAU,KAAK,kBAAkB;AAC3D,cAAI,aAAa;AACb,iBAAK,wBAAwB,KAAK,YAAU;AAC3C,iBAAK,OAAO,KAAK,wBAAwB;UAC9C;QACJ;MACJ;IACA;AAEA,QAAI,QAAQ,yBAAyB,KAAK,KAAK,yBAAyB;AACpE,WAAK,8BAA6B;IACtC;EACJ;EAEQ,gCAA6B;AACjC,QAAI,KAAK,yBAAyB,SAAS,KAAK,MAAM,MAAM;AACxD,WAAK,iBAAgB;IACzB;AAEA,QAAI,KAAK,MAAM,QAAQ,KAAK,uBAAuB;AAC/C,WAAK,aAAY;IACrB;EACJ;EAEQ,mBAAgB;AACpB,UAAM,eAAe,KAAK,MAAM,KAAK,wBAAwB,SAAS;AACtE,UAAM,WAAW,aAAa;AAE9B,QAAI,YAAY,KAAK,oBAAoB,OAAO;AAC5C,WAAK,mBAAmB,QAAQ;IACpC;EACJ;EAGA,YAAS;AACL,QAAI,KAAK,yBAAyB,SAAS,KAAK,MAAM,MAAM;AACxD,YAAM,iBAAiB,KAAK,MAAM,KAAK,wBAAwB,SAAS;AACxE,YAAM,WAAW,eAAe;AAChC,UAAI,KAAK,oBAAoB,SAAS,UAAU;AAC5C,aAAK,mBAAmB,QAAQ;MACpC;IACJ;AACA,QAAI,KAAK,MAAM,UAAU,YAAY;AACjC,WAAK,0BAA0B,KAAK,KAAK,SAAS,WAAW,IAAI,OAAK,EAAE,IAAI;IAChF,OAAO;AACH,WAAK,0BAA0B,CAAA;IACnC;AAEA,QAAI,KAAK,kBAAkB,KAAK,eAAe,SAAS,GAAG;AACvD,WAAK,kCAAmC,KAAK,eAAyB,IAAI,OAAK,EAAE,IAAI;IACzF,OAAO;AACH,WAAK,kCAAkC,CAAA;IAC3C;EACJ;EAEA,eAAY;AACR,eAAW,MAAK;AACZ,YAAM,eACN;QACI,GAAG;UACC,YAAY;UACZ,WAAW,CAAA;UACX,QAAQ,CAAA;UACR,SAAS;;QAEb,UAAU;QACV,GAAG;UACC,WAAW;YACP;cACI,YAAY;cACZ,WAAW,CAAA;cACX,QAAQ,CAAA;cACR,SAAS;;;UAGjB,YAAY;;QAEhB,UAAU;QACV,MAAM;;AAEV,UAAI,QAAsB;QACtB,MAAM;QACN,MAAM,KAAK;QACX,MAAM;QACN,OAAO,KAAK;;AAGhB,UAAI,KAAK,MAAM,SAAS,aAAa;AACjC,aAAK,aAAa,KAAK,KAAK;MAC9B;AACF,WAAK,gBAAgB,UAAU,KAAK;AACpC,WAAK,kBAAkB,UAAU,KAAK,qBAAqB;IAC/D,GAAG,EAAE;EAET;EAGA,2BAAwB;AACpB,QAAI,CAAC,KAAK,oBAAoB,MAAM,QAAQ;AACxC,cAAQ,KAAK,sCAAsC;AACnD,aAAO;IACX;AACA,UAAM,WAAW,KAAK,mBAAmB,KAAK,CAAC;AAC/C,QAAI,CAAC,SAAS,WAAW,SAAS,QAAQ,WAAW,GAAG;AACpD,cAAQ,KAAK,oCAAoC;AACjD,aAAO;IACX;AAEA,UAAM,cAAc,SAAS,QAAQ,CAAC;AAGtC,UAAM,SAAS;MACX,UAAU,SAAS;MACnB,UAAU,YAAY;MACtB,SAAS,YAAY,WAAW,CAAA;MAChC,OAAO,YAAY,SAAS;MAC5B,MAAM;;AAGV,YAAQ,IAAI,mBAAmB,MAAM;AACrC,WAAO;EACX;EAMA,cAAW;AACP,SAAK,kBAAkB;EAE3B;EACA,gBAAgB,WAAS;AACrB,QAAG,KAAK,iBAAgB;AACpB,aAAO;IACX;AACA,QAAI,KAAK,iBAAiB,WAAW;AACjC,aAAO;IACX;AACA,WAAO;EACX;EACA,kBAAkB,WAAS;AAEvB,QAAI,KAAK,iBAAiB,WAAW;AACjC,aAAO;IACX;AACA,WAAO;EACX;EAEA,kBAAkB,WAAS;AACvB,QAAI,WAAW,SAAS,iBAAiB,cAAc;AACvD,QAAI,UAAU;AACV,eAAS,QAAQ,GAAG,QAAQ,SAAS,QAAQ,SAAS;AAClD,cAAM,UAAU,SAAS,KAAK;AAC9B,YAAI,SAAS;AACT,cAAI,QAAQ,UAAU,SAAS,uBAAuB,GAAG;AACrD,oBAAQ,UAAU,OAAO,uBAAuB;UACpD;AAEA,cAAI,QAAQ,MAAM,WAAW;AACzB,oBAAQ,UAAU,IAAI,uBAAuB;UACjD;QAEJ;MACJ;IACJ;EACJ;EACA,uBAAoB;AAChB,QAAI,WAAW,SAAS,iBAAiB,cAAc;AACvD,QAAI,UAAU;AACV,eAAS,QAAQ,GAAG,QAAQ,SAAS,QAAQ,SAAS;AAClD,cAAM,UAAU,SAAS,KAAK;AAC9B,YAAI,SAAS;AACT,cAAI,QAAQ,UAAU,SAAS,uBAAuB,GAAG;AACrD,oBAAQ,UAAU,OAAO,uBAAuB;UACpD;QACJ;MACJ;IACJ;EACJ;EAEA,cAAW;AACP,QAAI,KAAK,oBAAoB;AACzB,UAAI,QAAQ,KAAK,mBAAmB;AACpC,UAAI,SAAS,GAAG;AACZ,gBAAQ;MACZ;AACA,UAAI,KAAK,gBAAgB;AACrB,YAAI,MAAM,KAAK,eAAe,UAAU;AACxC,YAAI,QAAQ,KAAK,eAAe,UAAU;AAC1C,YAAI,SAAS,KAAK,eAAe,UAAU;AAC3C,YAAI,OAAO,KAAK,eAAe,UAAU;AACzC,YAAI,YAAY,KAAK,eAAe,OAAO;AAC3C,YAAI,cAAc,KAAK,eAAe,UAAU;AAChD,aAAK,QAAQ;UACT,OAAO,GAAG,GAAG;UACb,QAAQ;UACR,cAAc,KAAK,eAAe,UAAU;UAC5C,gBAAgB,KAAK,eAAe,UAAU,UAAU;UACxD,gBAAgB,GAAG,WAAW;UAC9B,gBAAgB,KAAK,eAAe,UAAU,gBAAgB;UAC9D,iBAAiB,GAAG,GAAG,MAAM,KAAK,MAAM,MAAM,MAAM,IAAI;;AAE5D,YAAI,WAAU;AACV,eAAK,cAAc;YACf,gBAAgB,KAAK,eAAe,UAAU;YAC9C,cAAc,KAAK,eAAe,OAAO;YACzC,SAAS,KAAK,eAAe,OAAO;YACpC,iBAAiB,GAAG,GAAG,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC;;QAExD,OAAM;AACF,eAAK,cAAc,CAAA;QACvB;MACJ,OAAO;AACH,aAAK,QAAQ;UACT,OAAO,GAAG,GAAG;UACb,QAAQ;;MAGhB;IACJ;EACJ;EACA,aAAU;AACN,SAAK,kBAAkB;EAC3B;EACA,wBAAqB;EAErB;EAIA,SAAS,OAAkB;AACvB,UAAM,oBAA4B;AAClC,QACI,MAAM,UAAU,SAChB,MAAM,UAAU,WACf,MAAM,UAAU,QAAQ,qBACrB,MAAM,UAAU,SAAS,oBAC/B;AACE,aAAO;IACX;AACA,WAAO;EACX;EAEA,YAAY,OAAkB;AAC1B,SAAK,QAAQ;;;MAGT,OAAO,GAAG,MAAM,UAAU,KAAK;MAC/B,QAAQ;;EAEhB;EAEA,YAAY,KAA2B;AACnC,SAAK,aAAa,gBAAgB,IAAI;AACtC,SAAK,eAAc;AACnB,SAAK,UAAU,KAAK,GAAG;EAC3B;EACA,iBAAiB,KAA2B;AACxC,SAAK,aAAa,gBAAgB,IAAI;AACtC,SAAK,eAAc;AACnB,SAAK,QAAQ,KAAK,GAAG;EACzB;EACA,iBAAiB,OAAK;AAClB,SAAK,WAAW,KAAK;EAEzB;;EAEA,WAAW,WAAiB;AACxB,UAAM,UAAU;AAChB,UAAM,QAAQ,QAAQ,KAAK,SAAS;AACpC,QAAI,CAAC;AAAO;AAEZ,UAAM,SAAS,MAAM,CAAC;AACtB,UAAM,QAAQ,SAAS,MAAM,CAAC,GAAG,EAAE;AAEnC,SAAK,mBAAmB,QAAQ,QAAK;AACnC,YAAM,KAAK,SAAS,eAAe,EAAE;AACrC,UAAI;AACD,WAAG,MAAM,eAAe;AAC3B,SAAG,MAAM,YAAY;IACvB,CAAC;AAED,UAAM,gBAAgB,GAAG,MAAM,GAAG,KAAK;AACvC,UAAM,aAAa,GAAG,MAAM,GAAG,QAAQ,CAAC;AAExC,UAAM,cAAc,SAAS,eAAe,aAAa;AACzD,UAAM,WAAW,SAAS,eAAe,UAAU;AAEnD,QAAI;AAAa,kBAAY,MAAM,eAAe;AAClD,QAAI;AAAU,eAAS,MAAM,YAAY;AAEzC,SAAK,qBAAqB,CAAC,aAAa;AACxC,QAAI;AAAU,WAAK,mBAAmB,KAAK,UAAU;EACvD;EAEA,cAAW;AACT,SAAK,mBAAmB,QAAQ,QAAK;AACnC,YAAM,KAAK,SAAS,eAAe,EAAE;AACrC,UAAI,IAAI;AACN,WAAG,MAAM,eAAe;AACxB,WAAG,MAAM,YAAY;MACvB;IACF,CAAC;AACD,SAAK,qBAAqB,CAAA;EAC5B;EAEF,cAAc,OAAW,aAAiB,MAAW;AACjD,UAAM,gBAAe;AACrB,QAAI,eAAiB,YAAY;AACjC,QAAI,SAAS,CAAC;MACV,UAAU;MACV,SAAS,CAAA;MACT,OAAO;MACP,MAAM,CAAA;KACT;AACD,QAAI,SAAS;MACT,UAAU,eAAe;MACzB,SAAS;;AAEb,UAAM,cAAc,SAAS,UAAU,eAAe,IAAI;AAC1D,SAAK,KAAK,OAAO,aAAa,GAAG,MAAM;AACvC,SAAK,KAAK,QAAQ,CAAC,KAAK,QAAO;AAC3B,UAAI,WAAW;IACnB,CAAC;AACD,SAAK,eAAc;AACnB,SAAK,UAAS;AACd,SAAK,YAAW;EACpB;EACA,mBAAmB,OAAW,aAAgB,gBAAqB,kBAAsB,MAAa,eAAiB;AACnH,UAAM,gBAAe;AACrB,QAAI,eAAiB;AACrB,QAAI,SAAS,CAAC;MACV,OAAO;MACP,OAAO;MACP,SAAS,CAAA;KACZ;AACD,QAAI,SAAS;MACT,SAAS;;AAEb,UAAM,cAAc,SAAS,UAAU,eAAe,IAAI;AAC1D,mBAAe,KAAK,OAAO,aAAa,GAAG,MAAM;AACjD,SAAK,KAAK,YAAY,QAAQ,EAAE,QAAQ,eAAe,QAAQ,IAAI;AACnE,SAAK,eAAc;AACnB,SAAK,UAAS;EAClB;EAEA,WAAQ;AACJ,QAAI,YAAY,KAAK,KAAK;AAC1B,QAAI,SAAS,CAAA;AACb,WAAO,KAAK,EAAE,YAAY,GAAG,WAAW,CAAA,GAAI,SAAS,MAAM,QAAQ,CAAA,EAAE,CAAE;AACvE,QAAI,aAAa,EAAE,UAAU,WAAW,SAAS,OAAM;AACvD,SAAK,KAAK,KAAK,UAAU;AACzB,SAAK,eAAc;AACnB,SAAK,UAAS;EAClB;EAEA,YAAY,UAAgB;AACxB,QAAI,KAAK,KAAK,QAAQ,EAAE,QAAQ,SAAS,IAAI;AACzC,UAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,QAAQ;AACnE,UAAI,SAAS,iBAAiB,CAAC,EAAE,QAAQ;AACzC,WAAK,KAAK,QAAQ,EAAE,QAAQ,KAAK,EAAE,YAAY,SAAS,GAAG,WAAW,CAAA,GAAI,QAAQ,CAAA,EAAE,CAAE;AACtF,WAAK,iBAAiB,iBAAiB,CAAC,EAAE,OAAO;AACjD,WAAK,UAAS;IAClB,OAAO;AACH,YAAM,qCAAqC;IAC/C;EAEJ;EAEA,iBAAiB,kBAAkB,UAAS;AAExC,QAAI,YAAY,MAAM;AAClB,UAAI,aAAa,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,QAAQ;AAC7D,UAAI,WAAW,UAAU;AACrB;AACJ,yBAAmB,WAAW,CAAC,EAAE;IACrC;AACA,QAAI,SAAS;AACb,QAAI,QAAQ;AACZ,QAAI,cAAc,OAAO,iBAAiB;AAC1C,aAAS,KAAK,QAAQ;AAClB,QAAE,QAAQ;AACV,QAAE,WAAW;AACb;IAEJ;EAEJ;EAEA,+BAA+B,kBAAgB;AAC3C,aAAS,KAAK,kBAAkB;AAC5B,UAAI,SAAS,EAAE;AACf,UAAI,cAAc,MAAM,EAAE,QAAQ;AAClC,UAAI,QAAQ;AACZ,eAAS,KAAK,QAAQ;AAClB,UAAE,QAAQ;AACV,UAAE,QAAQ;AACV;MACJ;IACJ;EACJ;EACA,gBAAa;AACT,aAAS,QAAQ,GAAG,QAAQ,KAAK,KAAK,QAAQ,SAAS;AACnD,UAAI,aAAa,KAAK,KAAK,KAAK;AAChC,iBAAW,WAAW;AACtB,eAAS,SAAS,GAAG,SAAS,WAAW,QAAQ,QAAQ,UAAU;AAC/D,YAAI,gBAAgB,WAAW,QAAQ,MAAM;AAC7C,sBAAc,WAAW;AACzB,YAAI,cAAc,QAAQ,cAAc,KAAK,SAAS,GAAG;AACrD,mBAAS,UAAU,GAAG,UAAU,cAAc,KAAK,QAAQ,WAAW;AAClE,kBAAM,SAAS,cAAc,KAAK,OAAO;AACzC,gBAAI,UAAU,OAAO,WAAW,OAAO,QAAQ;AAC3C,uBAAS,UAAU,GAAG,UAAU,OAAO,QAAQ,QAAQ,WAAW;AAC9D,oBAAI,YAAY,OAAO,QAAQ,OAAO;AACtC,0BAAU,QAAQ;cAEtB;UAER;QACJ;MAEJ;IAGJ;EACJ;EAEA,iBAAiB,MAAI;AACjB,QAAI,WAAmB,KAAK;AAC5B,QAAI,WAAmB,KAAK;AAC5B,QAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,QAAQ;AACnE,QAAI,iBAAiB,SAAS,GAAG;AAC7B,UAAI,SAAS,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AACjD,UAAI,QAAQ;AACR,YAAI,aAAa,CAAA;AACjB,mBAAW,KAAK,EAAE,SAAS,GAAG,SAAS,KAAK,WAAW,CAAA,EAAE,CAAE;AAC3D,eAAO,KAAK,KAAK,EAAE,WAAW,WAAU,CAAE;AAC1C,aAAK,+BAA+B,OAAO,IAAI;MACnD;IAEJ;AACA,SAAK,UAAS;EAClB;;EAEA,uBAAuB,MAAM,SAAO;AAChC,QAAI,WAAmB,KAAK;AAC5B,QAAI,WAAmB,KAAK;AAC5B,QAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,QAAQ;AACnE,QAAI,iBAAiB,SAAS,GAAG;AAC7B,UAAI,SAAS,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AACjD,UAAI,QAAQ;AACR,YAAI,iBAAiB,OAAO,KAAK,KAAK,cAAc;AACpD,YAAI,KAAK,eAAe,QAAQ;AAChC,iBAAS,KAAK,eAAe,SAAS;AAClC,cAAI,EAAE,SAAS,KAAK,mBAAmB;AACnC,gBAAI,CAAC,EAAE,SAAS;AACZ,gBAAE,UAAU,CAAA;YAChB;AACA,cAAE,QAAQ,KAAK,OAAO;UAC1B;QAEJ;MAEJ;IAEJ;AACA,SAAK,UAAS;EAClB;;EAEA,oBAAoB,MAAI;AACpB,QAAI,WAAmB,KAAK;AAC5B,QAAI,WAAmB,KAAK;AAC5B,QAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,QAAQ;AACnE,QAAI,iBAAiB,SAAS,GAAG;AAC7B,UAAI,SAAS,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AACjD,UAAI,QAAQ;AACR,YAAI,iBAAiB,OAAO,KAAK,KAAK,cAAc;AACpD,YAAI,KAAK,eAAe,QAAQ;AAChC,uBAAe,QAAQ,KAAK,EAAE,SAAS,KAAK,GAAG,SAAS,KAAK,WAAW,CAAA,EAAE,CAAE;AAC5E,aAAK,+BAA+B,OAAO,IAAI;MACnD;IAEJ;AACA,SAAK,UAAS;EAClB;EACA,uBAAuB,MAAI;AACvB,QAAI,WAAmB,KAAK;AAC5B,QAAI,WAAmB,KAAK;AAC5B,QAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,QAAQ;AACnE,QAAI,iBAAiB,SAAS,GAAG;AAC7B,UAAI,SAAS,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AACjD,UAAI,QAAQ;AACR,YAAI,iBAAiB,OAAO,KAAK,KAAK,cAAc;AACpD,YAAI,KAAK,eAAe,QAAQ;AAChC,uBAAe,QAAQ,OAAO,KAAK,mBAAmB,CAAC;AACvD,aAAK,+BAA+B,OAAO,IAAI;MACnD;IAEJ;AACA,SAAK,UAAS;EAClB;EACA,iBAAiB,MAAI;AACjB,QAAI,WAAmB,KAAK;AAC5B,QAAI,WAAmB,KAAK;AAC5B,QAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,QAAQ;AACnE,QAAI,iBAAiB,SAAS,GAAG;AAC7B,UAAI,SAAS,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AACjD,UAAI,QAAQ;AACR,YAAI,iBAAiB,OAAO,KAAK,OAAO,KAAK,gBAAgB,CAAC;AAC9D,aAAK,+BAA+B,OAAO,IAAI;MACnD;IAEJ;AACA,SAAK,UAAS;EAClB;EACA,eAAe,UAAkB,UAAgB;AACrC,QAAG,KAAK,KAAK,QAAQ,EAAE,QAAQ,UAAU,GAAE;AAC/C,WAAK,YAAY,QAAQ;IAC7B,OAAK;AACL,WAAK,KAAK,QAAQ,EAAE,QAAQ,OAAO,UAAU,CAAC;AAC9C,WAAK,iBAAiB,MAAM,QAAQ;AACpC,WAAK,UAAS;IACd;EACJ;EAEA,YAAY,UAAgB;AACxB,SAAK,KAAK,OAAO,UAAU,CAAC;AAC5B,SAAK,UAAS;EAClB;EAEA,wBAAwB,KAAG;AACvB,QAAI,WAAW;AACf,aAAS,QAAQ,GAAG,QAAQ,IAAI,QAAQ,QAAQ,SAAS;AACrD,UAAI,gBAAgB,IAAI,QAAQ,KAAK;AACrC,UAAI,iBAAiB,cAAc,QAAQ,cAAc,KAAK,SAAS,GAAG;AACtE,iBAAS,KAAK,GAAG,KAAK,cAAc,KAAK,QAAQ,MAAM;AACnD,qBAAW;AACX,cAAI,cAAc,KAAK,EAAE,KAAK,cAAc,KAAK,EAAE,EAAE,QAAQ,SAAS,GAAG;AACrE,uBAAW;AACX;AACA;UAEJ;QACJ;MAEJ;IACJ;AACA,WAAO;EACX;EACA,mBAAmB,KAAG;AAClB,QAAI,WAAW;AACf,aAAS,QAAQ,GAAG,QAAQ,IAAI,QAAQ,QAAQ,SAAS;AACrD,UAAI,gBAAgB,IAAI,QAAQ,KAAK;AACrC,UAAI,iBAAiB,cAAc,QAAQ,cAAc,KAAK,SAAS,GAAG;AACtE,iBAAS,KAAK,GAAG,KAAK,cAAc,KAAK,QAAQ,MAAM;AACnD,cAAI,cAAc,KAAK,EAAE,KAAK,cAAc,KAAK,EAAE,EAAE,QAAQ,SAAS,GAAG;AACrE,uBAAW;AACX;AACA;UAEJ;QACJ;MAEJ;IACJ;AACA,WAAO;EACX;EAGA,eAAe,KAAG;AACd,SAAK,oBAAoB,KAAK,iBAAiB,IAAI,IAAI;AACtD,SAAK,eAAe,KAAK,KAAK,MAAM,IAAI;EAC7C;EAEc,eAAe,KAAmB,cAAe,QAAS,UAAS;;AAE7E,UAAI;AACA,YAAI,MAAM;AACV,YAAI;AACJ,YAAI,QAAQ;AACR,iBAAO;QACX,OAAO;AACH,iBAAO,aAAa;QACxB;AACA,YAAI,UAAU;AACV,iBAAO;QACX;AACA,YAAI,OAAO;UACP,aAAa,KAAM;UACnB,MAAM,KAAM;UACZ,eAAe,KAAM,KAAM;UAC3B,WAAW,KAAM;;AAErB,YAAI,gBAAgB;AAEpB,YAAI,QAAQ,EAAE,OAAO,KAAK,QAAQ,KAAI;AACtC,cAAM,eAAe,KAAK,WAAW,YAAY,IAAG,KAAK,OAAO,IAAI,CAAC;AACpE,eAAO,KAAK,aAAa,KAAK,IAAI;MACvC,SAAS,OAAO;AACZ,gBAAQ,IAAI,KAAK;MACrB;AACA,aAAO;IACX;;EAIA,kBAAkB,MAAI;AAClB,SAAK,OAAO;AACZ,SAAK,UAAU,KAAK,IAAI;EAC5B;EACA,cAAc,UAAU,UAAQ;AAC5B,SAAK,aAAa;AAClB,SAAK,gBAAgB;EAEzB;EACA,eAAe,OAAO,QAAQ,UAAQ;AAClC,SAAK,aAAa,OAAO,QAAQ,QAAQ;AACzC,QAAG,OAAM;AACP,WAAK,YAAY,MAAM;IACzB;AACA,SAAK,UAAS;EAEhB;EAEF,gBAAgB,SAAS,UAAQ;AAC/B,SAAK,UAAS;EAChB;EAEE,aAAa,UAAU,QAAQ,UAAQ;AACrC,UAAM,iBAAiB,KAAK,mBAAmB,KAAK,QAAQ,GAAG;AAC/D,QAAI,CAAC,kBAAkB,eAAe,WAAW,GAAG;AAChD;IACJ;AAGA,UAAM,EAAE,cAAc,WAAU,IAAK,KAAK,mBAAmB,gBAAgB,OAAO,UAAU,QAAQ;AAGtG,SAAK,mBAAmB,gBAAgB,cAAc,UAAU;EAClE;EAEQ,mBAAmB,SAAS,UAAU,UAAQ;AACpD,QAAI,eAAe;AACnB,QAAI,aAAa;AAEjB,YAAQ,QAAQ,CAAC,QAAQ,UAAS;AAChC,UAAI,UAAU,UAAU;AACtB,eAAO,KAAK;AACZ,eAAO,QAAQ,KAAK,MAAM,WAAW,QAAQ,CAAC;MAChD;AAEA,UAAI,OAAO,IAAI;AACb,wBAAgB,OAAO,SAAS;MAClC,OAAO;AACL;MACF;IACF,CAAC;AAED,WAAO,EAAE,cAAc,WAAU;EACnC;EAEQ,mBAAmB,SAAS,cAAc,YAAU;AAC1D,UAAM,iBAAiB,OAAO;AAC9B,UAAM,mBAAmB,aAAa,IAAI,iBAAiB,aAAa;AAExE,YAAQ,QAAQ,SAAM;AACpB,UAAI,CAAC,IAAI,MAAM,IAAI,QAAQ,GAAG;AAC5B,YAAI,QAAQ,KAAK,IAAI,kBAAkB,CAAC;MAC1C;IACF,CAAC;EACH;EACF,YAAY,QAAM;AACd,QAAI,QAAQ;AACR,aAAO,EAAE,OAAO,OAAO,QAAQ,IAAG;IACtC;AACA,WAAO,CAAA;EACX;EAEA,iBAAiB,QAAM;AACnB,QAAI,QAAQ;AACR,aAAO,EAAE,OAAO,OAAO,QAAQ,IAAG;IACtC;AACA,WAAO,CAAA;EACX;EAEA,iBAAiB,QAAM;AACnB,QAAI,QAAQ;AACR,YAAM,eAAe,QAAQ,SAAS,UAAU;AAChD,YAAM,oBAAoB;AAC1B,YAAM,gBAAgB,QAAQ,SAAS,IAAI,CAAC,QAAY;AACpD,eAAO,KAAK,QAAS,KAAK,QAAQ,oBAAoB,eAAgB,KAAK;MAC/E,CAAC;AACD,aAAO,EAAE,OAAO,gBAAgB,IAAG;IACvC;AACA,WAAO,CAAA;EAEX;;EAEA,UAAU,UAAW,qBAAoB;AACrC,SAAK,cAAa;AAClB,QAAI,CAAC,KAAK,oBAAoB;AAC1B,WAAK,qBAAqB;QACtB,OAAO;QACP,MAAM,KAAK;;IAEnB,OAAO;AACH,WAAK,mBAAmB,OAAO,KAAK;IACxC;AACA,QAAI,QAAQ,CAAA;AACZ,QAAI,qBAAqB;AACrB,cAAQ;QACJ,UAAU,KAAK,KAAK;QACpB,cAAc,oBAAoB;QAClC,aAAa,oBAAoB;QACjC,WAAW,oBAAoB;QAC/B,aAAa,KAAK,UAAU,KAAK,kBAAkB;;IAE3D,OAAO;AACH,cAAQ;QACJ,UAAU,KAAK,KAAK;QACpB,aAAa,KAAK,UAAU,KAAK,kBAAkB;;IAE3D;AAEA,UAAM,MAAM;AACZ,SAAK,WAAW,YAAY,IAAG,KAAK,KAAK,EAAE,UAAU,OAAI;AACrD,WAAK,gBAAgB;AACrB,WAAK,KAAK,YAAY,KAAK,UAAU,KAAK,kBAAkB;AAC5D,UAAI,UAAU;AACV,aAAK,aAAa,KAAK,IAAI;MAC/B;IACJ,GAAG,WAAQ;AACP,cAAQ,IAAI,KAAK;IACrB,CAAC;EAEL;EAGA,8BAA8B,IAAE;AAC5B,eAAW,MAAK;AACZ,UAAI,aAAa,SAAS,eAAe,UAAU,KAAK,KAAK;AAC7D,UAAI,YAAY;AACZ,YAAI,aAAa,WAAW;AAC5B,iBAAS,QAAQ,GAAG,QAAQ,WAAW,QAAQ,SAAS;AACpD,gBAAM,UAAU,WAAW,KAAK;AAChC,cAAI,QAAQ,MAAM,IAAI;AAClB,oBAAQ,UAAU,IAAI,kBAAkB;UAC5C;QAEJ;MACJ;IACJ,GAAG,EAAE;EAET;EAEA,cAAc,OAAY,YAAiB,IAAa,aAAoB;AACxE,SAAK,oBAAmB;AACxB,QAAI,iBAAiB,MAAM;AAC3B,QAAI,CAAC;AAAgB;AACrB,QAAI,gBAAgB,cAAc;AAC9B,qBAAe,UAAU,IAAI,sBAAsB,kBAAkB;AACrE,qBAAe,UAAU,OAAO,cAAc;IAClD;EACJ;EAEA,YAAY,OAAY,YAAY,IAAG;AACnC,UAAM,eAAc;AACpB,SAAK,cAAc;AACnB,SAAK,mBAAmB;AACxB,SAAK,WAAW;AAChB,SAAK,gBAAgB,OAAO,YAAY,EAAE;EAC9C;EAEA,YAAY,OAAY,YAAY,IAAG;AACnC,UAAM,eAAc;EACxB;EAEA,QAAQ,MAAS;AACb,QAAI,MAAM,IAAI;AACV,WAAK,gBAAgB,KAAK;IAC9B;EACJ;EAGA,gBAAgB,OAAY,YAAiB,IAAW;AACpD,QAAG,KAAK,iBAAgB;AACpB;IACJ;AACA,QAAI,KAAK,UAAU;AACf,WAAK,aAAa,gBAAgB,IAAI;AACtC;IACJ;AACA,SAAK,qBAAoB;AACzB,SAAK,sBAAsB,EAAE;AAE7B,SAAK,gBAAgB;AACrB,UAAM,gBAAe;AACrB,SAAK,aAAa,KAAK,IAAI;AAC3B,SAAK,aAAa,mBAAmB;MACjC,UAAU,KAAK,KAAK;MACpB,iBAAiB,KAAK;KACzB;AACD,QAAG,WAAW,SAAQ;AACpB,WAAK,aAAa,KAAK,SAAS,WAAW,OAAO;AACjD,cAAQ,IAAI,gBAAiB,KAAK,UAAU;IAC/C;AAEN,SAAK,yBAAyB,OAAO,YAAY,EAAE;AACnD,SAAK,qBAAqB,OAAO,UAAU;AAC3C,eAAW,MAAK;AACd,UAAI,KAAK,eAAe;AACtB,cAAM,UAAU,SAAS,eAAe,KAAK,aAAa;AAC1D,YAAI,SAAS;AACX,gBAAM,UAAU,QAAQ,sBAAqB;AAC7C,eAAK,oBAAoB,OAAO,QAAQ;AACxC,eAAK,oBAAoB,QAAQ,QAAQ;AACzC,eAAK,oBAAoB,MAAM,QAAQ;AACvC,eAAK,oBAAoB,SAAS,QAAQ;AAC1C,eAAK,oBAAoB,QAAQ,QAAQ;AACzC,eAAK,oBAAoB,SAAS,QAAQ;AAC1C,eAAK,oBAAoB,UAAU,QAAQ,OAAQ,QAAQ,QAAQ;AACnE,eAAK,oBAAoB,UAAU,QAAQ;AAC3C,eAAK,oBAAoB,0BAA0B,KAAK,oBAAoB;AAC5E,eAAK,oBAAoB,0BAA0B,KAAK,oBAAoB;AAC5E,eAAK,0BAA0B,IAAI,oBAAmB;AACtD,eAAK,0BAA0B,KAAK;QACtC;MACF;IACF,GAAG,CAAC;EACN;EAEY,sBAAsB,IAAW;AACrC,QAAI,YAAY,SAAS,cAAc,mBAAmB;AAC1D,QAAI,aAAa,MAAM;AACnB,YAAM,gBAAgB,SAAS,eAAe,EAAE;AAChD,UAAI,eAAe;AACf,sBAAc,UAAU,IAAI,kBAAkB;MAClD;AACA,kBAAY,SAAS,cAAc,mBAAmB;AACtD,WAAK,kBAAkB,EAAE;IAC7B;AACA,QAAI;AACA,UAAI,UAAU,OAAO,IAAI;AACrB,aAAK,kBAAkB,EAAE;MAC7B;;EACR;EAEQ,kBAAkB,IAAW;AACjC,SAAK,oBAAmB;AACxB,UAAM,gBAAgB,SAAS,eAAe,EAAE;AAChD,QAAI,eAAe;AACf,oBAAc,UAAU,IAAI,kBAAkB;IAClD;AACA,SAAK,8BAA8B,EAAE;EACzC;EAEQ,yBAAyB,OAAY,YAAiB,IAAW;AACrE,QAAI,CAAC;AAAY;AAEjB,YAAQ,WAAW,MAAM;MACrB,KAAK;AACD,aAAK,cAAc,OAAO,UAAU;AACpC;MACJ,KAAK;AACD,aAAK,WAAW,OAAO,WAAW,GAAG,EAAE;AACvC;MACJ,KAAK;AACD,aAAK,cAAc,OAAO,YAAY,EAAE;AACxC;MACJ,KAAK;AACD,aAAK,iBAAiB,OAAO,YAAY,EAAE;AAC3C;IACR;EACJ;EAEQ,qBAAqB,OAAY,YAAe;AACpD,SAAK,sBAAsB;AAC3B,SAAK,0BAA0B;AAC/B,SAAK,eAAc;AAEnB,SAAK,sBAAsB,IAAI,oBAAmB;AAClD,SAAK,kBAAkB;EAC3B;EAGA,iBAAc;AACV;EACJ;EAGA,oBAAoB,MAAM,SAAO;AAC7B,QAAI,QAAQ,UAAa,QAAQ;AAC7B;AACJ,YAAQ,KAAK,MAAM;MACf,KAAK;AAAa;AACd,cAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,KAAK,QAAQ;AACxE,cAAI,SAAS,iBAAiB,CAAC,EAAE,QAAQ;AACzC;QACJ;AAAC;MACD,KAAK;AAAU;AACX,cAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,KAAK,QAAQ;AACxE,cAAI,SAAS,iBAAiB,CAAC,EAAE;AACjC,mBAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,SAAS;AAChD,gBAAI,SAAS,KAAK,UAAU;AACxB,qBAAO,KAAK,EAAE,QAAQ,KAAK,OAAO;AAClC;YACJ;UACJ;AACA,eAAK,UAAS;AAEd;QACJ;AAAC;MAED,KAAK;AAAa;AACd,cAAI,OAAO,EAAE,YAAY,KAAK,UAAU,YAAY,KAAK,UAAU,kBAAkB,KAAK,aAAa,qBAAqB,KAAK,kBAAiB;AAGlJ,cAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,KAAK,QAAQ;AACxE,cAAI,iBAAiB,SAAS,GAAG;AAC7B,gBAAI,SAAS,iBAAiB,CAAC,EAAE,QAAQ,KAAK,QAAQ;AACtD,gBAAI,QAAQ;AACR,kBAAI,iBAAiB,OAAO,KAAK,KAAK,WAAW;AACjD,uBAAS,QAAQ,GAAG,QAAQ,eAAe,QAAQ,QAAQ,SAAS;AAChE,oBAAI,SAAS,KAAK,mBAAmB;AACjC,iCAAe,QAAQ,KAAK,EAAE,QAAQ,KAAK,OAAO;AAClD;gBACJ;cACJ;YACJ;UACJ;AACA,eAAK,UAAS;AACd;QACJ;AAAC;IAGL;EAEJ;EACA,iBAAiB,UAAU,SAAO;AAE9B,QAAI,YAAY,SAAS,SAAS,KAAK,SAAS;AAC5C,UAAI,MAAM,SAAS,MAAM,GAAG;AAC5B,UAAI,OAAO,IAAI,SAAS,GAAG;AACvB,YAAI,eAAe,IAAI,CAAC;AACxB,YAAI,WAAW,IAAI,CAAC;AACpB,YAAI,YAAY,UAAU;AACtB,cAAI,WAAW,OAAO,IAAI,CAAC,CAAC;AAC5B,cAAI,WAAW,OAAO,IAAI,CAAC,CAAC;AAC5B,cAAI,OAAO,EAAE,YAAY,UAAU,YAAY,UAAU,QAAQ,SAAQ;AACzE,eAAK,kBAAkB,OAAO;AAC9B,eAAK,oBAAoB,MAAM,OAAO;QAC1C,WACS,YAAY,aAAa;AAC9B,cAAI,WAAW,OAAO,IAAI,CAAC,CAAC;AAC5B,cAAI,WAAW,OAAO,IAAI,CAAC,CAAC;AAC5B,cAAI,cAAc,OAAO,IAAI,CAAC,CAAC;AAC/B,cAAI,oBAAoB,OAAO,IAAI,CAAC,CAAC;AACrC,cAAI,OAAO,EAAE,QAAQ,aAAa,YAAY,UAAU,YAAY,UAAU,eAAe,aAAa,qBAAqB,kBAAiB;AAGhJ,eAAK,kBAAkB,OAAO;AAC9B,eAAK,oBAAoB,MAAM,OAAO;QAE1C;MAEJ;IACJ;EACJ;EACA,mBAAmB,SAAO;AACtB,QAAI,KAAK,KAAK,QAAQ;AAClB,eAAS,QAAQ,GAAG,QAAQ,KAAK,KAAK,QAAQ,SAAS;AACnD,cAAM,IAAI,KAAK,KAAK,KAAK;AACzB,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,QAAQ,KAAK;AACvC,gBAAM,MAAM,EAAE,QAAQ,CAAC;AACvB,cAAI,IAAI,WAAW,MAAM;AACrB,gBAAI,cAAc,IAAI,QAAQ,QAAQ,OAAO;AAC7C,gBAAI,cAAc,IAAI;AAClB,kBAAI,QAAQ,OAAO,aAAa,CAAC;YACrC;UAEJ;AACA,mBAAS,KAAK,GAAG,KAAK,IAAI,KAAK,QAAQ,MAAM;AACzC,kBAAM,MAAM,IAAI,KAAK,EAAE;AACvB,qBAAS,OAAO,GAAG,OAAO,IAAI,QAAQ,QAAQ,QAAQ;AAClD,oBAAM,UAAU,IAAI,QAAQ,IAAI;AAChC,kBAAI,QAAQ,WAAW,MAAM;AACzB,oBAAI,cAAc,QAAQ,QAAQ,QAAQ,OAAO;AACjD,oBAAI,cAAc,IAAI;AAClB,0BAAQ,QAAQ,OAAO,aAAa,CAAC;gBACzC;cAEJ;YACJ;UACJ;QAEJ;MAEJ;IACJ;EACJ;;EAGA,kBAAkB,SAAO;AACrB,QAAI,KAAK,KAAK,QAAQ;AAClB,eAAS,QAAQ,GAAG,QAAQ,KAAK,KAAK,QAAQ,SAAS;AACnD,cAAM,IAAI,KAAK,KAAK,KAAK;AACzB,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,QAAQ,KAAK;AACvC,gBAAM,MAAM,EAAE,QAAQ,CAAC;AACvB,cAAI,IAAI,WAAW,MAAM;AACrB,gBAAI,cAAc,IAAI,QAAQ,QAAQ,OAAO;AAC7C,gBAAI,cAAc,IAAI;AAClB,kBAAI,QAAQ,OAAO,aAAa,CAAC;YACrC;UAEJ;AACA,mBAAS,KAAK,GAAG,KAAK,IAAI,KAAK,QAAQ,MAAM;AACzC,kBAAM,MAAM,IAAI,KAAK,EAAE;AACvB,qBAAS,OAAO,GAAG,OAAO,IAAI,QAAQ,QAAQ,QAAQ;AAClD,oBAAM,UAAU,IAAI,QAAQ,IAAI;AAChC,kBAAI,QAAQ,WAAW,MAAM;AACzB,oBAAI,cAAc,QAAQ,QAAQ,QAAQ,OAAO;AACjD,oBAAI,cAAc,IAAI;AAClB,0BAAQ,QAAQ,OAAO,aAAa,CAAC;gBACzC;cAEJ;YACJ;UACJ;QAEJ;MAEJ;IACJ;EACJ;EAEF,SAAS,aAAkB;AACxB,QAAI,eAAa,UAAa,eAAa,QAAQ,YAAY,SAAO,GAAG;AACxE,aAAO;IACX;AACA,QAAI,CAAC,KAAK,2BAA2B,CAAC,KAAK,iCAAiC;AACxE,aAAO;IACX;AACA,UAAM,OAAO,MAAM,QAAQ,WAAW,IAAI,cAAc,CAAC,WAAW;AACpE,QAAI,SAAQ,KAAK,KAAK,aAClB,KAAK,wBAAwB,SAAS,OAAO,KAC7C,KAAK,gCAAgC,SAAS,OAAO,CAAC;AAE1D,WAAO;EACT;;EAII,kBAAkB,aAAkB;AAChC,QAAI,CAAC,eAAe,CAAC,KAAK,2BAA2B,CAAC,KAAK,iCAAiC;AACxF,aAAO,CAAA;IACX;AAEA,WAAO,YAAY,OAAO,aACtB,KAAK,wBAAwB,SAAS,OAAO,KAAK,KAAK,gCAAgC,SAAS,OAAO,CAAC;EAEhH;EAGA,mBAAmB,aAAkB;AAChC,QAAI,eAAa,UAAa,eAAa,QAAQ,YAAY,SAAO,GAAG;AAClE,aAAO;IACX;AACA,QAAI,CAAC,KAAK,2BAA2B,CAAC,KAAK,iCAAiC;AACxE,aAAO;IACX;AACA,UAAM,OAAO,MAAM,QAAQ,WAAW,IAAI,cAAc,CAAC,WAAW;AACpE,QAAI,SAAQ,KAAK,KAAK,aAClB,KAAK,wBAAwB,SAAS,OAAO,KAC7C,KAAK,gCAAgC,SAAS,OAAO,CAAC;AAE1D,WAAO;EACb;EAGF,cAAc,SAAO;AACjB,UAAM,UAAU,CAAC,SAAS,MAAM,OAAO,OAAK,EAAE,SAAS,OAAO,EAAE,CAAC,KAAK;AAEtE,QAAI,MAAM,QAAQ,KAAK,MAAM,UAAU,UAAU;AACjD,QAAI,KAAK;AACL,WAAK,YAAY,GAAG;AACpB,aAAO;IACX;AAEA,QAAI,eAAe,QAAQ,KAAK,cAAc;AAC9C,QAAI,cAAc;AACd,WAAK,YAAY,YAAY;AAC7B,aAAO;IACX;AAEA,WAAO;EACX;EAEA,YAAY,KAAG;AACX,QAAI,KAAK,iBAAiB;AACtB,UAAI,aAAa,KAAK;IAC1B;EACJ;EAEA,2BAA2B,OAAO,SAAO;AAErC,SAAK,kBAAkB;EAG3B;EACA,2BAA2B,OAAO,SAAO;AACrC,SAAK,kBAAkB;AACvB,UAAM,gBAAe;EAQzB;EAEA,iBAAiB,OAAO,SAAO;AAC3B,eAAW,MAAK;AACZ,cAAQ,IAAI,kCAAkC,KAAK,aAAa;AAChE,WAAK,kBAAkB;AACvB,WAAK,qBAAqB,KAAK,EAAE,UAAU,KAAK,KAAK,QAAQ,WAAW,SAAS,iBAAiB,KAAK,gBAAe,CAAE;AACxH,YAAM,gBAAe;IACzB,GAAG,CAAC;EAER;EACA,QAAQ,OAAO,SAAS,eAAa;AACjC,UAAM,gBAAe;AACrB,SAAK,gBAAiB;AACtB,YAAQ,IAAI,oCAAoC,KAAK,aAAa;AAClE,YAAQ,IAAI,uBAAuB,OAAO;AAC1C,UAAM,aAAa,QAAQ,WAAW,OAAO;AAC7C,SAAK,cAAc;AACnB,SAAK,kBAAkB;AACvB,SAAK,qBAAqB,KAAK,EAAE,UAAU,KAAK,KAAK,QAAQ,WAAW,SAAS,iBAAiB,KAAK,gBAAe,CAAE;EAG5H;EAEA,WAAW,OAAK;AACZ,QAAI,WAAW,MAAM,cAAc;AACnC,YAAQ,IAAI,mCAAmC,QAAQ;AACvD,UAAM,eAAc;EAExB;EACA,UAAU,OAAS;AACf,UAAM,gBAAe;AACrB,SAAK,SAAQ;EACjB;EAEA,QAAQ,OAAY,SAAO;AACvB,QAAI,KAAK;AACL;AACJ,UAAM,gBAAe;AAErB,QAAI,WAAW,MAAM,cAAc;AACnC,YAAQ,IAAI,8BAA8B,QAAQ;AAEtD,UAAM,iBAAiB,MAAM,aAAa,QAAQ,SAAS;AAE3D,UAAM,YAAa,MAAM,OAAuB,QAAQ,gBAAgB;AACxE,QAAI,kBAAkB,WAAW;AAC7B,YAAM,aAAa,UAAU,aAAa,cAAc;AACxD,UAAI,cAAc,mBAAmB,YAAY;AAC9C,YAAG,KAAK,oBAAoB,OAAO,gBAAgB,UAAU,GAC7D;AACC;QACD;MAEH;IACJ;AAEI,QAAI,WAAW,MAAM,aAAa,QAAQ,UAAU;AACpD,QAAI,YAAY,KAAK,KAAK,UAAU,UAAU;AAC1C,WAAK,aAAa,mBAAmB,KAAK;AAC1C,WAAK,SAAQ;AAEb;IACJ;AACA,QAAI,iBAAiB,MAAM,aAAa,QAAQ,gBAAgB;AAChE,QAAI,gBAAgB;AAChB,UAAI,WAAW,KAAK,MAAM,cAAc;AACxC,UAAI,UAAU;AACV,aAAK,aAAa,mBAAmB,KAAK;AAC1C,YAAI,UAAU,SAAS;AACvB,YAAI,eAAe,SAAS;AAC5B,aAAK,kBAAkB,OAAO;AAE9B;MACJ;AACA;IACJ;AACA,QAAI,iBAAiB,MAAM,aAAa,QAAQ,gBAAgB;AAChE,QAAI,gBAAgB;AAChB,UAAI,WAAW,KAAK,MAAM,cAAc;AACxC,UAAI,UAAU;AACV,aAAK,aAAa,mBAAmB,KAAK;AAC1C,YAAI,eAAe,SAAS;AAC5B,aAAK,iBAAiB,YAAY;AAElC;MACJ;IAEJ;AACA,QAAI,eAAe,MAAM,aAAa,QAAQ,cAAc;AAC5D,QAAI,cAAc;AACd,UAAI,WAAW,KAAK,MAAM,YAAY;AACtC,UAAI,UAAU;AACV,aAAK,aAAa,mBAAmB,KAAK;AAC1C,YAAI,UAAU,SAAS;AACvB,YAAI,eAAe,SAAS;AAC5B,aAAK,kBAAkB,OAAO;AAE9B;MACJ;IAEJ;AAGA,QAAI,gBAAgB,MAAM,aAAa,QAAQ,eAAe;AAC9D,QAAI,eAAe;AACf,UAAI,WAAW,KAAK,MAAM,aAAa;AACvC,UAAI,UAAU;AACV,YAAI,SAAS,SAAS;AACtB,aAAK,eAAe,MAAM;AAC1B,aAAK,aAAa,KAAK,IAAI;AAE3B;MACJ;AACA;IACJ;AAIA,QAAI,WAAY,MAAM,aAAa,QAAQ,eAAe;AAC1D,QAAG,UAAS;AACR,WAAK,aAAa,gBAAgB,IAAI;AACtC,UAAI,YAAY,KAAK,MAAM,QAAQ;AACnC,UAAG,UAAU,SAAS,UAAU,UAAU,SAAS,aAAY;AAC3D,YAAI,OAAO;UACP,OAAO;UACP;;AAEJ,aAAK,mBAAmB,KAAK,IAAI;AACjC;MACJ;AACA;IACJ;AAEA,SAAK,sBAAsB;AAC3B,SAAK,0BAA0B;AAC/B,QAAG,YAAY,SAAS,SAAS,KAAM,KAAK,eAAc;AACtD,cAAQ,IAAI,0CAA0C,KAAK,aAAa;AACxE,UAAI,MAAM,SAAS,MAAM,GAAG;AAC5B,UAAG,IAAI,CAAC,MAAM,KAAK,eAAc;AAC7B,aAAK,gBAAe;AACpB,aAAK,iBAAiB,UAAU,KAAK,WAAW;MACpD;IACJ;AAEA,QAAI,CAAC,SAAS;AACV,UAAI,YAAY,SAAS,SAAS,GAAG;AACjC,YAAI,MAAM,SAAS,MAAM,GAAG;AAC5B,YAAI,OAAO,IAAI,SAAS,GAAG;AACvB,kBAAQ,IAAI,kDAAkD,OAAO;AACrE,eAAK,qBAAqB,KAAK,EAAE,UAAU,KAAK,KAAK,QAAQ,YAAY,SAAQ,CAAE;QACvF;MACJ;IACJ;EAGJ;EAIA,oBAAoB,OAAkB,gBAAwB,YAAkB;AAC5E,UAAM,SAAS,KAAK,wBAAwB,UAAU;AACtD,QAAI,CAAC,UAAU,CAAC,OAAO;AAAS,aAAO;AAEvC,UAAM,YAAY,OAAO,QAAQ,QAAQ,cAAc;AACvD,UAAM,UAAU,OAAO,QAAQ,QAAQ,UAAU;AAEjD,QAAI,cAAc,MAAM,YAAY;AAAI,aAAO;AAE/C,SAAK,cAAc,OAAO,SAAS,WAAW,OAAO;AAErD,SAAK,UAAS;AACd,SAAK,MAAM,cAAa;AACxB,WAAO;EACX;EAEQ,cAAc,OAAc,WAAmB,SAAe;AAClE,UAAM,OAAO,MAAM,SAAS;AAC5B,UAAM,OAAO,WAAW,CAAC;AACzB,UAAM,OAAO,SAAS,GAAG,IAAI;EACjC;EAEQ,wBAAwB,SAAe;AAC3C,eAAW,OAAO,KAAK,MAAM;AACzB,iBAAW,UAAU,IAAI,SAAS;AAC9B,YAAI,OAAO,SAAS,SAAS,OAAO,GAAG;AACnC,iBAAO;QACX;MACJ;IACJ;AACA,WAAO;EACX;EAGA,QAAQ,OAAU;AACd,QAAI,KAAK;AACL;AACJ,UAAM,gBAAe;AACrB,QAAI,WAAW,MAAM,cAAc;AACnC,QAAI,WAAW,MAAM,aAAa,QAAQ,UAAU;AACpD,QAAI,KAAK,KAAK,UAAU,UAAU;AAC9B,WAAK,SAAQ;IACjB;AACA,QAAI,WAAY,MAAM,aAAa,QAAQ,eAAe;AAC1D,QAAG,UAAS;AACR,WAAK,aAAa,gBAAgB,IAAI;AACtC,UAAI,YAAY,KAAK,MAAM,QAAQ;AACnC,UAAG,UAAU,SAAS,UAAU,UAAU,SAAS,aAAY;AAC3D,YAAI,OAAO;UACP,OAAO;UACP;;AAEJ,aAAK,mBAAmB,KAAK,IAAI;MAErC;IAEJ;EAEJ;EAEA,qBAAqB,OAAO,IAAI,aAAW;AACvC,UAAM,gBAAe;AACrB,QAAI,KAAK,UAAU;AACf;IACJ;AAEA,QAAI,YAAY,SAAS,iBAAiB,qBAAqB;AAE/D,cAAU,QACN,UAAO;AACH,UAAI,CAAC,KAAK,UAAU,SAAS,eAAe,GAAG;AAC3C,aAAK,UAAU,OAAO,oBAAoB;MAC9C;IAEJ,CAAC;AACL,QAAI,eAAe,cAAc;AAC7B,UAAI,YAAY,SAAS,eAAe,EAAE;AAC1C,UAAI,WAAW;AACX,kBAAU,UAAU,IAAI,oBAAoB;MAGhD;IACJ;EAEJ;EAEA,gBAAgB,OAAO,IAAE;AACrB,UAAM,MAAsC,MAAM;EACtD;EACA,mBAAmB,QAAM;AACrB,QAAI,KAAK,UAAU;AACf;IACJ;AACA,QAAI,OAAO,OAAO;AAClB,SAAK,YAAY,KAAK,EAAE,eAAe,KAAK,KAAI,CAAE;AAClD,QAAI,SAAS,OAAO;AACpB,SAAK,sBAAsB;AAC3B,QAAI,UAAU,UAAU;AACpB,WAAK,0BAA0B,OAAO;AACtC,WAAK,sBAAsB;AAC3B;IACJ,WACS,UAAU,YAAY;AAC3B,WAAK,0BAA0B;AAC/B,WAAK,0BAA0B,OAAO;AAEtC;IAEJ;AACA,QAAI,UAAU,aAAa,UAAU,eAAe,UAAU,mBAAmB,UAAU,YAAY;AACnG,cAAQ,KAAK,MAAM;QACf,KAAK;AAAU;AACX,gBAAI,KAAK,SAAS;AACd,kBAAI,cAAc,EAAE,QAAQ,KAAK,MAAM,OAAO,KAAK,cAAc,KAAK,OAAO,GAAG,WAAW,KAAK,QAAO;AACvG,kBAAI,UAAU,aAAa;AACvB,qBAAK,YAAY,KAAK,WAAW;AACjC,qBAAK,MAAM,cAAa;cAC5B,WAAW,UAAU,WAAW;AAC5B,qBAAK,UAAU,KAAK,WAAW;cACnC,WACS,UAAU,iBAAiB;AAChC,qBAAK,mBAAmB,KAAK,WAAW;cAC5C,WACS,UAAU,YAAY;AAC3B,qBAAK,eAAe,KAAK,WAAW;cACxC;AACA;YACJ;AAEA,gBAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,KAAK,QAAQ;AACxE,qBAAS,QAAQ,GAAG,QAAQ,iBAAiB,QAAQ,SAAS;AAC1D,uBAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK,EAAE,QAAQ,QAAQ,KAAK;AAC7D,oBAAI,KAAK,KAAK,UAAU;AACpB,wBAAM,UAAU,iBAAiB,KAAK,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC;AAC5D,sBAAI,SAAS;AACT,wBAAI,cAAc,EAAE,QAAQ,KAAK,MAAM,OAAO,KAAK,cAAc,OAAO,GAAG,WAAW,QAAO;AAC7F,wBAAI,UAAU,aAAa;AACvB,2BAAK,YAAY,KAAK,WAAW;AACjC,2BAAK,MAAM,cAAa;oBAC5B,WAAW,UAAU,WAAW;AAC5B,2BAAK,UAAU,KAAK,WAAW;oBACnC,WACS,UAAU,iBAAiB;AAChC,2BAAK,mBAAmB,KAAK,WAAW;oBAC5C,WACS,UAAU,YAAY;AAC3B,2BAAK,eAAe,KAAK,WAAW;oBACxC;AACA;kBACJ;gBACJ;cAEJ;YACJ;AACA;UACJ;AAAC;QAED,KAAK;AAAa;AACd,gBAAI,UAAU;AACd,gBAAI,KAAK,SAAS;AACd,wBAAU,KAAK;YACnB,OAAO;AACH,kBAAI,OAAO,EAAE,YAAY,KAAK,UAAU,YAAY,KAAK,UAAU,kBAAkB,KAAK,YAAW;AACrG,kBAAI,mBAAmB,KAAK,KAAK,OAAO,OAAK,EAAE,YAAY,KAAK,QAAQ;AACxE,oBACA,UAAS,QAAQ,GAAG,QAAQ,iBAAiB,QAAQ,SAAS;AAC1D,sBACA,UAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK,EAAE,QAAQ,QAAQ,KAAK;AAC7D,sBAAI,KAAK,KAAK,UAAU;AAEpB,wBAAI,SAAS,iBAAiB,CAAC,EAAE,QAAQ,CAAC;AAC1C,wBAAI,QAAQ;AACR,0BAAI,iBAAiB,OAAO,KAAK,KAAK,cAAc;AACpD,4BACA,UAAS,OAAO,GAAG,OAAO,eAAe,QAAQ,QAAQ,QAAQ;AAE7D,4BAAI,QAAQ,KAAK,mBAAmB;AAChC,gCAAM,UAAU,eAAe,QAAQ,IAAI;AAC3C,oCAAU,QAAQ,QAAQ,CAAC;AAC3B,gCAAM;AACN;wBACJ;sBACJ;oBACJ;kBACJ;gBAEJ;cACJ;YACJ;AACA,gBAAI,cAAc,EAAE,QAAQ,KAAK,MAAM,OAAO,KAAK,cAAc,OAAO,GAAG,WAAW,QAAO;AAC7F,gBAAI,UAAU,aAAa;AACvB,mBAAK,YAAY,KAAK,WAAW;AACjC,mBAAK,MAAM,cAAa;YAC5B,WAAW,UAAU,WAAW;AAC5B,mBAAK,UAAU,KAAK,WAAW;YACnC,WACS,UAAU,iBAAiB;AAChC,mBAAK,mBAAmB,KAAK,WAAW;YAC5C,WACS,UAAU,YAAY;AAC3B,mBAAK,eAAe,KAAK,WAAW;YACxC;AACA;UACJ;AAAC;MAIL;AACA;IACJ;AAEA,SAAK,eAAc;AACnB,YAAQ,KAAK,MAAM;MACf,KAAK;AAAa;AACd,cAAI,UAAU,aAAa;AACvB,iBAAK,YAAY,KAAK,QAAQ;UAClC,WACS,UAAU,aAAa;AAC5B,iBAAK,YAAY,KAAK,QAAQ;AAC9B,iBAAK,aAAa,KAAK,IAAI;AAC3B,gBAAI,QAAmB;cACnB,MAAK;cACL,MAAK,KAAK;cACV,MAAK,KAAK;;AAEV,iBAAK,aAAa,KAAK,KAAK;UACpC;AAEA;QACJ;AAAC;MACD,KAAK;AAAU;AACX,cAAI,UAAU,aAAa;AACvB,iBAAK,YAAY,KAAK,QAAQ;UAClC,WACS,UAAU,UAAU;AACzB,gBAAI,OAAO,EAAE,YAAY,KAAK,UAAU,YAAY,KAAK,SAAQ;AACjE,iBAAK,iBAAiB,IAAI;UAC9B,WACS,UAAU,gBAAgB;AAC/B,iBAAK,eAAe,KAAK,UAAU,KAAK,QAAQ;AAChD,iBAAK,aAAa,KAAK,IAAI;AACvB,gBAAI,QAAmB;cACvB,MAAK;cACL,MAAK,KAAK;cACV,MAAK,KAAK;;AAEV,iBAAK,aAAa,KAAK,KAAK;UACpC;AAEA;QACJ;AAAC;MAED,KAAK;AAAa;AACd,cAAI,UAAU,aAAa;AACvB,gBAAI,OAAO,EAAE,YAAY,KAAK,UAAU,YAAY,KAAK,UAAU,kBAAkB,KAAK,YAAW;AACrG,iBAAK,oBAAoB,IAAI;UACjC,WACS,UAAU,gBAAgB;AAE/B,gBAAI,KAAK,wBAAwB,IAAI,GAAG;AACpC,kBAAI,OAAO,EAAE,YAAY,KAAK,UAAU,YAAY,KAAK,UAAU,kBAAkB,KAAK,aAAa,qBAAqB,KAAK,kBAAiB;AAClJ,mBAAK,iBAAiB,IAAI;AAC1B,mBAAK,aAAa,KAAK,IAAI;AAC3B,kBAAI,QAAmB;gBACnB,MAAK;gBACL,MAAK,KAAK;gBACV,MAAK,KAAK;;AAEV,mBAAK,aAAa,KAAK,KAAK;YACpC,OAEA;AACI,kBAAI,OAAO,EAAE,YAAY,KAAK,UAAU,YAAY,KAAK,UAAU,kBAAkB,KAAK,aAAa,qBAAqB,KAAK,kBAAiB;AAClJ,mBAAK,uBAAuB,IAAI;AAChC,mBAAK,aAAa,KAAK,IAAI;AAC3B,kBAAI,QAAmB;gBACnB,MAAK;gBACL,MAAK,KAAK;gBACV,MAAK,KAAK;;AAEV,mBAAK,aAAa,KAAK,KAAK;YACpC;UAEJ;AACA;QACJ;AAAC;MACD,KAAK;AAAmB;AACpB,cAAI,UAAU,aAAa;AACvB,gBAAI,OAAO,EAAE,YAAY,KAAK,UAAU,YAAY,KAAK,UAAU,kBAAkB,KAAK,YAAW;AACrG,iBAAK,oBAAoB,IAAI;UACjC,WACS,UAAU,gBAAgB;AAC/B,gBAAI,OAAO,EAAE,YAAY,KAAK,UAAU,YAAY,KAAK,UAAU,kBAAkB,KAAK,aAAa,qBAAqB,KAAK,kBAAiB;AAClJ,iBAAK,uBAAuB,IAAI;AAChC,iBAAK,aAAa,KAAK,IAAI;AAC3B,gBAAI,QAAmB;cACnB,MAAK;cACL,MAAK,KAAK;cACV,MAAK,KAAK;;AAEV,iBAAK,aAAa,KAAK,KAAK;UAEpC,WACS,UAAU,aAAa;AAC5B,gBAAI,OAAO,EAAE,YAAY,KAAK,UAAU,YAAY,KAAK,UAAU,kBAAkB,KAAK,aAAa,qBAAqB,KAAK,kBAAiB;AAClJ,iBAAK,iBAAiB,IAAI;AAC1B,iBAAK,aAAa,KAAK,IAAI;AAC3B,gBAAI,QAAmB;cACnB,MAAK;cACL,MAAK,KAAK;cACV,MAAK,KAAK;;AAEV,iBAAK,aAAa,KAAK,KAAK;UACpC;AACA;QACJ;AAAC;IAGL;EACJ;EAGJ,wBAAwB,MAAS;AAC/B,UAAM,OAAO,KAAK;AAClB,WAAO,KAAK,QAAQ,KAAK,CAAC,WAAgB,KAAK,wBAAwB,MAAM,CAAC;EAChF;EAEQ,wBAAwB,QAAW;AACzC,QAAI,CAAC,OAAO;AAAM,aAAO;AAEzB,WAAO,OAAO,KAAK,KAAK,CAAC,QAAY;AACnC,YAAM,gBAAgB,IAAI,WAAW,CAAA;AACrC,aAAO,KAAK,mBAAmB,aAAa;IAC9C,CAAC;EACH;EAEQ,mBAAmB,eAAoB;AAC7C,WAAO,cAAc,KAAK,CAAC,cAAkB;AAC3C,YAAM,eAAe,cAAc,WAAW;AAC9C,YAAM,aAAa,UAAU,WAAW,UAAU,QAAQ,SAAS;AACnE,aAAO,CAAC,cAAc;IACxB,CAAC;EACH;EAQI,aAAa,QAAM;AACf,SAAK,eAAe,KAAK,IAAI;EACjC;EACF,iBAAc;AACZ,SAAK,iBAAiB,KAAK,IAAI;EACjC;EACA,WAAW,OAAK;AACd,UAAM,gBAAe;AACrB,SAAK,gBAAgB,UAAQ,KAAK;AAClC,SAAK,kBAAkB,UAAQ,KAAK,KAAK;AACzC,SAAK,oBAAmB;AACxB,QAAG,CAAC,KAAK,oBAAmB;AAC1B,UAAI,SAAO,CAAA;AACT,UAAI,aAAW;QAAC,UAAS;QACvB,SAAQ;;IAEZ;AACA,QAAI,QAAmB;MACvB,MAAK;MACL,MAAK,KAAK;MACV,MAAK,KAAK;;AAGR,SAAK,aAAa,KAAK,KAAK;EAChC;EACA,WAAW,OAAO,aAAa,IAAI,MAAK;AACpC,UAAM,gBAAe;AACrB,SAAK,sBAAsB,EAAE;AAC7B,SAAK,gBAAgB;AAErB,QAAI,QAAsB;MACtB,MAAM;MACN,MAAM,KAAK;MACX,MAAM;MACN,OAAO,KAAK;;AAGhB,SAAK,aAAa,KAAK,KAAK;AAC5B,QAAI,MAAM;AACN,WAAK,mBAAmB,OAAO,MAAM,EAAE;IAC3C;AACA,eAAW,MAAK;AACZ,UAAI,KAAK,eAAe;AACtB,cAAM,UAAU,SAAS,eAAe,KAAK,aAAa;AAC1D,YAAI,SAAS;AACX,gBAAM,UAAU,QAAQ,sBAAqB;AAC7C,eAAK,oBAAoB,OAAO,QAAQ;AACxC,eAAK,oBAAoB,QAAQ,QAAQ;AACzC,eAAK,oBAAoB,MAAM,QAAQ;AACvC,eAAK,oBAAoB,SAAS,QAAQ;AAC1C,eAAK,oBAAoB,QAAQ,QAAQ;AACzC,eAAK,oBAAoB,SAAS,QAAQ;AAC1C,eAAK,oBAAoB,UAAU,QAAQ,OAAQ,QAAQ,QAAQ;AACnE,eAAK,oBAAoB,UAAU,QAAQ;AAC3C,eAAK,oBAAoB,0BAA0B,KAAK,oBAAoB;AAC5E,eAAK,oBAAoB,0BAA0B,KAAK,oBAAoB;AAC5E,eAAK,0BAA0B,IAAI,oBAAmB;AACtD,eAAK,0BAA0B,KAAK;QACtC;MACF;IACF,GAAG,CAAC;EAEV;EAEA,mBAAmB,OAAY,YAAiB,IAAW;AACvD,QAAI,KAAK,UAAU;AACf,WAAK,aAAa,gBAAgB,IAAI;AACtC;IACJ;AACA,SAAK,gBAAgB;AACrB,UAAM,gBAAe;AACrB,SAAK,aAAa,KAAK,IAAI;AAC3B,SAAK,aAAa,mBAAmB;MACjC,UAAU,KAAK,KAAK;MACpB,iBAAiB,KAAK;KACzB;AAED,SAAK,yBAAyB,OAAO,YAAY,EAAE;AACnD,SAAK,qBAAqB,OAAO,UAAU;EAC/C;EAKA,cAAc,OAAO,aAAa,IAAE;AAChC,UAAM,gBAAe;AACrB,SAAK,gBAAgB;AAErB,QAAI,QAAsB;MACtB,MAAM;MACN,MAAM,KAAK;MACX,MAAM;MACN,OAAO,KAAK;;AAGhB,SAAK,aAAa,KAAK,KAAK;EAChC;EACA,iBAAiB,OAAO,aAAa,IAAE;AACnC,UAAM,gBAAe;AACrB,SAAK,gBAAgB;AAErB,QAAI,QAAsB;MACtB,MAAM;MACN,MAAM,KAAK;MACX,MAAM;MACN,OAAO,KAAK;;AAGhB,SAAK,aAAa,KAAK,KAAK;EAChC;EACA,qBAAqB,OAAO,IAAO;AAC/B,UAAM,gBAAe;AACrB,YAAQ,IAAI,KAAK;AACjB,QAAI,SAAS,SAAS,eAAe,eAAe,EAAE;AACtD,UAAM,cAAc,OAAO,eAAe,eAAe,OAAO;AAChE,UAAM,WAAW,OAAO;AACxB,QAAI,QAAQ,KAAK,MAAO,WAAW,cAAe,GAAG;AACrD,eAAW,MAAK;AACZ,UAAIC,UAAS,SAAS,eAAe,eAAe,EAAE;AACtD,MAAAA,QAAO,MAAM,QAAQ,GAAG,KAAK;AAC7B,cAAQ,IAAIA,QAAO,MAAM,KAAK;IAElC,GAAG,GAAG;EAGV;EACA,cAAc,OAAO,gBAAc;AAC/B,UAAM,gBAAe;AACrB,QAAI,QAAsB;MACtB,MAAM;MACN,MAAM,KAAK;MACX,MAAM;MACN,OAAO,KAAK;;AAGhB,SAAK,aAAa,KAAK,KAAK;EAEhC;EACA,sBAAmB;AACf,QAAI,YAAY,SAAS,iBAAiB,mBAAmB;AAE7D,cAAU,QACN,UAAO;AACH,WAAK,UAAU,OAAO,kBAAkB;IAM5C,CAAC;EACT;EAEA,iBAAc;AACV,SAAK,eAAc;EACvB;;;uCAr/DS,yBAAsB,4BAAA,qBAAA,GAAA,4BAAAC,WAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,UAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,QAAA,CAAA;IAAA;EAAA;;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,WAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAYpB,sBAAoB,CAAA;;;;;;;;;;;;AAZtB,QAAA,qBAAA,UAAA,SAAA,mDAAA;AAAA,iBAAA,IAAA,eAAA;QAAgB,GAAA,OAAA,yBAAA;;;;;;AC9B7B,QAAA,yBAAA,GAAA,OAAA,CAAA;AASE,QAAA,qBAAA,QAAA,SAAA,oDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAQ,IAAA,QAAA,MAAA,CAAe;QAAA,CAAA,EAAC,YAAA,SAAA,wDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBACZ,IAAA,WAAA,MAAA,CAAkB;QAAA,CAAA,EAAC,cAAA,SAAA,4DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,IAAA,UACH,IAAI;QAAA,CAAA,EAAC,cAAA,SAAA,4DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,IAAA,UACL,KAAK;QAAA,CAAA;AAEjC,QAAA,yBAAA,GAAA,OAAA,CAAA;AAA6B,QAAA,qBAAA,SAAA,SAAA,qDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,iBAAA,MAAA,CAAwB;QAAA,CAAA,EAAC,WAAA,SAAA,uDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAa,IAAA,UAAA,MAAA,CAAiB;QAAA,CAAA,EAAC,aAAA,SAAA,2DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,kBAAA,IAAA,IAAA;QAAA,CAAA,EAExD,YAAA,SAAA,0DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,kBACN,IAAI;QAAA,CAAA,EAAC,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAC1B,IAAA,QAAA,CAAS;QAAA,CAAA,EAAC,QAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBACX,IAAA,OAAA,CAAQ;QAAA,CAAA;AAEhB,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAsB,GAAA,SAAA,CAAA;AAGlB,QAAA,oBAAA,GAAA,KAAA,CAAA;AACA,QAAA,qBAAA,GAAA,wCAAA,GAAA,GAAA,QAAA,CAAA;AACC,QAAA,iBAAA,CAAA;AACH,QAAA,uBAAA,EAAQ;AAIV,QAAA,oBAAA,GAAA,OAAA,EAAA;AAIF,QAAA,uBAAA;AAEA,QAAA,qBAAA,GAAA,uCAAA,GAAA,GAAA,OAAA,EAAA;AAkPA,QAAA,uBAAA,CAAA;AAEA,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA,EAA2E,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA,EAIA,IAAA,gDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAQ5B,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA,EA4C5C,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA;AA8DL,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,mBAAA,EAAA;AAIc,QAAA,qBAAA,uBAAA,SAAA,gFAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAuB,IAAA,mBAAA,MAAA,CAA0B;QAAA,CAAA;AAIhD,QAAA,uBAAA;AAEH,QAAA,yBAAA,IAAA,yBAAA,EAAA;AAGC,QAAA,qBAAA,qBAAA,SAAA,oFAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAsB,IAAA,kBAAA,MAAA,CAAyB;QAAA,CAAA;AAG9C,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,yBAAA,EAAA;AAKD,QAAA,qBAAA,kBAAA,SAAA,iFAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAmB,IAAA,eAAA,MAAA,CAAsB;QAAA,CAAA;AAExC,QAAA,uBAAA,EAAwB;AAM3C,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;;;AA3aE,QAAA,sBAAA,sBAAA,CAAA,IAAA,YAAA,IAAA,KAAA,SAAA,WAAA,EAAmE,oBAAA,CAAA,IAAA,YAAA,IAAA,KAAA,SAAA,WAAA;AAEnE,QAAA,gCAAA,MAAA,UAAA,IAAA,KAAA;AANF,QAAA,qBAAA,WAAA,IAAA,kBAAA,UAAA,IAAA,KAAA,CAAA,EAA4C,WAAA,IAAA,KAAA;AAarC,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,WAAA;AAWQ,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,YAAA,IAAA,SAAA,WAAA;AACN,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,OAAA,GAAA;AAWqC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,IAAA;AAoPZ,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,YAAA,IAAA,KAAA,QAAA,WAAA;AAIA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,YAAA,IAAA,KAAA,QAAA,WAAA;AAmD7B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,YAAA,IAAA,KAAA,SAAA,WAAA;AA8BE,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,YAAA,IAAA,KAAA,SAAA,WAAA;AAoCY,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,UAAA,IAAA,eAAA,EAA0B,sBAAA,IAAA,eAAA,EACY,uBAAA,IAAA,mBAAA,EACK,YAAA,IAAA,QAAA,EAErB,iBAAA,IAAA,aAAA,EACU,cAAA,IAAA,UAAA;AAIX,QAAA,oBAAA;AAAA,QAAA,qBAAA,sBAAA,IAAA,eAAA,EAAsC,uBAAA,IAAA,mBAAA,EAChB,mBAAA,IAAA,mBAAA;AAOpB,QAAA,oBAAA;AAAA,QAAA,qBAAA,sBAAA,IAAA,eAAA,EAAsC,uBAAA,IAAA,mBAAA,EAClB,mBAAA,IAAA,uBAAA,EACA,gBAAA,IAAA,oBAAA,UAAA,EACK,QAAA,IAAA,IAAA;;sBD1YrD,SAAS,SAAS,eAAe,MAAM,SAAO,wBAA0B,cAAc,YAAY,gBAAgB,sBAAsB,0BAA0B,iBAAiB,GAAA,QAAA,CAAA,6vcAAA,EAAA,CAAA;EAAA;;;6EAEpL,wBAAsB,EAAA,WAAA,0BAAA,UAAA,6GAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AE1B7B,IAAO,8BAAP,MAAO,6BAA2B;EAWtC,YAA6B,IAAc;AAAd,SAAA,KAAA;AAVpB,SAAA,qBAAqB;AACrB,SAAA,oBAAoB;AACnB,SAAA,eAAe,IAAI,aAAY;AAEjC,SAAA,WAAW;AACX,SAAA,eAAwC;AACxC,SAAA,SAAS;AACT,SAAA,aAAa;AACb,SAAA,YAAY;AAGlB,UAAM,2BAA2B,MAAO,SAAS,KAAK,MAAM,gBAAgB;AAC5E,UAAM,2BAA2B,MAAO,SAAS,KAAK,MAAM,gBAAgB;AAE5E,UAAM,YAAY,CAAC,QAAmB;AACpC,UAAI,CAAC,KAAK,YAAY,CAAC,KAAK;AAAc;AAE1C,YAAM,SAAS,IAAI,UAAU,KAAK;AAClC,YAAM,WAAW,KAAK,GAAG;AACzB,YAAM,WAAW,SAAS;AAE1B,UAAI,WAAW,KAAK;AAEpB,UAAI,KAAK,iBAAiB,SAAS;AACjC,oBAAY;MACd,WAAW,KAAK,iBAAiB,QAAQ;AACvC,oBAAY;AACZ,cAAM,UAAU,KAAK,YAAY;AAEjC,YAAI,YAAY,KAAK,qBAAqB,WAAW,GAAG;AACtD,mBAAS,MAAM,OAAO,GAAG,OAAO;QAClC;MACF;AAEA,YAAM,cAAc,SAAS;AAC7B,iBAAW,KAAK,IAAI,KAAK,mBAAmB,KAAK,IAAI,UAAU,WAAW,CAAC;AAE3E,YAAM,kBAAmB,WAAW,cAAe;AACnD,eAAS,MAAM,QAAQ,GAAG,eAAe;AAEzC,UAAI,gBAAe;IACrB;AAEA,UAAM,UAAU,CAAC,QAAmB;AAClC,UAAI,CAAC,KAAK;AAAU;AACpB,+BAAwB;AACxB,WAAK,WAAW;AAChB,WAAK,eAAe;AAEpB,YAAM,eAAe,KAAK,GAAG,cAAc,MAAM;AACjD,WAAK,aAAa,KAAK,YAAY;AACnC,UAAI,gBAAe;IACrB;AAEA,UAAM,YAAY,CAAC,QAAmB;AACpC,YAAM,OAAO,KAAK,aAAa,GAAG;AAClC,UAAI,MAAM;AACR,aAAK,WAAW;AAChB,aAAK,eAAe;AACpB,aAAK,SAAS,IAAI;AAClB,aAAK,aAAa,KAAK,GAAG,cAAc;AACxC,aAAK,YAAY,KAAK,GAAG,cAAc;AACvC,iCAAwB;AACxB,YAAI,gBAAe;MACrB;IACF;AAEA,UAAM,kBAAkB,CAAC,QAAmB;AAC1C,YAAM,OAAO,KAAK,aAAa,GAAG;AAClC,WAAK,GAAG,cAAc,MAAM,SAAS,OAAO,eAAe;IAC7D;AAEA,aAAS,iBAAiB,aAAa,WAAW,IAAI;AACtD,aAAS,iBAAiB,WAAW,SAAS,IAAI;AAClD,SAAK,GAAG,cAAc,iBAAiB,aAAa,WAAW,IAAI;AACnE,SAAK,GAAG,cAAc,iBAAiB,aAAa,iBAAiB,IAAI;EAC3E;EAEQ,aAAa,KAAe;AAClC,UAAM,SAAS,KAAK,GAAG,cAAc,sBAAqB;AAC1D,UAAM,UAAU,IAAI,UAAU,OAAO;AACrC,QAAI,UAAU,KAAK,oBAAoB;AACrC,aAAO;IACT,WAAW,UAAU,KAAK,GAAG,cAAc,cAAc,KAAK,oBAAoB;AAChF,aAAO;IACT;AACA,WAAO;EACT;;;uCAxFW,8BAA2B,4BAAA,UAAA,CAAA;IAAA;EAAA;;yEAA3B,8BAA2B,WAAA,CAAA,CAAA,IAAA,gBAAA,EAAA,CAAA,GAAA,QAAA,EAAA,oBAAA,sBAAA,mBAAA,oBAAA,GAAA,SAAA,EAAA,cAAA,eAAA,GAAA,YAAA,KAAA,CAAA;EAAA;;;;;;;AdqEtB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,sBAAA,EAAA;AAA4F,IAAA,qBAAA,gBAAA,SAAA,2JAAA,QAAA;AAAA,YAAA,eAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAgB,OAAA,aAAA,QAAA,YAAA,CAA8B;IAAA,CAAA,EAAC,aAAA,SAAA,wJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAS5H,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,WAAA,SAAA,sJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACtB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,aAAA,SAAA,wJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAChB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,aAAA,SAAA,wJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAClB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,eAAA,SAAA,0JAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAChB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,sBAAA,SAAA,iKAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACb,OAAA,mBAAA,MAAA,CAA0B;IAAA,CAAA,EAAC,kBAAA,SAAA,6JAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC/B,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,gBAAA,SAAA,2JAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACrB,OAAA,aAAA,MAAA,CAAoB;IAAA,CAAA,EAAC,wBAAA,SAAA,mKAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACb,OAAA,qBAAA,MAAA,CAA4B;IAAA,CAAA,EAAC,kBAAA,SAAA,6JAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACnC,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,wBAAA,SAAA,mKAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACV,OAAA,qBAAA,MAAA,CAA4B;IAAA,CAAA,EAAC,gBAAA,SAAA,2JAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACrC,OAAA,gBAAA,MAAA,CAAuB;IAAA,CAAA,EAAC,eAAA,SAAA,0JAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAEzB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,oBAAA,SAAA,+JAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAGf,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA,EAAC,aAAA,SAAA,wJAAA,QAAA;AAAA,YAAA,eAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAIhC,OAAA,mBAAA,QAAA,YAAA,CAAoC;IAAA,CAAA,EAAC,WAAA,SAAA,sJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACvC,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA,EAAC,YAAA,SAAA,uJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,iBAAA,wBAAA,EAAA;AAAA,YAAA,UAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACxB,OAAA,iBAAA,gBAAA,QAAA,QAAA,IAAA,CAAgD;IAAA,CAAA,EAAC,cAAA,SAAA,yJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC/C,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,QAAA,SAAA,mJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC1B,OAAA,gBAAA,MAAA,CAAuB;IAAA,CAAA,EAAC,aAAA,SAAA,wJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAEnB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,YAAA,SAAA,uJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACpB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,SAAA,SAAA,oJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAEtB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,QAAA,SAAA,mJAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACtB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA;AAG5B,IAAA,uBAAA;;;;;;;AArCE,IAAA,oBAAA;AAAA,IAAA,iCAAA,MAAA,wBAAA,gBAAA,EAAA;AALmB,IAAA,qBAAA,sBAAA,EAAA,EAAyB,gBAAA,OAAA,YAAA,EAA+B,WAAA,OAAA,cAAA,YAAA,CAAA,EACvC,SAAA,aAAA,WAAA,EACL,QAAA,YAAA,EACb,uBAAA,OAAA,GAAA,YAAA,WAAA,EACgC,YAAA,OAAA,QAAA,EAE7B,UAAA,aAAA,QAAA,OAAA,GAAA,gBAAA,OAAA,OAAA,OAAA,GAAA,aAAA,GAAA,EAC0B,UAAA,OAAA,GAAA,YAAA,UAAA,aAAA,MAAA,EACK,2BAAA,OAAA,WAAA,EAab,yBAAA,OAAA,qBAAA,EAEQ,kBAAA,OAAA,cAAA,EACd,QAAA,OAAA,OAAA,EAEjB,kBAAA,OAAA,cAAA,EAQiB,mBAAA,OAAA,eAAA,EAGG,2BAAA,OAAA,uBAAA;;;;;AAvC1C,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,iHAAA,GAAA,IAAA,gBAAA,CAAA;;;;;;AAAe,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA,YAAA,YAAA,cAAA,CAAA;;;;;AAFnB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,kGAAA,GAAA,GAAA,gBAAA,CAAA;AA+CF,IAAA,uBAAA;;;;;AA/CwC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,wBAAA,QAAA,MAAA,CAAA,EAAyC,gBAAA,OAAA,aAAA;;;;;;AA9CzF,IAAA,kCAAA,CAAA;AACM,IAAA,yBAAA,GAAA,sBAAA,CAAA;AAA4F,IAAA,qBAAA,gBAAA,SAAA,uHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,UAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAgB,OAAA,aAAA,QAAA,OAAA,CAAyB;IAAA,CAAA,EAAC,aAAA,SAAA,oHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBASvH,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,WAAA,SAAA,kHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACtB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,aAAA,SAAA,oHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAChB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,aAAA,SAAA,oHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAClB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,eAAA,SAAA,sHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAChB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,sBAAA,SAAA,6HAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACb,OAAA,mBAAA,MAAA,CAA0B;IAAA,CAAA,EAAC,kBAAA,SAAA,yHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC/B,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,gBAAA,SAAA,uHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACrB,OAAA,aAAA,MAAA,CAAoB;IAAA,CAAA,EAAC,wBAAA,SAAA,+HAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACb,OAAA,qBAAA,MAAA,CAA4B;IAAA,CAAA,EAAC,kBAAA,SAAA,yHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACnC,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,wBAAA,SAAA,+HAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACV,OAAA,qBAAA,MAAA,CAA4B;IAAA,CAAA,EAAC,gBAAA,SAAA,uHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACrC,OAAA,gBAAA,MAAA,CAAuB;IAAA,CAAA,EAAC,eAAA,SAAA,sHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAEzB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,oBAAA,SAAA,2HAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAGf,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA,EAAC,aAAA,SAAA,oHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,UAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAKhC,OAAA,cAAA,QAAA,OAAA,CAA0B;IAAA,CAAA,EAAC,WAAA,SAAA,kHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC7B,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,YAAA,SAAA,mHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,UAAA,wBAAA,EAAA;AAAA,YAAA,YAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACjB,OAAA,UAAA,WAAA,QAAA,QAAA,IAAA,CAAmC;IAAA,CAAA,EAAC,QAAA,SAAA,+GAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACxC,OAAA,oBAAA,MAAA,CAA2B;IAAA,CAAA,EAAC,aAAA,SAAA,oHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAGvB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,YAAA,SAAA,mHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACrB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,sBAAA,SAAA,6HAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACT,OAAA,mBAAA,MAAA,CAA0B;IAAA,CAAA,EAAC,SAAA,SAAA,gHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAExC,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,QAAA,SAAA,+GAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACrB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA;AAG1B,IAAA,qBAAA,GAAA,mFAAA,GAAA,GAAA,OAAA,CAAA;AAiDF,IAAA,uBAAA;;;;;;;AAxFE,IAAA,oBAAA;AAAA,IAAA,iCAAA,MAAA,wBAAA,WAAA,EAAA;AALmB,IAAA,qBAAA,sBAAA,EAAA,EAAyB,gBAAA,OAAA,YAAA,EAA+B,WAAA,OAAA,SAAA,OAAA,CAAA,EACjD,SAAA,QAAA,WAAA,EACA,QAAA,OAAA,EACb,uBAAA,OAAA,GAAA,YAAA,WAAA,EACqC,YAAA,OAAA,QAAA,EAE7B,UAAA,QAAA,QAAA,OAAA,GAAA,gBAAA,OAAA,OAAA,OAAA,GAAA,aAAA,GAAA,EACqB,UAAA,OAAA,GAAA,YAAA,UAAA,QAAA,MAAA,EACK,2BAAA,OAAA,WAAA,EAaR,yBAAA,OAAA,qBAAA,EAEQ,kBAAA,OAAA,cAAA,EACd,QAAA,OAAA,OAAA,EAEjB,aAAA,EAAA,OAAA,mBAAA,OAAA,mBAAA,OAAA,YAAA,OAAA,YAAA,YAAA,EAE0E,eAAA,OAAA,wBAAA,QAAA,MAAA,EAAA,SAAA,CAAA,EAO3B,mBAAA,OAAA,eAAA,EAI5B,2BAAA,OAAA,uBAAA;AAKsB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,wBAAA,QAAA,MAAA,EAAA,SAAA,CAAA;;;;;AA9CnE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,6EAAA,GAAA,IAAA,gBAAA,CAAA;;;;;;AAAe,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,qBAAA,OAAA,CAAA;;;;;AAFnB,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,8DAAA,GAAA,GAAA,gBAAA,CAAA;;;;;;AAAe,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA,YAAA,YAAA,SAAA,CAAA;;;;;;AAsGnB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwC,GAAA,OAAA,EAAA;AAEtC,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,CAAS;IAAA,CAAA,EAAC,eAAA,SAAA,gEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACJ,OAAA,aAAA,MAAA,CAAoB;IAAA,CAAA,EAAC,WAAA,SAAA,4DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACzB,OAAA,cAAA,MAAA,CAAqB;IAAA,CAAA;AAE5B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyF,GAAA,OAAA,EAAA,EACO,GAAA,KAAA,EAAA;AAClD,IAAA,iBAAA,GAAA,8BAAA;AAA4B,IAAA,uBAAA,EAAI,EACpE,EACJ,EACJ;;;;;;AAGR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyC,GAAA,OAAA,EAAA;AAEzC,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA,EAAC,WAAA,SAAA,4DAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACb,OAAA,cAAA,MAAA,CAAqB;IAAA,CAAA;AAE5B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyF,GAAA,OAAA,EAAA,EACa,GAAA,KAAA,EAAA;AACxD,IAAA,iBAAA,GAAA,8BAAA;AAA4B,IAAA,uBAAA,EAAI,EACpE,EACJ,EACJ;;;;;;AAkBJ,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAIE,IAAA,qBAAA,SAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,QAAA,CAAiB;IAAA,CAAA;AAE1B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA0C,IAAA,qBAAA,SAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AACjE,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;;;;AAXF,IAAA,qBAAA,GAAA,6DAAA,GAAA,GAAA,gBAAA,CAAA;AAaA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,QAAA,CAAwB;IAAA,CAAA;AAGjC,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,QAAA,CAAe;IAAA,CAAA;AAC7C,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;AAtBe,IAAA,qBAAA,QAAA,CAAA,OAAA,QAAA;;;AD7GX,IAAO,wBAAP,MAAO,uBAAqB;;EA0C9B,IACI,KAAK,MAAU;AACf,SAAK,QAAQ;EACjB;EACA,IAAI,OAAI;AACJ,WAAO,KAAK;EAChB;EAEA,IACI,SAAS,UAAiB;AAC1B,SAAK,YAAY;EACrB;EACA,IAAI,WAAQ;AACR,WAAO,KAAK;EAChB;EAuBA,YACY,OACA,KACA,OACA,IACA,cACS,OACT,YACS,OAAwB;AAPjC,SAAA,QAAA;AACA,SAAA,MAAA;AACA,SAAA,QAAA;AACA,SAAA,KAAA;AACA,SAAA,eAAA;AACS,SAAA,QAAA;AACT,SAAA,aAAA;AACS,SAAA,QAAA;AAtFb,SAAA,YAAY;AAEH,SAAA,mBAAmB;AACnB,SAAA,eAAe;AAChC,SAAA,gBAA+B;AAC/B,SAAA,eAA8B;AAC9B,SAAA,kBAAkB;AAKlB,SAAA,uBAAuB;AACvB,SAAA,kBAAkB;AAClB,SAAA,oBAAoB;AAEpB,SAAA,kBAAmB;AACnB,SAAA,6BAA8B;AAC9B,SAAA,kBAAkB;AACR,SAAA,iBAAiB,IAAI,aAAY;AACjC,SAAA,sBAAsB,IAAI,aAAY;AACtC,SAAA,sBAAsB,IAAI,aAAY;AACtC,SAAA,aAAa,IAAI,aAAY;AAC7B,SAAA,mBAAmB,IAAI,aAAY;AAE7C,SAAA,iBAAiB,CAAA;AACjB,SAAA,eAAe;AAIE,SAAA,WAAW,IAAI,QAAO;AAC/B,SAAA,kBAAkB;AAClB,SAAA,sBAA+B;AAEvC,SAAA,gBAAgB;AAuBP,SAAA,gBAAgB,OAAO,OAAOC,KAAI,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,YAAW,EAAG,cAAc,EAAE,KAAK,YAAW,CAAE,CAAC;AAC3G,SAAA,gBAAgB,OAAO,OAAO,UAAU;AAEzC,SAAA,YAAY;AAMpB,SAAA,OAAuB,CAAA;AAEvB,SAAA,aAAa;AACb,SAAA,aAA4B;AAC5B,SAAA,SAAS;AACT,SAAA,aAAa;AAEb,SAAA,UAAmB;AAGX,SAAA,cAAc;AACrB,SAAA,sBAAoB,CAAA;AACb,SAAA,mBAAkC;AAWtC,SAAK,aAAa,aAAY,EAAG,UAAU,UAAO;AAC9C,WAAK,aAAa,IAAI;IAC1B,CAAC;AAED,SAAK,aAAa,gBAAe,EAAG,UAAU,UAAO;AACjD,WAAK,aAAY;IACrB,CAAC;AAED,SAAK,aAAa,gBAAe,EAAG,UAAU,UAAO;AACjD,UAAI,MAAM;AACN,aAAK,eAAe;MACxB;IACJ,CAAC;AACD,SAAK,aAAa,kBAAiB,EAAG,UAAU,UAAO;AACnD,cAAQ,IAAI,IAAI;AAChB,WAAK,eAAe;AACpB,WAAK,eAAe;AACpB,WAAK,eAAe;IAExB,CAAC;EACL;EAGA,WAAQ;AACJ,SAAK,gBAAe;EACxB;EACA,wBAAqB;AACjB,SAAK,MAAM,cAAa;EAC5B;EACA,YAAY,SAAsB;AAC9B,QAAI,QAAQ,aAAa,gBAAgB,QAAQ,YAAY,iBAAiB,QAAQ,YAAY,eAAe;AAC9G,WAAK,GAAG,YAAY,WAAW,QAAQ,YAAY,aAAa;AAC/D,WAAK,GAAG,eAAe,QAAQ,YAAY;AAC3C,WAAK,gBAAe;IACxB;AACA,QAAI,QAAQ,gBAAgB,QAAQ,aAAa,gBAAgB,MAAM;AACnE,WAAK,eAAe;IACxB;AACA,SAAK,oBAAoB,KAAK,KAAK,YAAY;AAC/C,SAAK,oBAAoB,KAAK,KAAK,YAAY;AAE/C,QAAI,KAAK,wBAAwB;AAC7B,WAAK,cAAc,KAAK;IAC5B;EACJ;EAEE,UAAU,QAAM;AACd;EACF;EACA,kBAAe;AACb,SAAK,sBAAsB,CAAA;AAC3B,UAAM,gBAAyC,CAAA;AAC/C,UAAM,eAAe,KAAK,IAAI,aAAa,YAAY,CAAA;AACvD,UAAM,cAAc,KAAK,IAAI,aAAa,eAAe,CAAA;AAGzD,eAAW,YAAY,cAAc;AACjC,YAAM,OAAO,YAAY,QAAQ;AACjC,UAAI,MAAM;AACN,sBAAc,KAAK;UACf,WAAW,KAAK;UAChB,OAAO,KAAK;UACZ,WAAW,CAAC,CAAC,KAAK;UAClB,aAAa,KAAK;SACrB;MACL;IACJ;AAGA,kBAAc,KAAK,CAAC,GAAG,MAAK;AACxB,UAAI,EAAE,cAAc,EAAE,WAAW;AAC7B,eAAO,EAAE,YAAY,IAAI;MAC7B;AACA,aAAO,EAAE,YAAY,EAAE;IAC3B,CAAC;AAGD,SAAK,sBAAsB,cAAc,IAAI,UAAQ,KAAK,KAAK;AAC/D,SAAK,iBAAiB,KAAK,KAAK,EAAE;EACtC;EACE,YAAY,OAAiB;AAC3B,UAAM,SAAS,MAAM;AACrB,QAAI,OAAO,QAAQ,aAAa,GAAG;AACjC,WAAK,cAAa;AAClB,YAAM,OAAO,OAAO,QAAQ,aAAa;AACzC,YAAM,YAAY,KAAK,cAAc,gBAAgB;AACrD,UAAI,WAAW;AACZ,kBAA0B,MAAM,UAAU;MAC7C;AACA;IACF;AAEA,QAAI,OAAO,QAAQ,mBAAmB,GAAG;AACvC,WAAK,cAAa;AAClB,YAAM,QAAQ,OAAO,QAAQ,mBAAmB;AAChD,YAAM,aAAa,MAAM,cAAc,cAAc;AACrD,UAAI,YAAY;AACb,mBAA2B,MAAM,UAAU;MAC9C;IACF;AAGA,QAAI,OAAO,QAAQ,qBAAqB,GAAG;AACvC,WAAK,cAAa;AAClB,YAAM,QAAQ,OAAO,QAAQ,qBAAqB;AAClD,YAAM,aAAa,MAAM,cAAc,gBAAgB;AACvD,UAAI,YAAY;AACb,mBAA2B,MAAM,UAAU;MAC9C;IACF;EACJ;EAEA,WAAW,OAAiB;AAC1B,UAAM,gBAAgB,MAAM;AAC5B,UAAM,gBAAgB,MAAM;AAC5B,QAAI,cAAc,SAAS,aAAa,GAAG;AACzC;IACF;AACA,QAAI,cAAc,UAAU,SAAS,kBAAkB,KAAK,cAAc,UAAU,SAAS,YAAY,GAAG;AAC1G,WAAK,cAAa;IACpB;EACF;EAEA,gBAAa;AACX,aAAS,iBAAiB,8BAA8B,EAAE,QAAQ,QAAK;AACpE,SAAmB,MAAM,UAAU;IACtC,CAAC;EACH;EAEF,KAAK,OAA4B;AAC7B,SAAK,MAAM,cAAa;AACxB,YAAQ,IAAI,mBAAmB,MAAM,aAAa;AAClD,YAAQ,IAAI,kBAAkB,MAAM,YAAY;AAChD,UAAM,QAAQ,KAAK,GAAG,YAAY;AAClC,QAAI,MAAM,kBAAkB,MAAM,cAAc;AAC5C;IACJ;AAEA,oBAAgB,OAAO,MAAM,eAAe,MAAM,YAAY;AAC9D,SAAK,GAAG,YAAY,WAAW,CAAC,GAAG,KAAK;AACxC,SAAK,MAAM,cAAa;EAG5B;EAEA,oBAAoB,OAAmB,cAAoB;AACvD,UAAM,gBAAgB,MAAM,OAAO;AAEnC,UAAM,QAAQ,CAAC,GAAG,KAAK,GAAG,YAAY,QAAQ;AAC9C,UAAM,eAAe,MAAM,UAAU,QAAM,OAAO,aAAa;AAC/D,UAAM,cAAc,MAAM,UAAU,QAAM,OAAO,YAAY;AAC7D,QAAI,iBAAiB,MAAM,gBAAgB;AAAI;AAC/C,UAAM,OAAO,cAAc,CAAC;AAC5B,UAAM,OAAO,aAAa,GAAG,aAAa;AAC1C,SAAK,GAAG,YAAY,WAAW;AAE/B,SAAK,MAAM,cAAa;EAC5B;EAIJ,UAAU,OAAiB;AACzB,UAAM,kBAAkB,SAAS,cAAc,YAAY;AAC3D,QAAI,EAAE,2BAA2B;AAAc;AAE/C,UAAM,gBAAgB,gBAAgB,sBAAqB;AAC3D,UAAM,SAAS,MAAM;AACrB,UAAM,YAAY;AAElB,UAAM,kBAAkB,SAAS,cAAc;AAC/C,UAAM,qBAAqB,cAAc,SAAS;AAElD,QAAI,iBAAiB;AACrB,QAAI,kBAAkB,WAAW;AAC/B,uBAAiB,CAAC,KAAK,IAAI,KAAK,YAAY,mBAAmB,CAAC;IAClE,WAAW,qBAAqB,WAAW;AACzC,uBAAiB,KAAK,IAAI,KAAK,YAAY,sBAAsB,CAAC;IACpE;AAEA,QAAI,KAAK,gBAAgB,gBAAgB;AACvC,WAAK,cAAa;AAClB,WAAK,cAAc;AACnB,UAAI,KAAK,gBAAgB,GAAG;AAC1B,aAAK,eAAe,eAAe;MACrC;IACF;EACF;EAEQ,eAAe,WAAwB,OAAc;AAC3D,UAAM,SAAS,MAAK;AAClB,gBAAU,aAAa,KAAK;AAC5B,WAAK,mBAAmB,sBAAsB,MAAM;IACtD;AACA,SAAK,mBAAmB,sBAAsB,MAAM;EACtD;EAEQ,gBAAa;AACnB,QAAI,KAAK,kBAAkB;AACzB,2BAAqB,KAAK,gBAAgB;AAC1C,WAAK,mBAAmB;IAC1B;AACA,SAAK,cAAc;EACrB;EAGM,WAAW,OAAgB;AACzB,UAAM,eAAc;AACpB,UAAM,gBAAe;AAErB,UAAM,kBAAkB,SAAS,cAAc,YAAY;AAC3D,QAAI,EAAE,2BAA2B;AAAc;AAE/C,UAAM,gBAAgB,gBAAgB,sBAAqB;AAC3D,UAAM,SAAS,MAAM;AACrB,UAAM,kBAAkB,SAAS,cAAc;AAC/C,UAAM,qBAAqB,cAAc,SAAS;AAClD,UAAM,YAAY;AAElB,oBAAgB,UAAU,OAAO,cAAc,eAAe;AAC9D,SAAK,cAAa;AAElB,QAAI,kBAAkB,WAAW;AAC7B,sBAAgB,UAAU,IAAI,YAAY;AAC1C,WAAK,eAAe,iBAAiB,EAAE;IAC3C,WAAW,qBAAqB,WAAW;AACvC,sBAAgB,UAAU,IAAI,eAAe;AAC7C,WAAK,eAAe,iBAAiB,CAAC;IAC1C;EACJ;EAGA,cAAc,OAAY,MAAQ;AAC9B,SAAK,kCAAiC;AACtC,SAAK,eAAe;AACpB,SAAK,kBAAiB;AAEtB,SAAK,eAAe,KAAK,KAAK,eAAe;AAC7C,QAAI,KAAK,aAAa;AAClB,YAAM,eAAc;AACpB;IACJ;AACA,QAAI,QAAQ;MACR,MAAM;MACN,MAAM,KAAK;MACX,aAAa,KAAK;;AAEtB,UAAM,aAAa,QAAQ,iBAAgB,KAAK,UAAU,KAAK,CAAC;AAChE,SAAK,gBAAgB,KAAK;AAC1B,UAAM,gBAAe;EACzB;EAEA,mBAAmB,OAAY,MAAQ;AACnC,SAAK,kBAAiB;AACtB,SAAK,eAAe,KAAK,KAAK,eAAe;AAC7C,QAAI,KAAK,YAAY,KAAK,YAAY,aAAa;AAC/C,YAAM,eAAc;AACpB;IACJ;AACA,SAAK,kCAAiC;AACtC,SAAK,eAAe;AACpB,QAAI,CAAC,KAAK,aAAa;AACnB,YAAM,eAAc;AACpB;IACJ;AACA,QAAI,QAAQ;MACR,MAAM;MACN,MAAM,KAAK;MACX,aAAa,KAAK;;AAEtB,UAAM,aAAa,QAAQ,iBAAgB,KAAK,UAAU,KAAK,CAAC;AAChE,SAAK,gBAAgB,KAAK;AAC1B,UAAM,gBAAe;EACzB;EAEA,oBAAoB,OAAgB;AAChC,UAAM,eAAc;EACxB;EACA,gBAAgB,OAAgB;AAC5B,UAAM,eAAc;EACxB;EAEA,mBAAmB,OAAS;AACxB,QAAG,OAAM;AACN,WAAK,gBAAgB,MAAM,MAAM;IACpC;EACJ;EACA,oCAAiC;AAC7B,aAAS,iBAAiB,YAAY,EAAE,QAAQ,WAAQ;AACtD,UAAI,iBAAiB,aAAa;AAChC,cAAM,MAAM,UAAU;MACxB;IACF,CAAC;AAED,aAAS,iBAAiB,uBAAuB,EAAE,QAAQ,WAAQ;AACjE,UAAI,iBAAiB,aAAa;AAChC,cAAM,MAAM,UAAU;MACxB;IACF,CAAC;EACH;EAIA,UAAU,OAAU;AAClB,SAAK,kBAAkB;AACvB,SAAK,eAAe,KAAK,KAAK,eAAe;AAE7C,UAAM,kBAAkB,SAAS,cAAc,YAAY;AAC3D,QAAI,2BAA2B,aAAa;AACxC,sBAAgB,UAAU,OAAO,cAAc,eAAe;IAClE;AAEA,UAAM,SAAS,MAAM;AACrB,UAAM,SAAS,MAAM;AACrB,UAAM,kBAAkB,SAAS,kBAAkB,QAAQ,MAAM;AAEjE,UAAM,gBAAgB,gBAAgB,KAAK,QAAM,GAAG,IAAI,WAAW,sBAAsB,CAAC;AAC1F,UAAM,qBAAqB,gBAAgB,KAAK,QAAM,GAAG,UAAU,SAAS,2BAA2B,CAAC;AACxG,UAAM,qBAAqB,CAAC,iBAAiB,CAAC;AAE9C,UAAM,cAAc,gBAAgB,KAAK,QAAM,GAAG,IAAI,WAAW,sBAAsB,CAAC;AAExF,QAAI,aAAa;AACb,YAAM,SAAS,YAAY,GAAG,QAAQ,wBAAwB,EAAE;AAChE,cAAQ,IAAI,qCAAqC,MAAM;AACvD,YAAM,WAAW,KAAK,GAAG,YAAY,YAAY,MAAM,EAAE;AAEzD,UAAI,aAAa,aAAa;AAC1B,aAAK,oBAAoB;MAC7B,WAAW,aAAa,UAAU;AAC9B,aAAK,kBAAkB;MAC3B;IACJ;AAEA,QAAI,oBAAoB;AACpB,WAAK,uBAAuB;IAChC;AAEA,QAAI,KAAK,iBAAiB,KAAK,cAAc;AACzC,YAAM,kBAAkB,CAAC,CAAC,KAAK;AAC/B,WAAK,SAAS,KAAK,eAAe,KAAK,cAAc,KAAK,qBAAqB,eAAe;IAClG;AAEA,UAAM,aAAa,UAAU,eAAe;AAC5C,SAAK,gBAAgB;AACrB,SAAK,eAAe;AACpB,SAAK,sBAAsB;AAC3B,SAAK,uBAAuB;AAC5B,SAAK,kBAAkB;AACvB,SAAK,oBAAoB;AACzB,SAAK,uBAAuB;AAE5B,SAAK,cAAa;EACtB;EAGA,iBAAiB,OAAgB;AAC7B,SAAK,kBAAiB;AACtB,SAAK,eAAe,KAAK,KAAK,eAAe;AAC7C,UAAM,kBAAkB,SAAS,cAAc,YAAY;AAC3D,QAAI,iBAAiB;AACjB,sBAAgB,UAAU,OAAO,cAAc,eAAe;IAClE;AACA,SAAK,kBAAkB;AACvB,UAAM,SAAS,MAAM;AACrB,UAAM,SAAS,MAAM;AACrB,UAAM,kBAAkB,SAAS,kBAAkB,QAAQ,MAAM;AACjE,UAAM,gBAAgB,gBAAgB,KAAK,QAAM,GAAG,IAAI,WAAW,sBAAsB,CAAC;AAG1F,UAAM,qBAAqB,gBAAgB,KAAK,QAAM,GAAG,UAAU,SAAS,2BAA2B,CAAC;AACxG,UAAM,qBAAqB,CAAC,iBAAiB,CAAC;AAC9C,UAAM,cAAc,gBAAgB,KAAK,QAAM,GAAG,IAAI,WAAW,sBAAsB,CAAC;AAExF,QAAI,eAAe,eAAc,QAAW;AACxC,YAAM,SAAS,YAAY,GAAG,QAAQ,wBAAwB,EAAE;AAChE,cAAQ,IAAI,qCAAqC,MAAM;AACvD,YAAM,WAAY,KAAK,GAAG,YAAY,YAAY,MAAM,EAAE;AAC1D,UAAI,aAAa,aAAY;AACzB,aAAK,oBAAoB;MAC7B;AACA,UAAI,aAAY,UAAS;AACrB,aAAK,kBAAkB;MAC3B;IACJ;AACA,QAAI,oBAAoB;AACpB,WAAK,uBAAsB;IAC/B;AAGA,QAAI,KAAK,iBAAiB,KAAK,cAAc;AACzC,YAAM,kBAAkB,CAAC,CAAC,KAAK;AAC/B,WAAK,SAAS,KAAK,eAAe,KAAK,cAAc,KAAK,qBAAqB,eAAe;IAClG;AACA,UAAM,aAAa,UAAU,eAAe;AAC5C,SAAK,gBAAgB;AACrB,SAAK,eAAe;AACpB,SAAK,sBAAsB;AAC3B,SAAK,uBAAuB;AAC5B,SAAK,kBAAiB;AACtB,SAAK,oBAAoB;AACzB,SAAK,uBAAuB;AAC5B,SAAK,cAAa;EACtB;EAEA,UAAU,QAAgB,OAAmB,eAAsB;AAC/D,SAAK,kCAAiC;AACtC,UAAM,eAAc;AACpB,UAAM,gBAAe;AACrB,QAAI,KAAK,iBAAiB,KAAK,kBAAkB,QAAQ;AACrD,WAAK,eAAe;AACpB,WAAK,sBAAsB,iBAAiB;IAChD;AAEA,SAAK,UAAU,KAAK;EACxB;EAEA,iBAAiB,QAAgB,OAAmB,eAAsB;AACtE,SAAK,kCAAiC;AACtC,UAAM,eAAc;AACpB,UAAM,gBAAe;AAErB,QAAI,KAAK,iBAAiB,KAAK,kBAAkB,QAAQ;AACrD,WAAK,eAAe;AACpB,WAAK,sBAAsB,iBAAiB;IAChD;AAEA,SAAK,iBAAiB,MAAM;AAC5B,SAAK,UAAU,KAAK;EACxB;EAEQ,iBAAiB,QAAc;AACnC,UAAM,UAAU,SAAS,eAAe,MAAM;AAC9C,QAAI,SAAS;AACT,cAAQ,UAAU,IAAI,cAAc;IACxC;EACJ;EAGA,YAAY,OAAK;AACb,UAAM,gBAAe;AACtB,QAAG,KAAK,eAAc;AACrB,UAAI,iBAAiB,MAAM;AAC3B,cAAQ,IAAI,oBAAmB,cAAc;IAC9C;EACH;EACA,gBAAgB,OAAS;AACrB,QAAG,OAAM;AACL,UAAI,KAAK,iBAAiB,KAAK,cAAc;AACzC,cAAM,kBAAkB,CAAC,CAAC,KAAK;AAC/B,aAAK,SAAS,KAAK,eAAe,KAAK,cAAc,KAAK,qBAAqB,eAAe;MAChG;IACN;EAEJ;EACA,oBAAoB,OAAS;AACzB,UAAM,eAAc;AACpB,UAAM,gBAAe;EACzB;EACA,SAAS,UAAkB,UAAkB,qBAA6B,iBAAyB;AAC/F,UAAM,QAAQ,KAAK,aAAa,UAAU,QAAQ;AAClD,SAAK,GAAG,YAAY,WAAW;AAE/B,UAAM,UAAU,KAAK,eAAc;AACnC,UAAM,SAAS,KAAK,iBAAiB,OAAO;AAC5C,SAAK,gBAAe;AACpB,QAAI,QAAQ;AACR,WAAK,iBAAiB,MAAM;IAChC;AAEA,SAAK,eAAe,UAAU,qBAAqB,eAAe;AAGlE,SAAK,MAAM,cAAa;EAC5B;EAEQ,aAAa,UAAkB,UAAgB;AACnD,UAAM,QAAQ,CAAC,GAAI,KAAK,mBAAmB;AAC3C,UAAM,cAAc,MAAM,UAAU,QAAM,OAAO,QAAQ;AACzD,UAAM,cAAc,MAAM,UAAU,QAAM,OAAO,QAAQ;AAEzD,QAAI,gBAAgB,MAAM,gBAAgB,MAAM,gBAAgB,aAAa;AACzE,aAAO;IACX;AAEA,UAAM,CAAC,SAAS,IAAI,MAAM,OAAO,aAAa,CAAC;AAC/C,UAAM,cAAc;AACpB,UAAM,OAAO,aAAa,GAAG,SAAS;AACtC,SAAK,sBAAqB;AAC1B,WAAO;EACX;EAEQ,iBAAc;AAClB,UAAM,OAAO,KAAK,GAAG;AACrB,UAAM,UAAiB,CAAA;AACvB,SAAK,oBAAoB,QAAQ,aAAU;AACvC,aAAO,OAAO,KAAK,WAAW,EAAE,QAAQ,UAAO;AAC3C,YAAI,KAAK,SAAS,SAAS;AACvB,kBAAQ,KAAK,KAAK,MAAM;QAC5B;MACJ,CAAC;IACL,CAAC;AACD,WAAO;EACX;EAEQ,iBAAiB,SAAc;AACnC,WAAO;MACH,OAAO,KAAK,GAAG,aAAa;MAC5B,SAAS,QAAQ,KAAK,GAAG;;EAEjC;EAEQ,iBAAiB,QAA0C;AAC/D,SAAK,MAAM,iBAAiB,OAAO,MAAM,SAAQ,GAAI,OAAO,OAAO,EAC9D,UAAU;MACP,MAAM,CAAC,aAAY;AACf,YAAG,UAAS;AACR,eAAK,MAAK;AACV,eAAK,MAAM,cAAa;QAC5B;MAEJ;MACA,OAAO,CAAC,UAAS;AACb,gBAAQ,MAAM,uBAAuB,KAAK;MAC9C;KACH;EACT;EAEQ,eAAe,UAAkB,qBAA6B,iBAAyB;AAC3F,QAAI,YAAY,KAAK,GAAG,YAAY,YAAY,QAAQ,GAAG;AACvD,YAAM,YAAY,KAAK,GAAG,YAAY,YAAY,QAAQ,EAAE;AAC5D,YAAM,cAAc,KAAK,GAAG,YAAY,YAAY,QAAQ,EAAE;AAE9D,UAAI,gBAAgB,aAAa;AAC7B,cAAM,OAAO,KAAK,GAAG,YAAY,YAAY,mBAAmB;AAChE,YAAI,QAAQ,qBAAqB;AAC7B,eAAK,UAAU,WAAW,iBAAiB,MAAM,mBAAmB;QACxE;MACJ;IACJ;EACJ;EAEQ,UAAU,WAAmB,iBAAsC,MAAW,qBAA2B;AAC7G,QAAI,KAAK,mBAAmB,KAAK,mBAAmB;AAChD,UAAI,KAAK,SAAS,aAAa;AAC3B,0BAAkB;AAClB,cAAM,kBAAkB,CAAC;UACrB,QAAQ;UACR,YAAY,kBAAkB,KAAK,OAAO,SAAQ,IAAK;UACvD,SAAS;SACZ;AACD,cAAM,QAAQ,KAAK,gBAAgB,eAAe;AAClD,aAAK,eAAe,OAAO,qBAAqB,WAAW,KAAK,OAAO,SAAQ,CAAE;MACrF,OAAO;AACH,cAAM,kBAAkB,CAAC;UACrB,QAAQ;UACR,YAAY;UACZ,SAAS;SACZ;AACD,cAAM,QAAQ,KAAK,gBAAgB,eAAe;AAClD,aAAK,eAAe,OAAO,qBAAqB,WAAW,EAAE;MACjE;IACJ,OAAO;AACH,YAAM,kBAAkB,CAAC;QACrB,QAAQ;QACR,YAAY;QACZ,SAAS;OACZ;AACD,YAAM,QAAQ,KAAK,gBAAgB,eAAe;AAClD,WAAK,eAAe,OAAO,qBAAqB,WAAW,EAAE;IACjE;EACJ;EAEQ,gBAAgB,iBAAsB;AAC1C,WAAO;MACH,SAAS,gBAAgB,IAAI,UAAQ,KAAK,MAAM,EAAE,KAAK,GAAG;MAC1D,SAAS,gBAAgB,IAAI,UAAQ,KAAK,UAAU,SAAS,OAAO,EAAE,KAAK,GAAG;MAC9E,aAAa,gBAAgB,IAAI,UAAQ,KAAK,cAAc,MAAM,EAAE,KAAK,GAAG;MAC5E,QAAQ;;EAEhB;EAIA,eAAe,OAAU,QAAO,UAAS,MAAI;AAC3C,QAAI,QAAU,KAAK,GAAG,YAAY,YAAY,QAAQ;AACtD,QAAG,OAAM;AACP,WAAK,GAAG,YAAY,YAAY,QAAQ,EAAE,cAAc,KAAK,SAAQ;AACrE,WAAK,MAAM,cAAa;IAC1B;AAEE,SAAK,MAAM,sBAAsB,KAAK,EACrC,UAAU;MAEP,MAAM,CAAC,aAAY;AACf,YAAG,UAAS;AACR,eAAK,MAAK;QACd;AACA,aAAK,MAAM,cAAa;AACxB,gBAAQ,IAAI,iBAAiB,QAAQ;MACzC;MACA,OAAO,CAAC,UAAS;AACb,gBAAQ,MAAM,oBAAoB,KAAK;MAC3C;KACH;EACL;EAGQ,gBAAgB,SAAsB,WAAiB;AAC3D,QAAI,KAAK,WAAW;AAChB;IACJ;AAEA,SAAK,YAAY;AACjB,SAAK,oBAAoB,YAAY,MAAK;AACtC,UAAI,SAAS;AACT,gBAAQ,aAAa,YAAY,KAAK;MAC1C;IACJ,GAAG,EAAE;EACT;EAEQ,iBAAc;AAClB,QAAI,KAAK,mBAAmB;AACxB,oBAAc,KAAK,iBAAiB;AACpC,WAAK,oBAAoB;IAC7B;AACA,SAAK,YAAY;EACrB;EAEQ,sBAAsB,OAAmB,iBAA4B;AACzE,QAAI,CAAC;AAAiB;AAEtB,UAAM,gBAAgB,gBAAgB,sBAAqB;AAC3D,UAAM,SAAS,MAAM;AACrB,UAAM,kBAAkB,SAAS,cAAc;AAC/C,UAAM,qBAAqB,cAAc,SAAS;AAGlD,oBAAgB,UAAU,OAAO,cAAc,eAAe;AAE9D,QAAI,kBAAkB,KAAK,kBAAkB;AACzC,sBAAgB,UAAU,IAAI,YAAY;AAC1C,WAAK,eAAe,iBAAiB,EAAE;IAC3C,WAAW,qBAAqB,KAAK,kBAAkB;AACnD,sBAAgB,UAAU,IAAI,eAAe;AAC7C,WAAK,eAAe,iBAAiB,CAAC;IAC1C,OAAO;AACH,WAAK,cAAa;IACtB;EACJ;EAEA,cAAc,OAAe,QAAc;AACvC,WAAO;EACX;EAGA,YAAY,OAAK;AACb,QAAI,MAAM,aAAa;AACnB,WAAK,wBAAwB,MAAM;IACvC;EACJ;EAEA,SAAS,MAAI;AAET,QAAI,QAAQ,KAAK,WAAW;AACxB,UAAI,qBAAqB,KAAK,MAAM,KAAK,SAAS;AAClD,UAAI,QAAQ,mBAAmB;AAC/B,UAAI,CAAC,OAAO;AACR,gBAAQ,MAAM;MAClB;AACA,aAAO;QACH,OAAO,GAAG,QAAQ,GAAG;;IAE7B;AACA,WAAO;MACH,OAAO,GAAG,MAAM,GAAG;;EAG3B;EAEA,aAAa,MAAI;AACb,QAAI,QAAQ,KAAK,WAAW;AACxB,UAAI,qBAAqB,KAAK,MAAM,KAAK,SAAS;AAClD,UAAI,QAAQ,mBAAmB;AAC/B,UAAI,CAAC,OAAO;AACR,gBAAQ;MACZ;AACA,aAAO;QACH,OAAO,GAAG,KAAK;;IAEvB;AACA,WAAO;MACH,OAAO,GAAG,GAAG;;EAGrB;EAGA,yBAAsB;AAClB,QAAI,CAAC,KAAK,IAAI,eAAe,UAAU,CAAC,KAAK,IAAI,MAAM;AACnD;IACJ;AACA,SAAK,MAAM,uBAAuB,KAAK,GAAG,cAAc,QAAQ,KAAK,GAAG,IAAI,EAAE,UAAU,OAAI;AACxF,WAAK,iBAAiB,EAAE;IAC5B,CAAC;EAEL;;EAIA,UAAU,OAAO,IAAE;AACf,UAAM,kBAAkB,MAAM;AAC9B,QAAI,gBAAgB,UAAU,SAAS,mBAAmB,GAAG;AAEzD,UAAI,KAAK,UAAU,IAAI;AACnB,YAAI,SAAS,SAAS,eAAe,yBAAyB,EAAE;AAChE,YAAI,CAAC,KAAK,iBAAiB;AAEvB,eAAK,kBAAkB,OAAO;AAE9B,eAAK,eAAe,IAAI,KAAK,mBAAmB;QAEpD;AACA,YAAI,KAAK,mBAAmB,OAAO,aAAa;AAC5C,eAAK,kBAAkB,OAAO;AAE9B,eAAK,eAAe,IAAI,KAAK,mBAAmB;QAEpD;MACJ;IACJ;EACJ;EACA,qBAAqB,OAAO,IAAO;AAC/B,UAAM,gBAAe;AACrB,QAAI,SAAS,SAAS,eAAe,yBAAyB,EAAE;AAChE,SAAK,SAAS;AAGd,UAAM,cAAc,OAAO,eAAe,eAAe,OAAO;AAChE,UAAM,WAAW,OAAO;AACxB,QAAI,QAAQ,KAAK,MAAO,WAAW,cAAe,GAAG;AACrD,QAAI,CAAC,KAAK,qBAAqB;AAC3B,WAAK,sBAAsB;IAC/B;AACA,QAAI,SAAS,KAAK,qBAAqB;AAGnC,WAAK,sBAAsB;IAC/B;EAEJ;EACA,eAAe,IAAS,OAAK;AACzB,YAAQ,IAAI,KAAK;AACjB,QAAI,QAAQ,OAAO,QAAQ;AACvB,cAAQ;AACZ,QAAI,KAAK,GAAG,YAAY,YAAY,EAAE,GAAG;AACrC,YAAM,OAAO,KAAK,GAAG,YAAY,YAAY,EAAE;AAC/C,WAAK,qBAAqB,KAAK,MAAM,KAAK,SAAS;AACnD,UAAI,KAAK,oBAAoB;AACzB,aAAK,mBAAmB,QAAQ;MACpC;AACA,UAAI,QAAQ,CAAA;AACZ,cAAQ;QACJ,UAAU,KAAK;QACf,aAAa,KAAK,UAAU,KAAK,kBAAkB;;AAEvD,YAAM,MAAM;AACZ,WAAK,WAAW,YAAY,IAAG,KAAK,KAAK,EAAE,UAAU,OAAI;AACrD,aAAK,YAAY,KAAK,UAAU,KAAK,kBAAkB;AACvD,mBAAW,MAAK;AACZ,eAAK,gBAAgB,KAAK;AAC1B,eAAK,cAAc;QACvB,GAAG,GAAG;MAEV,GAAG,WAAQ;AACP,gBAAQ,IAAI,KAAK;MACrB,CAAC;IACL;EACJ;EACA,gBAAgB,OAAK;AACjB,SAAK,aAAa,yBAAyB,KAAK;EACpD;;EAGQ,aAAU;AACd,UAAM,UAAU;AAChB,UAAM,QAAQ;AACd,SAAK,SACA,KACG,UAAU,CAAC,MAAM,KAAK,eAAe,GACrC,UAAU,CAAC,MAAK;AACZ,UAAI,cAAc,KAAK,MAAM,cACzB,OACA,SACA,MACA,KAAK;AAET,UAAI,aAAa;AACb,aAAK,MAAM,OAAO,YAAY,OAAO;MACzC;AACA,oBAAc,KAAK,MAAM,KAAK,SAAS,OAAO;QAC1C,SAAS;QACT,cAAc;OACjB;AACD,aAAO,KAAK,MACP,WAAW,KAAK,KAAK,YAAW,GAAI,KAAK,KAAK,MAAM,IAAI,EACxD,KACG,WAAW,CAACC,OAAM,GAAG,KAAK,CAAC,GAC3B,SAAS,MAAM,KAAK,MAAM,OAAO,YAAY,OAAO,CAAC,CAAC;IAElE,CAAC,CAAC,EAEL,UAAS;EAClB;EAEa,OAAO,GAAiD;;AACjE,UAAI,KAAK,qBAAqB;AAC1B,aAAK,MAAM,QACP,+CACA,SAAS;AAEb;MACJ;AACA,YAAMC,QAAO,EAAE;AACf,YAAM,KAAK,EAAE;AACb,YAAM,UAAU,EAAE;AAClB,YAAM,QAAQ,EAAE;AAChB,UAAIA,MAAK,OAAO,iBAAiB;AAC7B,cAAM,SAASA,MAAK,KAAK,OAAO;AAChC,cAAM,MAAM,MAAM,KAAK,cAAc,MAAM;AAC3C,YAAI,CAAC,KAAK;AACN;QACJ;AACA,0BAAkB,CAAC,GAAG,GAAG,GAAG,MAAiC,GAAG,KAAK;AACrE,cAAM,QAAQ,MAAM,KAAK,eAAe,GAAG;AAC3C,YAAI,CAAC,OAAO;AACR,aAAG,OAAO,GAAG,KAAK,OAAO,CAAC,QAAQ,IAAI,YAAY,IAAI,OAAO;QACjE;AACA,YAAI,QAAQ,CAAC;AACb,aAAK,MAAM,gBAAgB,KAAK,IAAI,EAAE,UAAU,MAAM,KAAK,GAAG,MAAK,CAAE;AACrE;MACJ,WAAWA,MAAK,OAAO,GAAG,IAAI;AAC1B,0BAAkBA,MAAK,MAAe,GAAG,MAAM,SAAS,KAAK;MACjE,OAAO;AACH,YAAIA,MAAK,OAAO,GAAG,MAAM,YAAY;AAAO;AAC5C,wBAAgBA,MAAK,MAAe,SAAS,KAAK;MACtD;AACA,WAAK,MAAM,gBAAgB,KAAK,IAAI,EAAE,UAAS;IAEnD;;EAEM,UAAU,MAAI;;AAEhB,UAAI,KAAK,qBAAqB;AAC1B,aAAK,MAAM,QACP,+CACA,SAAS;AAEb;MACJ;AACA,WAAK,QAAQ,KAAK;AAElB,YAAM,SAAS,KAAK;AACpB,YAAM,MAAM,MAAM,KAAK,cAAc,MAAM;AAC3C,UAAI,CAAC,KAAK;AACN;MACJ;AAIA,YAAM,QAAQ,MAAM,KAAK,eAAe,KAAK,IAAI;AACjD,UAAI,SAAS,SAAS,SAAS;AAC3B,aAAK,aAAa,aAAa,KAAK;AACpC,aAAK,GAAG,MAAK;MAEjB;AAEA;IAGJ;;EACA,qBAAqB,MAAI;AACrB,SAAK,mBAAmB;AACxB,SAAK,kBAAkB,KAAK;EAChC;EACA,qBAAqB,MAAI;AACrB,QAAI,KAAK,oBAAoB,KAAK,iBAAiB,UAAU,KAAK,QAAQ;AACtE,WAAK,aAAa,WAAW,EAAE,cAAc,KAAK,iBAAiB,QAAQ,UAAU,KAAK,QAAQ,YAAY,KAAK,UAAU,WAAW,KAAK,iBAAiB,QAAO,CAAE;IAI3K;EACJ;EACa,UAAU,UAAQ;;AAE3B,UAAI,OAAO,SAAS;AAEpB,UAAI,OAAO,SAAS;AACpB,YAAM,SAASF,MAAK,KAAK,IAAI;AAC7B,YAAM,MAAM,MAAM,KAAK,cAAc,QAAQ,MAAM,IAAI;AACvD,UAAI,KAAK;AACL,cAAM,QAAQ,MAAM,KAAK,eAAe,KAAK,MAAM,IAAI;AACvD,YAAI,OAAO;AACP,cAAI,QAAQ,CAAC;AAGb,eAAK,MAAM,QAAQ,+BAA+B,SAAS;AAC3D,eAAK,GAAG,MAAK;QACjB,OAAO;AACH,eAAK,MAAM,QAAQ,sBAAsB,SAAS;QACtD;MACJ;IACJ;;EAEa,WAAW,UAAQ;;AAE5B,UAAI,OAAO,SAAS;AACpB,UAAI,OAAO,SAAS;AAEpB,WAAK,KAAK,eAAe,KAAK,SAAS,CAAO,SAAQ;AAKlD,cAAM,SAAS,KAAK,YAAY,KAAK,OAAO,EAAE,MAAK;AACnD,cAAM,gBAAgB,OAAO,SAAQ;AAKrC,cAAM,SAASA,MAAK,KAAK,IAAI;AAC7B,cAAM,MAAM,MAAM,KAAK,cAAc,QAAQ,QAAQ,IAAI;AACzD,YAAI,CAAC,KAAK;AAKN;QACJ;AAKA,cAAM,QAAQ,MAAM,KAAK,eAAe,KAAK,MAAM,MAAM,IAAI;AAC7D,YAAI,OAAO;AACP,cAAI,QAAQ,CAAC;AACb,eAAK,aAAa,aAAa,KAAK;AACpC,eAAK,GAAG,MAAK;AAEb,eAAK,MAAM,QAAQ,+BAA+B,SAAS;AAC3D,eAAK,MAAM,cAAa;QAC5B,OAAO;AACH,eAAK,MAAM,QAAQ,sBAAsB,SAAS;QACtD;MACJ,EAAC;IACL;;EAEO,eAAe,OAAK;AACvB,QAAI;AACJ,QAAI,OAAO;AACP,aAAO,MAAM;IACjB;AACA,SAAK,KAAK,eAAe,KAAK,SAAS,CAAC,SAAQ;AAC5C,UAAI,CAAC;AAAM;AACX,YAAM,EAAE,UAAU,GAAG,aAAa,GAAG,UAAU,EAAC,IAAK;AACrD,YAAM,OAAO,KAAK,KAAK,SAAS;AAChC,YAAM,MAAM,KAAK,CAAC;AAClB,YAAM,SAAS,KAAK,KAAK,YAAY,KAAK,OAAO,EAAE,MAAK;AAKxD,WAAK,KAAK,SAAS,MAAM;IAI7B,CAAC;EACL;EAEO,YAAY,UAAQ;AACvB,QAAI,OAAO,SAAS;AACpB,QAAI,OAAO,SAAS;AACpB,QAAI,UAAU,SAAS;AACvB,UAAM,QAAQ,KAAK,IAAI,YAAY,WAAW;MAC1C,QAAQ;MACR,MAAM,oCAAoC,UAAU,KAAK,OAAO;MAChE,SAAS;MACT,cAAc;MACd,UAAU;MACV,UAAW;MACX,aAAa;MACb,UAAU,MAAK;AACX,aAAK,MACA,WAAW,MAAM,OAAO,SAAQ,GAAG,KAAK,QAAQ,SAAQ,CAAE,EAC1D,UACG,CAAC,YAAW;AACR,cAAI,SAAS;AACT,iBAAK,aAAa,aAAa,EAAE,UAAU,MAAM,MAAM,WAAW,QAAO,CAAE;AAC3E,uBAAW,MAAK;AACZ,mBAAK,GAAG,MAAK;YACjB,GAAG,GAAG;AACN,iBAAK,MAAM,cAAa;UAC5B;QACJ,CAAC;MAEb;KACH;EACL;EAIc,cAAc,IAAgE;+CAAhE,QAAe,OAA6B,CAAA,GAAI,aAAgB;AACxF,YAAM,YAAY,OAAO,KAAK,IAAI,EAAE,WAAW,KAAK,KAAK,YAAY;AACrE,YAAM,QAAQ,KAAK,IAAI,cAAc,oBAAoB;QACrD;QACA;QACA;QACA,QAAQ,eAAe,KAAK;QAC5B,UAAU,KAAK;OAClB;AAED,aAAQ,MAAM,MAAM;IACxB;;EAEA,YAAS;AACL,SAAK,aAAa,mBAAmB,KAAK;EAC9C;EAGc,eAAe,KAAmB,cAAe,QAAS,UAAS;;AAE7E,UAAI;AACA,YAAI,MAAM;AACV,YAAI;AACJ,YAAI,QAAQ;AACR,iBAAO;QACX,OAAO;AACH,iBAAO,aAAa;QACxB;AACA,YAAI,UAAU;AACV,iBAAO;QACX;AACA,YAAI,OAAO;UACP,aAAa,KAAM;UACnB,MAAM,KAAM;UACZ,eAAe,KAAM,KAAM;UAC3B,WAAW,KAAM;;AAIrB,YAAI,QAAQ,EAAE,OAAO,KAAK,QAAQ,KAAI;AACtC,eAAO,MAAM,KAAK,WAAW,YAAY,IAAG,KAAK,OAAO,IAAI,EAAE,UAAS;MAC3E,SAAS,OAAO;AACZ,gBAAQ,IAAI,KAAK;MAMrB;AACA,aAAO;IACX;;EACQ,WACJ,MACA,aAAgC;AAEhC,QAAI,CAAC;AAAM;AACX,UAAM,EAAE,UAAU,GAAG,aAAa,GAAG,UAAU,EAAC,IAAK;AACrD,UAAM,OAAO,KAAK,KAAK,SAAS;AAChC,QAAI,gBAAgB,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,WAAW,MAAK;AACvD,QAAI,gBAAgB,MAAM;AACtB,sBAAgB,cAAc,OAC1B,CAAC,QAAQ,IAAI,YAAY,KAAK,IAAI,OAAO;AAE7C,WAAK,KAAK,YAAY,KAAK,IAAI,OAAO;IAC1C,OAAO;AACH,oBAAc,CAAC,IAAI;AACnB,WAAK,KAAK,SAAS,IAAI,YAAY,aAAa,KAAK,IAAI,CAAC;IAC9D;AACA,SAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa;EACpC;EAEM,mBAAmB,UAAS,OAAK;;AACnC,UAAG,OAAM;AACL,cAAM,eAAc;AACpB,cAAM,gBAAe;MACzB;AACA,UAAI,OAAO,SAAS;AACpB,WAAK,QAAQ,SAAS;AAEtB,YAAM,SAAS,KAAK,cAAc,KAAK,CAAC,MAAM,EAAE,SAAS,KAAK,IAAI;AAClE,YAAM,SAAS,KAAK,MAAM,YAAY,KAAK,OAAO;AAClD,YAAM,QAAQ,KAAK,IAAI,cAAc,uBAAuB;QACxD;QACA;QACA,UAAU,KAAK;QACf,aAAa,KAAK;OACrB;AACD,YAAM,MAAM,MAAM,MAAM;AACxB,UAAI,CAAC,KAAK;AACN;MACJ;AACA,YAAM,EAAE,SAAS,kBAAiB,IAAK;AAIvC,WAAK,MAAM,iBAAiB,OAAO,EAAE,UAAU,CAAC,YAAW;AACvD,YAAI,SAAS;AACT,gBAAM,kBAAkB,CAAC,OACrB,KAAK,MAAM,mBAAmB,EAAE,EAAE,KAC9B,OAAO,CAACG,aAAYA,QAAO,GAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;AAEtB,gBAAM,+BAA2B,+BAC7B,OAAO,YACP,mBACA,IAAI;AAGR,eAAK,yBAAyB,IAAI,CAAC,MAAM,gBAAgB,EAAE,EAAE,CAAC,CAAC,EAC1D,KACG,SAAQ,GACR,SACI,MACC,OAAO,aACJ,QAAQ,aAAa,OAAO,IAAI,EAAE,SAAU,CACnD,EAEJ,UAAS;QAClB;MACJ,CAAC;IACL;;EAGA,cAAW;AACP,SAAK,kBAAkB;EAC3B;;EAIA,eAAY;AACR,SAAK,MAAK;EACd;EACA,aAAa,OAAiB;AAC1B,UAAM,eAAc;AACpB,SAAK,QAAO;EAEhB;EACA,cAAc,OAAoB;AAC9B,QAAI,MAAM,QAAQ,WAAW,MAAM,QAAQ,KAAK;AAC5C,YAAM,eAAc;AACpB,WAAK,QAAO;IAChB;EACJ;EAGA,QAAQ,YAAW;AAEf,SAAK,OAAO,CAAA;AACZ,QAAI,SAAS,CAAA;AACb,WAAO,KAAK,EAAE,YAAY,GAAG,WAAW,CAAA,GAAI,SAAS,MAAM,QAAQ,CAAA,EAAE,CAAE;AACvE,QAAI,aAAa;MACb,UAAU;MACV,SAAS;;AAEb,SAAK,KAAK,KAAK,UAAU;AAEzB,SAAK,qBAAqB;MACtB,OAAO;MACP,MAAM,KAAK;;AAGf,SAAK,iBAAiB,KAAK,WAAW,EAAE,KAAK,CAAC,QAAO;AAEjD,UAAI,OAAO,MAAM;AACb,aAAK,OAAO,CAAA;MAChB;IACJ,CAAC;AAED;EAEJ;EACa,aAAa,GAAiD;;AAEvE,YAAMD,QAAO,EAAE;AACf,YAAM,KAAK,EAAE;AACb,YAAM,UAAU,EAAE;AAClB,YAAM,QAAQ,EAAE;AAChB,UAAIA,MAAK,OAAO,iBAAiB;AAE7B,YAAI,SAAS,CAAA;AACb,eAAO,KAAK,EAAE,YAAY,GAAG,WAAW,CAAA,GAAI,SAAS,MAAM,QAAQ,CAAA,EAAE,CAAE;AACvE,YAAI,aAAa;UACb,UAAU;UACV,SAAS;;AAEb,aAAK,KAAK,KAAK,UAAU;AAEzB,aAAK,qBAAqB;UACtB,OAAO;UACP,MAAM,KAAK;;AAEf,aAAK,iBAAiB,KAAK,WAAW,EAAE,KAAK,CAAC,QAAO;AAEjD,cAAI,OAAO,MAAM;AACb,iBAAK,OAAO,CAAA;UAChB;QACJ,CAAC;AAED;MACJ;IACJ;;EACA,iBAAiB,OAAK;AAClB,SAAK,OAAO,CAAA;AACZ,QAAI,SAAS,CAAA;AACb,WAAO,KAAK,EAAC,YAAY,GAAG,WAAW,CAAA,GAAI,SAAS,MAAM,QAAQ,CAAA,EAAE,CAAC;AAErE,QAAI,aAAa,EAAE,UAAU,GAAG,SAAS,OAAM;AAC/C,SAAK,KAAK,KAAK,UAAU;AAEzB,SAAK,qBAAqB;MACtB,OAAO;MACP,MAAM,KAAK;;AAGf,SAAK,iBAAiB,KAAK,aAAa,QAAW,MAAM,KAAK,MAAM,EAAE,KAAK,CAAC,QAAO;AAC/E,UAAI,OAAO,MAAM;AACb,aAAK,OAAO,CAAA;MAChB;IACJ,CAAC;EACL;EAEA,aAAa,YAAW;AACpB,SAAK,qBAAqB;MACtB,OAAO;MACP,MAAM,CAAA;;AAGV,SAAK,yBAAyB,KAAK,WAAW,EAAE,KAAK,CAAC,QAAO;AACzD,UAAI,OAAO,MAAM;AACb,aAAK,OAAO,CAAA;MAChB;IACJ,CAAC;EACL;EAEO,kBACH,QACA,MAA4B,CAAA,GAC5B,SACAE,WAA0C;AAE1C,UAAM,YAAY,OAAO,KAAK,GAAG,EAAE,WAAW;AAE9C,UAAM,WAAW,mBAAK;AAGtB,QAAI,WAAW;AACX,YAAM,EAAE,WAAU,IAAK,KAAK,2BAA2B,MAAM;AAC7D,YAAM,QAAQ,IAAI,WAAW,SAAS,MAAM;AAC5C,aAAO,SAAS,KAAK;IACzB,OAAO;AACH,UAAI,OAAO,OAAO;IACtB;AAGA,UAAM,WAAW,MAAK;AAClB,UAAI,WAAW;AACX,eAAO,YAAY,QAAQ,EAAE;MACjC,OAAO;AACH,YAAI,OAAO,QAAQ;MACvB;IACJ;AAEA,QAAI,UAAU,KAAK;AACnB,QAAI,CAAC,SAAS,cAAc,UAAU,SAAS,QAAQ,EAAE,GAAG;AACxD,eAAS,cAAc,UAAU,KAAK,QAAQ,EAAE;IACpD;AACA,SAAK,MACA,WAAW,SAAS,KAAK,EAAE,EAC3B,KACG,UAAU,CAAC,OAAM;AACb,UAAIA,WAAU;AACV,eAAOA,UAAS,EAAE,EAAE,KAAK,IAAI,MAAM,EAAE,CAAC;MAC1C;AACA,aAAO,GAAG,EAAE;IAChB,CAAC,CAAC,EAEL,UAAU;MACP,MAAM,CAAC,YAAW;AACd,YAAI,CAAC;AAAS,mBAAQ;aACjB;AACD,eAAK,GAAG,cAAc,OAAO;QACjC;MACJ;MACA,OAAO,CAAC,MAAM,SAAQ;MACtB,UAAU,MAAM,KAAK,MAAK;KAC7B;EAET;EACO,QAAK;AACR,UAAM,EAAE,aAAa,MAAM,QAAO,IAAK,KAAK,MAAM,SAAS,MACrD;AACN,SAAK,MACA,QAAQ,aAAa,MAAM,OAAO,EAClC,UAAU,CAAC,OAAM;AACd,WAAK,KAAK;AACX,iBAAW,MAAK;AACf,aAAK,gBAAe;MACrB,GAAG,GAAG;IAET,CAAC;EACT;EACQ,2BACJ,QACA,OAA6B,CAAA,GAAE;AAE/B,QAAI;AAGJ,QAAI;AACJ,QAAI,kBAA0B,IAAI;AAC9B,kBAAuB;AACvB,mBAAqB;IACzB,WAAW,kBAA0B,MAAM;AACvC,kBAAuB;AACvB,mBAAqB;IACzB,WAAW,kBAA0B,KAAK;AACtC,kBAAuB;AACvB,mBAAqB;IACzB,WAAW,WAAW,UAAa,gBAAwB,IAAI;AAC3D,kBAAuB;AACvB,mBAAa;IACjB;AACA,WAAO,EAAE,WAAW,WAAU;EAClC;EAEA,cAAc,KAAG;AACb,WAAO;MACH,UAAU;MACV,MAAM,GAAG,IAAI,IAAI;MACjB,KAAK,GAAG,IAAI,GAAG;MACf,OAAO,GAAG,IAAI,KAAK;MACnB,QAAQ,GAAG,IAAI,MAAM;;EAE7B;;EAEO,YAAY,KAAQ;AACvB,UAAM,MAAM,IAAI;AAChB,QAAI,YAAY,KAAK,aAAa,GAAG;AACrC,QAAI;AACJ,YAAQ,WAAW;MACf,KAAK;AACD,kBAAQ;AACR;MACA,KAAK;AACD,kBAAQ;AACR;MACR;AACI,kBAAQ;AACR;IACR;AACA,UAAM,SAAS,cAAc;AAC7B,UAAM,OAAQ,KAAa,eAAe,IAAI;AAC9C,UAAM,UAAU,cAAc,SAAS,YAAY;AACnD,SAAK,IAAI,YAAY,WAAW;MAC5B,QAAQ,GAAG,OAAO,IAAI,SAAS;MAC/B,MAAM,4BAA4B,QAAQ,YAAW,CAAE,IAAI,IAAI;MAC/D,SAAS,GAAG,OAAO;MACnB,cAAc;MACd,aAAa;MACb,UAAW;MACX,UAAW;MACX,UAAU,MAAM,KAAK,aAAa,GAAG;KACxC;EACL;EAEQ,aAAa,KAAQ;AACzB,QAAI,eAAuB,IAAI;AAC3B,aAAO;IACX,WAAW,eAAuB,MAAM;AACpC,aAAO;IACX,WAAW,eAAuB,KAAK;AACnC,aAAO;IACX,WAAW,eAAuB,MAAM;AACpC,aAAO,IAAI,QAAO,cAAc,eAAc;IAClD;AACA,WAAO;EACX;EACO,UAAU,KAAQ;AACrB,QAAG,IAAI,KAAK,WAAU;AAClB,WAAK,qBAAsB,KAAK,MAAM,IAAI,KAAK,SAAS;IAC5D;AACA,SAAK,kBAAkB,IAAI,IAAI;EAEnC;EAEO,kBAAkB,KAAgB;AACrC,SAAK,iBAAiB,IAAI,QAAuB,GAAG;EACxD;;EAEU,iBAAiB,IAAoE;+CAApE,QAAqB,OAA6B,CAAA,GAAI,eAAc;AAC/F,YAAM,YAAY,OAAO,KAAK,IAAI,EAAE,WAAW;AAC/C,YAAM,EAAE,UAAS,IAAK,KAAK,2BAA2B,QAAQ,IAAI;AAElE,YAAM,QAAQ,KAAK,IAAI,cAAc,WAAW,EAAE,MAA2B,QAAQ,UAAS,CAAE;AAChG,YAAM,MAAM,MAAM,MAAM;AACxB,UAAI,CAAC;AAAK;AAEV,UAAI,KAAK,gBAAgB,GAAG;AAAG;AAE/B,UAAI,KAAK,aAAa,QAAQ,IAAI,GAAG;AACjC,aAAK,cAAc,GAAG;AACtB;MACJ;AAEA,YAAM,UAAU,KAAK,eAAe,QAAQ,KAAK,aAAa;AAE9D,YAAM,aAAa,KAAK,sBAAsB,QAAQ,KAAK,SAAS;AAEpE,UAAI,YAAY;AACZ,aAAK,kBAAkB,QAAQ,MAAM,SAAS,UAAU;AACxD,YAAI,kBAA0B,OAAO,IAAI,SAAS,MAAM;AACpD,eAAK,wBAAwB,IAAI,QAAQ;QAC7C;MACJ,OAAO;AACH,aAAK,kBAAkB,QAAQ,MAAM,GAAG;MAC5C;IACJ;;EAGQ,gBAAgB,KAAQ;AAC5B,QAAI,IAAI,SAAS,aAAa;AAC1B,WAAK,gBAAgB,GAAG;AACxB,aAAO;IACX;AACA,WAAO;EACX;EAEQ,aAAa,QAAqB,MAA0B;AAChE,WAAO,WAAW,UAAa,gBAAwB;EAC3D;EAEQ,eAAe,QAAqB,KAAU,eAAmB;AACrE,UAAM,UAAU,IAAI,WAAW,CAAA;AAE/B,QAAI,kBAA0B,OAAO,MAAM;AACvC,cAAQ,YAAY,KAAK,UAAU,KAAK,kBAAkB;AAC1D,UAAI,eAAe;AACf,gBAAQ,cAAc;MAC1B;IACJ;AAEA,WAAO;EACX;EAEQ,sBAAsB,QAAqB,KAAU,WAAkB;AAC3E,QAAI,kBAA0B,IAAI;AAC9B,aAAO,CAAC,OAAc;AAClB,YAAI,IAAI,OAAO,WAAW,QAAQ,CAAC;AAAW,iBAAO;AACrD,eAAO,KAAK,MAAM,eAAe,IAAI,OAAO,UAAU,IAAI,IAAI,OAAO,MAAM;MAC/E;IACJ;AAEA,QAAI,kBAA0B,MAAM;AAChC,aAAO,CAAC,OAAc;AAClB,YAAI,IAAI,OAAO,YAAY,QAAQ,CAAC;AAAW,iBAAO;AACtD,eAAO,KAAK,MAAM,gBAAgB,IAAI,OAAO,SAAS,IAAI,IAAI,OAAO,OAAO;MAChF;IACJ;AAEA,QAAI,kBAA0B,KAAK;AAC/B,aAAO,CAAC,MAAa;AACjB,YAAI,IAAI,OAAO,iBAAiB,QAAQ,IAAI,OAAO,kBAAkB,QAAQ,CAAC;AAAW,iBAAO;AAChG,eAAO,KAAK,MAAM,eAAe,IAAI,MAAM;MAC/C;IACJ;AAEA,WAAO;EACX;EAMY,gBAAgB,KAAG;AACvB,UAAM,QAAQ,KAAK,GAAG,YAAY,YAAY,IAAI,MAAM,IAAI;AAC5D,QAAI,OAAO;AACP,WAAK,GAAG,YAAY,YAAY,IAAI,MAAM,IAAI,EAAE,cAAc,IAAI,MAAM;AACxE,WAAK,MAAM,cAAa;IAC5B;AACA,SAAK,iBAAiB,IAAI,KAAK;EACnC;EAEJ,iBAAiB,OAAS;AACtB,SAAK,MAAM,sBAAsB,KAAK,EAAE,UAAU,cAAW;AACxD,UAAG,UAAS;AACT,aAAK,MAAK;MACb;IACH,CAAC;EACP;EAGA,qBAAqB,MAAS;AAC5B,QAAI,CAAC;AAAM,aAAO;AAQlB,WAAO,CAAC,KAAK,eAAe,KAAK,gBAAgB,MAAM,OAAO,KAAK,gBAAgB;EACrF;;EAGA,wBAAwB,cAA6B;AACnD,QAAI,CAAC;AAAc,aAAO,CAAA;AAE1B,UAAM,cAAc,aAAa,SAAQ;AACzC,UAAM,WAAqB,CAAA;AAE3B,SAAK,GAAG,YAAY,SAAS,QAAQ,YAAS;AAC5C,YAAM,OAAO,KAAK,GAAG,YAAY,YAAY,MAAM;AACnD,UAAI,CAAC;AAAM;AAEX,UAAI,KAAK,aAAa;AACpB,cAAM,YAAY,KAAK,YAAY,SAAQ,EAAG,MAAM,GAAG,EAAE,IAAI,QAAM,GAAG,KAAI,CAAE;AAC5E,YAAI,UAAU,SAAS,WAAW,GAAG;AACnC,mBAAS,KAAK,MAAM;QACtB;MACF;IACF,CAAC;AAED,WAAO;EACT;;EAGA,cAAc,MAAS;AACrB,UAAM,YAAY,KAAK,SAAS,IAAI;AAEpC,WAAO,iCACF,YADE;MAEL,YAAY;MACZ,YAAY;MACZ,aAAa;;EAEjB;EAGA,eAAe,UAAS,SAAO;AAC9B,QAAIC,UAAO,SAAS,OAAO,OAAG,EAAE,YAAY,SAAS,QAAQ,SAAQ,CAAE,CAAC;AACxE,WAAOA;EACR;EAEA,iBAAiB,UAAQ;AACzB,QAAIA,UAAO,SAAS,OAAO,OAAG,EAAE,eAAa,QAAQ,EAAE,eAAa,MAAS;AAC5E,WAAOA;EACR;EAGQ,kBAAkB,MAAY;AAClC,QAAI,CAAC,KAAK,IAAI,aAAa;AACvB,aAAO;IACX;AAEA,UAAM,iBAAiB,KAAK,KAAI,EAAG,YAAW;AAE9C,WAAO,KAAK,GAAG,YAAY,SAAS,KAAK,YAAS;AAC9C,YAAM,OAAO,KAAK,GAAG,YAAY,YAAY,MAAM;AACnD,UAAI,CAAC,MAAM,QAAQ,CAAC,MAAM;AAAa,eAAO;AAE9C,YAAM,eAAe,KAAK,YAAY,KAAI,EAAG,YAAW;AACxD,aAAO,KAAK,SAAS,eAAe,iBAAiB;IACzD,CAAC;EACL;EAEQ,qBAAkB;AACtB,UAAM,WAAW;AACjB,QAAI,QAAQ;AACZ,UAAM,gBAAgB,oBAAI,IAAG;AAE7B,QAAI,KAAK,IAAI,YAAY,KAAK,IAAI,aAAa;AAC3C,WAAK,GAAG,SAAS,QAAQ,aAAU;AAC/B,cAAM,QAAQ,KAAK,GAAG,YAAY,OAAO;AACzC,aAAK,+BAA+B,OAAO,aAAa;MAC5D,CAAC;IACL;AAEA,QAAI,YAAY,GAAG,QAAQ,IAAI,KAAK;AACpC,WAAO,cAAc,IAAI,UAAU,YAAW,CAAE,GAAG;AAC/C;AACA,kBAAY,GAAG,QAAQ,IAAI,KAAK;IACpC;AAEA,WAAO;EACX;EAEQ,+BAA+B,MAAW,SAAoB;AAClE,QAAI,CAAC,QAAQ,OAAO,SAAS;AAAU;AAEvC,QAAI,KAAK,SAAS,eAAe,OAAO,KAAK,gBAAgB,UAAU;AACnE,cAAQ,IAAI,KAAK,YAAY,KAAI,EAAG,YAAW,CAAE;IACrD;AAEA,QAAI,MAAM,QAAQ,KAAK,QAAQ,KAAK,KAAK,aAAa;AAClD,WAAK,SAAS,QAAQ,aAAU;AAC5B,cAAM,YAAY,KAAK,YAAY,OAAO;AAC1C,aAAK,+BAA+B,WAAW,OAAO;MAC1D,CAAC;IACL;EACJ;EAEc,yBAAyB,IAAoD;+CAApD,QAAqB,OAA6B,CAAA,GAAE;AACvF,YAAM,YAAY,KAAK,mBAAkB;AACzC,YAAM,aAAa,QAAQ,KAAK,IAAG,EAAG,SAAS,EAAE,CAAC;AAClD,UAAI,UAAiB;QACjB,QAAQ,OAAO,GAAG,SAAQ;QAC1B,QAAQ;QACR,IAAI;QACJ,MAAM;QACN,cAAc;QACd,MAAM,SAAS;QACf,QAAQ;QACR,cAAc;QACd,aAAa;QACb,UAAU;QACV,UAAU;QACV,OAAO,CAAA;QACP,OAAO,CAAA;QACP,UAAU,CAAA;QACV,aAAa;QACb,UAAU,SAAS;QACnB,MAAM;QACN,SAAS,OAAO;QAChB,WAAW;QACX,aAAa;;AAGb,UAAI,kBAA0B,KAAK;AAC/B,YAAG,MAAK;AACR,kBAAQ,YAAU,KAAK,UAAU,KAAK,kBAAkB;QACxD;AACA,aAAK,kBAAkB,QAAQ,MAAM,OAAO;AAE5C,YAAG,QAAQ,MAAK;AACX,eAAK,wBAAyB,QAAQ;QAC3C;MACH;IAGT;;EACU,cAAc,SAAmB;AACvC,SAAK,MAAM,OAAO,OAAO,EAAE,UAAU,CAAC,YAAW;AAC/C,UAAI,SAAS;AACX,aAAK,GAAG,OAAO,OAAO;MACxB;IACF,CAAC;EACH;EACQ,aAAa,KAAgB;AACnC,UAAM,SAAS,IAAI;AAGf,UAAM,MAAM,OAAO,SAAS,UAAU,CAAC,OAAO,OAAO,IAAI,EAAE;AAG3D,WAAO,YAAY,IAAI,EAAE;AAGzB,UAAM,WAAW,MAAM,OAAO,WAAW,KAAY,GAAG;AAExD,SAAK,MAAM,aAAa,KAAK,KAAK,EAAE,EAAE,UAAU;MAC5C,MAAM,CAAC,YAAa,CAAC,UAAU,SAAQ,IAAK,KAAK,MAAK;MACtD,OAAO,CAAC,MAAM,SAAQ;KACzB;EACL;EACA,eAAY;AACR,SAAK,eAAe,CAAC,KAAK;EAC9B;EACA,gBAAgB,MAAI;AAChB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,oBAAoB,KAAK,KAAK,YAAY;AAC/C,SAAK,oBAAoB,KAAK,KAAK,YAAY;EACnD;EACA,2BAA2B,OAAK;AAC5B,QAAI,OAAO;AACP,WAAK,cAAc;IACvB;EACJ;;EAIA,gBAAgB,OAAgB;AAC5B,UAAM,kBAAkB,SAAS,cAAc,YAAY;AAC3D,QAAI,iBAAiB;AACjB,sBAAgB,UAAU,OAAO,cAAc,eAAe;IAClE;AACA,SAAK,cAAa;EACtB;EAEA,aAAa,OAAc,cAAkB;AAC7C,UAAM,WAAY,OAAO,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,WAAW,SAAS,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AACxF,QAAI,CAAC,cAAc;AAAW;AAE9B,SAAK,qBAAqB,KAAK,MAAM,aAAa,SAAS,KAAK,CAAA;AAChE,SAAK,mBAAmB,QAAQ;AAEhC,UAAM,QAAQ;MACZ,QAAQ,aAAa;MACrB,WAAW,KAAK,UAAU,KAAK,kBAAkB;;AAGnD,SAAK,WAAW,YAAY,IAAG,mCAAmC,KAAK,EAAE,UAAU,MAAK;AACtF,UAAIC,SAAmB;QACrB,MAAK;QACL,MAAK;QACL,MAAK,KAAK;;AAEV,WAAK,eAAaA;AAClB,WAAK,oBAAoB,KAAK,KAAK,YAAY;AAC/C,WAAK,oBAAoB,KAAK,KAAK,YAAY;AAC/C,WAAK,0BAA0BA;AAC/B,WAAK,MAAM,cAAa;IAC5B,CAAC;EACH;;;uCApxDW,wBAAqB,4BAAA,qBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,UAAA,GAAA,4BAAA,iBAAA,CAAA;IAAA;EAAA;;yEAArB,wBAAqB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,cAAA,SAAA,mCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AAArB,QAAA,qBAAA,WAAA,SAAA,iDAAA,QAAA;AAAA,iBAAA,IAAA,gBAAA,MAAA;QAAuB,GAAA,OAAA,2BAAA;;;;;AC9DpC,QAAA,yBAAA,GAAA,OAAA,CAAA;AAA4B,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,UAAA,CAAW;QAAA,CAAA,EAAC,QAAA,SAAA,mDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,gBAAA,MAAA,CAAuB;QAAA,CAAA,EAAC,YAAA,SAAA,uDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAa,IAAA,oBAAA,MAAA,CAA2B;QAAA,CAAA,EAAC,WAAA,SAAA,sDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAY,IAAA,UAAA,MAAA,CAAiB;QAAA,CAAA;AACvJ,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,KAAA;AAGvB,QAAA,oBAAA,GAAA,KAAA;AAkBN,QAAA,yBAAA,GAAA,KAAA,EAAM,GAAA,OAAA,CAAA;AAIJ,QAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,gBAAA,CAAA,EAAqG,GAAA,sCAAA,GAAA,GAAA,OAAA,CAAA,EAuG/D,GAAA,sCAAA,GAAA,GAAA,OAAA,CAAA;AAgCxC,QAAA,uBAAA,EAAM,EACA,EAGM,EAEF;AAGV,QAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;;;AAhJmC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,mBAAA,EAA6B,gBAAA,IAAA,aAAA;AAuGzC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,QAAA;AAcC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,QAAA;;;MDzFhB;MACA;MACA;MACA;MACA;MACA;IAAU,GAAA,QAAA,CAAA,gjUAAA,EAAA,CAAA;EAAA;;;6EAGL,uBAAqB,EAAA,WAAA,yBAAA,UAAA,4FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AgBtClC,IAAMC,OAAM,CAAC,GAAG;AAChB,SAAS,8BAA8B,IAAI,KAAK;AAC9C,MAAI,KAAK,GAAG;AACV,IAAG,uBAAa,CAAC;AAAA,EACnB;AACF;AACA,IAAMC,OAAM,CAAC,kBAAkB;AAC/B,IAAMC,OAAM,CAAC,SAAS;AACtB,IAAMC,OAAM,CAAC,cAAc;AAC3B,IAAMC,OAAM,CAAC,eAAe;AAC5B,IAAM,MAAM,CAAC,mBAAmB;AAChC,IAAM,MAAM,SAAO;AAAA,EACjB,mBAAmB;AACrB;AACA,IAAM,MAAM,CAAC,IAAI,QAAQ;AAAA,EACvB,OAAO;AAAA,EACP,QAAQ;AACV;AACA,SAAS,kCAAkC,IAAI,KAAK;AAAC;AACrD,IAAM,MAAM,CAAC,gBAAgB;AAC7B,IAAM,MAAM,CAAC,WAAW;AACxB,SAAS,uDAAuD,IAAI,KAAK;AAAC;AAC1E,SAAS,yCAAyC,IAAI,KAAK;AACzD,MAAI,KAAK,GAAG;AACV,IAAG,qBAAW,GAAG,wDAAwD,GAAG,GAAG,eAAe,EAAE;AAAA,EAClG;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,EAAE;AAClC,IAAG,qBAAW,mBAAmB,OAAO,aAAa;AAAA,EACvD;AACF;AACA,SAAS,yCAAyC,IAAI,KAAK;AACzD,MAAI,KAAK,GAAG;AACV,IAAG,iBAAO,CAAC;AAAA,EACb;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,EAAE;AAClC,IAAG,4BAAkB,OAAO,SAAS;AAAA,EACvC;AACF;AACA,SAAS,2BAA2B,IAAI,KAAK;AAC3C,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,2BAAiB;AAChC,IAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,IAAG,qBAAW,SAAS,SAAS,kDAAkD;AAChF,YAAM,SAAY,wBAAc,GAAG;AACnC,YAAM,SAAS,OAAO;AACtB,YAAM,oBAAe,OAAO;AAC5B,YAAM,SAAY,wBAAc;AAChC,YAAM,eAAkB,sBAAY,CAAC;AACrC,aAAU,sBAAY,OAAO,aAAa,QAAQ,cAAc,iBAAY,CAAC;AAAA,IAC/E,CAAC,EAAE,kBAAkB,SAAS,yDAAyD,QAAQ;AAC7F,YAAM,oBAAkB,wBAAc,GAAG,EAAE;AAC3C,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,iBAAiB,QAAQ,iBAAY,CAAC;AAAA,IACrE,CAAC;AACD,IAAG,oBAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,OAAO,CAAC;AACtC,IAAG,yBAAe,GAAG,QAAQ,EAAE,EAAE,GAAG,QAAQ,EAAE;AAC9C,IAAG,qBAAW,GAAG,0CAA0C,GAAG,GAAG,MAAM,EAAE,EAAE,GAAG,0CAA0C,GAAG,CAAC;AAC5H,IAAG,uBAAa,EAAE,EAAE;AAAA,EACtB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAS,IAAI;AACnB,UAAM,oBAAe,IAAI;AACzB,UAAM,aAAgB,sBAAY,CAAC;AACnC,UAAM,SAAY,wBAAc;AAChC,IAAG,qBAAW,OAAO,UAAU;AAC/B,IAAG,sBAAY,mBAAmB,OAAO,kBAAkB,iBAAY;AACvE,IAAG,qBAAW,MAAM,OAAO,eAAe,iBAAY,CAAC,EAAE,YAAY,OAAO,QAAQ,EAAE,sBAAsB,OAAO,kBAAkB;AACrI,IAAG,sBAAY,YAAY,OAAO,aAAa,iBAAY,CAAC,EAAE,iBAAiB,oBAAe,CAAC,EAAE,gBAAgB,OAAO,MAAM,MAAM,EAAE,iBAAiB,OAAO,iBAAiB,iBAAY,CAAC,EAAE,iBAAiB,OAAO,kBAAkB,iBAAY,EAAE,cAAc,OAAO,aAAa,IAAI,EAAE,mBAAmB,CAAC,OAAO,aAAa,OAAO,iBAAiB,OAAO,iBAAiB,IAAI;AAC1X,IAAG,oBAAU,CAAC;AACd,IAAG,qBAAW,oBAAoB,UAAU,EAAE,qBAAqB,OAAO,YAAY,OAAO,aAAa;AAC1G,IAAG,oBAAU,CAAC;AACd,IAAG,wBAAc,OAAO,gBAAgB,IAAI,CAAC;AAAA,EAC/C;AACF;AACA,SAAS,mCAAmC,IAAI,KAAK;AACnD,MAAI,KAAK,GAAG;AACV,IAAG,uBAAa,CAAC;AAAA,EACnB;AACF;AACA,SAAS,2BAA2B,IAAI,KAAK;AAC3C,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,2BAAiB;AAChC,IAAG,yBAAe,GAAG,gBAAgB,EAAE;AACvC,IAAG,qBAAW,eAAe,SAAS,iEAAiE;AACrG,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,4BAA4B,CAAC;AAAA,IAC5D,CAAC,EAAE,gBAAgB,SAAS,gEAAgE,QAAQ;AAClG,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,yBAAyB,MAAM,CAAC;AAAA,IAC/D,CAAC;AACD,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,UAAU,IAAI;AACpB,UAAM,sBAAiB,IAAI;AAC3B,UAAM,SAAY,wBAAc;AAChC,IAAG,qBAAW,QAAQ,SAAS;AAC/B,IAAG,sBAAY,2BAA2B,OAAO,kBAAkB,mBAAc;AACjF,IAAG,qBAAW,MAAM,OAAO,iBAAiB,mBAAc,CAAC,EAAE,WAAW,QAAQ,OAAO,EAAE,YAAY,QAAQ,QAAQ,EAAE,UAAU,QAAQ,MAAM,EAAE,qBAAqB,OAAO,iBAAiB,EAAE,mBAAmB,OAAO,eAAe;AACzO,IAAG,sBAAY,YAAY,OAAO,mBAAmB,QAAQ,OAAO,kBAAkB,sBAAiB,OAAO,kBAAkB,IAAI,EAAE,mBAAmB,OAAO,eAAe,mBAAc,CAAC,EAAE,eAAe,OAAO,kBAAkB,mBAAc;AAAA,EACxP;AACF;AACA,IAAM,OAAO,CAAC,mBAAmB,EAAE;AACnC,IAAM,OAAO,CAAC,gBAAgB,EAAE;AAChC,IAAM,kBAAkB,IAAI,eAAe,eAAe;AAE1D,IAAM,gBAAN,MAAM,eAAc;AAAA,EAClB,YAAuC,UAAU;AAC/C,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,sBAAsB,mBAAmB;AAC5D,aAAO,KAAK,qBAAqB,gBAAkB,4BAAqB,WAAW,CAAC;AAAA,IACtF;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC;AAAA,MACrC,YAAY;AAAA,MACZ,UAAU,CAAI,6BAAmB,CAAC;AAAA,QAChC,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC,CAAC,CAAC;AAAA,IACL,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,eAAe,CAAC;AAAA,IACtF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,CAAC,GAAG,IAAI;AACV,GAAG;AAOH,IAAM,gBAAgB,IAAI,eAAe,aAAa;AAKtD,IAAM,UAAU,IAAI,eAAe,SAAS;AAE5C,IAAM,cAAN,MAAM,qBAAoB,UAAU;AAAA,EAClC,YAAY,aAAa,kBAAkB,aAAa;AACtD,UAAM,aAAa,gBAAgB;AACnC,SAAK,cAAc;AAAA,EACrB;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,oBAAoB,mBAAmB;AAC1D,aAAO,KAAK,qBAAqB,cAAgB,4BAAqB,WAAW,GAAM,4BAAqB,gBAAgB,GAAM,4BAAkB,SAAS,CAAC,CAAC;AAAA,IACjK;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,GAAG,CAAC,IAAI,eAAe,EAAE,CAAC;AAAA,MAC9D,YAAY;AAAA,MACZ,UAAU,CAAI,6BAAmB,CAAC;AAAA,QAChC,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC,CAAC,GAAM,oCAA0B;AAAA,IACpC,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,aAAa,CAAC;AAAA,IACpF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,OAAO;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAMH,IAAM,gBAAgB,IAAI,eAAe,eAAe;AACxD,IAAM,SAAN,MAAM,QAAO;AAAA;AAAA,EAEX,IAAI,gBAAgB;AAClB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,cAAc,OAAO;AACvB,SAAK,uBAAuB,KAAK;AAAA,EACnC;AAAA;AAAA,EAEA,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EACd;AAAA,EACA,YAAY,mBAAmB,kBAAkB;AAC/C,SAAK,oBAAoB;AACzB,SAAK,mBAAmB;AAExB,SAAK,WAAW;AAIhB,SAAK,mBAAmB;AAExB,SAAK,YAAY;AAEjB,SAAK,iBAAiB;AAEtB,SAAK,gBAAgB,IAAI,QAAQ;AAKjC,SAAK,WAAW;AAKhB,SAAK,SAAS;AAId,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,YAAY,SAAS;AACnB,QAAI,QAAQ,eAAe,WAAW,KAAK,QAAQ,eAAe,UAAU,GAAG;AAC7E,WAAK,cAAc,KAAK;AAAA,IAC1B;AAAA,EACF;AAAA,EACA,cAAc;AACZ,SAAK,cAAc,SAAS;AAAA,EAC9B;AAAA,EACA,WAAW;AACT,SAAK,iBAAiB,IAAI,eAAe,KAAK,oBAAoB,KAAK,kBAAkB,KAAK,iBAAiB;AAAA,EACjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,uBAAuB,OAAO;AAK5B,QAAI,SAAS,MAAM,gBAAgB,MAAM;AACvC,WAAK,iBAAiB;AAAA,IACxB;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,eAAe,mBAAmB;AACrD,aAAO,KAAK,qBAAqB,SAAW,4BAAqB,gBAAgB,GAAM,4BAAkB,eAAe,CAAC,CAAC;AAAA,IAC5H;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,SAAS,CAAC;AAAA,MACvB,gBAAgB,SAAS,sBAAsB,IAAI,KAAK,UAAU;AAChE,YAAI,KAAK,GAAG;AACV,UAAG,yBAAe,UAAU,aAAa,CAAC;AAC1C,UAAG,yBAAe,UAAU,eAAe,GAAG,WAAW;AAAA,QAC3D;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,gBAAgB,GAAG;AACpE,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,mBAAmB,GAAG;AAAA,QACzE;AAAA,MACF;AAAA,MACA,WAAW,SAAS,aAAa,IAAI,KAAK;AACxC,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,aAAa,CAAC;AAAA,QAC/B;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,mBAAmB,GAAG;AAAA,QACzE;AAAA,MACF;AAAA,MACA,WAAW,CAAC,UAAU,EAAE;AAAA,MACxB,QAAQ;AAAA,QACN,UAAU,CAAC,GAAG,YAAY,YAAY,gBAAgB;AAAA,QACtD,WAAW,CAAC,GAAG,SAAS,WAAW;AAAA,QACnC,WAAW,CAAC,GAAG,cAAc,WAAW;AAAA,QACxC,gBAAgB,CAAC,GAAG,mBAAmB,gBAAgB;AAAA,QACvD,YAAY;AAAA,QACZ,WAAW;AAAA,MACb;AAAA,MACA,UAAU,CAAC,QAAQ;AAAA,MACnB,YAAY;AAAA,MACZ,UAAU,CAAI,6BAAmB,CAAC;AAAA,QAChC,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC,CAAC,GAAM,oCAA6B,gCAAyB,6BAAmB;AAAA,MACjF,oBAAoBJ;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,UAAU,SAAS,gBAAgB,IAAI,KAAK;AAC1C,YAAI,KAAK,GAAG;AACV,UAAG,0BAAgB;AACnB,UAAG,qBAAW,GAAG,+BAA+B,GAAG,GAAG,aAAa;AAAA,QACrE;AAAA,MACF;AAAA,MACA,eAAe;AAAA,IACjB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,QAAQ,CAAC;AAAA,IAC/E,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,oBAAkB;AAAA,MACjC,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,YAAY;AAAA,MACZ,MAAM;AAAA;AAAA;AAAA,QAGJ,UAAU;AAAA,MACZ;AAAA,MACA,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,IACtB,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,MACN,MAAM,CAAC,eAAe;AAAA,QACpB,MAAM;AAAA,QACN,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,QAClB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,OAAO;AAAA,IAChB,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAGH,IAAM,eAAe;AAErB,IAAM,sBAAsB;AAK5B,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,QAAQ;AAClB,SAAK,SAAS;AAAA,EAChB;AAAA;AAAA,EAEA,OAAO;AACL,SAAK,OAAO,QAAQ,UAAQ,KAAK,iBAAiB,CAAC;AAAA,EACrD;AAAA;AAAA,EAEA,eAAe,SAAS;AACtB,UAAM,oBAAoB,KAAK,OAAO,KAAK,UAAQ,KAAK,WAAW,kBAAkB,OAAO;AAC5F,UAAM,cAAc,KAAK;AACzB,QAAI,sBAAsB,aAAa;AACrC;AAAA,IACF;AACA,iBAAa,iBAAiB;AAC9B,QAAI,mBAAmB;AACrB,YAAM,UAAU,aAAa,WAAW,cAAc,wBAAwB;AAE9E,wBAAkB,eAAe,OAAO;AACxC,WAAK,eAAe;AAAA,IACtB;AAAA,EACF;AACF;AACA,IAAM,aAAN,MAAM,YAAW;AAAA,EACf,cAAc;AACZ,SAAK,cAAc,OAAO,UAAU;AACpC,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA,EAEA,IAAI,qBAAqB;AACvB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,mBAAmB,UAAU;AAC/B,QAAI,KAAK,kBAAkB,UAAU;AACnC,WAAK,gBAAgB;AACrB,UAAI,KAAK,gBAAgB;AACvB,aAAK,qBAAqB;AAAA,MAC5B;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,eAAe,6BAA6B;AAC1C,UAAM,UAAU,KAAK,YAAY;AAGjC,QAAI,CAAC,+BAA+B,CAAC,QAAQ,yBAAyB,CAAC,KAAK,uBAAuB;AACjG,cAAQ,UAAU,IAAI,YAAY;AAClC;AAAA,IACF;AAIA,UAAM,oBAAoB,QAAQ,sBAAsB;AACxD,UAAM,aAAa,4BAA4B,QAAQ,kBAAkB;AACzE,UAAM,YAAY,4BAA4B,OAAO,kBAAkB;AACvE,YAAQ,UAAU,IAAI,mBAAmB;AACzC,SAAK,sBAAsB,MAAM,YAAY,aAAa,cAAc,SAAS,cAAc,UAAU,GAAG;AAE5G,YAAQ,sBAAsB;AAC9B,YAAQ,UAAU,OAAO,mBAAmB;AAC5C,YAAQ,UAAU,IAAI,YAAY;AAClC,SAAK,sBAAsB,MAAM,YAAY,aAAa,EAAE;AAAA,EAC9D;AAAA;AAAA,EAEA,mBAAmB;AACjB,SAAK,YAAY,cAAc,UAAU,OAAO,YAAY;AAAA,EAC9D;AAAA;AAAA,EAEA,WAAW;AACT,SAAK,qBAAqB;AAAA,EAC5B;AAAA;AAAA,EAEA,cAAc;AACZ,SAAK,gBAAgB,OAAO;AAC5B,SAAK,iBAAiB,KAAK,wBAAwB;AAAA,EACrD;AAAA;AAAA,EAEA,uBAAuB;AACrB,UAAM,eAAe,KAAK,YAAY,cAAc,iBAAiB;AACrE,UAAM,gBAAgB,KAAK,iBAAiB,aAAa,cAAc,MAAM;AAC7E,UAAM,uBAAuB,KAAK,wBAAwB,aAAa,cAAc,MAAM;AAC3F,kBAAc,YAAY;AAC1B,yBAAqB,YAAY;AACjC,kBAAc,YAAY,KAAK,qBAAqB;AACpD,SAAK,qBAAqB;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,uBAAuB;AACrB,QAAI,CAAC,KAAK,mBAAmB,OAAO,cAAc,eAAe,YAAY;AAC3E,YAAM,MAAM,6DAA6D;AAAA,IAC3E;AACA,UAAM,gBAAgB,KAAK,gBAAgB,KAAK,YAAY,cAAc,cAAc,mBAAmB,IAAI,KAAK,YAAY;AAChI,QAAI,CAAC,kBAAkB,OAAO,cAAc,eAAe,YAAY;AACrE,YAAM,MAAM,qCAAqC;AAAA,IACnD;AACA,kBAAc,YAAY,KAAK,cAAc;AAAA,EAC/C;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,mBAAmB,mBAAmB;AACzD,aAAO,KAAK,qBAAqB,aAAY;AAAA,IAC/C;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,QAAQ;AAAA,QACN,oBAAoB,CAAC,GAAG,sBAAsB,sBAAsB,gBAAgB;AAAA,MACtF;AAAA,MACA,UAAU,CAAI,kCAAwB;AAAA,IACxC,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,YAAY,CAAC;AAAA,IACnF,MAAM;AAAA,EACR,CAAC,GAAG,MAAM;AAAA,IACR,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAKH,SAAS,kCAAkC;AACzC,QAAM,SAAS,cAAY;AAAA,IACzB,MAAM,WAAW,QAAQ,cAAc,KAAK,OAAO;AAAA,IACnD,OAAO,WAAW,QAAQ,eAAe,KAAK,OAAO;AAAA,EACvD;AACA,SAAO;AACT;AAEA,IAAM,0BAA0B,IAAI,eAAe,uBAAuB;AAAA,EACxE,YAAY;AAAA,EACZ,SAAS;AACX,CAAC;AAMD,IAAM,qBAAN,MAAM,4BAA2B,WAAW;AAAA,EAC1C,YAAY,YAAY;AACtB,UAAM;AACN,SAAK,aAAa;AAElB,SAAK,WAAW;AAAA,EAClB;AAAA;AAAA,EAEA,QAAQ;AACN,SAAK,WAAW,cAAc,MAAM;AAAA,EACtC;AAAA,EACA,gBAAgB;AACd,WAAO,KAAK,WAAW,cAAc;AAAA,EACvC;AAAA,EACA,iBAAiB;AACf,WAAO,KAAK,WAAW,cAAc;AAAA,EACvC;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,2BAA2B,mBAAmB;AACjE,aAAO,KAAK,qBAAqB,qBAAuB,4BAAqB,UAAU,CAAC;AAAA,IAC1F;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,CAAC;AAAA,MAC1C,UAAU;AAAA,MACV,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,iBAAiB,CAAC,CAAC,IAAI,QAAQ;AAC9C,UAAG,sBAAY,wBAAwB,IAAI,QAAQ;AAAA,QACrD;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,UAAU,CAAC,GAAG,YAAY,YAAY,gBAAgB;AAAA,MACxD;AAAA,MACA,YAAY;AAAA,MACZ,UAAU,CAAI,oCAA6B,oCAA0B;AAAA,IACvE,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,gCAAgC;AAAA,QAChC,wBAAwB;AAAA,MAC1B;AAAA,MACA,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAGH,IAAMK,+BAA8B,gCAAgC;AAAA,EAClE,SAAS;AACX,CAAC;AAKD,IAAM,sBAAsB;AAK5B,IAAM,yBAAyB;AAK/B,IAAM,wBAAN,MAAM,uBAAsB;AAAA;AAAA,EAE1B,IAAI,gBAAgB;AAClB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,cAAc,GAAG;AACnB,UAAM,QAAQ,MAAM,CAAC,IAAI,IAAI;AAC7B,QAAI,KAAK,kBAAkB,OAAO;AAChC,WAAK,wBAAwB;AAC7B,WAAK,iBAAiB;AACtB,UAAI,KAAK,aAAa;AACpB,aAAK,YAAY,iBAAiB,KAAK;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AAAA,EACA,YAAY,aAAa,oBAAoB,gBAAgB,MAAM,SAAS,WAAW,gBAAgB;AACrG,SAAK,cAAc;AACnB,SAAK,qBAAqB;AAC1B,SAAK,iBAAiB;AACtB,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,iBAAiB;AAEtB,SAAK,kBAAkB;AAEvB,SAAK,wBAAwB;AAE7B,SAAK,aAAa,IAAI,QAAQ;AAE9B,SAAK,0BAA0B;AAE/B,SAAK,sBAAsB;AAE3B,SAAK,uBAAuB;AAE5B,SAAK,iBAAiB,IAAI,QAAQ;AAKlC,SAAK,oBAAoB;AACzB,SAAK,iBAAiB;AAEtB,SAAK,qBAAqB,IAAI,aAAa;AAE3C,SAAK,eAAe,IAAI,aAAa;AACrC,SAAK,wBAAwB,OAAO,oBAAoB;AACxD,SAAK,YAAY,OAAO,QAAQ;AAEhC,YAAQ,kBAAkB,MAAM;AAC9B,gBAAU,YAAY,eAAe,YAAY,EAAE,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM;AAClG,aAAK,cAAc;AAAA,MACrB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,kBAAkB;AAEhB,cAAU,KAAK,mBAAmB,eAAe,cAAcA,4BAA2B,EAAE,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM;AAC3I,WAAK,sBAAsB,QAAQ;AAAA,IACrC,CAAC;AACD,cAAU,KAAK,eAAe,eAAe,cAAcA,4BAA2B,EAAE,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM;AACvI,WAAK,sBAAsB,OAAO;AAAA,IACpC,CAAC;AAAA,EACH;AAAA,EACA,qBAAqB;AACnB,UAAM,YAAY,KAAK,OAAO,KAAK,KAAK,SAAS,GAAG,KAAK;AAKzD,UAAM,SAAS,KAAK,sBAAsB,QAAQ,KAAK,YAAY,aAAa,EAAE,KAAK,aAAa,EAAE,GAAG,UAAU,KAAK,UAAU,CAAC;AAInI,UAAM,iBAAiB,KAAK,eAAe,OAAO,GAAG,EAAE,KAAK,UAAU,KAAK,UAAU,CAAC;AACtF,UAAM,UAAU,MAAM;AACpB,WAAK,iBAAiB;AACtB,WAAK,0BAA0B;AAAA,IACjC;AACA,SAAK,cAAc,IAAI,gBAAgB,KAAK,MAAM,EAAE,0BAA0B,KAAK,oBAAoB,CAAC,EAAE,eAAe,EAAE,SAAS,EAEnI,cAAc,MAAM,KAAK;AAC1B,SAAK,YAAY,iBAAiB,KAAK,cAAc;AAIrD,oBAAgB,SAAS;AAAA,MACvB,UAAU,KAAK;AAAA,IACjB,CAAC;AAGD,UAAM,WAAW,gBAAgB,QAAQ,KAAK,OAAO,SAAS,KAAK,cAAc,CAAC,EAAE,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM;AAInI,WAAK,QAAQ,IAAI,MAAM;AACrB,gBAAQ,QAAQ,EAAE,KAAK,MAAM;AAE3B,eAAK,kBAAkB,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,sBAAsB,GAAG,KAAK,eAAe,CAAC;AAC/F,kBAAQ;AAAA,QACV,CAAC;AAAA,MACH,CAAC;AACD,WAAK,YAAY,0BAA0B,KAAK,oBAAoB,CAAC;AAAA,IACvE,CAAC;AAID,SAAK,YAAY,OAAO,UAAU,mBAAiB;AACjD,WAAK,aAAa,KAAK,aAAa;AACpC,WAAK,aAAa,aAAa;AAAA,IACjC,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,gBAAgB;AACd,QAAI,OAAO,mBAAmB,YAAY;AACxC,aAAO;AAAA,IACT;AACA,WAAO,KAAK,OAAO,QAAQ;AAAA,MAAK,UAAU,KAAK,MAAM;AAAA,MAAG,UAAU,cAAY,IAAI,WAAW,cAAY,KAAK,QAAQ,kBAAkB,MAAM;AAC5I,cAAM,iBAAiB,IAAI,eAAe,aAAW,SAAS,KAAK,OAAO,CAAC;AAC3E,iBAAS,QAAQ,UAAQ,eAAe,QAAQ,KAAK,WAAW,aAAa,CAAC;AAC9E,eAAO,MAAM;AACX,yBAAe,WAAW;AAAA,QAC5B;AAAA,MACF,CAAC,CAAC,CAAC;AAAA;AAAA;AAAA,MAGH,KAAK,CAAC;AAAA;AAAA;AAAA,MAGN,OAAO,aAAW,QAAQ,KAAK,OAAK,EAAE,YAAY,QAAQ,KAAK,EAAE,YAAY,SAAS,CAAC,CAAC;AAAA,IAAC;AAAA,EAC3F;AAAA,EACA,wBAAwB;AAEtB,QAAI,KAAK,kBAAkB,KAAK,OAAO,QAAQ;AAC7C,WAAK,iBAAiB;AACtB,WAAK,iBAAiB,KAAK,OAAO;AAClC,WAAK,mBAAmB,aAAa;AAAA,IACvC;AAGA,QAAI,KAAK,uBAAuB;AAC9B,WAAK,eAAe,KAAK,cAAc;AACvC,WAAK,wBAAwB;AAC7B,WAAK,0BAA0B;AAC/B,WAAK,wBAAwB;AAC7B,WAAK,mBAAmB,aAAa;AAAA,IACvC;AAGA,QAAI,KAAK,wBAAwB;AAC/B,WAAK,yBAAyB;AAC9B,WAAK,yBAAyB;AAC9B,WAAK,mBAAmB,aAAa;AAAA,IACvC;AAAA,EACF;AAAA,EACA,cAAc;AACZ,SAAK,aAAa,QAAQ;AAC1B,SAAK,WAAW,KAAK;AACrB,SAAK,WAAW,SAAS;AACzB,SAAK,eAAe,SAAS;AAAA,EAC/B;AAAA;AAAA,EAEA,eAAe,OAAO;AAEpB,QAAI,eAAe,KAAK,GAAG;AACzB;AAAA,IACF;AACA,YAAQ,MAAM,SAAS;AAAA,MACrB,KAAK;AAAA,MACL,KAAK;AACH,YAAI,KAAK,eAAe,KAAK,eAAe;AAC1C,gBAAM,OAAO,KAAK,OAAO,IAAI,KAAK,UAAU;AAC5C,cAAI,QAAQ,CAAC,KAAK,UAAU;AAC1B,iBAAK,mBAAmB,KAAK,KAAK,UAAU;AAC5C,iBAAK,cAAc,KAAK;AAAA,UAC1B;AAAA,QACF;AACA;AAAA,MACF;AACE,aAAK,YAAY,UAAU,KAAK;AAAA,IACpC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,oBAAoB;AAClB,UAAM,cAAc,KAAK,YAAY,cAAc;AAInD,QAAI,gBAAgB,KAAK,qBAAqB;AAC5C,WAAK,sBAAsB,eAAe;AAG1C,WAAK,QAAQ,IAAI,MAAM;AACrB,aAAK,iBAAiB;AACtB,aAAK,0BAA0B;AAC/B,aAAK,mBAAmB,aAAa;AAAA,MACvC,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,mBAAmB;AACjB,SAAK,wBAAwB;AAC7B,SAAK,wBAAwB;AAC7B,SAAK,yBAAyB;AAAA,EAChC;AAAA;AAAA,EAEA,IAAI,aAAa;AACf,WAAO,KAAK,cAAc,KAAK,YAAY,kBAAkB;AAAA,EAC/D;AAAA;AAAA,EAEA,IAAI,WAAW,OAAO;AACpB,QAAI,CAAC,KAAK,cAAc,KAAK,KAAK,KAAK,eAAe,SAAS,CAAC,KAAK,aAAa;AAChF;AAAA,IACF;AACA,SAAK,YAAY,cAAc,KAAK;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc,OAAO;AACnB,WAAO,KAAK,SAAS,CAAC,CAAC,KAAK,OAAO,QAAQ,EAAE,KAAK,IAAI;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,UAAU;AACrB,QAAI,KAAK,yBAAyB;AAChC,WAAK,eAAe,QAAQ;AAAA,IAC9B;AACA,QAAI,KAAK,UAAU,KAAK,OAAO,QAAQ;AACrC,WAAK,OAAO,QAAQ,EAAE,QAAQ,EAAE,MAAM;AAItC,YAAM,cAAc,KAAK,kBAAkB;AAC3C,YAAM,MAAM,KAAK,oBAAoB;AACrC,UAAI,OAAO,OAAO;AAChB,oBAAY,aAAa;AAAA,MAC3B,OAAO;AACL,oBAAY,aAAa,YAAY,cAAc,YAAY;AAAA,MACjE;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,sBAAsB;AACpB,WAAO,KAAK,QAAQ,KAAK,KAAK,UAAU,QAAQ,QAAQ;AAAA,EAC1D;AAAA;AAAA,EAEA,2BAA2B;AACzB,QAAI,KAAK,mBAAmB;AAC1B;AAAA,IACF;AACA,UAAM,iBAAiB,KAAK;AAC5B,UAAM,aAAa,KAAK,oBAAoB,MAAM,QAAQ,CAAC,iBAAiB;AAO5E,SAAK,SAAS,cAAc,MAAM,YAAY,cAAc,KAAK,MAAM,UAAU,CAAC;AAKlF,QAAI,KAAK,UAAU,WAAW,KAAK,UAAU,MAAM;AACjD,WAAK,kBAAkB,cAAc,aAAa;AAAA,IACpD;AAAA,EACF;AAAA;AAAA,EAEA,IAAI,iBAAiB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,eAAe,OAAO;AACxB,SAAK,UAAU,KAAK;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,cAAc,WAAW;AACvB,UAAM,aAAa,KAAK,kBAAkB,cAAc;AAExD,UAAM,gBAAgB,aAAa,WAAW,KAAK,KAAK,aAAa;AACrE,WAAO,KAAK,UAAU,KAAK,kBAAkB,YAAY;AAAA,EAC3D;AAAA;AAAA,EAEA,sBAAsB,WAAW;AAC/B,SAAK,cAAc;AACnB,SAAK,cAAc,SAAS;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,eAAe,YAAY;AACzB,QAAI,KAAK,mBAAmB;AAC1B;AAAA,IACF;AACA,UAAM,gBAAgB,KAAK,SAAS,KAAK,OAAO,QAAQ,EAAE,UAAU,IAAI;AACxE,QAAI,CAAC,eAAe;AAClB;AAAA,IACF;AAEA,UAAM,aAAa,KAAK,kBAAkB,cAAc;AACxD,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,cAAc,WAAW;AAC7B,QAAI,gBAAgB;AACpB,QAAI,KAAK,oBAAoB,KAAK,OAAO;AACvC,uBAAiB;AACjB,sBAAgB,iBAAiB;AAAA,IACnC,OAAO;AACL,sBAAgB,KAAK,cAAc,cAAc,cAAc;AAC/D,uBAAiB,gBAAgB;AAAA,IACnC;AACA,UAAM,mBAAmB,KAAK;AAC9B,UAAM,kBAAkB,KAAK,iBAAiB;AAC9C,QAAI,iBAAiB,kBAAkB;AAErC,WAAK,kBAAkB,mBAAmB;AAAA,IAC5C,WAAW,gBAAgB,iBAAiB;AAE1C,WAAK,kBAAkB,KAAK,IAAI,gBAAgB,iBAAiB,iBAAiB,gBAAgB;AAAA,IACpG;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,0BAA0B;AACxB,QAAI,KAAK,mBAAmB;AAC1B,WAAK,0BAA0B;AAAA,IACjC,OAAO;AACL,YAAM,cAAc,KAAK,cAAc,cAAc;AACrD,YAAM,iBAAiB,KAAK,YAAY,cAAc;AAStD,YAAM,YAAY,cAAc,kBAAkB;AAClD,UAAI,CAAC,WAAW;AACd,aAAK,iBAAiB;AAAA,MACxB;AACA,UAAI,cAAc,KAAK,yBAAyB;AAC9C,aAAK,0BAA0B;AAC/B,aAAK,mBAAmB,aAAa;AAAA,MACvC;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,0BAA0B;AACxB,QAAI,KAAK,mBAAmB;AAC1B,WAAK,sBAAsB,KAAK,uBAAuB;AAAA,IACzD,OAAO;AAEL,WAAK,uBAAuB,KAAK,kBAAkB;AACnD,WAAK,sBAAsB,KAAK,kBAAkB,KAAK,sBAAsB;AAC7E,WAAK,mBAAmB,aAAa;AAAA,IACvC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,wBAAwB;AACtB,UAAM,kBAAkB,KAAK,cAAc,cAAc;AACzD,UAAM,aAAa,KAAK,kBAAkB,cAAc;AACxD,WAAO,kBAAkB,cAAc;AAAA,EACzC;AAAA;AAAA,EAEA,4BAA4B;AAC1B,UAAM,eAAe,KAAK,UAAU,KAAK,OAAO,SAAS,KAAK,OAAO,QAAQ,EAAE,KAAK,aAAa,IAAI;AACrG,UAAM,uBAAuB,eAAe,aAAa,WAAW,gBAAgB;AACpF,QAAI,sBAAsB;AACxB,WAAK,QAAQ,eAAe,oBAAoB;AAAA,IAClD,OAAO;AACL,WAAK,QAAQ,KAAK;AAAA,IACpB;AAAA,EACF;AAAA;AAAA,EAEA,gBAAgB;AACd,SAAK,eAAe,KAAK;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,sBAAsB,WAAW,YAAY;AAG3C,QAAI,cAAc,WAAW,UAAU,QAAQ,WAAW,WAAW,GAAG;AACtE;AAAA,IACF;AAEA,SAAK,cAAc;AAEnB,UAAM,qBAAqB,sBAAsB,EAEhD,KAAK,UAAU,MAAM,KAAK,gBAAgB,KAAK,UAAU,CAAC,CAAC,EAAE,UAAU,MAAM;AAC5E,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI,KAAK,cAAc,SAAS;AAEhC,UAAI,aAAa,KAAK,YAAY,mBAAmB;AACnD,aAAK,cAAc;AAAA,MACrB;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU,UAAU;AAClB,QAAI,KAAK,mBAAmB;AAC1B,aAAO;AAAA,QACL,mBAAmB;AAAA,QACnB,UAAU;AAAA,MACZ;AAAA,IACF;AACA,UAAM,oBAAoB,KAAK,sBAAsB;AACrD,SAAK,kBAAkB,KAAK,IAAI,GAAG,KAAK,IAAI,mBAAmB,QAAQ,CAAC;AAGxE,SAAK,yBAAyB;AAC9B,SAAK,wBAAwB;AAC7B,WAAO;AAAA,MACL;AAAA,MACA,UAAU,KAAK;AAAA,IACjB;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,8BAA8B,mBAAmB;AACpE,aAAO,KAAK,qBAAqB,wBAA0B,4BAAqB,UAAU,GAAM,4BAAqB,iBAAiB,GAAM,4BAAqB,aAAa,GAAM,4BAAqB,gBAAgB,CAAC,GAAM,4BAAqB,MAAM,GAAM,4BAAqB,QAAQ,GAAM,4BAAkB,uBAAuB,CAAC,CAAC;AAAA,IACjV;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,QAAQ;AAAA,QACN,mBAAmB,CAAC,GAAG,qBAAqB,qBAAqB,gBAAgB;AAAA,QACjF,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,eAAe;AAAA,MACtE;AAAA,MACA,SAAS;AAAA,QACP,oBAAoB;AAAA,QACpB,cAAc;AAAA,MAChB;AAAA,MACA,UAAU,CAAI,kCAAwB;AAAA,IACxC,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,uBAAuB,CAAC;AAAA,IAC9F,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,qBAAqB;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AASH,IAAM,eAAN,MAAM,sBAAqB,sBAAsB;AAAA,EAC/C,YAAY,YAAY,mBAAmB,eAAe,KAAK,QAAQ,UAAU,eAAe;AAC9F,UAAM,YAAY,mBAAmB,eAAe,KAAK,QAAQ,UAAU,aAAa;AAExF,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,qBAAqB;AACnB,SAAK,UAAU,IAAI,UAAU,KAAK,MAAM;AACxC,UAAM,mBAAmB;AAAA,EAC3B;AAAA,EACA,cAAc,OAAO;AACnB,UAAM,eAAe;AAAA,EACvB;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,qBAAqB,mBAAmB;AAC3D,aAAO,KAAK,qBAAqB,eAAiB,4BAAqB,UAAU,GAAM,4BAAqB,iBAAiB,GAAM,4BAAqB,aAAa,GAAM,4BAAqB,gBAAgB,CAAC,GAAM,4BAAqB,MAAM,GAAM,4BAAqB,QAAQ,GAAM,4BAAkB,uBAAuB,CAAC,CAAC;AAAA,IACxU;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,gBAAgB,CAAC;AAAA,MAC9B,gBAAgB,SAAS,4BAA4B,IAAI,KAAK,UAAU;AACtE,YAAI,KAAK,GAAG;AACV,UAAG,yBAAe,UAAU,oBAAoB,CAAC;AAAA,QACnD;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,SAAS;AAAA,QAC5D;AAAA,MACF;AAAA,MACA,WAAW,SAAS,mBAAmB,IAAI,KAAK;AAC9C,YAAI,KAAK,GAAG;AACV,UAAG,sBAAYJ,MAAK,CAAC;AACrB,UAAG,sBAAYC,MAAK,CAAC;AACrB,UAAG,sBAAYC,MAAK,CAAC;AACrB,UAAG,sBAAYC,MAAK,CAAC;AACrB,UAAG,sBAAY,KAAK,CAAC;AAAA,QACvB;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,oBAAoB,GAAG;AACxE,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,WAAW,GAAG;AAC/D,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,gBAAgB,GAAG;AACpE,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,iBAAiB,GAAG;AACrE,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,qBAAqB,GAAG;AAAA,QAC3E;AAAA,MACF;AAAA,MACA,WAAW,CAAC,GAAG,oBAAoB;AAAA,MACnC,UAAU;AAAA,MACV,cAAc,SAAS,0BAA0B,IAAI,KAAK;AACxD,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,kDAAkD,IAAI,uBAAuB,EAAE,0BAA0B,IAAI,oBAAoB,KAAK,KAAK;AAAA,QAC5J;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,WAAW,CAAC,GAAG,cAAc,WAAW;AAAA,QACxC,gBAAgB,CAAC,GAAG,mBAAmB,gBAAgB;AAAA,QACvD,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,gBAAgB;AAAA,MACvE;AAAA,MACA,YAAY;AAAA,MACZ,UAAU,CAAI,oCAA6B,sCAA+B,6BAAmB;AAAA,MAC7F,oBAAoBJ;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,CAAC,CAAC,qBAAqB,EAAE,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,cAAc,IAAI,GAAG,iCAAiC,wCAAwC,GAAG,SAAS,aAAa,YAAY,mBAAmB,GAAG,CAAC,GAAG,uCAAuC,GAAG,CAAC,GAAG,+BAA+B,GAAG,SAAS,GAAG,CAAC,QAAQ,WAAW,GAAG,oBAAoB,GAAG,mBAAmB,GAAG,CAAC,GAAG,oBAAoB,GAAG,CAAC,cAAc,IAAI,GAAG,iCAAiC,uCAAuC,GAAG,aAAa,SAAS,YAAY,mBAAmB,CAAC;AAAA,MAC5mB,UAAU,SAAS,sBAAsB,IAAI,KAAK;AAChD,YAAI,KAAK,GAAG;AACV,gBAAM,MAAS,2BAAiB;AAChC,UAAG,0BAAgB;AACnB,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,qBAAW,SAAS,SAAS,6CAA6C;AAC3E,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,sBAAsB,QAAQ,CAAC;AAAA,UAC3D,CAAC,EAAE,aAAa,SAAS,+CAA+C,QAAQ;AAC9E,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,sBAAsB,UAAU,MAAM,CAAC;AAAA,UACnE,CAAC,EAAE,YAAY,SAAS,gDAAgD;AACtE,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,cAAc,CAAC;AAAA,UAC3C,CAAC;AACD,UAAG,oBAAU,GAAG,OAAO,CAAC;AACxB,UAAG,uBAAa;AAChB,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,qBAAW,WAAW,SAAS,6CAA6C,QAAQ;AACrF,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,eAAe,MAAM,CAAC;AAAA,UAClD,CAAC;AACD,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,qBAAW,qBAAqB,SAAS,yDAAyD;AACnG,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,kBAAkB,CAAC;AAAA,UAC/C,CAAC;AACD,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,uBAAa,CAAC;AACjB,UAAG,uBAAa,EAAE,EAAE;AACpB,UAAG,yBAAe,IAAI,OAAO,IAAI,CAAC;AAClC,UAAG,qBAAW,aAAa,SAAS,gDAAgD,QAAQ;AAC1F,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,sBAAsB,SAAS,MAAM,CAAC;AAAA,UAClE,CAAC,EAAE,SAAS,SAAS,8CAA8C;AACjE,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,sBAAsB,OAAO,CAAC;AAAA,UAC1D,CAAC,EAAE,YAAY,SAAS,iDAAiD;AACvE,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,cAAc,CAAC;AAAA,UAC3C,CAAC;AACD,UAAG,oBAAU,IAAI,OAAO,CAAC;AACzB,UAAG,uBAAa;AAAA,QAClB;AACA,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,0CAA0C,IAAI,oBAAoB;AACjF,UAAG,qBAAW,qBAAqB,IAAI,wBAAwB,IAAI,aAAa;AAChF,UAAG,oBAAU,CAAC;AACd,UAAG,sBAAY,2BAA2B,IAAI,mBAAmB,gBAAgB;AACjF,UAAG,oBAAU,CAAC;AACd,UAAG,sBAAY,cAAc,IAAI,aAAa,IAAI,EAAE,mBAAmB,IAAI,kBAAkB,IAAI;AACjG,UAAG,oBAAU,CAAC;AACd,UAAG,sBAAY,0CAA0C,IAAI,mBAAmB;AAChF,UAAG,qBAAW,qBAAqB,IAAI,uBAAuB,IAAI,aAAa;AAAA,QACjF;AAAA,MACF;AAAA,MACA,cAAc,CAAC,WAAW,iBAAiB;AAAA,MAC3C,QAAQ,CAAC,i1FAAi1F;AAAA,MAC11F,eAAe;AAAA,IACjB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,eAAe,oBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,0DAA0D;AAAA,QAC1D,kCAAkC;AAAA,MACpC;AAAA,MACA,YAAY;AAAA,MACZ,SAAS,CAAC,WAAW,iBAAiB;AAAA,MACtC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACV,QAAQ,CAAC,i1FAAi1F;AAAA,IAC51F,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,qBAAqB;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,QACzB,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,QACzB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,QAChB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,QACrB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,eAAe;AAAA,IACxB,CAAC;AAAA,IACD,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,MACN,MAAM,CAAC,mBAAmB;AAAA,IAC5B,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAGH,IAAM,kBAAkB,IAAI,eAAe,iBAAiB;AAM5D,IAAM,oBAAoB;AAAA;AAAA,EAExB,cAAc,QAAQ,gBAAgB;AAAA;AAAA,IAEtC,MAAM,yDAAyD,MAAM;AAAA,MACnE,WAAW;AAAA,MACX,YAAY;AAAA,IACd,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,IAKF,MAAM,QAAQ,MAAM;AAAA,MAClB,WAAW;AAAA,MACX,WAAW;AAAA;AAAA;AAAA,MAGX,YAAY;AAAA,IACd,CAAC,CAAC;AAAA,IAAG,MAAM,SAAS,MAAM;AAAA,MACxB,WAAW;AAAA,MACX,WAAW;AAAA,MACX,YAAY;AAAA,IACd,CAAC,CAAC;AAAA,IAAG,WAAW,0DAA0D,QAAQ,sDAAsD,CAAC;AAAA,IAAG,WAAW,8BAA8B,CAAC,MAAM;AAAA,MAC1L,WAAW;AAAA,MACX,YAAY;AAAA,IACd,CAAC,GAAG,QAAQ,sDAAsD,CAAC,CAAC;AAAA,IAAG,WAAW,+BAA+B,CAAC,MAAM;AAAA,MACtH,WAAW;AAAA,MACX,YAAY;AAAA,IACd,CAAC,GAAG,QAAQ,sDAAsD,CAAC,CAAC;AAAA,EAAC,CAAC;AACxE;AAMA,IAAM,mBAAN,MAAM,0BAAyB,gBAAgB;AAAA,EAC7C,YAAY,0BAA0B,kBAAkB,OAAO,WAAW;AACxE,UAAM,0BAA0B,kBAAkB,SAAS;AAC3D,SAAK,QAAQ;AAEb,SAAK,gBAAgB,aAAa;AAElC,SAAK,cAAc,aAAa;AAAA,EAClC;AAAA;AAAA,EAEA,WAAW;AACT,UAAM,SAAS;AACf,SAAK,gBAAgB,KAAK,MAAM,iBAAiB,KAAK,UAAU,KAAK,MAAM,kBAAkB,KAAK,MAAM,SAAS,CAAC,CAAC,EAAE,UAAU,iBAAe;AAC5I,UAAI,KAAK,MAAM,YAAY,eAAe,CAAC,KAAK,YAAY,GAAG;AAC7D,aAAK,OAAO,KAAK,MAAM,QAAQ;AAAA,MACjC;AAAA,IACF,CAAC;AACD,SAAK,cAAc,KAAK,MAAM,oBAAoB,UAAU,MAAM;AAChE,UAAI,CAAC,KAAK,MAAM,iBAAiB;AAC/B,aAAK,OAAO;AAAA,MACd;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,cAAc;AACZ,UAAM,YAAY;AAClB,SAAK,cAAc,YAAY;AAC/B,SAAK,YAAY,YAAY;AAAA,EAC/B;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,yBAAyB,mBAAmB;AAC/D,aAAO,KAAK,qBAAqB,mBAAqB,4BAAqB,0BAAwB,GAAM,4BAAqB,gBAAgB,GAAM,4BAAkB,WAAW,MAAM,UAAU,CAAC,GAAM,4BAAkB,QAAQ,CAAC;AAAA,IACrO;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,kBAAkB,EAAE,CAAC;AAAA,MACtC,YAAY;AAAA,MACZ,UAAU,CAAI,oCAA0B;AAAA,IAC1C,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,WAAW,MAAM,UAAU,CAAC;AAAA,IACrC,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,IAAM,aAAN,MAAM,YAAW;AAAA;AAAA,EAEf,IAAI,SAAS,UAAU;AACrB,SAAK,iBAAiB;AACtB,SAAK,+BAA+B;AAAA,EACtC;AAAA,EACA,YAAY,aAAa,MAAM,mBAAmB;AAChD,SAAK,cAAc;AACnB,SAAK,OAAO;AAEZ,SAAK,yBAAyB,aAAa;AAE3C,SAAK,wBAAwB,IAAI,QAAQ;AAEzC,SAAK,eAAe,IAAI,aAAa;AAErC,SAAK,mBAAmB,IAAI,aAAa;AAEzC,SAAK,sBAAsB,IAAI,aAAa;AAE5C,SAAK,cAAc,IAAI,aAAa,IAAI;AAIxC,SAAK,oBAAoB;AAEzB,SAAK,kBAAkB;AACvB,QAAI,MAAM;AACR,WAAK,yBAAyB,KAAK,OAAO,UAAU,SAAO;AACzD,aAAK,+BAA+B,GAAG;AACvC,0BAAkB,aAAa;AAAA,MACjC,CAAC;AAAA,IACH;AACA,SAAK,sBAAsB,UAAU,WAAS;AAE5C,UAAI,KAAK,kBAAkB,MAAM,OAAO,KAAK,KAAK,kBAAkB,KAAK,SAAS,GAAG;AACnF,aAAK,YAAY,KAAK;AAAA,MACxB;AACA,UAAI,KAAK,kBAAkB,MAAM,SAAS,KAAK,CAAC,KAAK,kBAAkB,KAAK,SAAS,GAAG;AACtF,aAAK,oBAAoB,KAAK;AAAA,MAChC;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACT,QAAI,KAAK,aAAa,YAAY,KAAK,UAAU,MAAM;AACrD,WAAK,YAAY,KAAK,2BAA2B,KAAK,MAAM;AAAA,IAC9D;AAAA,EACF;AAAA,EACA,cAAc;AACZ,SAAK,uBAAuB,YAAY;AACxC,SAAK,sBAAsB,SAAS;AAAA,EACtC;AAAA,EACA,uBAAuB,OAAO;AAC5B,UAAM,cAAc,KAAK,kBAAkB,MAAM,OAAO;AACxD,SAAK,iBAAiB,KAAK,WAAW;AACtC,QAAI,aAAa;AACf,WAAK,aAAa,KAAK,KAAK,YAAY,cAAc,YAAY;AAAA,IACpE;AAAA,EACF;AAAA;AAAA,EAEA,sBAAsB;AACpB,WAAO,KAAK,QAAQ,KAAK,KAAK,UAAU,QAAQ,QAAQ;AAAA,EAC1D;AAAA;AAAA,EAEA,kBAAkB,UAAU;AAC1B,WAAO,YAAY,YAAY,YAAY,wBAAwB,YAAY;AAAA,EACjF;AAAA;AAAA,EAEA,+BAA+B,MAAM,KAAK,oBAAoB,GAAG;AAC/D,QAAI,KAAK,iBAAiB,GAAG;AAC3B,WAAK,YAAY,OAAO,QAAQ,SAAS;AAAA,IAC3C,WAAW,KAAK,iBAAiB,GAAG;AAClC,WAAK,YAAY,OAAO,QAAQ,UAAU;AAAA,IAC5C,OAAO;AACL,WAAK,YAAY;AAAA,IACnB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,2BAA2B,QAAQ;AACjC,UAAM,MAAM,KAAK,oBAAoB;AACrC,QAAI,OAAO,SAAS,UAAU,KAAK,OAAO,SAAS,SAAS,GAAG;AAC7D,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,mBAAmB,mBAAmB;AACzD,aAAO,KAAK,qBAAqB,aAAe,4BAAqB,UAAU,GAAM,4BAAqB,gBAAgB,CAAC,GAAM,4BAAqB,iBAAiB,CAAC;AAAA,IAC1K;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,cAAc,CAAC;AAAA,MAC5B,WAAW,SAAS,iBAAiB,IAAI,KAAK;AAC5C,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,iBAAiB,CAAC;AAAA,QACnC;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,cAAc,GAAG;AAAA,QACpE;AAAA,MACF;AAAA,MACA,WAAW,CAAC,GAAG,kBAAkB;AAAA,MACjC,QAAQ;AAAA,QACN,UAAU,CAAC,GAAG,WAAW,UAAU;AAAA,QACnC,QAAQ;AAAA,QACR,mBAAmB;AAAA,QACnB,iBAAiB;AAAA,QACjB,UAAU;AAAA,MACZ;AAAA,MACA,SAAS;AAAA,QACP,cAAc;AAAA,QACd,kBAAkB;AAAA,QAClB,qBAAqB;AAAA,QACrB,aAAa;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ,UAAU,CAAI,6BAAmB;AAAA,MACjC,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,iBAAiB,IAAI,GAAG,0BAA0B,GAAG,CAAC,kBAAkB,EAAE,CAAC;AAAA,MACtG,UAAU,SAAS,oBAAoB,IAAI,KAAK;AAC9C,YAAI,KAAK,GAAG;AACV,gBAAM,MAAS,2BAAiB;AAChC,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,qBAAW,uBAAuB,SAAS,gEAAgE,QAAQ;AACpH,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,uBAAuB,MAAM,CAAC;AAAA,UAC1D,CAAC,EAAE,sBAAsB,SAAS,+DAA+D,QAAQ;AACvG,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,sBAAsB,KAAK,MAAM,CAAC;AAAA,UAC9D,CAAC;AACD,UAAG,qBAAW,GAAG,mCAAmC,GAAG,GAAG,eAAe,CAAC;AAC1E,UAAG,uBAAa;AAAA,QAClB;AACA,YAAI,KAAK,GAAG;AACV,UAAG,qBAAW,iBAAoB,0BAAgB,GAAG,KAAK,IAAI,WAAc,0BAAgB,GAAG,KAAK,IAAI,iBAAiB,CAAC,CAAC;AAAA,QAC7H;AAAA,MACF;AAAA,MACA,cAAc,CAAC,kBAAkB,aAAa;AAAA,MAC9C,QAAQ,CAAC,oiBAAsiB;AAAA,MAC/iB,eAAe;AAAA,MACf,MAAM;AAAA,QACJ,WAAW,CAAC,kBAAkB,YAAY;AAAA,MAC5C;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,YAAY,CAAC;AAAA,IACnF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,eAAe,oBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,YAAY,CAAC,kBAAkB,YAAY;AAAA,MAC3C,MAAM;AAAA,QACJ,SAAS;AAAA,MACX;AAAA,MACA,YAAY;AAAA,MACZ,SAAS,CAAC,kBAAkB,aAAa;AAAA,MACzC,UAAU;AAAA,MACV,QAAQ,CAAC,oiBAAsiB;AAAA,IACjjB,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,eAAe;AAAA,IACxB,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,SAAS;AAAA,IAClB,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAGH,IAAI,SAAS;AAEb,IAAM,0BAA0B;AAMhC,IAAM,cAAN,MAAM,aAAY;AAAA;AAAA,EAEhB,IAAI,qBAAqB;AACvB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,mBAAmB,OAAO;AAC5B,SAAK,sBAAsB;AAC3B,SAAK,mBAAmB,aAAa;AAAA,EACvC;AAAA;AAAA,EAEA,IAAI,gBAAgB;AAClB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,cAAc,OAAO;AACvB,SAAK,iBAAiB,MAAM,KAAK,IAAI,OAAO;AAAA,EAC9C;AAAA;AAAA,EAEA,IAAI,oBAAoB;AACtB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,kBAAkB,OAAO;AAC3B,UAAM,cAAc,QAAQ;AAC5B,SAAK,qBAAqB,QAAQ,KAAK,WAAW,IAAI,QAAQ,OAAO;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,kBAAkB;AACpB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,gBAAgB,OAAO;AACzB,SAAK,mBAAmB,MAAM,KAAK,IAAI,OAAO;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,IAAI,kBAAkB;AACpB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,gBAAgB,OAAO;AACzB,QAAI,CAAC,yBAAyB;AAC5B,YAAM,IAAI,MAAM,yEAAyE;AAAA,IAC3F;AACA,UAAM,YAAY,KAAK,YAAY,cAAc;AACjD,cAAU,OAAO,4BAA4B,kBAAkB,KAAK,eAAe,EAAE;AACrF,QAAI,OAAO;AACT,gBAAU,IAAI,4BAA4B,kBAAkB,KAAK,EAAE;AAAA,IACrE;AACA,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,YAAY,aAAa,oBAAoB,eAAe,gBAAgB;AAC1E,SAAK,cAAc;AACnB,SAAK,qBAAqB;AAC1B,SAAK,iBAAiB;AAEtB,SAAK,QAAQ,IAAI,UAAU;AAE3B,SAAK,iBAAiB;AAEtB,SAAK,uBAAuB;AAE5B,SAAK,wBAAwB;AAE7B,SAAK,oBAAoB,aAAa;AAEtC,SAAK,wBAAwB,aAAa;AAC1C,SAAK,sBAAsB;AAE3B,SAAK,cAAc;AAEnB,SAAK,gBAAgB;AACrB,SAAK,iBAAiB;AAEtB,SAAK,iBAAiB;AAKtB,SAAK,oBAAoB;AAEzB,SAAK,gBAAgB;AAMrB,SAAK,kBAAkB;AAEvB,SAAK,sBAAsB,IAAI,aAAa;AAE5C,SAAK,cAAc,IAAI,aAAa;AAEpC,SAAK,gBAAgB,IAAI,aAAa;AAEtC,SAAK,oBAAoB,IAAI,aAAa,IAAI;AAE9C,SAAK,YAAY,CAAC,OAAO,QAAQ,EAAE;AACnC,SAAK,WAAW;AAChB,SAAK,oBAAoB,iBAAiB,cAAc,oBAAoB,cAAc,oBAAoB;AAC9G,SAAK,oBAAoB,iBAAiB,cAAc,qBAAqB,OAAO,cAAc,oBAAoB;AACtH,SAAK,gBAAgB,iBAAiB,cAAc,iBAAiB,OAAO,cAAc,gBAAgB;AAC1G,QAAI,eAAe,mBAAmB,MAAM;AAC1C,WAAK,kBAAkB,cAAc;AAAA,IACvC;AACA,SAAK,kBAAkB,CAAC,CAAC,eAAe;AACxC,SAAK,qBAAqB,iBAAiB,cAAc,sBAAsB,OAAO,cAAc,qBAAqB;AACzH,SAAK,cAAc,iBAAiB,cAAc,eAAe,OAAO,cAAc,cAAc;AAAA,EACtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,wBAAwB;AAGtB,UAAM,gBAAgB,KAAK,iBAAiB,KAAK,eAAe,KAAK,cAAc;AAGnF,QAAI,KAAK,kBAAkB,eAAe;AACxC,YAAM,aAAa,KAAK,kBAAkB;AAC1C,UAAI,CAAC,YAAY;AACf,aAAK,kBAAkB,KAAK,KAAK,mBAAmB,aAAa,CAAC;AAGlE,cAAM,UAAU,KAAK,gBAAgB;AACrC,gBAAQ,MAAM,YAAY,QAAQ,eAAe;AAAA,MACnD;AAGA,cAAQ,QAAQ,EAAE,KAAK,MAAM;AAC3B,aAAK,MAAM,QAAQ,CAAC,KAAK,UAAU,IAAI,WAAW,UAAU,aAAa;AACzE,YAAI,CAAC,YAAY;AACf,eAAK,oBAAoB,KAAK,aAAa;AAG3C,eAAK,gBAAgB,cAAc,MAAM,YAAY;AAAA,QACvD;AAAA,MACF,CAAC;AAAA,IACH;AAEA,SAAK,MAAM,QAAQ,CAAC,KAAK,UAAU;AACjC,UAAI,WAAW,QAAQ;AAGvB,UAAI,KAAK,kBAAkB,QAAQ,IAAI,YAAY,KAAK,CAAC,IAAI,QAAQ;AACnE,YAAI,SAAS,gBAAgB,KAAK;AAAA,MACpC;AAAA,IACF,CAAC;AACD,QAAI,KAAK,mBAAmB,eAAe;AACzC,WAAK,iBAAiB;AACtB,WAAK,uBAAuB;AAC5B,WAAK,mBAAmB,aAAa;AAAA,IACvC;AAAA,EACF;AAAA,EACA,qBAAqB;AACnB,SAAK,0BAA0B;AAC/B,SAAK,sBAAsB;AAG3B,SAAK,oBAAoB,KAAK,MAAM,QAAQ,UAAU,MAAM;AAC1D,YAAM,gBAAgB,KAAK,eAAe,KAAK,cAAc;AAG7D,UAAI,kBAAkB,KAAK,gBAAgB;AACzC,cAAM,OAAO,KAAK,MAAM,QAAQ;AAChC,YAAI;AACJ,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,KAAK,CAAC,EAAE,UAAU;AAIpB,iBAAK,iBAAiB,KAAK,iBAAiB;AAC5C,iBAAK,uBAAuB;AAC5B,0BAAc,KAAK,CAAC;AACpB;AAAA,UACF;AAAA,QACF;AAIA,YAAI,CAAC,eAAe,KAAK,aAAa,GAAG;AACvC,kBAAQ,QAAQ,EAAE,KAAK,MAAM;AAC3B,iBAAK,aAAa,EAAE,WAAW;AAC/B,iBAAK,kBAAkB,KAAK,KAAK,mBAAmB,aAAa,CAAC;AAAA,UACpE,CAAC;AAAA,QACH;AAAA,MACF;AACA,WAAK,mBAAmB,aAAa;AAAA,IACvC,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,4BAA4B;AAI1B,SAAK,SAAS,QAAQ,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,UAAQ;AACrE,WAAK,MAAM,MAAM,KAAK,OAAO,SAAO;AAClC,eAAO,IAAI,qBAAqB,QAAQ,CAAC,IAAI;AAAA,MAC/C,CAAC,CAAC;AACF,WAAK,MAAM,gBAAgB;AAAA,IAC7B,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,MAAM,QAAQ;AACnB,SAAK,kBAAkB,YAAY;AACnC,SAAK,sBAAsB,YAAY;AAAA,EACzC;AAAA;AAAA,EAEA,gBAAgB;AACd,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,0BAA0B;AAAA,IAC5C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,mBAAmB;AACjB,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,iBAAiB;AAAA,IACnC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,OAAO;AACd,UAAM,SAAS,KAAK;AACpB,QAAI,QAAQ;AACV,aAAO,aAAa;AAAA,IACtB;AAAA,EACF;AAAA,EACA,cAAc,OAAO;AACnB,SAAK,uBAAuB;AAC5B,SAAK,YAAY,KAAK,KAAK,mBAAmB,KAAK,CAAC;AAAA,EACtD;AAAA,EACA,mBAAmB,OAAO;AACxB,UAAM,QAAQ,IAAI,kBAAkB;AACpC,UAAM,QAAQ;AACd,QAAI,KAAK,SAAS,KAAK,MAAM,QAAQ;AACnC,YAAM,MAAM,KAAK,MAAM,QAAQ,EAAE,KAAK;AAAA,IACxC;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,wBAAwB;AACtB,QAAI,KAAK,uBAAuB;AAC9B,WAAK,sBAAsB,YAAY;AAAA,IACzC;AACA,SAAK,wBAAwB,MAAM,GAAG,KAAK,MAAM,IAAI,SAAO,IAAI,aAAa,CAAC,EAAE,UAAU,MAAM,KAAK,mBAAmB,aAAa,CAAC;AAAA,EACxI;AAAA;AAAA,EAEA,eAAe,OAAO;AAIpB,WAAO,KAAK,IAAI,KAAK,MAAM,SAAS,GAAG,KAAK,IAAI,SAAS,GAAG,CAAC,CAAC;AAAA,EAChE;AAAA;AAAA,EAEA,eAAe,GAAG;AAChB,WAAO,iBAAiB,KAAK,QAAQ,IAAI,CAAC;AAAA,EAC5C;AAAA;AAAA,EAEA,iBAAiB,GAAG;AAClB,WAAO,mBAAmB,KAAK,QAAQ,IAAI,CAAC;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,yBAAyB,WAAW;AAClC,QAAI,CAAC,KAAK,iBAAiB,CAAC,KAAK,uBAAuB;AACtD;AAAA,IACF;AACA,UAAM,UAAU,KAAK,gBAAgB;AACrC,YAAQ,MAAM,SAAS,KAAK,wBAAwB;AAGpD,QAAI,KAAK,gBAAgB,cAAc,cAAc;AACnD,cAAQ,MAAM,SAAS,YAAY;AAAA,IACrC;AAAA,EACF;AAAA;AAAA,EAEA,8BAA8B;AAC5B,UAAM,UAAU,KAAK,gBAAgB;AACrC,SAAK,wBAAwB,QAAQ;AACrC,YAAQ,MAAM,SAAS;AACvB,SAAK,cAAc,KAAK;AAAA,EAC1B;AAAA;AAAA,EAEA,aAAa,KAAK,WAAW,OAAO;AAClC,cAAU,aAAa;AACvB,QAAI,CAAC,IAAI,UAAU;AACjB,WAAK,gBAAgB;AAAA,IACvB;AAAA,EACF;AAAA;AAAA,EAEA,aAAa,OAAO;AAClB,UAAM,cAAc,KAAK,wBAAwB,KAAK;AACtD,WAAO,UAAU,cAAc,IAAI;AAAA,EACrC;AAAA;AAAA,EAEA,iBAAiB,aAAa,OAAO;AAKnC,QAAI,eAAe,gBAAgB,WAAW,gBAAgB,SAAS;AACrE,WAAK,WAAW,aAAa;AAAA,IAC/B;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,oBAAoB,mBAAmB;AAC1D,aAAO,KAAK,qBAAqB,cAAgB,4BAAqB,UAAU,GAAM,4BAAqB,iBAAiB,GAAM,4BAAkB,iBAAiB,CAAC,GAAM,4BAAkB,uBAAuB,CAAC,CAAC;AAAA,IACzN;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,eAAe,CAAC;AAAA,MAC7B,gBAAgB,SAAS,2BAA2B,IAAI,KAAK,UAAU;AACrE,YAAI,KAAK,GAAG;AACV,UAAG,yBAAe,UAAU,QAAQ,CAAC;AAAA,QACvC;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,WAAW;AAAA,QAC9D;AAAA,MACF;AAAA,MACA,WAAW,SAAS,kBAAkB,IAAI,KAAK;AAC7C,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,KAAK,CAAC;AACrB,UAAG,sBAAY,KAAK,CAAC;AAAA,QACvB;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,kBAAkB,GAAG;AACtE,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,aAAa,GAAG;AAAA,QACnE;AAAA,MACF;AAAA,MACA,WAAW,CAAC,GAAG,mBAAmB;AAAA,MAClC,UAAU;AAAA,MACV,cAAc,SAAS,yBAAyB,IAAI,KAAK;AACvD,YAAI,KAAK,GAAG;AACV,UAAG,qBAAW,UAAU,IAAI,SAAS,UAAU;AAC/C,UAAG,sBAAY,gCAAgC,IAAI,iBAAiB;AACpE,UAAG,sBAAY,oCAAoC,IAAI,aAAa,EAAE,qCAAqC,IAAI,mBAAmB,OAAO,EAAE,kCAAkC,IAAI,WAAW;AAAA,QAC9L;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,OAAO;AAAA,QACP,oBAAoB,CAAC,GAAG,sBAAsB,sBAAsB,gBAAgB;AAAA,QACpF,aAAa,CAAC,GAAG,oBAAoB,eAAe,gBAAgB;AAAA,QACpE,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,gBAAgB;AAAA,QACrE,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,eAAe;AAAA,QACpE,gBAAgB;AAAA,QAChB,mBAAmB;AAAA,QACnB,iBAAiB,CAAC,GAAG,mBAAmB,mBAAmB,eAAe;AAAA,QAC1E,mBAAmB,CAAC,GAAG,qBAAqB,qBAAqB,gBAAgB;AAAA,QACjF,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,gBAAgB;AAAA,QACrE,iBAAiB,CAAC,GAAG,mBAAmB,mBAAmB,gBAAgB;AAAA,QAC3E,iBAAiB;AAAA,QACjB,WAAW,CAAC,GAAG,cAAc,WAAW;AAAA,QACxC,gBAAgB,CAAC,GAAG,mBAAmB,gBAAgB;AAAA,MACzD;AAAA,MACA,SAAS;AAAA,QACP,qBAAqB;AAAA,QACrB,aAAa;AAAA,QACb,eAAe;AAAA,QACf,mBAAmB;AAAA,MACrB;AAAA,MACA,UAAU,CAAC,aAAa;AAAA,MACxB,YAAY;AAAA,MACZ,UAAU,CAAI,6BAAmB,CAAC;AAAA,QAChC,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC,CAAC,GAAM,oCAA6B,6BAAmB;AAAA,MACxD,oBAAoBA;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,CAAC,CAAC,aAAa,EAAE,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,GAAG,gBAAgB,sBAAsB,iBAAiB,iBAAiB,qBAAqB,cAAc,iBAAiB,GAAG,CAAC,QAAQ,OAAO,sBAAsB,IAAI,0BAA0B,IAAI,GAAG,WAAW,eAAe,2BAA2B,GAAG,MAAM,mBAAmB,SAAS,YAAY,oBAAoB,GAAG,CAAC,GAAG,0BAA0B,GAAG,CAAC,QAAQ,YAAY,GAAG,MAAM,2BAA2B,SAAS,WAAW,YAAY,UAAU,qBAAqB,iBAAiB,GAAG,CAAC,QAAQ,OAAO,sBAAsB,IAAI,0BAA0B,IAAI,GAAG,WAAW,eAAe,2BAA2B,GAAG,SAAS,kBAAkB,MAAM,YAAY,oBAAoB,GAAG,CAAC,GAAG,iBAAiB,GAAG,CAAC,cAAc,IAAI,GAAG,sBAAsB,GAAG,oBAAoB,mBAAmB,GAAG,CAAC,GAAG,kBAAkB,GAAG,CAAC,GAAG,qBAAqB,GAAG,CAAC,GAAG,iBAAiB,GAAG,CAAC,QAAQ,YAAY,GAAG,eAAe,gBAAgB,MAAM,WAAW,YAAY,UAAU,qBAAqB,iBAAiB,CAAC;AAAA,MACvkC,UAAU,SAAS,qBAAqB,IAAI,KAAK;AAC/C,YAAI,KAAK,GAAG;AACV,gBAAM,MAAS,2BAAiB;AAChC,UAAG,0BAAgB;AACnB,UAAG,yBAAe,GAAG,kBAAkB,GAAG,CAAC;AAC3C,UAAG,qBAAW,gBAAgB,SAAS,4DAA4D,QAAQ;AACzG,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,cAAc,MAAM,CAAC;AAAA,UACjD,CAAC,EAAE,sBAAsB,SAAS,kEAAkE,QAAQ;AAC1G,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,gBAAgB,MAAM;AAAA,UAClD,CAAC;AACD,UAAG,2BAAiB,GAAG,4BAA4B,GAAG,IAAI,OAAO,GAAM,mCAAyB;AAChG,UAAG,uBAAa;AAChB,UAAG,qBAAW,GAAG,oCAAoC,GAAG,CAAC;AACzD,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,2BAAiB,GAAG,4BAA4B,GAAG,IAAI,gBAAgB,GAAM,mCAAyB;AACzG,UAAG,uBAAa;AAAA,QAClB;AACA,YAAI,KAAK,GAAG;AACV,UAAG,qBAAW,iBAAiB,IAAI,iBAAiB,CAAC,EAAE,iBAAiB,IAAI,aAAa,EAAE,qBAAqB,IAAI,iBAAiB,EAAE,cAAc,IAAI,SAAS,EAAE,mBAAmB,IAAI,cAAc;AACzM,UAAG,oBAAU,CAAC;AACd,UAAG,qBAAW,IAAI,KAAK;AACvB,UAAG,oBAAU,CAAC;AACd,UAAG,wBAAc,IAAI,YAAY,IAAI,EAAE;AACvC,UAAG,oBAAU;AACb,UAAG,sBAAY,2BAA2B,IAAI,mBAAmB,gBAAgB;AACjF,UAAG,oBAAU,CAAC;AACd,UAAG,qBAAW,IAAI,KAAK;AAAA,QACzB;AAAA,MACF;AAAA,MACA,cAAc,CAAC,cAAc,oBAAoB,iBAAiB,WAAW,iBAAiB,UAAU;AAAA,MACxG,QAAQ,CAAC,wjOAA0jO;AAAA,MACnkO,eAAe;AAAA,IACjB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,aAAa,CAAC;AAAA,IACpF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,eAAe,oBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,WAAW;AAAA,QACX,4CAA4C;AAAA,QAC5C,6CAA6C;AAAA,QAC7C,0CAA0C;AAAA,QAC1C,wCAAwC;AAAA,MAC1C;AAAA,MACA,YAAY;AAAA,MACZ,SAAS,CAAC,cAAc,oBAAoB,iBAAiB,WAAW,iBAAiB,UAAU;AAAA,MACnG,UAAU;AAAA,MACV,QAAQ,CAAC,wjOAA0jO;AAAA,IACrkO,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,eAAe;AAAA,IACxB,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,qBAAqB;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,QACb,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,OAAO;AAAA,QACP,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAEH,IAAM,oBAAN,MAAwB;AAAC;AAGzB,IAAI,eAAe;AAKnB,IAAM,YAAN,MAAM,mBAAkB,sBAAsB;AAAA;AAAA,EAE5C,IAAI,qBAAqB;AACvB,WAAO,KAAK,oBAAoB;AAAA,EAClC;AAAA,EACA,IAAI,mBAAmB,OAAO;AAC5B,SAAK,oBAAoB,KAAK,KAAK;AACnC,SAAK,mBAAmB,aAAa;AAAA,EACvC;AAAA,EACA,IAAI,oBAAoB;AACtB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,kBAAkB,OAAO;AAC3B,UAAM,cAAc,QAAQ;AAC5B,SAAK,qBAAqB,QAAQ,KAAK,WAAW,IAAI,QAAQ,OAAO;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,kBAAkB;AACpB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,gBAAgB,OAAO;AACzB,UAAM,YAAY,KAAK,YAAY,cAAc;AACjD,cAAU,OAAO,4BAA4B,kBAAkB,KAAK,eAAe,EAAE;AACrF,QAAI,OAAO;AACT,gBAAU,IAAI,4BAA4B,kBAAkB,KAAK,EAAE;AAAA,IACrE;AACA,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,YAAY,YAAY,KAAK,QAAQ,mBAAmB,eAAe,UAAU,eAAe,eAAe;AAC7G,UAAM,YAAY,mBAAmB,eAAe,KAAK,QAAQ,UAAU,aAAa;AACxF,SAAK,sBAAsB,IAAI,gBAAgB,KAAK;AAEpD,SAAK,cAAc;AAEnB,SAAK,gBAAgB;AAQrB,SAAK,QAAQ;AACb,SAAK,oBAAoB,iBAAiB,cAAc,qBAAqB,OAAO,cAAc,oBAAoB;AACtH,SAAK,qBAAqB,iBAAiB,cAAc,sBAAsB,OAAO,cAAc,qBAAqB;AACzH,SAAK,cAAc,iBAAiB,cAAc,eAAe,OAAO,cAAc,cAAc;AAAA,EACtG;AAAA,EACA,gBAAgB;AAAA,EAEhB;AAAA,EACA,qBAAqB;AACnB,SAAK,UAAU,IAAI,UAAU,KAAK,MAAM;AAGxC,SAAK,OAAO,QAAQ,KAAK,UAAU,IAAI,GAAG,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM;AACpF,WAAK,iBAAiB;AAAA,IACxB,CAAC;AACD,UAAM,mBAAmB;AAAA,EAC3B;AAAA,EACA,kBAAkB;AAChB,QAAI,CAAC,KAAK,aAAa,OAAO,cAAc,eAAe,YAAY;AACrE,YAAM,IAAI,MAAM,uDAAuD;AAAA,IACzE;AACA,UAAM,gBAAgB;AAAA,EACxB;AAAA;AAAA,EAEA,mBAAmB;AACjB,QAAI,CAAC,KAAK,QAAQ;AAChB;AAAA,IACF;AACA,UAAM,QAAQ,KAAK,OAAO,QAAQ;AAClC,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAI,MAAM,CAAC,EAAE,QAAQ;AACnB,aAAK,gBAAgB;AACrB,aAAK,mBAAmB,aAAa;AACrC,YAAI,KAAK,UAAU;AACjB,eAAK,SAAS,eAAe,MAAM,CAAC,EAAE;AAAA,QACxC;AACA;AAAA,MACF;AAAA,IACF;AAEA,SAAK,gBAAgB;AACrB,SAAK,QAAQ,KAAK;AAAA,EACpB;AAAA,EACA,WAAW;AACT,WAAO,KAAK,WAAW,YAAY,KAAK,YAAY,cAAc,aAAa,MAAM;AAAA,EACvF;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,kBAAkB,mBAAmB;AACxD,aAAO,KAAK,qBAAqB,YAAc,4BAAqB,UAAU,GAAM,4BAAqB,gBAAgB,CAAC,GAAM,4BAAqB,MAAM,GAAM,4BAAqB,iBAAiB,GAAM,4BAAqB,aAAa,GAAM,4BAAqB,QAAQ,GAAM,4BAAkB,uBAAuB,CAAC,GAAM,4BAAkB,iBAAiB,CAAC,CAAC;AAAA,IAC/W;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;AAAA,MACvC,gBAAgB,SAAS,yBAAyB,IAAI,KAAK,UAAU;AACnE,YAAI,KAAK,GAAG;AACV,UAAG,yBAAe,UAAU,YAAY,CAAC;AAAA,QAC3C;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,SAAS;AAAA,QAC5D;AAAA,MACF;AAAA,MACA,WAAW,SAAS,gBAAgB,IAAI,KAAK;AAC3C,YAAI,KAAK,GAAG;AACV,UAAG,sBAAYC,MAAK,CAAC;AACrB,UAAG,sBAAYC,MAAK,CAAC;AACrB,UAAG,sBAAYC,MAAK,CAAC;AACrB,UAAG,sBAAYC,MAAK,CAAC;AACrB,UAAG,sBAAY,KAAK,CAAC;AAAA,QACvB;AACA,YAAI,KAAK,GAAG;AACV,cAAI;AACJ,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,oBAAoB,GAAG;AACxE,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,WAAW,GAAG;AAC/D,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,gBAAgB,GAAG;AACpE,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,iBAAiB,GAAG;AACrE,UAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,qBAAqB,GAAG;AAAA,QAC3E;AAAA,MACF;AAAA,MACA,WAAW,CAAC,GAAG,uBAAuB,oBAAoB;AAAA,MAC1D,UAAU;AAAA,MACV,cAAc,SAAS,uBAAuB,IAAI,KAAK;AACrD,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,QAAQ,IAAI,SAAS,CAAC;AACrC,UAAG,sBAAY,gCAAgC,IAAI,iBAAiB;AACpE,UAAG,sBAAY,kDAAkD,IAAI,uBAAuB,EAAE,0BAA0B,IAAI,oBAAoB,KAAK,KAAK,EAAE,oCAAoC,IAAI,WAAW,EAAE,eAAe,IAAI,UAAU,UAAU,IAAI,UAAU,QAAQ,EAAE,cAAc,IAAI,UAAU,QAAQ,EAAE,YAAY,IAAI,UAAU,MAAM,EAAE,2BAA2B,IAAI,mBAAmB,gBAAgB;AAAA,QAC5Z;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,oBAAoB,CAAC,GAAG,sBAAsB,sBAAsB,gBAAgB;AAAA,QACpF,aAAa,CAAC,GAAG,oBAAoB,eAAe,gBAAgB;AAAA,QACpE,mBAAmB;AAAA,QACnB,iBAAiB;AAAA,QACjB,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,gBAAgB;AAAA,QACrE,OAAO;AAAA,QACP,UAAU;AAAA,MACZ;AAAA,MACA,UAAU,CAAC,gBAAgB,WAAW;AAAA,MACtC,YAAY;AAAA,MACZ,UAAU,CAAI,oCAA6B,sCAA+B,6BAAmB;AAAA,MAC7F,OAAO;AAAA,MACP,oBAAoBJ;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,CAAC,CAAC,qBAAqB,EAAE,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,cAAc,IAAI,GAAG,iCAAiC,wCAAwC,GAAG,SAAS,aAAa,YAAY,mBAAmB,GAAG,CAAC,GAAG,uCAAuC,GAAG,CAAC,GAAG,8BAA8B,GAAG,SAAS,GAAG,CAAC,GAAG,oBAAoB,GAAG,mBAAmB,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,cAAc,IAAI,GAAG,iCAAiC,uCAAuC,GAAG,aAAa,SAAS,YAAY,mBAAmB,CAAC;AAAA,MACvlB,UAAU,SAAS,mBAAmB,IAAI,KAAK;AAC7C,YAAI,KAAK,GAAG;AACV,gBAAM,MAAS,2BAAiB;AAChC,UAAG,0BAAgB;AACnB,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,qBAAW,SAAS,SAAS,0CAA0C;AACxE,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,sBAAsB,QAAQ,CAAC;AAAA,UAC3D,CAAC,EAAE,aAAa,SAAS,4CAA4C,QAAQ;AAC3E,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,sBAAsB,UAAU,MAAM,CAAC;AAAA,UACnE,CAAC,EAAE,YAAY,SAAS,6CAA6C;AACnE,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,cAAc,CAAC;AAAA,UAC3C,CAAC;AACD,UAAG,oBAAU,GAAG,OAAO,CAAC;AACxB,UAAG,uBAAa;AAChB,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,qBAAW,WAAW,SAAS,0CAA0C,QAAQ;AAClF,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,eAAe,MAAM,CAAC;AAAA,UAClD,CAAC;AACD,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,qBAAW,qBAAqB,SAAS,sDAAsD;AAChG,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,kBAAkB,CAAC;AAAA,UAC/C,CAAC;AACD,UAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,UAAG,uBAAa,CAAC;AACjB,UAAG,uBAAa,EAAE,EAAE;AACpB,UAAG,yBAAe,IAAI,OAAO,IAAI,CAAC;AAClC,UAAG,qBAAW,aAAa,SAAS,6CAA6C,QAAQ;AACvF,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,sBAAsB,SAAS,MAAM,CAAC;AAAA,UAClE,CAAC,EAAE,SAAS,SAAS,2CAA2C;AAC9D,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,sBAAsB,OAAO,CAAC;AAAA,UAC1D,CAAC,EAAE,YAAY,SAAS,8CAA8C;AACpE,YAAG,wBAAc,GAAG;AACpB,mBAAU,sBAAY,IAAI,cAAc,CAAC;AAAA,UAC3C,CAAC;AACD,UAAG,oBAAU,IAAI,OAAO,CAAC;AACzB,UAAG,uBAAa;AAAA,QAClB;AACA,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,0CAA0C,IAAI,oBAAoB;AACjF,UAAG,qBAAW,qBAAqB,IAAI,wBAAwB,IAAI,aAAa;AAChF,UAAG,oBAAU,EAAE;AACf,UAAG,sBAAY,0CAA0C,IAAI,mBAAmB;AAChF,UAAG,qBAAW,qBAAqB,IAAI,uBAAuB,IAAI,aAAa;AAAA,QACjF;AAAA,MACF;AAAA,MACA,cAAc,CAAC,WAAW,iBAAiB;AAAA,MAC3C,QAAQ,CAAC,68LAA68L;AAAA,MACt9L,eAAe;AAAA,IACjB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,WAAW,CAAC;AAAA,IAClF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,eAAe;AAAA,QACf,SAAS;AAAA,QACT,0DAA0D;AAAA,QAC1D,kCAAkC;AAAA,QAClC,4CAA4C;AAAA,QAC5C,uBAAuB;AAAA,QACvB,sBAAsB;AAAA,QACtB,oBAAoB;AAAA,QACpB,mCAAmC;AAAA,QACnC,wCAAwC;AAAA,MAC1C;AAAA,MACA,eAAe,oBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,YAAY;AAAA,MACZ,SAAS,CAAC,WAAW,iBAAiB;AAAA,MACtC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACV,QAAQ,CAAC,68LAA68L;AAAA,IACx9L,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,qBAAqB;AAAA,IAC9B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,eAAe;AAAA,IACxB,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,OAAO;AAAA,QACP,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,WAAW,MAAM,UAAU,GAAG;AAAA,QACnC,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,QACzB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,QAChB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,QACrB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,eAAe;AAAA,IACxB,CAAC;AAAA,IACD,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,MACN,MAAM,CAAC,mBAAmB;AAAA,IAC5B,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAIH,IAAM,aAAN,MAAM,oBAAmB,WAAW;AAAA;AAAA,EAElC,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,OAAO,OAAO;AAChB,QAAI,UAAU,KAAK,WAAW;AAC5B,WAAK,YAAY;AACjB,WAAK,WAAW,iBAAiB;AAAA,IACnC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,iBAAiB;AACnB,WAAO,KAAK,YAAY,KAAK,iBAAiB,KAAK,WAAW,iBAAiB,CAAC,CAAC,KAAK,aAAa;AAAA,EACrG;AAAA,EACA,YAAY,YAAgC,YAAY,qBAAqB,UAAU,eAAe,eAAe;AACnH,UAAM;AACN,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,gBAAgB;AACrB,SAAK,aAAa,IAAI,QAAQ;AAE9B,SAAK,YAAY;AAEjB,SAAK,WAAW;AAEhB,SAAK,gBAAgB;AACrB,SAAK,WAAW;AAEhB,SAAK,KAAK,gBAAgB,cAAc;AACxC,SAAK,eAAe,uBAAuB,CAAC;AAC5C,SAAK,WAAW,SAAS,QAAQ,KAAK;AACtC,QAAI,kBAAkB,kBAAkB;AACtC,WAAK,aAAa,YAAY;AAAA,QAC5B,eAAe;AAAA,QACf,cAAc;AAAA,MAChB;AAAA,IACF;AACA,eAAW,oBAAoB,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,wBAAsB;AAC9F,WAAK,qBAAqB;AAAA,IAC5B,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,QAAQ;AACN,SAAK,WAAW,cAAc,MAAM;AAAA,EACtC;AAAA,EACA,kBAAkB;AAChB,SAAK,cAAc,QAAQ,KAAK,UAAU;AAAA,EAC5C;AAAA,EACA,cAAc;AACZ,SAAK,WAAW,KAAK;AACrB,SAAK,WAAW,SAAS;AACzB,UAAM,YAAY;AAClB,SAAK,cAAc,eAAe,KAAK,UAAU;AAAA,EACnD;AAAA,EACA,eAAe;AAGb,SAAK,WAAW,aAAa,KAAK,WAAW,OAAO,QAAQ,EAAE,QAAQ,IAAI;AAAA,EAC5E;AAAA,EACA,eAAe,OAAO;AACpB,QAAI,MAAM,YAAY,SAAS,MAAM,YAAY,OAAO;AACtD,UAAI,KAAK,UAAU;AACjB,cAAM,eAAe;AAAA,MACvB,WAAW,KAAK,WAAW,UAAU;AAGnC,YAAI,MAAM,YAAY,OAAO;AAC3B,gBAAM,eAAe;AAAA,QACvB;AACA,aAAK,WAAW,cAAc,MAAM;AAAA,MACtC;AAAA,IACF;AAAA,EACF;AAAA,EACA,mBAAmB;AACjB,WAAO,KAAK,WAAW,WAAW,KAAK,WAAW,UAAU,KAAK,KAAK,WAAW,cAAc,aAAa,eAAe;AAAA,EAC7H;AAAA,EACA,mBAAmB;AACjB,QAAI,KAAK,WAAW,UAAU;AAC5B,aAAO,KAAK,SAAS,SAAS;AAAA,IAChC,OAAO;AACL,aAAO,KAAK,WAAW,cAAc,aAAa,eAAe;AAAA,IACnE;AAAA,EACF;AAAA,EACA,kBAAkB;AAChB,WAAO,KAAK,UAAU,CAAC,KAAK,WAAW,WAAW,SAAS;AAAA,EAC7D;AAAA,EACA,WAAW;AACT,WAAO,KAAK,WAAW,WAAW,QAAQ,KAAK,WAAW,cAAc,aAAa,MAAM;AAAA,EAC7F;AAAA,EACA,eAAe;AACb,QAAI,KAAK,WAAW,UAAU;AAC5B,aAAO,KAAK,aAAa,CAAC,KAAK,WAAW,IAAI;AAAA,IAChD,OAAO;AACL,aAAO,KAAK,WAAW,KAAK,KAAK;AAAA,IACnC;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,mBAAmB,mBAAmB;AACzD,aAAO,KAAK,qBAAqB,aAAe,4BAAkB,SAAS,GAAM,4BAAqB,UAAU,GAAM,4BAAkB,2BAA2B,CAAC,GAAM,4BAAkB,UAAU,GAAM,4BAAqB,YAAY,GAAM,4BAAkB,uBAAuB,CAAC,CAAC;AAAA,IAChS;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,gBAAgB,EAAE,GAAG,CAAC,IAAI,cAAc,EAAE,CAAC;AAAA,MAC5D,WAAW,CAAC,GAAG,WAAW,oBAAoB,yBAAyB;AAAA,MACvE,UAAU;AAAA,MACV,cAAc,SAAS,wBAAwB,IAAI,KAAK;AACtD,YAAI,KAAK,GAAG;AACV,UAAG,qBAAW,SAAS,SAAS,sCAAsC;AACpE,mBAAO,IAAI,aAAa;AAAA,UAC1B,CAAC,EAAE,WAAW,SAAS,sCAAsC,QAAQ;AACnE,mBAAO,IAAI,eAAe,MAAM;AAAA,UAClC,CAAC;AAAA,QACH;AACA,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,iBAAiB,IAAI,iBAAiB,CAAC,EAAE,gBAAgB,IAAI,gBAAgB,CAAC,EAAE,iBAAiB,IAAI,QAAQ,EAAE,iBAAiB,IAAI,iBAAiB,CAAC,EAAE,MAAM,IAAI,EAAE,EAAE,YAAY,IAAI,aAAa,CAAC,EAAE,QAAQ,IAAI,SAAS,CAAC;AAC3O,UAAG,sBAAY,wBAAwB,IAAI,QAAQ,EAAE,mBAAmB,IAAI,MAAM;AAAA,QACpF;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,QAAQ,CAAC,GAAG,UAAU,UAAU,gBAAgB;AAAA,QAChD,UAAU,CAAC,GAAG,YAAY,YAAY,gBAAgB;AAAA,QACtD,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,gBAAgB;AAAA,QACrE,UAAU,CAAC,GAAG,YAAY,YAAY,WAAS,SAAS,OAAO,IAAI,gBAAgB,KAAK,CAAC;AAAA,QACzF,IAAI;AAAA,MACN;AAAA,MACA,UAAU,CAAC,YAAY;AAAA,MACvB,YAAY;AAAA,MACZ,UAAU,CAAI,oCAA6B,sCAA+B,6BAAmB;AAAA,MAC7F,OAAO;AAAA,MACP,oBAAoBA;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,CAAC,CAAC,GAAG,iBAAiB,GAAG,CAAC,cAAc,IAAI,GAAG,sBAAsB,GAAG,oBAAoB,mBAAmB,GAAG,CAAC,GAAG,kBAAkB,GAAG,CAAC,GAAG,qBAAqB,CAAC;AAAA,MAC7K,UAAU,SAAS,oBAAoB,IAAI,KAAK;AAC9C,YAAI,KAAK,GAAG;AACV,UAAG,0BAAgB;AACnB,UAAG,oBAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,OAAO,CAAC;AACtC,UAAG,yBAAe,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;AAC5C,UAAG,uBAAa,CAAC;AACjB,UAAG,uBAAa,EAAE;AAAA,QACpB;AACA,YAAI,KAAK,GAAG;AACV,UAAG,oBAAU;AACb,UAAG,qBAAW,oBAAoB,IAAI,WAAW,aAAa,EAAE,qBAAqB,IAAI,cAAc;AAAA,QACzG;AAAA,MACF;AAAA,MACA,cAAc,CAAC,SAAS;AAAA,MACxB,QAAQ,CAAC,47GAA87G;AAAA,MACv8G,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,YAAY,CAAC;AAAA,IACnF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,oBAAkB;AAAA,MACjC,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,wBAAwB;AAAA,QACxB,uBAAuB;AAAA,QACvB,wBAAwB;AAAA,QACxB,wBAAwB;AAAA,QACxB,aAAa;AAAA,QACb,mBAAmB;AAAA,QACnB,eAAe;AAAA,QACf,gCAAgC;AAAA,QAChC,2BAA2B;AAAA,QAC3B,WAAW;AAAA,QACX,aAAa;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ,SAAS,CAAC,SAAS;AAAA,MACnB,UAAU;AAAA,MACV,QAAQ,CAAC,47GAA87G;AAAA,IACz8G,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAM;AAAA,EACR,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,yBAAyB;AAAA,IAClC,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,UAAU;AAAA,IACnB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,qBAAqB;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW,WAAS,SAAS,OAAO,IAAI,gBAAgB,KAAK;AAAA,MAC/D,CAAC;AAAA,IACH,CAAC;AAAA,IACD,IAAI,CAAC;AAAA,MACH,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAIH,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,cAAc;AAEZ,SAAK,KAAK,qBAAqB,cAAc;AAAA,EAC/C;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,uBAAuB,mBAAmB;AAC7D,aAAO,KAAK,qBAAqB,iBAAgB;AAAA,IACnD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,mBAAmB,CAAC;AAAA,MACjC,WAAW,CAAC,QAAQ,YAAY,GAAG,uBAAuB;AAAA,MAC1D,UAAU;AAAA,MACV,cAAc,SAAS,4BAA4B,IAAI,KAAK;AAC1D,YAAI,KAAK,GAAG;AACV,UAAG,sBAAY,mBAAmB,IAAI,YAAY,EAAE,MAAM,IAAI,EAAE;AAAA,QAClE;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,IAAI;AAAA,MACN;AAAA,MACA,UAAU,CAAC,gBAAgB;AAAA,MAC3B,YAAY;AAAA,MACZ,UAAU,CAAI,6BAAmB;AAAA,MACjC,oBAAoBA;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,UAAU,SAAS,wBAAwB,IAAI,KAAK;AAClD,YAAI,KAAK,GAAG;AACV,UAAG,0BAAgB;AACnB,UAAG,uBAAa,CAAC;AAAA,QACnB;AAAA,MACF;AAAA,MACA,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,0BAA0B;AAAA,QAC1B,aAAa;AAAA,QACb,SAAS;AAAA,QACT,QAAQ;AAAA,MACV;AAAA,MACA,eAAe,oBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,IAAI,CAAC;AAAA,MACH,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,gBAAN,MAAM,eAAc;AAAA,EAClB,OAAO;AACL,SAAK,YAAO,SAAS,sBAAsB,mBAAmB;AAC5D,aAAO,KAAK,qBAAqB,gBAAe;AAAA,IAClD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,2BAAiB;AAAA,MAC7C,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,2BAAiB;AAAA,MAC7C,SAAS,CAAC,iBAAiB,eAAe;AAAA,IAC5C,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,eAAe,CAAC;AAAA,IACtF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,iBAAiB,eAAe,aAAa,QAAQ,aAAa,WAAW,gBAAgB,UAAU;AAAA,MACjH,SAAS,CAAC,iBAAiB,eAAe,aAAa,QAAQ,aAAa,WAAW,gBAAgB,UAAU;AAAA,IACnH,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;;;;;AE/3Fa,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAiD,IAAA,iBAAA,CAAA;;AAAgC,IAAA,uBAAA;;;;AAAhC,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,gBAAA,CAAA;;;;;AACjD,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAkD,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;;;;;AA4BvD,IAAA,yBAAA,GAAA,UAAA,GAAA;AAAiE,IAAA,iBAAA,CAAA;AACjE,IAAA,uBAAA;;;;AAD2C,IAAA,gCAAA,SAAA,QAAA,IAAA;AAAsB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,QAAA,MAAA,GAAA;;;;;AAenE,IAAA,yBAAA,GAAA,QAAA,GAAA;AAA6C,IAAA,iBAAA,CAAA;;AAA4B,IAAA,uBAAA;;;;AAA5B,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,YAAA,CAAA;;;;;AAC7C,IAAA,yBAAA,GAAA,QAAA,GAAA;AAA8C,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;;;;;AAqJrD,IAAA,yBAAA,GAAA,QAAA,GAAA;AAA4C,IAAA,iBAAA,CAAA;;AAA2B,IAAA,uBAAA;;;;AAA3B,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,WAAA,CAAA;;;;;AAC5C,IAAA,yBAAA,GAAA,QAAA,GAAA;AAA6C,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;;;;;AAWpD,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAgD,IAAA,iBAAA,CAAA;;AAA+B,IAAA,uBAAA;;;;AAA/B,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,eAAA,CAAA;;;;;AAChD,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAiD,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;;;;;AA+CxD,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAkD,IAAA,iBAAA,CAAA;;AAAiC,IAAA,uBAAA;;;;AAAjC,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,iBAAA,CAAA;;;;;AAClD,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAmD,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;;;;;AAU1D,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAkD,IAAA,iBAAA,CAAA;;AAAiC,IAAA,uBAAA;;;;AAAjC,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,iBAAA,CAAA;;;;;AAClD,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAmD,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;;;;;;AAzWtE,IAAA,yBAAA,GAAA,iBAAA,CAAA;AAAiG,IAAA,qBAAA,qBAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAqB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA;AAEvI,IAAA,yBAAA,GAAA,WAAA,CAAA,EAAwB,GAAA,OAAA,CAAA;AACI,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA;AACG,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA;AACvC,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAgC,IAAA,iBAAA,CAAA;AAAmC,IAAA,uBAAA,EAAM;AAE3E,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,IAAA,OAAA,CAAA;AACG,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AAC5C,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,OAAA,EAAA,EACG,IAAA,OAAA,EAAA,EACD,IAAA,SAAA,EAAA;AAErB,IAAA,qBAAA,SAAA,SAAA,uEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,UAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACnB,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AAKhC,IAAA,2BAAA,iBAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,MAAA,MAAA,OAAA,QAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAPA,IAAA,uBAAA,EAQC;AAEH,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,SAAA,EAAA;AAM1B,IAAA,qBAAA,UAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AAChC,IAAA,2BAAA,iBAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,MAAA,MAAA,OAAA,QAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AANA,IAAA,uBAAA,EAQA,EACE,EACF,EAEF;AAGR,IAAA,oBAAA,IAAA,MAAA,EAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,CAAA;AAA0B,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AACpC,IAAA,yBAAA,IAAA,OAAA,EAAA;AAIE,IAAA,qBAAA,aAAA,SAAA,yEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAa,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,YAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACjB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA;AAE9B,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,OAAA,EAAA;;AAGtB,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACA,IAAA,uBAAA,EAAM;;AAGV,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAoB,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA,EAAO;AAEtC,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAuB,IAAA,OAAA,EAAA;;AAEnB,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAgM,IAAA,QAAA,EAAA,EACM,IAAA,QAAA,EAAA,EACA,IAAA,QAAA,EAAA,EACM,IAAA,QAAA,EAAA,EACH,IAAA,QAAA,EAAA;AAEzM,IAAA,uBAAA,EAAM,EACJ,EACJ,EAEA;;AAGR,IAAA,yBAAA,IAAA,WAAA,EAAA,EAAyB,IAAA,OAAA,EAAA,EACQ,IAAA,OAAA,EAAA;AAG7B,IAAA,oBAAA,IAAA,SAAA,EAAA;AAMA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoC,IAAA,OAAA,EAAA;AAEhC,IAAA,iBAAA,IAAA,cAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,KAAA,EACtB,IAAA,SAAA,EAAA;AACwC,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA,EAAQ;AAE/D,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,SAAA,EAAA;AACuB,IAAA,2BAAA,iBAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,MAAA,MAAA,OAAA,mBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAA+B,IAAA,qBAAA,UAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAA9G,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,wDAAA,GAAA,GAAA,QAAA,EAAA,EAAiD,IAAA,wDAAA,GAAA,GAAA,QAAA,EAAA;AAEnD,IAAA,uBAAA,EAAM;AAER,IAAA,oBAAA,IAAA,MAAA,EAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,OAAA,EAAA;AAExB,IAAA,iBAAA,IAAA,UAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,SAAA,EAAA;AAC4B,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AAClE,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwC,IAAA,OAAA,EAAA,EAEL,IAAA,KAAA,EAC5B,IAAA,QAAA,EAAA;AAOH,IAAA,iBAAA,IAAA,SAAA;AACF,IAAA,uBAAA,EAAO;AAEP,IAAA,yBAAA,IAAA,UAAA,EAAA;AAEE,IAAA,2BAAA,iBAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,QAAA,MAAA,MAAA,OAAA,SAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACA,IAAA,qBAAA,UAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAEhC,IAAA,qBAAA,IAAA,0DAAA,GAAA,GAAA,UAAA,EAAA;AAGF,IAAA,uBAAA,EAAS,EACL,EACA;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,KAAA,EACtB,IAAA,SAAA,EAAA;AACmC,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA,EAAQ;AAG7D,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,SAAA,EAAA;AACuB,IAAA,2BAAA,iBAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,cAAA,MAAA,MAAA,OAAA,eAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAA2B,IAAA,qBAAA,UAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAA1G,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,wDAAA,GAAA,GAAA,QAAA,EAAA,EAA6C,IAAA,wDAAA,GAAA,GAAA,QAAA,EAAA;AAE/C,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,KAAA,EACtB,IAAA,SAAA,EAAA;AACmC,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA,EAAQ;AAE7D,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,SAAA,EAAA;AACe,IAAA,2BAAA,iBAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,cAAA,MAAA,MAAA,OAAA,eAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAA2B,IAAA,qBAAA,UAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAAnG,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,SAAA,EAAA;AAAgD,IAAA,2BAAA,iBAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,cAAA,MAAA,MAAA,OAAA,eAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAA2B,IAAA,qBAAA,UAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAA3G,IAAA,uBAAA,EAA+G,EAC1G;AAGP,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwC,IAAA,KAAA,EACjC,IAAA,SAAA,EAAA;AACF,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA,EACf;AAED,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA8C,IAAA,OAAA,EAAA,EAC9B,IAAA,SAAA,EAAA;AAIV,IAAA,2BAAA,iBAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,mBAAA,MAAA,MAAA,OAAA,oBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACA,IAAA,qBAAA,UAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAJlC,IAAA,uBAAA,EAKE,EACE;AAER,IAAA,yBAAA,IAAA,UAAA,EAAA,EAIC,IAAA,UAAA,EAAA;AACyB,IAAA,iBAAA,IAAA,IAAA;AAAE,IAAA,uBAAA,EAAS,EAE5B,EACL,EAEF;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA;AAEE,IAAA,oBAAA,IAAA,SAAA,EAAA;AAKF,IAAA,uBAAA;AAEG,IAAA,oBAAA,IAAA,IAAA;AAED,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,IAAA,SAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoC,IAAA,OAAA,EAAA,EACM,IAAA,SAAA,EAAA;AAEnC,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AAEjB,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAiC,KAAA,OAAA,EAAA;AACC,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAmB,KAAK,CAAC;IAAA,CAAA;AAChE,IAAA,yBAAA,KAAA,MAAA;;AACE,IAAA,yBAAA,KAAA,OAAA,EAAA;AACE,IAAA,oBAAA,KAAA,QAAA,EAAA,EAA0E,KAAA,QAAA,EAAA;AAE1E,IAAA,uBAAA,EAAM,EACH;;AAET,IAAA,yBAAA,KAAA,OAAA,EAAA;AAAiC,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAmB,MAAM,CAAC;IAAA,CAAA;AAElE,IAAA,yBAAA,KAAA,MAAA;;AACE,IAAA,yBAAA,KAAA,OAAA,EAAA;AACE,IAAA,oBAAA,KAAA,QAAA,EAAA,EAA0J,KAAA,QAAA,EAAA;AAE1J,IAAA,uBAAA,EAAM,EACH,EACH,EACF;;AAER,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAwC,KAAA,SAAA,EAAA;AAEnC,IAAA,iBAAA,KAAA,iBAAA;AAAe,IAAA,uBAAA;AAElB,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAqC,KAAA,QAAA,EAAA;AACL,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAqB,MAAM,CAAC;IAAA,CAAA;;AACjE,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA+F,KAAA,KAAA,EAAA;AAE/F,IAAA,oBAAA,KAAA,QAAA,EAAA,EAAsE,KAAA,QAAA,EAAA,EACD,KAAA,QAAA,EAAA,EACE,KAAA,QAAA,EAAA;AAEvE,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,MAAA,EAAM,KAAA,YAAA,EAAA;AAEN,IAAA,oBAAA,KAAA,QAAA,EAAA;AACA,IAAA,uBAAA,EAAW,EACJ,EACD;;AAEN,IAAA,yBAAA,KAAA,QAAA,EAAA;AAAgC,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAqB,QAAQ,CAAC;IAAA,CAAA;;AACrE,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA+F,KAAA,KAAA,EAAA;AAE7F,IAAA,oBAAA,KAAA,QAAA,EAAA,EAAsE,KAAA,QAAA,EAAA,EACD,KAAA,QAAA,EAAA,EACE,KAAA,QAAA,EAAA;AAEvE,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,MAAA,EAAM,KAAA,YAAA,EAAA;AAEN,IAAA,oBAAA,KAAA,QAAA,EAAA;AACA,IAAA,uBAAA,EAAW,EACJ,EACD;;AAEV,IAAA,yBAAA,KAAA,QAAA,EAAA;AAA+B,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAqB,OAAO,CAAC;IAAA,CAAA;;AACnE,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA+F,KAAA,KAAA,EAAA;AAE3F,IAAA,oBAAA,KAAA,QAAA,EAAA,EAAsE,KAAA,QAAA,EAAA,EACD,KAAA,QAAA,EAAA,EACE,KAAA,QAAA,EAAA;AAEzE,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,MAAA,EAAM,KAAA,YAAA,EAAA;AAEF,IAAA,oBAAA,KAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAW,EACN,EACH;;AAER,IAAA,yBAAA,KAAA,QAAA,EAAA;AAAiC,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAqB,SAAS,CAAC;IAAA,CAAA;;AACvE,IAAA,yBAAA,KAAA,OAAA,EAAA;AACE,IAAA,oBAAA,KAAA,QAAA,EAAA,EAAwC,KAAA,QAAA,EAAA,EAC6B,KAAA,QAAA,EAAA,EAC5B,KAAA,QAAA,EAAA;AAE3C,IAAA,uBAAA,EAAM,EACD,EACL;;AAIR,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA6B,KAAA,KAAA,EACtB,KAAA,SAAA,EAAA;AACmC,IAAA,iBAAA,KAAA,aAAA;AAAW,IAAA,uBAAA,EAAQ;AAE3D,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA0B,KAAA,SAAA,EAAA;AACuB,IAAA,2BAAA,iBAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,aAAA,MAAA,MAAA,OAAA,cAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAA0B,IAAA,qBAAA,UAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAAzG,IAAA,uBAAA;AACA,IAAA,qBAAA,KAAA,yDAAA,GAAA,GAAA,QAAA,EAAA,EAA4C,KAAA,yDAAA,GAAA,GAAA,QAAA,EAAA;AAE9C,IAAA,uBAAA,EAAM;AAIR,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA6B,KAAA,KAAA,EACtB,KAAA,SAAA,EAAA;AACmC,IAAA,iBAAA,KAAA,iBAAA;AAAe,IAAA,uBAAA,EAAQ;AAE/D,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA0B,KAAA,SAAA,EAAA;AACuB,IAAA,2BAAA,iBAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,iBAAA,MAAA,MAAA,OAAA,kBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAA8B,IAAA,qBAAA,UAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAA7G,IAAA,uBAAA;AACA,IAAA,qBAAA,KAAA,yDAAA,GAAA,GAAA,QAAA,EAAA,EAAgD,KAAA,yDAAA,GAAA,GAAA,QAAA,EAAA;AAElD,IAAA,uBAAA,EAAM,EACF,EAGF;AAGR,IAAA,yBAAA,KAAA,OAAA,EAAA;AAEE,IAAA,oBAAA,KAAA,SAAA,EAAA,EAIE,KAAA,IAAA;AAGF,IAAA,yBAAA,KAAA,OAAA,EAAA;AACE,IAAA,iBAAA,KAAA,UAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAoC,KAAA,OAAA,EAAA,EACM,KAAA,SAAA,EAAA;AAEnC,IAAA,iBAAA,KAAA,cAAA;AAAY,IAAA,uBAAA;AAEf,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA0B,KAAA,OAAA,EAAA,EACU,KAAA,SAAA,EAAA,EAEC,KAAA,SAAA,GAAA;AAE7B,IAAA,2BAAA,iBAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,eAAA,MAAA,MAAA,OAAA,gBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACA,IAAA,qBAAA,UAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,OAAA,aAAA,CAAmC;IAAA,CAAA;AAF7C,IAAA,uBAAA;AAIA,IAAA,oBAAA,KAAA,MAAA;AACF,IAAA,uBAAA,EAAQ,EAEJ,EACJ;AAIR,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA6B,KAAA,KAAA,EACtB,KAAA,SAAA,EAAA;AACmC,IAAA,iBAAA,KAAA,YAAA;AAAU,IAAA,uBAAA,EAAQ;AAE1D,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA0B,KAAA,SAAA,EAAA;AACwB,IAAA,2BAAA,iBAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,mBAAA,MAAA,MAAA,OAAA,oBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAAgC,IAAA,qBAAA,UAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAAhH,IAAA,uBAAA;AACA,IAAA,qBAAA,KAAA,yDAAA,GAAA,GAAA,QAAA,EAAA,EAAkD,KAAA,yDAAA,GAAA,GAAA,QAAA,EAAA;AAEpD,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA6B,KAAA,KAAA,EACtB,KAAA,SAAA,EAAA;AACmC,IAAA,iBAAA,KAAA,YAAA;AAAU,IAAA,uBAAA,EAAQ;AAE1D,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA0B,KAAA,SAAA,EAAA;AACwB,IAAA,2BAAA,iBAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,mBAAA,MAAA,MAAA,OAAA,oBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAAgC,IAAA,qBAAA,UAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAAhH,IAAA,uBAAA;AACA,IAAA,qBAAA,KAAA,yDAAA,GAAA,GAAA,QAAA,EAAA,EAAkD,KAAA,yDAAA,GAAA,GAAA,QAAA,EAAA;AAEpD,IAAA,uBAAA,EAAM,EACF,EACF,EACF;AAGN,IAAA,yBAAA,KAAA,OAAA,GAAA,EAAsB,KAAA,UAAA,GAAA;AAC2B,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,cAAA;AAAY,IAAA,uBAAA,EAAS,EACxF,EACE;;;;AA7W0B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,KAAA,WAAA;AAcxB,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,KAAA;AAUA,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,KAAA;AAeR,IAAA,oBAAA,CAAA;AAAA,IAAA,gCAAA,MAAA,OAAA,SAAA;;AAiDqD,IAAA,oBAAA,EAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,gBAAA;AACtB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,gBAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,gBAAA;AAgBvB,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAM,OAAA,OAAA,WAAA,SAAA,OAAA,SAAA,MAAA,CAAA;AASA,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,MAAA;AAG2B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA;AAckB,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,YAAA;AACtB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,YAAA;AASa,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,YAAA;AACQ,IAAA,oBAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,YAAA;AAc1C,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,iBAAA;AAsCgE,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAC,MAAA,OAAA,mBAAA,KAAA,CAAA;AAQE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,OAAA,mBAAA,MAAA,CAAA;AAgBD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,OAAA,gBAAA,MAAA,CAAA;AAeM,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,OAAA,gBAAA,QAAA,CAAA;AAeF,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,OAAA,gBAAA,OAAA,CAAA;AAeI,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,OAAA,gBAAA,SAAA,CAAA;AAiB9B,IAAA,oBAAA,EAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,WAAA;AACtB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,WAAA;AAUsB,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,eAAA;AACtB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,eAAA;AA8BnB,IAAA,oBAAA,EAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,aAAA;AAgB0C,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,iBAAA;AACvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,iBAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,iBAAA;AASuB,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,iBAAA;AACvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,iBAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,iBAAA;;;;;;AAcrC,IAAA,yBAAA,GAAA,KAAA,EAAoD,GAAA,OAAA,CAAA;AACxB,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA;AACG,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;AAC7C,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAgC,IAAA,iBAAA,CAAA;AAAmC,IAAA,uBAAA,EAAM;AAE3E,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA;AACG,IAAA,iBAAA,IAAA,sBAAA;AAAoB,IAAA,uBAAA;AAClD,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,OAAA,EAAA,EACG,IAAA,OAAA,EAAA,EACD,IAAA,SAAA,EAAA;AAErB,IAAA,qBAAA,SAAA,SAAA,6DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,UAAA,SAAA,8DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACnB,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AAKhC,IAAA,2BAAA,iBAAA,SAAA,qEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,MAAA,MAAA,OAAA,QAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAPA,IAAA,uBAAA,EAQC;AAEH,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,SAAA,EAAA;AAM1B,IAAA,qBAAA,UAAA,SAAA,8DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AAChC,IAAA,2BAAA,iBAAA,SAAA,qEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,MAAA,MAAA,OAAA,QAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AANA,IAAA,uBAAA,EAQA,EACE,EACF,EAEF,EACF;;;;AA/B4B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,KAAA,WAAA;AAcxB,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,KAAA;AAUA,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,KAAA;;;ADzXV,IAAO,wBAAP,MAAO,uBAAqB;EA0BhC,YACU,YACA,cACA,UAAmB;AAFnB,SAAA,aAAA;AACA,SAAA,eAAA;AACA,SAAA,WAAA;AA1BA,SAAA,qBAAwC,IAAI,aAAY;AAGzD,SAAA,cAAc,OAAO,OAAO,WAAW;AAChD,SAAA,QAAa;AAEb,SAAA,SAAW;AACX,SAAA,iBAAmB;AACnB,SAAA,oBAAsB;AACtB,SAAA,sBAAwB;AACxB,SAAA,qBAAuB;AACvB,SAAA,uBAAyB;AAIzB,SAAA,eAAiB;AAIjB,SAAA,gBAAkB;AAShB,SAAK,aAAa,wBAAuB,EAAG,UAAU,UAAM;AAC3D,UAAG,MACH;AACC,aAAK,QAAM;MACZ;IACA,CAAC;EACJ;EACA,YAAY,OAAa;AACvB,WAAO,GAAG,KAAK;EACjB;EAEA,WAAQ;AAEN,QAAI,KAAK,cAAc;AACrB,cAAQ,IAAI,KAAK,YAAY;AAC7B,UAAG,KAAK,aAAa,QAAM,QAAO;AAChC,aAAK,qBAAmB,KAAK,aAAa;AAC1C,YAAG,CAAC,KAAK,oBAAmB;AAC1B,cAAI,WAA2B,CAAA;AAC9B,eAAK,qBAAmB;YACpB,OAAM;YACN,MAAM;;QAEZ;AACD,aAAK,QAAM,KAAK,mBAAmB;AACnC,aAAK,YAAU,KAAK,aAAa,KAAK;AACtC,aAAK,iBAAe,KAAK,mBAAmB;AAC5C,aAAK,gBAAe;MACpB;IACF;EACJ;EACA,qBAAqB,OAAK;AACxB,SAAK,gBAAc;AACnB,SAAK,qBAAoB;EAC3B;EACA,kBAAe;AACb,eAAW,MAAK;AAChB,WAAK,qBAAoB;IAC3B,GAAG,GAAG;EACN;EACA,cAAW;AACT,QAAI,KAAK,cAAc;AACrB,cAAQ,IAAI,KAAK,YAAY;AAC7B,UAAG,KAAK,aAAa,QAAM,QAAO;AAChC,aAAK,qBAAmB,KAAK,aAAa;AAC1C,YAAG,CAAC,KAAK,oBAAmB;AAC3B,cAAI,WAA2B,CAAA;AAC9B,eAAK,qBAAmB;YACpB,OAAM;YACN,MAAM;;QAEZ;AACA,aAAK,QAAM,KAAK,mBAAmB;AACnC,aAAK,iBAAe,KAAK,mBAAmB;AAC5C,aAAK,YAAU,KAAK,aAAa,KAAK;AACrC,aAAK,gBAAe;MAEvB;IAEF;EACF;EACA,uBAAoB;AAElB,UAAM,WAAS;AACf,UAAM,gBAAgB,SAAS,cAAc,cAAc;AAC3D,QAAI,iBAAiB,YAAY,GAAG;AAClC,WAAK,SAAS,SAAS,eAAe,QAAQ,KAAK;IACrD;EACF;EAGD,YAAY,OAAU;AACrB,UAAM,WAAW,MAAM;AAGvB,UAAM,gBAAgB,SAAS,cAAc,cAAc;AAE3D,QAAI,eAAe;AAEjB,UAAI,aAAa,GAAG;AAClB,aAAK,SAAS,SAAS,eAAe,QAAQ,KAAK;MACrD,OAAO;AACL,aAAK,SAAS,SAAS,eAAe,QAAQ,OAAO;MACvD;IACF;EACF;EAOE,WAAW,OAAK;AACd,UAAM,eAAc;EAErB;EACA,QAAQ,OAAK;AACZ,UAAM,aAAa,QAAQ,YAAW,MAAM,OAAO,EAAE;EACtD;EACD,YAAY,OAAK;AACf,SAAK,QAAM,MAAM;EACnB;EAEA,eAAe,OAAK;AAClB,YAAQ,IAAI,KAAK,KAAK;AACrB,QAAG,KAAK,QAAM,OAAO,KAAK,QAAM;AAC/B,WAAK,QAAM;AAEb,QAAG,KAAK,aAAa,QAAQ,KAAK,aAAa,KAAK,WAAU;AAE5D,WAAK,qBAAmB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AACnE,UAAG,KAAK,oBAAmB;AAEzB,aAAK,mBAAmB,QAAM,KAAK;MACrC;AACA,UAAI,QAAM,CAAA;AAET,cAAM;QAAC,UAAS,KAAK,aAAa,KAAK;QAC/B,aAAY,KAAK,UAAU,KAAK,kBAAkB;MAAC;AAI5D,YAAM,MAAM;AACZ,WAAK,WAAW,YAAY,IAAG,KAAI,KAAK,EAAE,UAAU,OAAG;AACrD,aAAK,aAAa,KAAK,YAAU,KAAK,UAAU,KAAK,kBAAkB;AAGvE,aAAK,mBAAmB,KAAK,KAAK,aAAa,IAAI;MACrD,GAAE,WAAO;AACP,gBAAQ,IAAI,KAAK;MACnB,CAAC;IAGL;EACF;EACA,kBAAe;AACb,QAAG,KAAK,gBAAe;AACrB,WAAK,mBAAkB,KAAK,eAAe,UAAU;AACrD,WAAK,SAAQ,KAAK,eAAe,UAAU;AAC3C,WAAK,eAAe,KAAK,eAAe,UAAU;AAClD,WAAK,eAAe,KAAK,eAAe,UAAU;AAClD,WAAK,oBAAmB,KAAK,eAAe,UAAU;AACtD,WAAK,oBAAoB,KAAK,uBAAuB,KAAK,qBAAqB,KAAK,sBAAsB,KAAK,eAAe,UAAU;AAExI,WAAK,cAAa,KAAK,eAAe,SAAS;AAC/C,WAAK,iBAAgB,KAAK,eAAe,SAAS;AAClD,WAAK,kBAAkB,KAAK,eAAe,SAAS;AACpD,WAAK,cAAc,KAAK,eAAe,SAAS;AAEhD,WAAK,gBAAe,KAAK,eAAe,OAAO;AAC/C,WAAK,oBAAmB,KAAK,eAAe,OAAO;AACnD,WAAK,oBAAoB,KAAK,eAAe,OAAO;IACtD;EACF;EACA,qBAAqB,SAAO;AAE1B,QAAG,SACH;AACE,WAAK,cAAa;AAClB,WAAK,qBAAoB;IAC3B;EACF;EAEA,mBAAmB,SAAO;AAExB,QAAG,SACH;AACE,WAAK,iBAAgB;AACrB,WAAK,qBAAoB;IAC3B;EACF;EAEA,uBAAoB;AAElB,QAAG,KAAK,aAAa,QAAQ,KAAK,aAAa,KAAK,WAAU;AAK5D,WAAK,uBAAuB,KAAK,qBAAqB,KAAK,sBAAsB,KAAK;AACtF,YAAM,cAAc,KAAK,gBAAgB;AACzC,YAAM,cAAc,KAAK,gBAAgB;AACzC,YAAM,cAAc,KAAK,UAAU;AACnC,UAAI,YAAU;QACZ,oBAAoB,KAAK;QACzB,UAAU;QACV,gBAAgB;QAChB,qBAAqB,KAAK;QAC1B,wBAAwB,KAAK;QAC7B,sBAAsB,KAAK;QAC3B,uBAAuB,KAAK;QAC5B,gBAAgB;;AAEhB,UAAI,SAAO;QACV,iBAAiB,KAAK;QACtB,qBAAoB,KAAK;QACzB,qBAAoB,KAAK;;AAE3B,UAAI,WAAS;QACX,eAAe,KAAK;QACpB,kBAAiB,KAAK;QACtB,mBAAkB,KAAK;QACvB,eAAc,KAAK;;AAErB,WAAK,iBAAe;QAClB;QACA;QACA;;AAEF,WAAK,mBAAmB,QAAO,KAAK;AACrC,UAAI,QAAM,CAAA;AAET,cAAO;QACA,UAAS,KAAK,aAAa,KAAK;QAC/B,aAAY,KAAK,UAAU,KAAK,kBAAkB;;AAEzD,WAAK,aAAa,2BAA2B,KAAK;IAEtD;EACF;EAKA,cAAW;AAKT,QAAI,YAAU;MACb,oBAAmB,KAAK;MACvB,UAAS,KAAK;MACd,gBAAe,KAAK;MACpB,qBAAoB,KAAK;MACzB,wBAAwB,KAAK;MAC7B,sBAAsB,KAAK;MAC3B,uBAAuB,KAAK;MAC5B,gBAAe,KAAK;;AAGtB,QAAI,SAAO;MACT,iBAAiB,KAAK;MACtB,qBAAoB,KAAK;MACzB,qBAAoB,KAAK;;AAE3B,QAAI,WAAS;MACX,eAAe,KAAK;MACpB,kBAAiB,KAAK;MACtB,mBAAkB,KAAK;MACpB,eAAc,KAAK;;AAExB,SAAK,iBAAe;MAClB;MACA;MACA;;AAEF,SAAK,mBAAmB,QAAO,KAAK;AAGpC,QAAG,KAAK,aAAa,QAAQ,KAAK,aAAa,KAAK,WAAU;AAG5D,UAAI,QAAM,CAAA;AAET,cAAM;QAAC,UAAS,KAAK,aAAa,KAAK;QAC/B,aAAY,KAAK,UAAU,KAAK,kBAAkB;MAAC;AAI5D,YAAM,MAAM;AACb,WAAK,WAAW,YAAY,IAAG,KAAI,KAAK,EAAE,UAAU,OAAG;AACpD,aAAK,aAAa,KAAK,YAAU,KAAK,UAAU,KAAK,kBAAkB;MAIzE,GAAE,WAAO;AACP,gBAAQ,IAAI,KAAK;MACnB,CAAC;IAGL;EAEA;;;uCAzTa,wBAAqB,4BAAA,UAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,SAAA,CAAA;IAAA;EAAA;;yEAArB,wBAAqB,WAAA,CAAA,CAAA,mBAAA,CAAA,GAAA,QAAA,EAAA,cAAA,eAAA,GAAA,SAAA,EAAA,oBAAA,qBAAA,GAAA,YAAA,MAAA,UAAA,CAAA,gCAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,GAAA,WAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,SAAA,iCAAA,GAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,iCAAA,GAAA,mBAAA,GAAA,CAAA,SAAA,QAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,SAAA,OAAA,KAAA,OAAA,OAAA,QAAA,KAAA,eAAA,eAAA,GAAA,cAAA,GAAA,SAAA,UAAA,iBAAA,SAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,OAAA,KAAA,OAAA,OAAA,GAAA,SAAA,GAAA,UAAA,iBAAA,SAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,aAAA,QAAA,GAAA,kBAAA,GAAA,aAAA,YAAA,IAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,SAAA,8BAAA,SAAA,MAAA,UAAA,MAAA,WAAA,aAAA,QAAA,MAAA,GAAA,CAAA,KAAA,ycAAA,QAAA,OAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,SAAA,MAAA,UAAA,MAAA,WAAA,aAAA,QAAA,QAAA,SAAA,4BAAA,GAAA,CAAA,KAAA,yGAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,+GAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,+GAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,qHAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,kHAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,wHAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,SAAA,SAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,YAAA,MAAA,iBAAA,GAAA,yBAAA,GAAA,CAAA,GAAA,wBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,6BAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,QAAA,SAAA,GAAA,sBAAA,GAAA,iBAAA,UAAA,SAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,OAAA,YAAA,GAAA,4BAAA,GAAA,CAAA,GAAA,4BAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,SAAA,GAAA,CAAA,GAAA,6BAAA,GAAA,iBAAA,UAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,wBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,QAAA,SAAA,GAAA,eAAA,GAAA,iBAAA,UAAA,SAAA,GAAA,CAAA,QAAA,UAAA,GAAA,sBAAA,GAAA,iBAAA,UAAA,SAAA,GAAA,CAAA,OAAA,YAAA,GAAA,8BAAA,GAAA,CAAA,GAAA,kCAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,QAAA,UAAA,GAAA,6BAAA,GAAA,iBAAA,UAAA,SAAA,GAAA,CAAA,MAAA,YAAA,QAAA,YAAA,GAAA,oCAAA,QAAA,GAAA,CAAA,SAAA,SAAA,GAAA,CAAA,QAAA,YAAA,MAAA,iBAAA,GAAA,yBAAA,GAAA,CAAA,OAAA,YAAA,GAAA,wBAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,8BAAA,SAAA,MAAA,UAAA,MAAA,WAAA,aAAA,QAAA,MAAA,GAAA,CAAA,KAAA,qDAAA,QAAA,OAAA,GAAA,CAAA,SAAA,MAAA,UAAA,KAAA,QAAA,SAAA,GAAA,CAAA,GAAA,sBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,8BAAA,SAAA,MAAA,UAAA,MAAA,WAAA,aAAA,QAAA,MAAA,GAAA,CAAA,KAAA,qIAAA,QAAA,OAAA,GAAA,CAAA,KAAA,KAAA,KAAA,MAAA,SAAA,MAAA,UAAA,KAAA,aAAA,yBAAA,QAAA,SAAA,GAAA,CAAA,GAAA,yBAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,8BAAA,SAAA,MAAA,UAAA,MAAA,WAAA,aAAA,QAAA,MAAA,GAAA,CAAA,aAAA,sBAAA,GAAA,CAAA,KAAA,iDAAA,QAAA,OAAA,GAAA,CAAA,KAAA,gDAAA,QAAA,OAAA,GAAA,CAAA,KAAA,kDAAA,QAAA,OAAA,GAAA,CAAA,KAAA,oDAAA,QAAA,OAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,CAAA,SAAA,MAAA,UAAA,MAAA,QAAA,OAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,aAAA,sBAAA,GAAA,CAAA,KAAA,iDAAA,QAAA,OAAA,GAAA,CAAA,KAAA,kDAAA,QAAA,OAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,aAAA,sBAAA,GAAA,CAAA,KAAA,iDAAA,QAAA,OAAA,GAAA,CAAA,KAAA,kDAAA,QAAA,OAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,CAAA,GAAA,sBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,KAAA,mBAAA,QAAA,OAAA,GAAA,CAAA,KAAA,oBAAA,QAAA,OAAA,GAAA,CAAA,QAAA,YAAA,MAAA,iBAAA,GAAA,yBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,QAAA,YAAA,GAAA,iBAAA,UAAA,SAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,QAAA,UAAA,GAAA,oBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AC/BlC,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,OAAA,CAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,qBAAA,GAAA,gDAAA,KAAA,IAAA,iBAAA,CAAA,EAA2I,GAAA,sCAAA,IAAA,GAAA,OAAA,CAAA;AA+Z7I,QAAA,uBAAA,EAAM;;;AApae,QAAA,sBAAA,OAAA,IAAA,UAAA;AAEG,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,aAAA,KAAA,SAAA,cAAA,wBAAA,eAAA;AAGgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,aAAA,KAAA,QAAA,WAAA;AAuX/C,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,aAAA,KAAA,SAAA,WAAA;;;MDxWH;MACA;MACA;MACA;MAAmB;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MACnB;MAAW;MACX;MACA;MACA;MACA;IAAa,GAAA,QAAA,CAAA,smsBAAA,EAAA,CAAA;EAAA;;;6EAGR,uBAAqB,EAAA,WAAA,yBAAA,UAAA,0FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGM5B,IAAA,6BAAA,CAAA;;;;;;AAiBE,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAK,IAAA,qBAAA,QAAA,SAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAQ,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,YAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACjB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA;AAC5B,IAAA,iBAAA,GAAA,kBAAA;AACF,IAAA,uBAAA;;;;;;AAFgG,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,YAAA,aAAA,KAAA,cAAA,EAAA;;;;;;AAIhG,IAAA,yBAAA,GAAA,OAAA,EAAA;AAGA,IAAA,qBAAA,SAAA,SAAA,+EAAA,QAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,OAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,OAAA,QAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,KAAA,QAAA,SAA2B,IAAG,OAAA,gBAAA,QAAuB,EAAA,QAAQ,UAAQ,WAAA,UAAA,GAAA,MAAA,GAAA,MAAA,UAAA,aAAA,UAAA,aAAA,CAAsC,IAAE,IAAI;IAAA,CAAA;AAE/G,IAAA,yBAAA,GAAA,WAAA,EAAA;AAEH,IAAA,qBAAA,YAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,aAAA,SAAA,uFAAA,QAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAEjB,OAAA,QAAA,QAAA,QAAA,CAAoB;IAAA,CAAA;AAI1B,IAAA,uBAAA,EAAU;;;;;;;AAX2C,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,YAAA,aAAA,KAAA,cAAA,EAAA;AAUpD,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,cAAA,QAAA,CAAA;;;;;;;AAnBV,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAK,IAAA,qBAAA,YAAA,SAAA,4EAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,QAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA;AAE1D,IAAA,qBAAA,GAAA,2DAAA,GAAA,GAAA,OAAA,EAAA,EACoJ,GAAA,2DAAA,GAAA,GAAA,OAAA,EAAA;AAoBtJ,IAAA,uBAAA;;;;;;;;AAvBuF,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,YAAA,aAAA,KAAA,cAAA,EAAA;AAGtC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA,WAAA,QAAA,KAAA,QAAA,UAAA,CAAA;AAMhB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,KAAA,OAAA;;;;;;AA6B/B,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAK,IAAA,qBAAA,QAAA,SAAA,oFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAQ,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,YAAA,SAAA,wFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACjB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA;AAC5B,IAAA,iBAAA,GAAA,kBAAA;AACF,IAAA,uBAAA;;;;;;;;AAFoG,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,eAAA,aAAA,KAAA,cAAA,KAAA,iBAAA,KAAA,uBAAA,EAAA;;;;;;AAIpG,IAAA,yBAAA,GAAA,OAAA,EAAA;AAIA,IAAA,qBAAA,SAAA,SAAA,qFAAA,QAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,UAAA,QAAA;AAAA,YAAA,wBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,OAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,OAAA,QAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,QAAA,QAAA,SAA6B,IAAG,OAAA,gBAAA,QAAuB,EAAA,QAAQ,aAAW,WAAA,WAAA,IAAA,QAAA,GAAA,MAAA,GAAA,MAAA,UAAA,aAAA,UAAA,cAAA,aAAA,iBAAA,mBAAA,sBAAA,CAAwE,IAAE,IAAI;IAAA,CAAA;AAExJ,IAAA,yBAAA,GAAA,WAAA,EAAA;AAEA,IAAA,qBAAA,YAAA,SAAA,4FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,aAAA,SAAA,6FAAA,QAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAGlB,OAAA,QAAA,QAAA,SAAA,CAAqB;IAAA,CAAA;AAI7B,IAAA,uBAAA,EAAU;;;;;;;;;AAZ2D,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,eAAA,aAAA,KAAA,cAAA,KAAA,iBAAA,KAAA,uBAAA,EAAA;AAUpE,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,cAAA,SAAA,CAAA;;;;;;;AAzBP,IAAA,yBAAA,GAAA,OAAA,EAAA;AACA,IAAA,qBAAA,SAAA,SAAA,+EAAA,QAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,QAAA;AAAA,YAAA,wBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,OAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,OAAA,QAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,QAAA,WAAyB,QAAI,QAAA,QAAA,SAAuB,IAAG,OAAA,gBAAA,QAAuB,EAAA,QAAQ,aAAW,IAAA,QAAA,GAAA,MAAA,GAAA,MAAA,UAAA,aAAA,UAAA,cAAA,aAAA,iBAAA,mBAAA,sBAAA,CAAwD,IAAE,IAAI;IAAA,CAAA,EAAC,QAAA,SAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAEvJ,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,YAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAEZ,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA;AAE9B,IAAA,qBAAA,GAAA,iEAAA,GAAA,GAAA,OAAA,EAAA,EACkM,GAAA,iEAAA,GAAA,GAAA,OAAA,EAAA;AAsBpM,IAAA,uBAAA;;;;;;;;;;;AA1BE,IAAA,iCAAA,MAAA,IAAA,OAAA,KAAA,IAAA,eAAA,aAAA,KAAA,cAAA,KAAA,iBAAA,KAAA,uBAAA,EAAA;AAFoE,IAAA,qBAAA,WAAA,OAAA,iBAAA,MAAA,CAAA;AAMpB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,WAAA,QAAA,QAAA,QAAA,UAAA,CAAA;AAOhB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,QAAA,OAAA;;;;;;AApBjC,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEA,IAAA,qBAAA,SAAA,SAAA,yEAAA,QAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,QAAA;AAAA,YAAA,kBAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,OAAA,QAAA;AAAA,YAAA,eAAA,QAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,OAAA,QAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,QAAuB,EAAA,QAAQ,mBAAiB,IAAA,QAAA,GAAA,MAAA,GAAA,MAAA,UAAA,aAAA,UAAA,cAAA,aAAA,gBAAA,CAAsC,CAAC;IAAA,CAAA;AAGhG,IAAA,qBAAA,GAAA,2DAAA,GAAA,GAAA,OAAA,EAAA;AAiCD,IAAA,uBAAA;;;;AAjCuB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA;;;;;;AApCvB,IAAA,yBAAA,GAAA,OAAA,EAAA;AAE0F,IAAA,qBAAA,SAAA,SAAA,mEAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,eAAA,OAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,YAAA,OAAA,QAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,KAAA,WAAuB,QAAI,KAAA,QAAA,SAAqB,IAAG,OAAA,gBAAA,QAAuB,EAAA,QAAQ,UAAQ,GAAA,MAAA,GAAA,MAAA,UAAA,aAAA,UAAA,aAAA,CAAuB,IAAE,IAAI;IAAA,CAAA;AAGjN,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,OAAA,EAAA,EAAmN,GAAA,qDAAA,GAAA,GAAA,OAAA,EAAA;AAkErN,IAAA,uBAAA;;;;;AArEiE,IAAA,qBAAA,WAAA,OAAA,YAAA,IAAA,CAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA,KAAA,UAAA,CAAA;AA0B1C,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,KAAA,IAAA;;;;;;AAnCzB,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAK,IAAA,qBAAA,QAAA,SAAA,4DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAQ,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,SAAA,SAAA,6DAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAqI,OAAA,gBAAA,QAAuB,EAAA,QAAQ,aAAW,GAAA,MAAA,UAAA,YAAA,CAAa,CAAC;IAAA,CAAA;AAGxN,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,OAAA,EAAA;AAwEF,IAAA,uBAAA;AAEE,IAAA,oBAAA,GAAA,KAAA,EAAA;AAEJ,IAAA,uBAAA;;;;AA5EuB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,KAAA,OAAA;;;;;;AAgFrB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAGC,GAAA,KAAA,EAAA;AAMG,IAAA,qBAAA,SAAA,SAAA,oFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,MAAA,CAAiB;IAAA,CAAA;AAE1B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,oFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,MAAA,CAAsB;IAAA,CAAA;AAG/B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEA,IAAA,qBAAA,SAAA,SAAA,oFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,MAAA,CAAsB;IAAA,CAAA;AAG/B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA4C,IAAA,qBAAA,SAAA,SAAA,oFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,QAAA,CAAc;IAAA,CAAA;AACjE,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAI;;;;;;AA3BJ,IAAA,oBAAA;AAAA,IAAA,sBAAA,UAAA,OAAA,mBAAA,QAAA;;;;;AAHJ,IAAA,qBAAA,GAAA,gEAAA,IAAA,GAAA,gBAAA,EAAA;;;;AAAe,IAAA,qBAAA,QAAA,CAAA,OAAA,QAAA;;;;;;AAoDX,IAAA,yBAAA,GAAA,KAAA,EAAA;AAKE,IAAA,qBAAA,SAAA,SAAA,yFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,SAAA,UAAA,SAAA,QAAA,CAA2C;IAAA,CAAA;AAEpD,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;AAJE,IAAA,qBAAA,qBAAA,OAAA,IAAA;;;;;;AAKF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAIE,IAAA,qBAAA,SAAA,SAAA,yFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,SAAA,UAAA,SAAA,QAAA,CAA4C;IAAA,CAAA;AAErD,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;;;AA9BJ,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAKE,GAAA,KAAA,EAAA;AAIF,IAAA,qBAAA,SAAA,SAAA,qFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,QAAA,CAAsB;IAAA,CAAA;AAE/B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACI,IAAA,qBAAA,GAAA,qEAAA,GAAA,GAAA,KAAA,EAAA,EAMC,GAAA,qEAAA,GAAA,GAAA,KAAA,EAAA;AAaH,IAAA,uBAAA;;;;;;AA9BE,IAAA,oBAAA;AAAA,IAAA,sBAAA,UAAA,OAAA,oBAAA,SAAA,YAAA,OAAA,uBAAA,SAAA,QAAA;AAWI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,SAAA,QAAA,KAAA,UAAA,CAAA;AASA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,SAAA,QAAA,KAAA,UAAA,CAAA;;;;;AAvBR,IAAA,qBAAA,GAAA,iEAAA,GAAA,GAAA,gBAAA,EAAA;;;;AAAe,IAAA,qBAAA,QAAA,CAAA,OAAA,QAAA;;;ADjHb,IAAO,2BAAP,MAAO,0BAAwB;EAKnC,YACU,OACA,YACA,KACA,OACA,cACA,OACA,YACD,WACC,cAAsB;AARtB,SAAA,QAAA;AACA,SAAA,aAAA;AACA,SAAA,MAAA;AACA,SAAA,QAAA;AACA,SAAA,eAAA;AACA,SAAA,QAAA;AACA,SAAA,aAAA;AACD,SAAA,YAAA;AACC,SAAA,eAAA;AAbO,SAAA,UAAU,GAAG,YAAY,QAAQ,UAAU;AAG5D,SAAA,sBAAyB,CAAA;AA6ChB,SAAA,SAAS;AACT,SAAA,iBAAiB;AAUjB,SAAA,OAAO;AACP,SAAA,MAAM;AACN,SAAA,WAAW;AAKpB,SAAA,OAAuB,CAAA;AAIvB,SAAA,MAAM,EAAE,SAAS,MAAK;AAIZ,SAAA,YAAY,IAAI,aAAY;AAC5B,SAAA,UAAU,IAAI,aAAY;AAC1B,SAAA,YAAY,IAAI,aAAY;AAC5B,SAAA,YAAY,IAAI,aAAY;AAC5B,SAAA,cAAc,IAAI,aAAY;AAC9B,SAAA,qBAAqB,IAAI,aAAY;AACrC,SAAA,iBAAiB,IAAI,aAAY;AACjC,SAAA,eAAe,IAAI,aAAY;AAChC,SAAA,uBAAwB,IAAI,aAAY;AACxC,SAAA,uBAAwB,IAAI,aAAY;AAKjD,SAAA,sBAA2C;AAC3C,SAAA,0BAA+C;AAC/C,SAAA,kBAAsB;AACtB,SAAA,kBAAgB;AAChB,SAAA,sBAAqB;AACrB,SAAA,0BAAwB;AAShB,SAAA,sBAA+B;AAC9B,SAAA,gBAAgB,OAAO,OAAOC,KAAI,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,YAAW,EAAG,cAAc,EAAE,KAAK,YAAW,CAAE,CAAC;AAyC7G,SAAA,QAAgB,CAAA;AAhIrB,SAAK,aAAa,mBAAkB,EAAG,UAAU,YAAS;AACxD,WAAK,eAAc;IACrB,CAAC;AAED,SAAK,aAAa,aAAY,EAAG,UAAU,YAAS;AAClD,WAAK,oBAAoB,KAAK,iBAAgB,MAAM;IACtD,CAAC;AACD,SAAK,aAAa,aAAY,EAAG,UAAU,YAAS;AAClD,UAAG,OAAO,UAAQ,KAAK,KAAK,MAAK;AAC/B,aAAK,kBAAkB,OAAO,OAAO;AACrC,aAAK,UAAS;MAChB;IACF,CAAC;AACD,SAAK,aAAa,WAAU,EAAG,UAAU,YAAS;AAChD,UAAG,OAAO,UAAQ,KAAK,KAAK,QAAO;AACjC,aAAK,kBAAkB,OAAO,OAAO;AACrC,aAAK,iBAAiB,OAAO,UAAS,OAAO,OAAO;AACpD,aAAK,UAAU,MAAK,MAAM;MAI5B;AACA,UAAG,OAAO,cAAY,KAAK,KAAK,QAAO;AACrC,aAAK,kBAAkB,OAAO,OAAO;AACrC,aAAK,UAAU,MAAK,MAAM;MAC5B;IAEF,CAAC;AAED,SAAK,aAAa;EACpB;;EAiDA,IACI,KAAK,MAAU;AACjB,SAAK,QAAQ;EACf;EACA,IAAI,OAAI;AACN,WAAO,KAAK;EACd;EAGA,WAAQ;AACN,SAAK,QAAQ;MACX,OAAO;MACP,QAAQ;;AAEV,QAAG,KAAK,QAAQ,KAAK,KAAK,WAAU;AAElC,WAAK,qBAAmB,KAAK,MAAM,KAAK,KAAK,SAAS;AACtD,UAAG,KAAK,oBAAmB;AACzB,aAAK,OAAK,KAAK,mBAAmB;MACpC;AACA,WAAK,YAAW;IAElB;EAGF;EACA,cAAW;AACT,SAAK,kBAAgB;EAEvB;EAEA,cAAW;AACT,QAAG,KAAK,oBAAmB;AACzB,UAAI,QAAQ,KAAK,mBAAmB;AACnC,UAAG,SAAO,GAAE;AACX,gBAAM;MACP;AACH,WAAK,QAAQ;QACX,OAAO,GAAG,GAAG;QACb,QAAQ;;IAEZ;EACA;EACA,aAAU;AACR,SAAK,kBAAgB;EACvB;EACA,wBAAqB;EAEtB;EAGC,SAAS,OAAkB;AACzB,UAAM,oBAA4B;AAClC,QACE,MAAM,UAAU,SAChB,MAAM,UAAU,WACf,MAAM,UAAU,QAAQ,qBACvB,MAAM,UAAU,SAAS,oBAC3B;AACA,aAAO;IACT;AACA,WAAO;EACT;EAEA,YAAY,OAAkB;AAC5B,SAAK,QAAQ;;;MAGX,OAAO,GAAG,MAAM,UAAU,KAAK;MAC/B,QAAQ;;EAEZ;EAEA,YAAY,KAA6B;AACvC,SAAK,eAAc;AACnB,SAAK,UAAU,KAAK,GAAG;EACzB;EACA,iBAAiB,KAA6B;AAC5C,SAAK,eAAc;AACnB,SAAK,QAAQ,KAAK,GAAG;EACvB;EACC,mBAAgB;AAChB,QAAG,CAAC,KAAK,oBAAmB;AAC3B,UAAI,SAAO,CAAA;AACT,aAAO,KAAK,EAAC,YAAW,GAAE,WAAU,CAAA,GAAG,SAAQ,MAAK,QAAO,CAAA,EAAE,CAAC;AAC9D,UAAI,aAAW;QAAC,UAAS;QACvB,SAAQ;;AAET,WAAK,KAAK,KAAK,UAAU;AAEzB,WAAK,qBAAmB;QACvB,OAAM;QACN,MAAM,KAAK;;IAEf;AAEA,QAAI,QAAQ,KAAK,UAAU,KAAK,uBAAwB;MACtD,MAAM;QACJ,OAAO,KAAK,mBAAmB;QAC/B,UAAS,KAAK;;;;KAKjB;AAED,UAAM,YAAW,EAAG,UAAU,YAAS;AACrC,UAAG,UAAU,OAAO,SAAS,QAAO;AAClC,aAAK,mBAAmB,QAAM,OAAO,KAAK;AAC1C,aAAK,UAAU,IAAI;AACnB,aAAK,YAAW;MAIlB;IACF,CAAC;EACH;EACA,WAAQ;AACP,QAAI,YAAW,KAAK,KAAK;AACzB,QAAI,SAAO,CAAA;AACX,WAAO,KAAK,EAAC,YAAW,GAAE,WAAU,CAAA,GAAG,SAAQ,MAAK,QAAO,CAAA,EAAE,CAAC;AAC9D,QAAI,aAAW,EAAC,UAAS,WAAU,SAAQ,OAAM;AAChD,SAAK,KAAK,KAAK,UAAU;AACzB,SAAK,eAAc;AACnB,SAAK,UAAS;EAChB;EAEA,YAAY,UAAgB;AAC1B,QAAI,KAAK,KAAK,QAAQ,EAAE,QAAQ,SAAS,IAAI;AAC3C,UAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AAC/D,UAAI,SAAQ,iBAAiB,CAAC,EAAE,QAAQ;AACxC,WAAK,KAAK,QAAQ,EAAE,QAAQ,KAAK,EAAC,YAAW,SAAO,GAAE,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,CAAC;AAC7E,WAAK,iBAAiB,iBAAiB,CAAC,EAAE,OAAO;AACjD,WAAK,UAAS;IAChB,OAAO;AACL,YAAM,qCAAqC;IAC7C;EAEF;EAEA,iBAAiB,kBAAiB,UAAS;AAEzC,QAAG,YAAU,MAAK;AAChB,UAAI,aAAW,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AACzD,UAAG,WAAW,UAAQ;AACpB;AACF,yBAAkB,WAAW,CAAC,EAAE;IAClC;AACA,QAAI,SAAQ;AACZ,QAAK,QAAM;AACX,QAAI,cAAY,OAAK,iBAAiB;AACtC,aAAQ,KAAK,QAAQ;AAClB,QAAE,QAAO;AACT,QAAE,WAAS;AACX,QAAE,KAAG;AACL;IAEH;EAEF;EAEA,+BAA+B,kBAAgB;AAC7C,aAAQ,KAAK,kBAAkB;AAC/B,UAAI,SAAQ,EAAE;AACd,UAAI,cAAY,MAAI,EAAE,QAAQ;AAC9B,UAAK,QAAM;AACX,eAAQ,KAAK,QAAQ;AAClB,UAAE,QAAO;AACT,UAAE,QAAM;AACR,UAAE,KAAG;AACL;MACH;IACF;EAEA;EAEA,iBAAiB,MAAI;AACpB,QAAI,WAAiB,KAAK;AAC1B,QAAI,WAAiB,KAAK;AACzB,QAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AAC/D,QAAG,iBAAiB,SAAO,GAAE;AAC5B,UAAI,SAAQ,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AAC/C,UAAI,QAAQ;AACV,YAAI,aAAW,CAAA;AACf,mBAAW,KAAK,EAAC,SAAQ,GAAE,SAAQ,KAAI,WAAU,CAAA,EAAE,CAAC;AACnD,eAAO,KAAK,KAAK,EAAC,WAAU,WAAU,CAAC;AACvC,aAAK,+BAA+B,OAAO,IAAI;MAClD;IAEF;AACA,SAAK,UAAS;EAChB;;EAEA,uBAAuB,MAAK,SAAO;AACjC,QAAI,WAAiB,KAAK;AAC1B,QAAI,WAAiB,KAAK;AACzB,QAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AAC/D,QAAG,iBAAiB,SAAO,GAAE;AAC5B,UAAI,SAAQ,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AAChD,UAAI,QAAQ;AACV,YAAI,iBAAe,OAAO,KAAK,KAAK,cAAc;AAClD,YAAI,KAAG,eAAe,QAAQ;AAC9B,iBAAQ,KAAK,eAAe,SAAS;AACnC,cAAG,EAAE,SAAO,KAAK,mBAAkB;AACjC,gBAAG,CAAC,EAAE,SAAQ;AACZ,gBAAE,UAAQ,CAAA;YACZ;AACA,cAAE,QAAQ,KAAK,OAAO;UACxB;QAEF;MAEH;IAEA;AACA,SAAK,UAAS;EACjB;;EAEA,oBAAoB,MAAI;AACtB,QAAI,WAAiB,KAAK;AAC1B,QAAI,WAAiB,KAAK;AACzB,QAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AAC/D,QAAG,iBAAiB,SAAO,GAAE;AAC5B,UAAI,SAAQ,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AAChD,UAAI,QAAQ;AACV,YAAI,iBAAe,OAAO,KAAK,KAAK,cAAc;AAClD,YAAI,KAAG,eAAe,QAAQ;AAC9B,uBAAe,QAAQ,KAAK,EAAC,SAAQ,KAAG,GAAE,SAAQ,KAAI,WAAU,CAAA,EAAE,CAAC;AACnE,aAAK,+BAA+B,OAAO,IAAI;MAClD;IAEA;AACA,SAAK,UAAS;EACjB;EACA,uBAAuB,MAAI;AACzB,QAAI,WAAiB,KAAK;AAC1B,QAAI,WAAiB,KAAK;AACzB,QAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AAC/D,QAAG,iBAAiB,SAAO,GAAE;AAC5B,UAAI,SAAQ,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AAChD,UAAI,QAAQ;AACV,YAAI,iBAAe,OAAO,KAAK,KAAK,cAAc;AAClD,YAAI,KAAG,eAAe,QAAQ;AAC9B,uBAAe,QAAQ,OAAO,KAAK,mBAAmB,CAAC;AACvD,aAAK,+BAA+B,OAAO,IAAI;MAClD;IAEA;AACA,SAAK,UAAS;EACjB;EACA,eAAe,UAAkB,UAAgB;AAC/C,SAAK,KAAK,QAAQ,EAAE,QAAQ,OAAO,UAAU,CAAC;AAC9C,SAAK,iBAAiB,MAAK,QAAQ;AACnC,SAAK,UAAS;EAChB;EAEA,YAAY,UAAgB;AAC1B,SAAK,KAAK,OAAO,UAAU,CAAC;AAC5B,SAAK,UAAS;EAChB;EAGA,eAAe,KAAG;AAChB,SAAK,oBAAoB,KAAK,iBAAgB,IAAI,IAAI;EACxD;EACA,kBAAkB,MAAI;AACpB,SAAK,OAAK;AACV,SAAK,UAAU,KAAK,IAAI;EAC1B;EACA,cAAc,UAAS,UAAQ;AAC7B,SAAK,aAAW;AAChB,SAAK,gBAAc;EAErB;EACA,YAAY,QAAM;AAChB,QAAI,QAAO;AACP,aAAO,EAAC,OAAO,OAAO,QAAM,IAAG;IACnC;AACA,WAAO,CAAA;EACX;EAEA,iBAAiB,QAAM;AACrB,QAAI,QAAO;AACT,YAAM,eAAe,QAAQ,SAAS,UAAU;AAChD,YAAM,oBAAoB;AAC5B,YAAM,gBAAiB,QAAQ,SAAS,IAAI,CAAC,QAAU;AACtD,eAAO,KAAK,QAAS,KAAK,QAAQ,oBAAoB,eAAgB,KAAK;MAC5E,CAAC;AACC,aAAO,EAAC,OAAO,gBAAc,IAAG;IACpC;AACA,WAAO,CAAA;EAEP;;EAEE,UAAU,UAAU,qBAAoB;AAEtC,QAAG,CAAC,KAAK,oBAAmB;AAC1B,WAAK,qBAAmB;QACtB,OAAM;QACN,MAAK,KAAK;;IAEd,OAAK;AACH,WAAK,mBAAmB,OAAK,KAAK;IACpC;AACA,QAAI,QAAM,CAAA;AACZ,QAAG,qBAAoB;AACrB,cAAM;QAAC,UAAS,KAAK,KAAK;QACtB,cAAa,oBAAoB;QAChC,aAAY,oBAAoB;QAChC,WAAU,oBAAoB;QAC7B,aAAY,KAAK,UAAU,KAAK,kBAAkB;;IAE1D,OAAK;AACF,cAAM;QAAC,UAAS,KAAK,KAAK;QAClB,aAAY,KAAK,UAAU,KAAK,kBAAkB;;IAE3D;AAEA,UAAM,MAAM;AACZ,SAAK,WAAW,YAAY,IAAG,KAAI,KAAK,EAAE,UAAU,OAAG;AACrD,WAAK,KAAK,YAAU,KAAK,UAAU,KAAK,kBAAkB;AAC1D,UAAG,UAAS;AACV,aAAK,aAAa,KAAK,IAAI;MAC7B;IACF,GAAE,WAAO;AACP,cAAQ,IAAI,KAAK;IACnB,CAAC;EAEH;EACA,gBAAgB,OAAU,YAAU;AAClC,QAAG,KAAK;AACN;AACF,UAAM,gBAAe;AACrB,SAAK,sBAAoB;AACzB,SAAK,0BAAwB;AAC7B,SAAK,eAAc;AAEnB,UAAM,MAAsC,MAAM;AAElD,SAAK,sBAAoB,IAAI,oBAAmB;AAChD,SAAK,kBAAkB;AACvB,SAAK,oBAAoB,0BAAwB,MAAM,cAAc,sBAAqB,EAAG,QAAO;AACpG,SAAK,oBAAoB,0BAAwB,MAAM,cAAc,sBAAqB,EAAG;AAC7F,SAAK,0BAAwB,IAAI,oBAAmB;AACpD,SAAK,0BAAwB,KAAK;EACpC;EACA,iBAAc;AACZ;AACA,UAAM,MAAmB,KAAK,WAAW;AACzC,UAAM,WAAW,IAAI,iBAAiB,cAAc;AACpD,QAAG,UAAS;AACV,eAAS,QAAQ,CAAC,SAAQ;AACxB,cAAM,MAAsC;AAC7C,YAAI,MAAM,kBAAgB;MAE3B,CAAC;IACH;EACF;EAGF,oBAAoB,MAAK,SAAO;AAC1B,QAAG,QAAM,UAAa,QAAM;AAC1B;AACN,YAAQ,KAAK,MAAM;MACjB,KAAK;AAAa;AAChB,cAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,KAAK,QAAQ;AACpE,cAAI,SAAQ,iBAAiB,CAAC,EAAE,QAAQ;AAExC;QACF;AAAC;MACD,KAAK;AAAU;AACT,cAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,KAAK,QAAQ;AACpE,cAAI,SAAQ,iBAAiB,CAAC,EAAE;AAChC,mBAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,SAAS;AAClD,gBAAG,SAAS,KAAK,UAAS;AACxB,qBAAO,KAAK,EAAE,QAAQ,KAAK,OAAO;AAClC;YACF;UACF;AACA,eAAK,UAAS;AAElB;QACF;AAAC;MAED,KAAK;AAAa;AACf,cAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,UAAS,kBAAiB,KAAK,aAAY,qBAAoB,KAAK,kBAAiB;AAGvI,cAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,KAAK,QAAQ;AACpE,cAAG,iBAAiB,SAAO,GAAE;AAC5B,gBAAI,SAAQ,iBAAiB,CAAC,EAAE,QAAQ,KAAK,QAAQ;AACrD,gBAAI,QAAQ;AACV,kBAAI,iBAAe,OAAO,KAAK,KAAK,WAAW;AAC/C,uBAAS,QAAQ,GAAG,QAAQ,eAAe,QAAQ,QAAQ,SAAS;AACnE,oBAAG,SAAS,KAAK,mBAAkB;AACjC,iCAAe,QAAQ,KAAK,EAAE,QAAQ,KAAK,OAAO;AAClD;gBACF;cACF;YACF;UACF;AACA,eAAK,UAAS;AACd;QACF;AAAC;IAGH;EAEF;EACA,iBAAiB,UAAS,SAAO;AAC/B,QAAG,YAAY,SAAS,SAAO,KAAK,SAAQ;AAC1C,UAAI,MAAI,SAAS,MAAM,GAAG;AAC1B,UAAG,OAAO,IAAI,SAAO,GAAE;AACrB,YAAI,eAAa,IAAI,CAAC;AACtB,YAAI,WAAS,IAAI,CAAC;AAClB,YAAG,YAAU,UAAS;AACpB,cAAI,WAAS,OAAO,IAAI,CAAC,CAAC;AAC1B,cAAI,WAAS,OAAO,IAAI,CAAC,CAAC;AAC1B,cAAI,OAAK,EAAC,YAAW,UAAS,YAAW,UAAS,QAAO,SAAQ;AACjE,eAAK,kBAAkB,OAAO;AAC9B,eAAK,oBAAoB,MAAK,OAAO;QACvC,WACQ,YAAU,aAAY;AAC5B,cAAI,WAAS,OAAO,IAAI,CAAC,CAAC;AAC1B,cAAI,WAAS,OAAO,IAAI,CAAC,CAAC;AAC1B,cAAI,cAAY,OAAO,IAAI,CAAC,CAAC;AAC7B,cAAK,oBAAkB,OAAO,IAAI,CAAC,CAAC;AACpC,cAAI,OAAK,EAAC,QAAO,aAAY,YAAW,UAAS,YAAW,UAAS,eAAc,aAAY,qBAAoB,kBAAiB;AAGpI,eAAK,kBAAkB,OAAO;AAC9B,eAAK,oBAAoB,MAAK,OAAO;QAEvC;MAEF;IACF;EACF;EACA,kBAAkB,SAAO;AACvB,QAAG,KAAK,KAAK,QAAO;AAClB,eAAS,QAAQ,GAAG,QAAQ,KAAK,KAAK,QAAQ,SAAS;AACrD,cAAM,IAAI,KAAK,KAAK,KAAK;AACzB,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,QAAQ,KAAK;AACzC,gBAAM,MAAM,EAAE,QAAQ,CAAC;AACvB,cAAG,IAAI,WAAS,MAAK;AACnB,gBAAI,cAAc,IAAI,QAAQ,QAAQ,OAAO;AACzC,gBAAI,cAAc,IAAI;AACpB,kBAAI,QAAQ,OAAO,aAAa,CAAC;YACnC;UAEN;AACE,mBAAS,KAAK,GAAG,KAAK,IAAI,KAAK,QAAQ,MAAM;AAC3C,kBAAM,MAAM,IAAI,KAAK,EAAE;AACvB,qBAAS,OAAO,GAAG,OAAO,IAAI,QAAQ,QAAQ,QAAQ;AACpD,oBAAM,UAAU,IAAI,QAAQ,IAAI;AAChC,kBAAG,QAAQ,WAAS,MAAK;AACvB,oBAAI,cAAc,QAAQ,QAAQ,QAAQ,OAAO;AACjD,oBAAI,cAAc,IAAI;AACpB,0BAAQ,QAAQ,OAAO,aAAa,CAAC;gBACvC;cAEA;YACJ;UACJ;QAEF;MAEF;IACF;EACF;EACC,cAAc,SAAO;AAOlB,QAAG,KAAK,QAAS,KAAK,KAAK,YAAY,KAAK,KAAK,SAAS,YAAW;AACnE,UAAI,MAAI,KAAK,KAAK,SAAS,WAAW,OAAO,OAAG,EAAE,QAAM,OAAO;AAC/D,UAAG,OAAO,IAAI,SAAO,GAAE;AACrB,eAAO,IAAI,CAAC;MACd;IACF;AAEF,WAAO;EAER;EACA,QAAQ,OAAM,SAAO;AACpB,SAAK,cAAY;AACjB,SAAK,qBAAqB,KAAK,EAAC,UAAS,KAAK,KAAK,QAAO,WAAU,QAAO,CAAC;AAC5E,YAAQ,IAAI,WAAU,OAAM,OAAO;EAEpC;EACA,WAAW,OAAK;AACf,UAAM,eAAc;EAErB;EACA,QAAQ,OAAU,SAAO;AACxB,QAAG,KAAK;AACN;AACF,UAAM,gBAAe;AACrB,QAAI,WAAS,MAAM,cAAc;AACjC,SAAK,sBAAoB;AACzB,SAAK,0BAAwB;AAC7B,SAAK,iBAAiB,UAAS,KAAK,WAAW;AAC/C,QAAG,CAAC,SAAQ;AACV,UAAG,YAAY,SAAS,SAAO,GAAE;AAC/B,YAAI,MAAI,SAAS,MAAM,GAAG;AAC1B,YAAG,OAAO,IAAI,SAAO,GAAE;AACzB,eAAK,qBAAqB,KAAK,EAAC,UAAS,KAAK,KAAK,QAAO,YAAW,SAAQ,CAAC;QAC5E;MACF;IACF;EAED;EAEA,gBAAgB,OAAM,IAAE;AACvB,UAAM,MAAsC,MAAM;EAEnD;;;;;;EAQC,mBAAmB,QAAM;AACvB,QAAI,OAAK,OAAO;AAChB,QAAI,SAAO,OAAO;AAClB,SAAK,sBAAoB;AACzB,QAAG,UAAQ,UAAS;AAClB,WAAK,0BAAwB,OAAO;AACpC,WAAK,sBAAoB;AAC1B;IACD,WACQ,UAAQ,YAAW;AACzB,WAAK,0BAAwB;AAC7B,WAAK,0BAAwB,OAAO;AAErC;IAED;AACA,QAAG,UAAQ,aAAa,UAAQ,eAAc,UAAS,mBAAmB,UAAS,YAAW;AAC5F,cAAQ,KAAK,MAAM;QACjB,KAAK;AAAU;AACb,gBAAG,KAAK,SAAQ;AACZ,kBAAI,cAAY,EAAC,QAAO,KAAK,MAAK,OAAM,KAAK,cAAc,KAAK,OAAO,GAAE,WAAU,KAAK,QAAO;AAC/F,kBAAG,UAAQ,aAAY;AACrB,qBAAK,YAAY,KAAK,WAAW;cACnC,WAAS,UAAQ,WAAW;AAC5B,qBAAK,UAAU,KAAK,WAAW;cAC/B,WACQ,UAAQ,iBAAiB;AAC/B,qBAAK,mBAAmB,KAAK,WAAW;cACxC,WACQ,UAAQ,YAAY;AAC1B,qBAAK,eAAe,KAAK,WAAW;cACpC;AACJ;YACF;AAEF,gBAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,KAAK,QAAQ;AACnE,qBAAS,QAAQ,GAAG,QAAQ,iBAAiB,QAAQ,SAAS;AAC7D,uBAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK,EAAE,QAAQ,QAAQ,KAAK;AAC7D,oBAAG,KAAG,KAAK,UAAS;AAClB,wBAAM,UAAQ,iBAAiB,KAAK,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC;AAC1D,sBAAG,SAAQ;AACT,wBAAI,cAAY,EAAC,QAAO,KAAK,MAAK,OAAM,KAAK,cAAc,OAAO,GAAE,WAAU,QAAO;AACrF,wBAAG,UAAQ,aAAY;AACrB,2BAAK,YAAY,KAAK,WAAW;oBACnC,WAAS,UAAQ,WAAW;AAC5B,2BAAK,UAAU,KAAK,WAAW;oBAC/B,WACQ,UAAQ,iBAAiB;AAC/B,2BAAK,mBAAmB,KAAK,WAAW;oBACxC,WACQ,UAAQ,YAAY;AAC1B,2BAAK,eAAe,KAAK,WAAW;oBACpC;AACJ;kBACF;gBACF;cAEJ;YACD;AACD;UACF;AAAC;QAED,KAAK;AAAa;AAChB,gBAAI,UAAQ;AACZ,gBAAG,KAAK,SAAQ;AACd,wBAAQ,KAAK;YACf,OAAK;AACL,kBAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,UAAS,kBAAiB,KAAK,YAAW;AAC7F,kBAAI,mBAAiB,KAAK,KAAK,OAAO,OAAG,EAAE,YAAY,KAAK,QAAQ;AAEpE,uBAAS,QAAQ,GAAG,QAAQ,iBAAiB,QAAQ,SAAS;AAC5D,sBACD,UAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK,EAAE,QAAQ,QAAQ,KAAK;AAC7D,sBAAG,KAAG,KAAK,UAAS;AAElB,wBAAI,SAAQ,iBAAiB,CAAC,EAAE,QAAQ,CAAC;AACzC,wBAAI,QAAQ;AACV,0BAAI,iBAAe,OAAO,KAAK,KAAK,cAAc;AAElD,+BAAS,OAAO,GAAG,OAAO,eAAe,QAAQ,QAAQ,QAAQ;AAEhE,4BAAG,QAAM,KAAK,mBAAkB;AAC9B,gCAAM,UAAU,eAAe,QAAQ,IAAI;AAC3C,oCAAQ,QAAQ,QAAQ,CAAC;AACzB,gCAAM;AACN;wBACF;sBACD;oBACF;kBACF;gBAEJ;cACD;YACD;AAEC,gBAAI,cAAY,EAAC,QAAO,KAAK,MAAK,OAAM,KAAK,cAAc,OAAO,GAAE,WAAU,QAAO;AACrF,gBAAG,UAAQ,aAAY;AACrB,mBAAK,YAAY,KAAK,WAAW;YACnC,WAAS,UAAQ,WAAW;AAC5B,mBAAK,UAAU,KAAK,WAAW;YAC/B,WACQ,UAAQ,iBAAiB;AAC/B,mBAAK,mBAAmB,KAAK,WAAW;YACxC,WACQ,UAAQ,YAAY;AAC1B,mBAAK,eAAe,KAAK,WAAW;YACpC;AACJ;UACF;AAAC;MAIH;AACD;IACD;AAEA,SAAK,eAAc;AACnB,YAAQ,KAAK,MAAM;MACjB,KAAK;AAAa;AAChB,cAAG,UAAQ,aAAY;AACtB,iBAAK,YAAY,KAAK,QAAQ;UAC/B,WACO,UAAQ,aAAY;AACzB,iBAAK,YAAY,KAAK,QAAQ;UAC/B;AAED;QACF;AAAC;MACD,KAAK;AAAU;AACb,cAAG,UAAQ,aAAY;AACrB,iBAAK,YAAY,KAAK,QAAQ;UAC/B,WACO,UAAQ,UAAS;AACtB,gBAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,SAAQ;AAC3D,iBAAK,iBAAiB,IAAI;UAC3B,WACQ,UAAQ,gBAAe;AAC7B,iBAAK,eAAe,KAAK,UAAU,KAAK,QAAQ;UACjD;AAEH;QACF;AAAC;MAED,KAAK;AAAa;AAChB,cAAG,UAAQ,aAAY;AACrB,gBAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,UAAS,kBAAiB,KAAK,YAAW;AAC7F,iBAAK,oBAAoB,IAAI;UAC9B,WACO,UAAQ,gBAAe;AAC7B,gBAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,UAAS,kBAAiB,KAAK,aAAY,qBAAoB,KAAK,kBAAiB;AACvI,iBAAK,uBAAuB,IAAI;UACjC;AACF;QACF;AAAC;MACD,KAAK;AAAmB;AACtB,cAAG,UAAQ,aAAY;AACrB,gBAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,UAAS,kBAAiB,KAAK,YAAW;AAC7F,iBAAK,oBAAoB,IAAI;UAC9B,WACO,UAAQ,gBAAe;AAC7B,gBAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,UAAS,kBAAiB,KAAK,aAAY,qBAAoB,KAAK,kBAAiB;AACvI,iBAAK,uBAAuB,IAAI;UACjC;AACF;QACF;AAAC;IAKH;EACF;EAEA,iBAAc;AACZ,SAAK,eAAc;EACrB;;;uCA7xBW,2BAAwB,4BAAA,qBAAA,GAAA,4BAAAC,WAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,UAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,QAAA,CAAA;IAAA;EAAA;;yEAAxB,2BAAwB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,cAAA,SAAA,sCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AAAxB,QAAA,qBAAA,UAAA,SAAA,qDAAA;AAAA,iBAAA,IAAA,eAAA;QAAgB,GAAA,OAAA,yBAAA;;wvBApBd;MACP;QACI,SAAS;QACT,UAAU,EAAE,mBAAmB,mBAAkB;;KAExD,GAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,eAAA,EAAA,GAAA,CAAA,oBAAA,EAAA,GAAA,CAAA,mBAAA,cAAA,GAAA,aAAA,eAAA,GAAA,cAAA,cAAA,MAAA,SAAA,GAAA,CAAA,GAAA,OAAA,GAAA,aAAA,UAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,oBAAA,yBAAA,GAAA,CAAA,SAAA,yEAAA,GAAA,QAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,uBAAA,UAAA,sBAAA,qBAAA,GAAA,CAAA,GAAA,qBAAA,sBAAA,uBAAA,iBAAA,GAAA,CAAA,GAAA,kBAAA,sBAAA,uBAAA,mBAAA,gBAAA,MAAA,GAAA,CAAA,GAAA,eAAA,gBAAA,OAAA,aAAA,WAAA,eAAA,cAAA,GAAA,QAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,SAAA,0DAAA,GAAA,WAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,gBAAA,cAAA,QAAA,eAAA,iBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,oEAAA,GAAA,MAAA,YAAA,QAAA,GAAA,MAAA,GAAA,CAAA,SAAA,uDAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,eAAA,iBAAA,4BAAA,QAAA,YAAA,GAAA,YAAA,QAAA,IAAA,GAAA,CAAA,SAAA,SAAA,GAAA,MAAA,QAAA,YAAA,GAAA,MAAA,GAAA,CAAA,SAAA,SAAA,GAAA,MAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,QAAA,YAAA,IAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,IAAA,GAAA,CAAA,aAAA,QAAA,GAAA,kBAAA,GAAA,YAAA,aAAA,KAAA,GAAA,CAAA,GAAA,mBAAA,gBAAA,eAAA,cAAA,GAAA,OAAA,GAAA,CAAA,SAAA,+DAAA,GAAA,WAAA,MAAA,SAAA,QAAA,YAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,YAAA,4BAAA,eAAA,iBAAA,GAAA,SAAA,QAAA,YAAA,WAAA,IAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,sBAAA,aAAA,GAAA,CAAA,cAAA,eAAA,GAAA,eAAA,GAAA,SAAA,oBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,CAAA,cAAA,aAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,eAAA,GAAA,CAAA,cAAA,iBAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,eAAA,GAAA,CAAA,cAAA,WAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,eAAA,QAAA,GAAA,CAAA,SAAA,oBAAA,SAAA,+CAAA,cAAA,sBAAA,GAAA,qBAAA,SAAA,GAAA,MAAA,GAAA,CAAA,SAAA,eAAA,SAAA,2BAAA,cAAA,iBAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,cAAA,sBAAA,GAAA,eAAA,QAAA,GAAA,SAAA,oBAAA,gBAAA,QAAA,GAAA,SAAA,mBAAA,GAAA,CAAA,GAAA,MAAA,eAAA,GAAA,CAAA,cAAA,iBAAA,GAAA,eAAA,GAAA,SAAA,oBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,cAAA,CAAA,GAAA,UAAA,SAAA,kCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;ACvBL,QAAA,yBAAA,GAAA,OAAA,CAAA;AAOE,QAAA,qBAAA,cAAA,SAAA,8DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,IAAA,UAA4B,IAAI;QAAA,CAAA,EAAC,cAAA,SAAA,8DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,IAAA,UACL,KAAK;QAAA,CAAA;AAEjC,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,qBAAA,aAAA,SAAA,6DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,kBAAA,IAAA,IAAA;QAAA,CAAA,EAAoC,YAAA,SAAA,4DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,kBACN,IAAI;QAAA,CAAA;AAElC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAsB,GAAA,SAAA,CAAA;AACO,QAAA,iBAAA,CAAA;AAAW,QAAA,uBAAA,EAAQ;AAGhD,QAAA,oBAAA,GAAA,OAAA,CAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA;AACE,QAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,gBAAA,CAAA;AAGF,QAAA,uBAAA,EAAM;AAGR,QAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,OAAA,CAAA,EAA4N,GAAA,iDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAmFlL,IAAA,kDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AA8E5C,QAAA,uBAAA;AAGA,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,mBAAA,EAAA;AAIc,QAAA,qBAAA,uBAAA,SAAA,kFAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAuB,IAAA,mBAAA,MAAA,CAA0B;QAAA,CAAA;AAEhD,QAAA,uBAAA;AAEH,QAAA,yBAAA,IAAA,yBAAA,EAAA;AAGC,QAAA,qBAAA,qBAAA,SAAA,sFAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAsB,IAAA,kBAAA,MAAA,CAAyB;QAAA,CAAA;AAE9C,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,yBAAA,EAAA;AAKD,QAAA,qBAAA,kBAAA,SAAA,mFAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAmB,IAAA,eAAA,MAAA,CAAsB;QAAA,CAAA;AAExC,QAAA,uBAAA,EAAwB;;;;AAnNzC,QAAA,iCAAA,MAAA,SAAA,IAAA,OAAA,EAAA;AACA,QAAA,qBAAA,WAAA,IAAA,KAAA;AAW+B,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,KAAA;AAQxB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,oBAAA,eAAA,EAA+B,2BAAA,0BAAA,IAAAC,OAAA,IAAA,IAAA,CAAA;AAKM,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,IAAA;AAqK3B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,UAAA,IAAA,eAAA,EAA0B,sBAAA,IAAA,eAAA,EACY,uBAAA,IAAA,mBAAA;AAMjB,QAAA,oBAAA;AAAA,QAAA,qBAAA,sBAAA,IAAA,eAAA,EAAsC,uBAAA,IAAA,mBAAA,EAChB,mBAAA,IAAA,mBAAA;AAMpB,QAAA,oBAAA;AAAA,QAAA,qBAAA,sBAAA,IAAA,eAAA,EAAsC,uBAAA,IAAA,mBAAA,EAClB,mBAAA,IAAA,uBAAA,EACA,gBAAA,IAAA,oBAAA,UAAA,EACK,QAAA,IAAA,IAAA;;;MDzL3D;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAiB,GAAA,QAAA,CAAA,krLAAA,EAAA,CAAA;EAAA;;;6EAGZ,0BAAwB,EAAA,WAAA,4BAAA,UAAA,gGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEnC/B,IAAO,oCAAP,MAAO,mCAAiC;EAU5C,YACU,YACA,cACA,QAAoB;AAFpB,SAAA,aAAA;AACA,SAAA,eAAA;AACA,SAAA,SAAA;AARV,SAAA,SAAc;AACd,SAAA,iBAAsB;EAUtB;EACA,YAAY,OAAa;AAEvB,WAAO,GAAG,KAAK;EACjB;EAEA,WAAQ;AACN,QAAI,KAAK,cAAc;AACrB,cAAQ,IAAI,KAAK,YAAY;AAC7B,UAAG,KAAK,aAAa,QAAM,aAAY;AACrC,aAAK,UAAQ,KAAK,aAAa;AAC/B,aAAK,iBAAe,KAAK,QAAQ,QAAQ;AACzC,aAAK,SAAO,KAAK,QAAQ,QAAQ;AACjC,aAAK,YAAU,KAAK,aAAa,KAAK;AACtC,aAAK,qBAAmB,KAAK,aAAa;MAC1C;IACF;EACJ;EACA,cAAW;AACT,QAAI,KAAK,cAAc;AAErB,UAAG,KAAK,aAAa,QAAM,aAAY;AACrC,aAAK,UAAQ,KAAK,aAAa;AAC/B,aAAK,SAAO,KAAK,QAAQ,QAAQ;AACjC,aAAK,iBAAe,KAAK,QAAQ,QAAQ;AACzC,aAAK,YAAU,KAAK,aAAa,KAAK;MAExC;IAEF;EACF;EACA,WAAW,OAAK;AACd,UAAM,eAAc;EAErB;EAED,YAAY,OAAK;AACf,SAAK,SAAO,MAAM;EACpB;EACA,mBAAmB,OAAK;AAErB,QAAG,KAAK,SAAO;AACd,WAAK,SAAO;aACL,KAAK,SAAO,GAAE;AACrB,WAAK,SAAO,KAAK;IACnB;AAEA,QAAG,KAAK,aAAa,QAAQ,KAAK,aAAa,KAAK,WAAU;AAE5D,WAAK,qBAAmB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AACnE,UAAG,KAAK,oBAAmB;AACzB,YAAI,KAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAU,KAAK,QAAQ,QAAQ,EAAE,CAAC,KAAK,KAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAU,KAAK,QAAQ,QAAQ,EAAE,CAAC,EAAE,QAAQ,SAAO,GAAI;AAClL,cAAI,mBAAiB,KAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAU,KAAK,QAAQ,QAAQ,EAAE,CAAC;AAChG,cAAI,SAAQ,iBAAiB,QAAQ;AACrC,mBAASC,SAAQ,SAAO,GAAGA,UAAQ,KAAK,QAAQA,UAAS;AACvD,iBAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAU,KAAK,QAAQ,QAAQ,EAAE,CAAC,EAAE,QAAQ,KAAK,EAAC,YAAWA,QAAM,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,CAAC;UAErI;QAEF,OAAK;AACH,cAAI,mBAAiB,KAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAU,KAAK,QAAQ,QAAQ,EAAE,CAAC;AAChG,cAAI,SAAQ,iBAAiB,QAAQ;AACrC,mBAASA,SAAQ,KAAK,gBAAgBA,SAAQ,KAAK,QAAQA,UAAS;AAClE,iBAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAU,KAAK,QAAQ,QAAQ,EAAE,CAAC,EAAE,QAAQ,KAAK,EAAC,YAAWA,QAAM,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,CAAC;UAErI;QACF;AACA,YAAK,QAAM;AACX,YAAI,cAAY,OAAK,KAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAU,KAAK,QAAQ,QAAQ,EAAE,CAAC,EAAE,QAAQ;AAC1G,iBAAQ,KAAK,KAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAU,KAAK,QAAQ,QAAQ,EAAE,CAAC,EAAE,SAAS;AAChG,YAAE,QAAO;AACT,YAAE,WAAS;AACX,YAAE,KAAG;AACL;QAEH;MAEF;AAEA,UAAI,QAAM,CAAA;AAET,cAAM;QAAC,UAAS,KAAK,aAAa,KAAK;QAC/B,aAAY,KAAK,UAAU,KAAK,kBAAkB;MAAC;AAI5D,YAAM,MAAM;AACZ,WAAK,WAAW,YAAY,IAAG,KAAI,KAAK,EAAE,UAAU,OAAG;AACrD,aAAK,aAAa,KAAK,YAAU,KAAK,UAAU,KAAK,kBAAkB;AACtE,aAAK,aAAa,sBAAsB,KAAK;MAGhD,GAAE,WAAO;AACP,gBAAQ,IAAI,KAAK;MACnB,CAAC;IAGL;EAEA;EAEA,eAAe,OAAK;AAClB,QAAI,KAAK,SAAS;AAAI,WAAK,SAAS;aAC3B,KAAK,SAAS;AACrB,WAAK,SAAS,KAAK;AAErB,QAAI,KAAK,aAAa,QAAQ,KAAK,aAAa,KAAK,WAAW;AAC9D,WAAK,qBAAqB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AAErE,UAAI,KAAK,oBAAoB;AAC3B,YAAI,aAAa,KAAK,mBAAmB,KAAK,KAAK,OAAK,EAAE,aAAa,KAAK,QAAQ,QAAQ;AAC5F,YAAI,CAAC;AAAY;AAiBjB,YAAI,KAAK,SAAS,WAAW,QAAQ,QAAQ;AAC3C,cAAI,CAAC,KAAK,iBAAiB,YAAY,KAAK,MAAM,GAAG;AACjD,oBAAQ,KAAK,oDAAoD;AACjE,iBAAK,OAAO,QAAQ,iEAAiE,SAAS;AAC9F;UACJ;QACJ;AACA,aAAK,cAAc,YAAY,KAAK,MAAM;AASxC,YAAI,QAAQ;UACV,UAAU,KAAK,aAAa,KAAK;UACjC,aAAa,KAAK,UAAU,KAAK,kBAAkB;;AAGrD,cAAM,MAAM;AACZ,aAAK,WAAW,YAAY,IAAG,KAAK,KAAK,EAAE,UACzC,cAAW;AACT,eAAK,aAAa,KAAK,YAAY,KAAK,UAAU,KAAK,kBAAkB;AACzE,eAAK,aAAa,sBAAsB,KAAK;QAC/C,GACA,WAAQ;AACN,kBAAQ,MAAM,KAAK;QACrB,CAAC;MAEL;IACF;EACF;EAEF,iBAAiB,YAAiB,gBAAsB;AACtD,QAAI,CAAC,YAAY;AAAS,aAAO;AACjC,UAAM,kBAAkB,WAAW,QAAQ,OAAO,SAC9C,IAAI,WAAW,IAAI,QAAQ,SAAS,CAAC,EACvC;AACF,WAAO,kBAAkB;EAC3B;EAEA,cAAc,YAAiB,gBAAsB;AACnD,UAAM,kBAAkB,CAAC,GAAG,WAAW,OAAO;AAC9C,QAAI,iBAAiB,gBAAgB,QAAQ;AACzC,eAAS,IAAI,gBAAgB,QAAQ,IAAI,gBAAgB,KAAK;AAC1D,wBAAgB,KAAK;UACjB,UAAU;UACV,SAAS,CAAA;UACT,MAAM,CAAA;SACT;MACL;IACJ,WACS,iBAAiB,gBAAgB,QAAQ;AAC9C,YAAM,eAAe,gBAChB,IAAI,CAAC,KAAK,WAAW,EAAC,KAAK,MAAK,EAAE,EAClC,OAAO,UACJ,CAAC,KAAK,IAAI,WACV,KAAK,IAAI,QAAQ,WAAW,CAAC;AAErC,YAAM,kBAAkB,gBAAgB,SAAS;AACjD,YAAM,mBAAmB,aAAa,MAAM,GAAG,eAAe;AAC9D,uBACK,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK,EAChC,QAAQ,UAAO;AACZ,wBAAgB,OAAO,KAAK,OAAO,CAAC;MACxC,CAAC;AACL,sBAAgB,QAAQ,CAAC,KAAK,UAAS;AACnC,YAAI,WAAW;MACnB,CAAC;IACL;AAGA,UAAM,iBAAiB,OAAO,gBAAgB;AAC9C,oBAAgB,QAAQ,SAAM;AAC1B,UAAI,QAAQ;AACZ,UAAI,KAAK;IACb,CAAC;AAED,eAAW,UAAU;EACvB;;;uCAjOa,oCAAiC,4BAAA,UAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAjC,oCAAiC,WAAA,CAAA,CAAA,iCAAA,CAAA,GAAA,QAAA,EAAA,cAAA,eAAA,GAAA,YAAA,MAAA,UAAA,CAAA,gCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,SAAA,OAAA,MAAA,QAAA,KAAA,eAAA,eAAA,GAAA,cAAA,GAAA,SAAA,UAAA,iBAAA,OAAA,SAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,OAAA,kBAAA,OAAA,MAAA,GAAA,SAAA,GAAA,UAAA,iBAAA,SAAA,GAAA,CAAA,GAAA,YAAA,CAAA,GAAA,UAAA,SAAA,2CAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACjB9C,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgD,GAAA,OAAA,CAAA;AACb,QAAA,iBAAA,GAAA,aAAA;AAAW,QAAA,uBAAA;AAC1C,QAAA,yBAAA,GAAA,SAAA,CAAA;AAA4B,QAAA,iBAAA,GAAA,UAAA;AAAQ,QAAA,uBAAA;AACpC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA;AACG,QAAA,iBAAA,GAAA,WAAA;AAAS,QAAA,uBAAA;AACvC,QAAA,yBAAA,GAAA,OAAA,CAAA;AAAgC,QAAA,iBAAA,CAAA;AAAmC,QAAA,uBAAA,EAAM;AAE3E,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA6B,IAAA,OAAA,CAAA;AACG,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AACrC,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA2B,IAAA,OAAA,CAAA,EACG,IAAA,OAAA,CAAA,EACD,IAAA,SAAA,CAAA;AAGnB,QAAA,qBAAA,SAAA,SAAA,mEAAA,QAAA;AAAA,iBAAS,IAAA,YAAA,MAAA;QAAmB,CAAA,EAAC,UAAA,SAAA,oEAAA,QAAA;AAAA,iBACnB,IAAA,eAAA,MAAA;QAAsB,CAAA;AAIP,QAAA,2BAAA,iBAAA,SAAA,2EAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,QAAA,MAAA,MAAA,IAAA,SAAA;AAAA,iBAAA;QAAA,CAAA;AAP3B,QAAA,uBAAA,EAQC;AAGH,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,SAAA,EAAA;AAC0B,QAAA,qBAAA,UAAA,SAAA,oEAAA,QAAA;AAAA,iBAAU,IAAA,eAAA,MAAA;QAAsB,CAAA;AAAE,QAAA,2BAAA,iBAAA,SAAA,2EAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,QAAA,MAAA,MAAA,IAAA,SAAA;AAAA,iBAAA;QAAA,CAAA;AAAtF,QAAA,uBAAA,EAEA,EACE,EACF,EAEF;AAER,QAAA,oBAAA,IAAA,MAAA,EAAA;AAcA,QAAA,uBAAA;;;AA9CmB,QAAA,sBAAA,OAAA,IAAA,UAAA;AAKe,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,KAAA,WAAA;AAWtB,QAAA,oBAAA,CAAA;AAAA,QAAA,gCAAA,OAAA,IAAA,cAAA;AAGyB,QAAA,2BAAA,WAAA,IAAA,MAAA;AAK2D,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,MAAA;;sBDTtF,qBAAmB,sBAAA,oBAAA,iBAAE,aAAW,OAAA,GAAA,QAAA,CAAA,2jHAAA,EAAA,CAAA;EAAA;;;6EAEjC,mCAAiC,EAAA,WAAA,qCAAA,UAAA,uIAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGLtC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAoE,GAAA,OAAA,CAAA;AAElE,IAAA,qBAAA,YAAA,SAAA,8DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,aAAA,SAAA,+DAAA,QAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAEhB,OAAA,QAAA,QAAA,OAAA,CAAoB;IAAA,CAAA;AAGrC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA;AAExB,IAAA,oBAAA,GAAA,KAAA,CAAA;AAGF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,EAAA;AACH,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;AACjC,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAuB,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA,EAAM,EAC/C;AAEN,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,OAAA,EAAA;;AAE5B,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAgM,IAAA,QAAA,EAAA,EACM,IAAA,QAAA,EAAA,EACA,IAAA,QAAA,EAAA,EACM,IAAA,QAAA,EAAA,EACH,IAAA,QAAA,EAAA;AAEzM,IAAA,uBAAA,EAAM;;AAEV,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,+DAAA,QAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,QAAA,OAAA,CAAwB;IAAA,CAAA;AACvC,IAAA,oBAAA,IAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAS,EACH,EACA;;;;;AAxBD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,cAAA,QAAA,IAAA,CAAA;AAKkB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,KAAA;AACI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,SAAA,GAAA;;;ADZ7B,IAAO,yBAAP,MAAO,wBAAsB;EASjC,YACU,OACU,KAAmB;AAD7B,SAAA,QAAA;AACU,SAAA,MAAA;AANb,SAAA,gBAAgB,OAAO,OAAOC,KAAI,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,YAAW,EAAG,cAAc,EAAE,KAAK,YAAW,CAAE,CAAC;AAElH,SAAA,eAAe,CAAA;AACf,SAAA,mBAAmB,CAAA;EAMnB;EAEA,WAAQ;AACN,QAAG,CAAC,KAAK,gBAAe;AACtB,WAAK,uBAAsB;IAC7B;EACF;EAEA,SAAM;AACJ,QAAI,KAAK,cAAc,QAAQ,KAAK,cAAc,QAAW;AAC3D,UAAI,CAAC,KAAK,gBAAgB;AACxB,aAAK,UAAU,KAAK,UAAU;MAChC;IACF,WAAW,CAAC,KAAK,gBAAgB;AAC/B,WAAK,uBAAsB;IAC7B;EACF;EAEA,iBAAc;AACZ,QAAG,KAAK,aAAa,QAAQ,KAAK,aAAa,KAAK,WAAU;AAE5D,WAAK,qBAAmB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AACnE,UAAI,KAAK,oBAAmB;AAE1B,YAAG,KAAK,mBAAmB,KAAK,UAAU,KAAK,gBAAgB,KAAK,aAAa,SAAO,GAAE;AACxF,mBAAS,QAAQ,GAAG,QAAQ,KAAK,mBAAmB,KAAK,QAAQ,SAAS;AACxE,kBAAM,IAAI,KAAK,mBAAmB,KAAK,KAAK;AAC5C,qBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,QAAQ,KAAK;AACzC,oBAAM,MAAM,EAAE,QAAQ,CAAC;AACvB,kBAAG,IAAI,WAAS,MAAK;AACnB,yBAAS,SAAS,GAAG,SAAS,IAAI,QAAQ,QAAQ,UAAU;AAC1D,wBAAM,UAAU,IAAI,QAAQ,MAAM;AAClC,sBAAG,SAAQ;AACX,yBAAK,eAAa,KAAK,aAAa,OAAO,OAAG,EAAE,QAAM,QAAQ,YAAW,CAAE;kBAC3E;gBACF;cACF;AACE,uBAAS,KAAK,GAAG,KAAK,IAAI,KAAK,QAAQ,MAAM;AAC3C,sBAAM,MAAM,IAAI,KAAK,EAAE;AACvB,yBAAS,OAAO,GAAG,OAAO,IAAI,QAAQ,QAAQ,QAAQ;AACpD,wBAAM,UAAU,IAAI,QAAQ,IAAI;AAChC,sBAAG,QAAQ,WAAS,MAAK;AACvB,6BAAS,SAAS,GAAG,SAAS,QAAQ,QAAQ,QAAQ,UAAU;AAC9D,4BAAM,UAAU,QAAQ,QAAQ,MAAM;AACtC,0BAAG,SAAQ;AACX,6BAAK,eAAa,KAAK,aAAa,OAAO,OAAG,EAAE,QAAM,QAAQ,YAAW,CAAE;sBAC3E;oBACD;kBACA;gBACL;cACF;YAGJ;UAEF;QACF;MACF;IAEF;EACF;EACA,YAAY,SAAsB;AAEhC,QAAI,QAAQ,gBAAgB,QAAQ,aAAa,gBAAc,QAAQ,aAAa,eAAe;AACjG,UAAG,QAAQ,aAAa,eAAc;AACpC,YAAG,QAAQ,aAAa,aAAa,KAAK,UAAQ,QAAQ,aAAa,cAAc,KAAK,QAAO;AAC/F,cAAG,CAAC,KAAK,gBAAe;AACtB,iBAAK,uBAAsB;UAC7B;QACF;MACF;IAEF;AACA,QAAG,KAAK,cAAY,UAAa,KAAK,cAAY,MAAK;AACrD,WAAK,UAAU,KAAK,UAAU;IAChC;EAEF;EAEC,UAAW,MAAS;AACnB,QAAI,MAAM,UAAU,KAAK,WAAW,OAAO;AACvC,YAAM,MAAM;AACZ,UAAI,IAAI,UAAU,IAAI,WAAW,QAAQ;AACrC,eAAO,IAAI;MACf;IACJ;AACA,WAAO;EACX;;EAKE,yBAAsB;AACpB,QAAI,OAAK,KAAK,aAAa;AAC3B,QAAI,SAAS,MAAM,QAAQ,QAAQ,UAAU,MAAM;AACnD,SAAK,MAAM,uBAAuB,QAAQ,KAAK,KAAK,IAAI,EAAE,UAAU,OAAG;AACtE,WAAK,eAAc,EAAE;AACrB,WAAK,eAAc;AACnB,WAAK,mBAAiB,KAAK;IAC7B,CAAC;EACF;EAEF,cAAc,MAAY;AACxB,QAAI,OAAO,KAAK,cAAc,OAAO,OAAK,EAAE,SAAS,IAAI;AACzD,QAAI,KAAK,SAAS,KAAK,KAAK,CAAC,EAAE,OAAO;AACpC,aAAO,KAAK,CAAC,EAAE;IACjB;AACA,WAAO;EACT;EAGE,UAAU,KAAG;AAEX,QAAG,KAAK,aAAa,SAAO,GAAE;AAC5B,UAAG,OAAO,OAAK,MAAM,IAAI,SAAO,GAAG;AACjC,aAAK,eAAa,KAAK,iBAAiB,OAAO,OAAG,EAAE,KAAK,YAAW,EAAG,SAAS,IAAI,YAAW,CAAE,KACvD,EAAE,QAAQ,YAAW,EAAG,SAAS,IAAI,YAAW,CAAE,CAAC;MAE/F,OAAK;AACH,aAAK,eAAa,KAAK;MACzB;IACF,OAAK;AACH,WAAK,eAAa,KAAK;IACzB;EACF;EACA,WAAW,OAAK;AACd,UAAM,eAAc;EAErB;EACA,QAAQ,OAAM,MAAI;AACjB,QAAI,QAAM,EAAC,UAAS,MAAK,gBAAe,KAAK,aAAa,MAAK,UAAS,KAAK,aAAa,KAAK,OAAM;AACrG,UAAM,aAAa,QAAQ,iBAAgB,KAAK,UAAU,KAAK,CAAC;AAC9D,eAAW,MAAK;AAChB,WAAK,uBAAsB;IAC7B,GAAG,GAAI;EACR;EAEA,YAAY,QAAO,MAAI;AAEb,UAAM,OAAK,KAAK,aAAa;AAC7B,UAAM,QAAO,KAAK;AACf,UAAM,WAAW,KAAK;AACtB,SAAK,IAAI,YAAY,WAAW;MAC5B,QAAQ;MACR,MAAM,mCAAmC,QAAQ;MACjD,SAAS;MACT,cAAc;MACd,UAAU;MACV,aAAa;MACb,UAAU,MAAK;AACX,aAAK,MACA,UAAU,OAAM,KAAK,KAAK,IAAI,EAC9B,UACG,CAAC,YAAW;AACR,cAAI,SAAS;AACT,iBAAK,uBAAsB;UAC/B;QACJ,CAAC;MAEb;KACH;EAEd;;;uCAhLU,yBAAsB,4BAAA,qBAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,qBAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,YAAA,cAAA,gBAAA,iBAAA,GAAA,YAAA,MAAA,UAAA,CAAA,gCAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,cAAA,WAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,SAAA,sBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,aAAA,QAAA,GAAA,kBAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,gBAAA,KAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,aAAA,QAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,SAAA,MAAA,UAAA,MAAA,WAAA,aAAA,QAAA,QAAA,SAAA,4BAAA,GAAA,CAAA,KAAA,yGAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,+GAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,+GAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,qHAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,kHAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,wHAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,gBAAA,eAAA,cAAA,CAAA,GAAA,UAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACfnC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4B,GAAA,OAAA,CAAA,EAC6B,GAAA,OAAA,CAAA;AAWjD,QAAA,qBAAA,GAAA,uCAAA,IAAA,GAAA,OAAA,CAAA;AAmCJ,QAAA,uBAAA,EAAM,EAaA;;;AAhDgD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,YAAA;;sBDC5C,OAAK,GAAA,QAAA,CAAA,urTAAA,EAAA,CAAA;EAAA;;;6EAEN,wBAAsB,EAAA,WAAA,0BAAA,UAAA,+GAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AGP3B,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAyE,GAAA,OAAA,CAAA;AAEvE,IAAA,qBAAA,YAAA,SAAA,4DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,aAAA,SAAA,6DAAA,QAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAElB,OAAA,QAAA,QAAA,OAAA,CAAoB;IAAA,CAAA;AAGnC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA;AAExB,IAAA,oBAAA,GAAA,KAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,CAAA;AAAoB,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA,EAAO;AAE1C,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,OAAA,EAAA;;AAErB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAgM,IAAA,QAAA,EAAA,EACM,IAAA,QAAA,EAAA,EACA,IAAA,QAAA,EAAA,EACM,IAAA,QAAA,EAAA,EACH,IAAA,QAAA,EAAA;AAEzM,IAAA,uBAAA,EAAM,EACJ,EACA,EACA;;;;AAhBD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,KAAA;AAEe,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,IAAA;;;ADNtB,IAAO,uBAAP,MAAO,sBAAoB;EAU/B,cAAA;AARS,SAAA,gBAAgB,OAAO,OAAO,IAAI,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AACxF,SAAA,oBAAoB,CAAA;AAKX,SAAA,kBAAkB;EAEX;EAEhB,WAAQ;AACN,SAAK,oBAAoB,KAAK;EAChC;EAEA,cAAW;AACT,QAAG,KAAK,cAAY,UAAa,KAAK,cAAY,MAAK;AACrD,WAAK,eAAe,KAAK,UAAU;IACrC;EACF;EAEA,WAAW,OAAK;AACd,UAAM,eAAc;EAErB;EACA,QAAQ,OAAM,MAAI;AACjB,QAAI,QAAM,EAAC,UAAS,MAAK,gBAAe,KAAK,aAAa,MAAK,UAAS,KAAK,aAAa,KAAK,OAAM;AACrG,UAAM,aAAa,QAAQ,kBAAiB,KAAK,UAAU,KAAK,CAAC;EAClE;EAEA,eAAe,KAAW;AACzB,QAAI,KAAK,cAAc,SAAS,GAAG;AACjC,UAAI,OAAO,IAAI,KAAI,EAAG,SAAS,GAAG;AAChC,aAAK,oBAAoB,KAAK,cAAc,OAAO,UACjD,KAAK,KAAK,YAAW,EAAG,SAAS,IAAI,YAAW,CAAE,CAAC;MAEvD,OAAO;AACL,aAAK,oBAAoB,CAAC,GAAG,KAAK,aAAa;MACjD;IACF;EACF;;;uCAzCW,uBAAoB;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,qBAAA,uBAAA,YAAA,cAAA,iBAAA,kBAAA,GAAA,YAAA,MAAA,UAAA,CAAA,gCAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,kBAAA,GAAA,SAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,SAAA,sBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,aAAA,QAAA,GAAA,kBAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,gBAAA,KAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,SAAA,MAAA,UAAA,MAAA,WAAA,aAAA,QAAA,QAAA,SAAA,4BAAA,GAAA,CAAA,KAAA,yGAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,+GAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,+GAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,qHAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,kHAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,KAAA,wHAAA,UAAA,SAAA,gBAAA,KAAA,kBAAA,SAAA,mBAAA,OAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACb/B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAKG,GAAA,OAAA,CAAA;AAGG,QAAA,qBAAA,GAAA,qCAAA,IAAA,GAAA,OAAA,CAAA;AA2BN,QAAA,uBAAA,EAAM;;;AAlCN,QAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,IAAA,qBAAA,CAAA,IAAA,qBAAA,CAAA,IAAA,mBAAA,CAAA,IAAA,mBAAA,CAAA;AAOwD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,iBAAA;;sBDG5C,SAAS,OAAK,GAAA,QAAA,CAAA,yzSAAA,EAAA,CAAA;EAAA;;;6EAEf,sBAAoB,EAAA,WAAA,wBAAA,UAAA,uGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGuB7B,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,oBAAA,GAAA,MAAA,EAAA;AACA,IAAA,yBAAA,GAAA,SAAA,EAAA;AAAiD,IAAA,iBAAA,GAAA,oBAAA;AAAkB,IAAA,uBAAA;AACnE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgC,GAAA,QAAA,EAAA;;AAE9B,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,GAAA,SAAA,EAAA;AAAuG,IAAA,qBAAA,SAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,OAAA,OAAA,KAAA,CAAmC;IAAA,CAAA;AAAnJ,IAAA,uBAAA,EAAqJ,EACjJ;;;;;;AAGN,IAAA,yBAAA,GAAA,iBAAA,EAAA;AAA4C,IAAA,qBAAA,qBAAA,SAAA,sGAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAqB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA;AAClF,IAAA,yBAAA,GAAA,WAAA,EAAA;AACA,IAAA,oBAAA,GAAA,mBAAA,EAAA;AAEA,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,WAAA,EAAA;AAEA,IAAA,oBAAA,GAAA,uBAAA,EAAA;AACA,IAAA,uBAAA,EAAU;;;;AANO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA,YAAA,EAA6B,cAAA,OAAA,UAAA,EAA0B,mBAAA,OAAA,eAAA;AAKnD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,kBAAA,OAAA,cAAA,EAAiC,gBAAA,OAAA,YAAA,EAA8B,cAAA,OAAA,UAAA;;;;;AAKtF,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAGA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAmD,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA;;;;;;AAC7D,IAAA,yBAAA,GAAA,OAAA,EAAA;AAII,IAAA,qBAAA,aAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAa,OAAA,QAAA,MAAA,CAAe;IAAA,CAAA,EAAC,YAAA,SAAA,yEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACjB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA;AAGlC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0B,GAAA,OAAA,EAAA;;AAEtB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACA,IAAA,uBAAA,EAAM;;AAEV,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAoB,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA,EAAO;AAEtC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuB,GAAA,OAAA,EAAA;;AAEnB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA,EAAgM,IAAA,QAAA,EAAA,EACM,IAAA,QAAA,EAAA,EACA,IAAA,QAAA,EAAA,EACM,IAAA,QAAA,EAAA,EACH,IAAA,QAAA,EAAA;AAEzM,IAAA,uBAAA,EAAM,EACJ,EACJ;;;;AAxBA,IAAA,gCAAA,MAAA,OAAA,SAAA;;;;AD/CF,IAAO,mCAAP,MAAO,kCAAgC;EAgB3C,YACU,YACA,cACA,UACA,QAAoB;AAHpB,SAAA,aAAA;AACA,SAAA,eAAA;AACA,SAAA,WAAA;AACA,SAAA,SAAA;AAZV,SAAA,sBAAoB;AACpB,SAAA,kBAAgB;AAChB,SAAA,QAAa;AACb,SAAA,WAAgB;EAahB;EACA,YAAY,OAAa;AACvB,WAAO,GAAG,KAAK;EACjB;EAEA,WAAQ;AACN,QAAI,KAAK,cAAc;AACrB,UAAG,KAAK,aAAa,QAAM,UAAS;AAClC,aAAK,qBAAmB,KAAK,aAAa;AAC1C,aAAK,QAAO,KAAK,mBAAmB;AACpC,aAAK,YAAU,KAAK,aAAa,KAAK;AACtC,aAAK,WAAU,KAAK,sBAAqB;MAC3C;IACA;EACJ;EAEA,cAAW;AACT,QAAI,KAAK,cAAc;AACrB,UAAG,KAAK,aAAa,QAAM,UAAS;AAClC,aAAK,qBAAmB,KAAK,aAAa;AAC1C,aAAK,QAAO,KAAK,mBAAmB;AACpC,aAAK,YAAU,KAAK,aAAa,KAAK;AACtC,aAAK,WAAU,KAAK,sBAAqB;AACzC,aAAK,sBAAsB,KAAK,mBAAmB,KAAK,kBAAkB;AAC1E,aAAK,kBAAgB,KAAK,QAAQ,KAAK,kBAAkB;MAG3D;IAEF;EACF;EACA,wBAAqB;AACnB,QAAG,KAAK,aAAa,QAAM,UAAS;AAElC,UAAI,cAAY,KAAK,aAAa,KAAK;AACvC,UAAI,WAAS,KAAK,aAAa,KAAK;AACpC,eAAS,QAAQ,GAAG,QAAQ,YAAY,QAAQ,QAAQ,SAAS;AAC/D,cAAM,UAAU,YAAY,QAAQ,KAAK;AACzC,YAAG,SAAS,UAAS;AACnB,iBAAO,KAAK,MAAM,QAAQ,KAAK;AAC/B;QACF;MAEF;IAEF;AACF,WAAO;EACP;EACF,mBAAmB,MAAI;AAErB,QAAI;AAGJ,UAAI,sBAAoB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AACnE,UAAI,WAAiB,KAAK;AAC1B,UAAI,WAAiB,KAAK;AACzB,UAAI,mBAAiB,oBAAoB,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AAC9E,UAAG,iBAAiB,SAAO,GAAE;AAC5B,YAAI,WAAU,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AAClD,YAAI,UAAU;AACZ,cAAI,iBAAe,SAAS;AAC5B,cAAI,cAAY,eAAe;AAC/B,cAAG,cAAY,GAAE;AACf,mBAAO;UACT;QACH;MAED;IACF,SAAS,OAAO;AACd,aAAO;IACT;AACE,WAAO;EACT;EAEA,QAAQ,MAAI;AAEV,QAAI;AAGJ,UAAI,sBAAoB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AACnE,UAAI,WAAiB,KAAK;AAC1B,UAAI,WAAiB,KAAK;AACzB,UAAI,mBAAiB,oBAAoB,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AAC9E,UAAG,iBAAiB,SAAO,GAAE;AAC5B,YAAI,WAAU,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AAClD,YAAI,UAAU;AACZ,cAAG,SAAS,WAAS,QAAQ,SAAS,QAAQ,SAAO,GAAG;AACtD,mBAAO;UACT;QACH;MAED;IACF,SAAS,OAAO;AACd,aAAO;IACT;AACE,WAAO;EACT;EACE,WAAW,OAAK;AACd,UAAM,eAAc;EAErB;EACA,QAAQ,OAAK;AACZ,QAAI,QAAM,EAAC,gBAAe,KAAK,aAAa,MAAK,UAAS,KAAK,aAAa,KAAK,OAAM;AAEvF,UAAM,aAAa,QAAQ,kBAAiB,KAAK,UAAU,KAAK,CAAC;EAGlE;EACD,YAAY,OAAK;AACf,SAAK,QAAM,MAAM;EACnB;EAEA,eAAe,OAAK;AAClB,QAAG,KAAK,gBAAgB,KAAK,aAAa,QAAM,UAC9C;AAAE,UAAI,eAAe,KAAK,aAAa,KAAK,EAAE;AAC5C,UAAI,kBAAiB,KAAK,aAAa,KAAK,EAAE;AAC9C,UAAI,kBAAkB,KAAK,aAAa,KAAK,EAAE;AAC/C,WAAK,aAAY;AACnB,UAAI,QAAM,CAAA;AAET,cAAM;QAAC,UAAS,KAAK,aAAa,KAAK;QAC/B,aAAY,KAAK,UAAU,KAAK,kBAAkB;MAAC;AAG5D,YAAM,MAAM;AACb,WAAK,WAAW,YAAY,IAAG,KAAI,KAAK,EAAE,UAAU,OAAG;AACpD,aAAK,aAAa,KAAK,YAAU,KAAK,UAAU,KAAK,kBAAkB;AACvE,aAAK,gBAAe;AACpB,aAAK,aAAa,qBAAqB,KAAK;AAC5C,mBAAW,MAAK;AACd,eAAK,aAAa,kBAAkB,KAAK,YAAY;QACvD,GAAG,EAAE;MAEP,GAAE,WAAO;AACP,gBAAQ,IAAI,KAAK;MACnB,CAAC;IAGL;EAEF;EAEA,kBAAe;AACb,QAAG,KAAK,aAAa,QAAM,UAAS;AAClC,UAAI,cAAY,KAAK,aAAa,KAAK;AACvC,UAAI,WAAS,KAAK,aAAa,KAAK;AACpC,eAAS,QAAQ,GAAG,QAAQ,YAAY,QAAQ,QAAQ,SAAS;AAC/D,cAAM,UAAU,YAAY,QAAQ,KAAK;AACzC,YAAG,SAAS,UAAS;AAClB,kBAAQ,QAAM,KAAK;QAEtB;MACF;IACF;EAEF;EAEC,eAAY;AAET,QAAG,KAAK,aAAa,QAAM,UAAS;AAElC,WAAK,qBAAmB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AACnE,UAAI,kBAAiB,KAAK,aAAa,KAAK,EAAE;AAC9C,UAAI,iBAAe,KAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAU,eAAe,EAAE,CAAC,EAAE;AAC1F,UAAI,eAAe,SAAO,GAAI;AAC5B,YAAI,WAAS,KAAK,aAAa,KAAK;AACpC,YAAK,eAAe;AACpB,YAAK,aAAa;AAClB,YAAI,iBAAe;AACnB,iBAAS,QAAQ,GAAG,QAAQ,eAAe,QAAQ,SAAS;AAC5D,gBAAM,UAAU,eAAe,KAAK;AACpC,cAAG,SAAS,UAAS;AACnB,6BAAkB,eAAe,KAAK,EAAE,SAAS;AACjD,2BAAe,KAAK,EAAE,KAAG;AACzB,2BAAe,KAAK,EAAE,QAAM,KAAK,MAAM,KAAK,QAAQ;UACtD;AACA,cAAG,eAAe,KAAK,EAAE,IAAG;AAC1B,4BAAgB,eAAe,KAAK,EAAE,SAAS;UACjD,OACI;AACF;UACF;QAGF;AACA,YAAG,eAAe,OAAM;AACtB,eAAK,OAAO,QAAQ,kDAAkD;AACtE,yBAAe,QAAQ,EAAE,QAAU;AACnC;QACF;AAEA,YAAI,iBAAiB,OAAO;AAC5B,YAAI,mBAAmB,aAAY,IAAI,iBAAiB,aAAY;AACpE,iBAAS,QAAQ,GAAG,QAAQ,eAAe,QAAQ,SAAS;AAC1D,cAAI,MAAM,eAAe,KAAK;AAC9B,cAAG,CAAC,IAAI,MAAM,IAAI,QAAO,GAAE;AACzB,gBAAI,QAAQ,KAAK,IAAI,kBAAkB,CAAC;UAC1C;QACF;MAKA;IAGF;EAGJ;EAMA,YAAY,QAAM;AACjB,QAAG,KAAK,iBAAiB,OAAO,SAAO;AACtC,WAAK,cAAc,OAAM;AACzB,SAAK,YAAY,MAAM;EACzB;EACA,uBAAoB;AAEhB,UAAM,WAAS;AACf,UAAM,gBAAgB,SAAS,cAAc,cAAc;AAC3D,QAAI,iBAAiB,YAAY,GAAG;AAClC,WAAK,SAAS,SAAS,eAAe,QAAQ,KAAK;IACrD;EACF;EAGA,YAAY,OAAU;AACnB,UAAM,WAAW,MAAM;AACvB,UAAM,gBAAgB,SAAS,cAAc,cAAc;AAE1D,QAAI,eAAe;AACjB,YAAM,OAAO,aAAa,IAAI,QAAQ;AACtC,WAAK,SAAS,SAAS,eAAe,QAAQ,IAAI;IACpD;EAEJ;EAEA,eAAe,KAAW;AAExB,SAAK,aAAc;EACrB;;;uCA5QW,mCAAgC,4BAAA,UAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAhC,mCAAgC,WAAA,CAAA,CAAA,+BAAA,CAAA,GAAA,WAAA,SAAA,uCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAMhC,wBAAsB,CAAA;;;;;;;;AC3BnC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgD,GAAA,OAAA,CAAA;AACR,QAAA,iBAAA,GAAA,iBAAA;AAAe,QAAA,uBAAA;AAEnD,QAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,SAAA,CAAA;AAC6C,QAAA,iBAAA,GAAA,UAAA;AAAQ,QAAA,uBAAA;AACxD,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA;AACK,QAAA,iBAAA,GAAA,kBAAA;AAAgB,QAAA,uBAAA;AAC9C,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,IAAA,OAAA,CAAA,EACG,IAAA,OAAA,CAAA,EACD,IAAA,SAAA,CAAA;AAErB,QAAA,qBAAA,SAAA,SAAA,kEAAA,QAAA;AAAA,iBAAS,IAAA,YAAA,MAAA;QAAmB,CAAA,EAAC,UAAA,SAAA,mEAAA,QAAA;AAAA,iBACnB,IAAA,eAAA,MAAA;QAAsB,CAAA;AAKhC,QAAA,2BAAA,iBAAA,SAAA,0EAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,UAAA,MAAA,MAAA,IAAA,WAAA;AAAA,iBAAA;QAAA,CAAA;AAPA,QAAA,uBAAA,EAQC;AAEH,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA4B,IAAA,SAAA,EAAA;AAM1B,QAAA,qBAAA,UAAA,SAAA,mEAAA,QAAA;AAAA,iBAAU,IAAA,eAAA,MAAA;QAAsB,CAAA;AAChC,QAAA,2BAAA,iBAAA,SAAA,0EAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,UAAA,MAAA,MAAA,IAAA,WAAA;AAAA,iBAAA;QAAA,CAAA;AANA,QAAA,uBAAA,EAQA,EACE,EACF,EAEF,EACF;AAEV,QAAA,qBAAA,IAAA,kDAAA,GAAA,GAAA,OAAA,EAAA,EAAoC,IAAA,4DAAA,GAAA,GAAA,iBAAA,EAAA,EAagF,IAAA,iDAAA,GAAA,GAAA,MAAA,EAAA;AAcpH,QAAA,yBAAA,IAAA,OAAA,EAAA;AACA,QAAA,qBAAA,IAAA,kDAAA,GAAA,GAAA,OAAA,EAAA,EAAmD,IAAA,kDAAA,IAAA,GAAA,OAAA,EAAA;AA8BnD,QAAA,oBAAA,IAAA,MAAA,EAAA;AACA,QAAA,uBAAA,EAAM;;;AA/Fa,QAAA,sBAAA,OAAA,IAAA,UAAA;AAiBL,QAAA,oBAAA,EAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,QAAA;AAUA,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,QAAA;AASP,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,mBAAA;AAagF,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,mBAAA;AAY/D,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,eAAA;AAGlB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,eAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,eAAA;;sBD9CI,qBAAmB,sBAAA,oBAAA,iBAAE,aAAW,SAAE,MAAM,aAAa,QAAQ,sBAAsB,sBAAsB,GAAA,QAAA,CAAA,w8MAAA,EAAA,CAAA;EAAA;;;6EAE1G,kCAAgC,EAAA,WAAA,oCAAA,UAAA,mIAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEJvC,IAAO,8BAAP,MAAO,6BAA2B;EAUtC,YACU,YACA,cACA,QAAoB;AAFpB,SAAA,aAAA;AACA,SAAA,eAAA;AACA,SAAA,SAAA;AARV,SAAA,SAAc;AACd,SAAA,iBAAsB;EAYtB;EACA,YAAY,OAAa;AAEvB,WAAO,GAAG,KAAK;EACjB;EAEA,WAAQ;AACN,QAAI,KAAK,cAAc;AACrB,cAAQ,IAAI,KAAK,YAAY;AAC7B,UAAG,KAAK,aAAa,QAAM,mBAAkB;AAC3C,YAAI,OAAK,KAAK,aAAa;AAC3B,YAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,UAAS,kBAAiB,KAAK,YAAW;AAC5F,aAAK,kBAAkB,IAAI;MAC5B;IACF;EACJ;EACA,cAAW;AACT,QAAI,KAAK,cAAc;AAErB,UAAG,KAAK,aAAa,QAAM,mBAAkB;AAC3C,YAAI,OAAK,KAAK,aAAa;AAC3B,YAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,UAAS,kBAAiB,KAAK,YAAW;AAC9F,aAAK,kBAAkB,IAAI;AAC1B,aAAK,YAAU,KAAK,aAAa,KAAK;MAExC;IAEF;EACF;EACF,kBAAkB,MAAI;AAEpB,SAAK,qBAAmB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AACnE,QAAG,KAAK,oBAAmB;AAC3B,UAAI,WAAiB,KAAK;AAC1B,UAAI,WAAiB,KAAK;AACzB,UAAI,mBAAiB,KAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AAClF,UAAG,iBAAiB,SAAO,GAAE;AAC5B,YAAI,SAAQ,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AAChD,YAAI,QAAQ;AACV,cAAI,UAAQ,OAAO,KAAK,KAAK,cAAc;AAC3C,cAAG,SAAQ;AACX,iBAAK,SAAO,QAAQ,QAAQ;AAC5B,iBAAK,iBAAe,QAAQ,QAAQ;UACpC;QACF;MACF;IACF;EACA;EACE,sBAAmB;AAIjB,QAAI,OAAK,KAAK,aAAa;AAC3B,QAAI,OAAK,EAAC,YAAW,KAAK,UAAS,YAAW,KAAK,UAAS,kBAAiB,KAAK,YAAW;AAE7F,SAAK,qBAAmB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AACnE,QAAG,KAAK,oBAAmB;AAC3B,UAAI,WAAiB,KAAK;AAC1B,UAAI,WAAiB,KAAK;AACzB,UAAI,mBAAiB,KAAK,mBAAmB,KAAK,OAAO,OAAG,EAAE,YAAY,QAAQ;AAClF,UAAG,iBAAiB,SAAO,GAAE;AAC5B,YAAI,WAAU,iBAAiB,CAAC,EAAE,QAAQ,QAAQ;AAClD,YAAI,UAAU;AACZ,cAAI,iBAAe,SAAS,KAAK,KAAK,cAAc;AACpD,cAAI,cAAY,eAAe,QAAQ;AACvC,mBAAS,QAAQ,cAAY,GAAG,SAAQ,KAAK,QAAQ,SAAS;AAC5D,2BAAe,QAAQ,KAAK,EAAC,SAAQ,OAAM,SAAQ,KAAI,WAAU,CAAA,EAAE,CAAC;UAErE;AAED,eAAK,+BAA+B,SAAS,IAAI;QACpD;MACD;IACC;EACD;EACA,+BAA+B,kBAAgB;AAC7C,aAAQ,KAAK,kBAAkB;AAC/B,UAAI,SAAQ,EAAE;AACd,UAAI,cAAY,MAAI,EAAE,QAAQ;AAC9B,UAAK,QAAM;AACX,eAAQ,KAAK,QAAQ;AAClB,UAAE,QAAO;AACT,UAAE,QAAM;AACR;MACH;IACF;EAEA;EACF,WAAW,OAAK;AACd,UAAM,eAAc;EAErB;EAED,YAAY,OAAK;AACf,SAAK,SAAO,MAAM;EACpB;EACA,gBAAgB,OAAK;AAGlB,QAAG,KAAK,SAAO;AACd,WAAK,SAAO;aACL,KAAK,SAAO,GAAE;AACrB,WAAK,SAAO,KAAK;IACnB;AAEA,SAAK,oBAAmB;AAEtB,QAAI,QAAM,CAAA;AACT,YAAM;MAAC,UAAS,KAAK,aAAa,KAAK;MAC/B,aAAY,KAAK,UAAU,KAAK,kBAAkB;IAAC;AAI5D,UAAM,MAAM;AACZ,SAAK,WAAW,YAAY,IAAG,KAAI,OAAM,KAAK,EAAE,UAAU,OAAG;AAC3D,WAAK,aAAa,KAAK,YAAU,KAAK,UAAU,KAAK,kBAAkB;AACtE,WAAK,aAAa,sBAAsB,KAAK;IAGhD,GAAE,WAAO;AACP,cAAQ,IAAI,KAAK;IACnB,CAAC;EAEL;EAIF,eAAe,OAAK;AAChB,QAAI,KAAK,SAAS,IAAI;AAClB,WAAK,SAAS;IAClB,WAAW,KAAK,SAAS,GAAG;AACxB,WAAK,SAAS,KAAK;IACvB;AAEA,SAAK,qBAAoB;AAEzB,QAAI,QAAQ;MACR,UAAU,KAAK,aAAa,KAAK;MACjC,aAAa,KAAK,UAAU,KAAK,kBAAkB;;AAGvD,UAAM,MAAM;AACZ,SAAK,WAAW,YAAY,IAAG,KAAK,OAAO,KAAK,EAAE,UAC9C,cAAW;AACP,WAAK,aAAa,KAAK,YAAY,KAAK,UAAU,KAAK,kBAAkB;AACzE,WAAK,aAAa,sBAAsB,KAAK;IACjD,GACA,WAAS,QAAQ,MAAM,8BAA8B,KAAK,CAAC;EAEnE;EAEA,wBAAqB;AACnB,QAAI,OAAO,KAAK,aAAa;AAC7B,QAAI,OAAO;MACP,YAAY,KAAK;MACjB,YAAY,KAAK;MACjB,kBAAkB,KAAK;;AAG3B,SAAK,qBAAqB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AAGrE,QAAI,WAAW,KAAK;AACpB,QAAI,WAAW,KAAK;AAEpB,QAAI,aAAa,KAAK,mBAAmB,KAAK,KAAK,OAAK,EAAE,aAAa,QAAQ;AAC/E,QAAI,CAAC;AAAY;AAEjB,QAAI,iBAAiB,WAAW,QAAQ,QAAQ;AAChD,QAAI,CAAC;AAAgB;AAErB,QAAI,YAAY,eAAe,KAAK,KAAK,cAAc;AACvD,QAAI,CAAC;AAAW;AAEhB,QAAI,kBAAkB,UAAU,QAAQ;AACxC,QAAI,UAAU,UAAU,QAAQ,KAAK,SAAO,IAAI,QAAQ,SAAS,CAAC;AAClE,QAAI,SAAS;AACX,WAAK,OAAO,QAAQ,iEAAiE;AACrF,WAAK,iBAAiB,KAAK;AAC3B;IACF;AAEA,QAAI,KAAK,SAAS,iBAAiB;AAC/B,eAAS,QAAQ,kBAAkB,GAAG,SAAS,KAAK,QAAQ,SAAS;AACjE,kBAAU,QAAQ,OAAO,OAAO,CAAC;MACrC;IACJ,OAAO;AAEH,eAAS,QAAQ,iBAAiB,QAAQ,KAAK,QAAQ,SAAS;AAC5D,kBAAU,QAAQ,KAAK,EAAE,SAAS,OAAO,SAAS,KAAK,WAAW,CAAA,EAAE,CAAE;MAC1E;IACJ;AAEA,SAAK,+BAA+B,eAAe,IAAI;EACzD;EACA,uBAAoB;AAClB,QAAI,OAAO,KAAK,aAAa;AAC7B,QAAI,OAAO;MACP,YAAY,KAAK;MACjB,YAAY,KAAK;MACjB,kBAAkB,KAAK;;AAG3B,SAAK,qBAAqB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AAErE,QAAI,WAAW,KAAK;AACpB,QAAI,WAAW,KAAK;AAEpB,QAAI,aAAa,KAAK,mBAAmB,KAAK,KAAK,OAAK,EAAE,aAAa,QAAQ;AAC/E,QAAI,CAAC;AAAY;AAEjB,QAAI,iBAAiB,WAAW,QAAQ,QAAQ;AAChD,QAAI,CAAC;AAAgB;AAErB,QAAI,YAAY,eAAe,KAAK,KAAK,cAAc;AACvD,QAAI,CAAC;AAAW;AAEhB,QAAI,KAAK,SAAS,UAAU,QAAQ,QAAQ;AACxC,UAAI,CAAC,KAAK,oBAAoB,UAAU,SAAS,KAAK,MAAM,GAAG;AAC3D,aAAK,OAAO,QAAQ,8DAA8D;AAClF;MACJ;IACJ;AAEA,SAAK,iBAAiB,WAAW,KAAK,MAAM;AAE5C,SAAK,+BAA+B,eAAe,IAAI;EAEzD;EAEA,oBAAoB,SAAgB,UAAgB;AAClD,QAAI,CAAC;AAAS,aAAO;AACrB,UAAM,kBAAkB,QAAQ,OAAO,SACnC,IAAI,WAAW,IAAI,QAAQ,SAAS,CAAC,EACvC;AACF,WAAO,YAAY;EACrB;EAEA,iBAAiB,WAAgB,UAAgB;AAC/C,UAAM,kBAAkB,CAAC,GAAG,UAAU,OAAO;AAE7C,QAAI,WAAW,gBAAgB,QAAQ;AACnC,eAAS,IAAI,gBAAgB,QAAQ,IAAI,UAAU,KAAK;AACpD,wBAAgB,KAAK;UACjB,OAAO;UACP,OAAO;UACP,SAAS,CAAA;SACZ;MACL;IACJ,WACS,WAAW,gBAAgB,QAAQ;AACxC,YAAM,eAAe,gBAChB,IAAI,CAAC,KAAK,WAAW,EAAC,KAAK,MAAK,EAAE,EAClC,OAAO,UAAQ,CAAC,KAAK,IAAI,WAAW,KAAK,IAAI,QAAQ,WAAW,CAAC;AAEtE,YAAM,kBAAkB,gBAAgB,SAAS;AACjD,YAAM,mBAAmB,aAAa,MAAM,GAAG,eAAe;AAE9D,uBACK,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK,EAChC,QAAQ,UAAQ,gBAAgB,OAAO,KAAK,OAAO,CAAC,CAAC;AAE1D,sBAAgB,QAAQ,CAAC,KAAK,UAAU,IAAI,QAAQ,KAAK;IAC7D;AAEA,cAAU,UAAU;EACtB;;;uCA5Ra,8BAA2B,4BAAA,UAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAA3B,8BAA2B,WAAA,CAAA,CAAA,2BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,eAAA,GAAA,YAAA,MAAA,UAAA,CAAA,gCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,yBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,SAAA,OAAA,MAAA,QAAA,KAAA,eAAA,eAAA,GAAA,cAAA,GAAA,SAAA,UAAA,iBAAA,OAAA,SAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,OAAA,kBAAA,OAAA,MAAA,GAAA,SAAA,GAAA,UAAA,iBAAA,SAAA,GAAA,CAAA,GAAA,YAAA,CAAA,GAAA,UAAA,SAAA,qCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACjBxC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgD,GAAA,OAAA,CAAA;AAEP,QAAA,iBAAA,GAAA,mBAAA;AAAiB,QAAA,uBAAA;AACtD,QAAA,yBAAA,GAAA,SAAA,CAAA;AAA4B,QAAA,iBAAA,GAAA,UAAA;AAAQ,QAAA,uBAAA;AACpC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA;AACG,QAAA,iBAAA,GAAA,gBAAA;AAAc,QAAA,uBAAA;AAC5C,QAAA,yBAAA,GAAA,OAAA,CAAA;AAAgC,QAAA,iBAAA,CAAA;AAAmC,QAAA,uBAAA,EAAM;AAM3E,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA6B,IAAA,OAAA,CAAA;AACG,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AACrC,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA2B,IAAA,OAAA,CAAA,EACG,IAAA,OAAA,CAAA,EACD,IAAA,SAAA,CAAA;AAErB,QAAA,qBAAA,SAAA,SAAA,6DAAA,QAAA;AAAA,iBAAS,IAAA,YAAA,MAAA;QAAmB,CAAA,EAAC,UAAA,SAAA,8DAAA,QAAA;AAAA,iBAAW,IAAA,eAAA,MAAA;QAAsB,CAAA;AAK/D,QAAA,2BAAA,iBAAA,SAAA,qEAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,QAAA,MAAA,MAAA,IAAA,SAAA;AAAA,iBAAA;QAAA,CAAA;AANC,QAAA,uBAAA,EAQE;AAGJ,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,SAAA,EAAA;AAC0B,QAAA,qBAAA,UAAA,SAAA,8DAAA,QAAA;AAAA,iBAAU,IAAA,eAAA,MAAA;QAAsB,CAAA;AAAE,QAAA,2BAAA,iBAAA,SAAA,qEAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,QAAA,MAAA,MAAA,IAAA,SAAA;AAAA,iBAAA;QAAA,CAAA;AAAtF,QAAA,uBAAA,EAEA,EACE,EACF,EAEF;AAGR,QAAA,oBAAA,IAAA,MAAA,EAAA;AAmBA,QAAA,uBAAA;;;AAzDmB,QAAA,sBAAA,OAAA,IAAA,UAAA;AAMe,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,KAAA,WAAA;AAavB,QAAA,oBAAA,CAAA;AAAA,QAAA,gCAAA,OAAA,IAAA,cAAA;AAIF,QAAA,2BAAA,WAAA,IAAA,MAAA;AAMuF,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,MAAA;;sBDdtF,qBAAmB,sBAAA,oBAAA,iBAAE,aAAW,OAAA,GAAA,QAAA,CAAA,y8HAAA,EAAA,CAAA;EAAA;;;6EAEjC,6BAA2B,EAAA,WAAA,+BAAA,UAAA,2HAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEIlC,IAAO,iCAAP,MAAO,gCAA8B;EAczC,YACU,YACA,cACA,UACA,QAAoB;AAHpB,SAAA,aAAA;AACA,SAAA,eAAA;AACA,SAAA,WAAA;AACA,SAAA,SAAA;AAVV,SAAA,QAAa;AAGb,SAAA,sBAA4B;AAC5B,SAAA,WAAgB;EAUhB;EACA,YAAY,OAAa;AACvB,WAAO,GAAG,KAAK;EACjB;EAEA,WAAQ;AACN,QAAI,KAAK,cAAc;AAEnB,WAAK,qBAAmB,KAAK,aAAa;AAC1C,WAAK,QAAM,KAAK,mBAAmB;AACnC,WAAK,YAAU,KAAK,aAAa,KAAK;AACtC,WAAK,WAAU,KAAK,sBAAqB;IAC3C;EACJ;EACA,cAAW;AACT,QAAI,KAAK,cAAc;AACrB,cAAQ,IAAI,KAAK,YAAY;AAC7B,UAAG,KAAK,aAAa,QAAM,aAAY;AACrC,aAAK,qBAAmB,KAAK,aAAa;AAC1C,aAAK,WAAU,KAAK,sBAAqB;MAC3C;IAEF;EACF;EAKA,kBAAe;AACb,eAAW,MAAK;AAChB,WAAK,qBAAoB;IAC3B,GAAG,GAAG;EACN;EAIA,wBAAqB;AACnB,QAAI,KAAK,aAAa,QAAQ,aAAa;AACzC,UAAI,cAAc,KAAK,aAAa,KAAK;AACzC,UAAI,cAAc,KAAK,aAAa,KAAK;AACzC,eAAS,QAAQ,GAAG,QAAQ,YAAY,QAAQ,QAAQ,SAAS;AAC/D,cAAM,SAAS,YAAY,QAAQ,KAAK;AAExC,YAAI,OAAO,KAAK,QAAQ;AACtB,mBAAS,KAAK,GAAG,KAAK,OAAO,KAAK,QAAQ,MAAM;AAC9C,gBAAI,WAAW,OAAO,KAAK,EAAE;AAE7B,gBAAI,SAAS,QAAQ,QAAQ;AAE3B,kBAAI,cAAc,SAAS,QAAQ,WAAW;AAC9C,kBAAI,eAAe,eAAe,YAAY,OAAO;AACnD,uBAAO,KAAK,MAAM,YAAY,KAAK;AACnC;cAEF;YACF;UACF;QACF;MACF;IACF;AACA,WAAO;EACT;EAIA,WAAW,OAAK;AACd,UAAM,eAAc;EAErB;EACA,QAAQ,OAAK;AACZ,QAAI,QAAM,EAAC,gBAAe,KAAK,aAAa,MAAK,UAAS,KAAK,aAAa,KAAK,OAAM;AAEvF,UAAM,aAAa,QAAQ,gBAAe,KAAK,UAAU,KAAK,CAAC;EAGhE;EAIA,YAAY,OAAK;AAChB,SAAK,QAAM,MAAM;EACnB;EAEA,eAAe,OAAK;AAClB,QAAG,KAAK,gBAAgB,KAAK,aAAa,QAAM,aAC9C;AACE,WAAK,kBAAiB;AACxB,UAAI,QAAM,CAAA;AAET,cAAM;QAAC,UAAS,KAAK,aAAa,KAAK;QAC/B,aAAY,KAAK,UAAU,KAAK,kBAAkB;MAAC;AAE5D,YAAM,MAAM;AACZ,WAAK,WAAW,YAAY,IAAG,KAAI,KAAK,EAAE,UAAU,OAAG;AACrD,aAAK,aAAa,KAAK,YAAU,KAAK,UAAU,KAAK,kBAAkB;AACvE,aAAK,gBAAe;AACpB,aAAK,aAAa,qBAAqB,KAAK;AAC5C,mBAAW,MAAK;AACd,eAAK,aAAa,kBAAkB,KAAK,YAAY;QACvD,GAAG,EAAE;MAEP,GAAE,WAAO;AACP,gBAAQ,IAAI,KAAK;MACnB,CAAC;IAGL;EAEF;EAEA,kBAAe;AACb,QAAI,KAAK,aAAa,QAAQ,aAAa;AACzC,UAAI,cAAc,KAAK,aAAa,KAAK;AACzC,UAAI,cAAc,KAAK,aAAa,KAAK;AACzC,eAAS,QAAQ,GAAG,QAAQ,YAAY,QAAQ,QAAQ,SAAS;AAC/D,cAAM,SAAS,YAAY,QAAQ,KAAK;AAExC,YAAI,OAAO,KAAK,QAAQ;AACtB,mBAAS,KAAK,GAAG,KAAK,OAAO,KAAK,QAAQ,MAAM;AAC9C,gBAAI,WAAW,OAAO,KAAK,EAAE;AAE7B,gBAAI,SAAS,QAAQ,QAAQ;AAE3B,kBAAI,cAAc,SAAS,QAAQ,WAAW;AAC9C,kBAAI,eAAe,YAAY,OAAO;AACpC,4BAAY,QAAM,KAAK;cACzB;YACF;UACF;QACF;MACF;IACF;EAKF;EAEA,oBAAiB;AACf,QAAI,KAAK,aAAa,SAAS,aAAa;AAC1C,WAAK,qBAAqB,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS;AAErE,UAAI,kBAAkB,KAAK,aAAa,KAAK,EAAE;AAC/C,UAAI,kBAAkB,KAAK,aAAa,KAAK,EAAE;AAC/C,UAAI,uBAAuB,KAAK,aAAa,KAAK;AAClD,UAAI,uBAAuB,KAAK,aAAa,KAAK;AAElD,UAAI,iBAAiB,KAAK,mBAAmB,KAAK,OAAO,OAAK,EAAE,aAAa,eAAe,EAAE,CAAC,GAAG;AAClG,UAAI,sBAAsB,eAAe,OAAO,OAAK,EAAE,aAAa,eAAe,EAAE,CAAC,GAAG;AAEzF,UAAI,uBAAuB,oBAAoB,SAAS,GAAG;AAEzD,YAAI,iBAAiB,oBAAoB,oBAAoB,GAAG,QAAQ,oBAAoB;AAG5F,YAAI,gBAAgB;AAClB,cAAI,eAAe;AACnB,cAAI,aAAa;AACjB,cAAI,gBAAgB;AAGpB,0BAAgB,eAAe,SAAS;AACxC,yBAAe,KAAK;AACpB,yBAAe,QAAQ,KAAK,MAAM,KAAK,QAAQ;AAG/C,8BAAoB,oBAAoB,EAAE,QAAQ,QAAQ,SAAM;AAC9D,gBAAI,IAAI,OAAO;AACb,8BAAgB,IAAI,SAAS;YAC/B,OAAO;AACL;YACF;UACF,CAAC;AAGD,cAAI,eAAe,KAAK;AACtB,iBAAK,OAAO,QAAQ,6CAA6C;AACjE,2BAAe,QAAQ;AACvB;UACF;AAEA,cAAI,iBAAiB,OAAO;AAG5B,cAAI,iBAAiB,GAAG;AACtB,gBAAI,mBAAmB,aAAa,IAAI,iBAAiB,aAAa;AAGtE,gCAAoB,oBAAoB,EAAE,QAAQ,QAAQ,SAAM;AAC9D,kBAAI,CAAC,IAAI,MAAM,IAAI,QAAQ,GAAG;AAC5B,oBAAI,QAAQ,KAAK,IAAI,kBAAkB,CAAC;cAC1C;YACF,CAAC;UACH;QACF;MACF;IACF;EACF;EASA,YAAY,QAAM;AACjB,QAAG,KAAK,iBAAiB,OAAO,SAAO;AACtC,WAAK,cAAc,OAAM;AACzB,SAAK,YAAY,MAAM;EACzB;EAEA,uBAAoB;AAEhB,UAAM,WAAS;AACf,UAAM,gBAAgB,SAAS,cAAc,cAAc;AAC3D,QAAI,iBAAiB,YAAY,GAAG;AAClC,WAAK,SAAS,SAAS,eAAe,QAAQ,KAAK;IACrD;EACF;EAGA,YAAY,OAAU;AACpB,UAAM,WAAW,MAAM;AAGvB,UAAM,gBAAgB,SAAS,cAAc,cAAc;AAC3D,QAAI,iBAAiB,YAAY,GAAG;AAClC,WAAK,SAAS,SAAS,eAAe,QAAQ,KAAK;IACrD,OACI;AACF,WAAK,SAAS,SAAS,eAAe,QAAQ,OAAO;IACvD;EACF;EAEA,eAAe,KAAW;AAExB,SAAK,aAAc;EACrB;;;uCApQW,iCAA8B,4BAAA,UAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAA9B,iCAA8B,WAAA,CAAA,CAAA,8BAAA,CAAA,GAAA,WAAA,SAAA,qCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAK9B,wBAAsB,CAAA;;;;;;;;AC1BnC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgD,GAAA,OAAA,CAAA;AACtB,QAAA,iBAAA,GAAA,uBAAA;AAAqB,QAAA,uBAAA;AAK3C,QAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,SAAA,CAAA;AACyB,QAAA,iBAAA,GAAA,UAAA;AAAQ,QAAA,uBAAA;AACpC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA;AACK,QAAA,iBAAA,GAAA,wBAAA;AAAsB,QAAA,uBAAA;AACpD,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,IAAA,OAAA,CAAA,EACG,IAAA,OAAA,CAAA,EACD,IAAA,SAAA,CAAA;AAErB,QAAA,qBAAA,SAAA,SAAA,gEAAA,QAAA;AAAA,iBAAS,IAAA,YAAA,MAAA;QAAmB,CAAA,EAAC,UAAA,SAAA,iEAAA,QAAA;AAAA,iBACnB,IAAA,eAAA,MAAA;QAAsB,CAAA;AAKhC,QAAA,2BAAA,iBAAA,SAAA,wEAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,UAAA,MAAA,MAAA,IAAA,WAAA;AAAA,iBAAA;QAAA,CAAA;AAPA,QAAA,uBAAA,EAQC;AAEH,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA4B,IAAA,SAAA,EAAA;AAM1B,QAAA,qBAAA,UAAA,SAAA,iEAAA,QAAA;AAAA,iBAAU,IAAA,eAAA,MAAA;QAAsB,CAAA;AAChC,QAAA,2BAAA,iBAAA,SAAA,wEAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,UAAA,MAAA,MAAA,IAAA,WAAA;AAAA,iBAAA;QAAA,CAAA;AANA,QAAA,uBAAA,EAQA,EACE,EACF,EAEF,EACF;AAGV,QAAA,oBAAA,IAAA,MAAA,EAAA;AACA,QAAA,yBAAA,IAAA,SAAA,CAAA;AAA4B,QAAA,iBAAA,IAAA,oBAAA;AAAkB,QAAA,uBAAA;AAC9C,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgC,IAAA,QAAA,EAAA;;AAE5B,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,QAAA,EAAA;AACF,QAAA,uBAAA,EAAM;;AAER,QAAA,yBAAA,IAAA,SAAA,EAAA;AAAuG,QAAA,qBAAA,SAAA,SAAA,gEAAA,QAAA;AAAA,iBAAS,IAAA,eAAA,OAAA,OAAA,KAAA;QAAmC,CAAA;AAAnJ,QAAA,uBAAA,EAAqJ;AAMzJ,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAc,IAAA,iBAAA,EAAA;AACkC,QAAA,qBAAA,qBAAA,SAAA,oFAAA,QAAA;AAAA,iBAAqB,IAAA,YAAA,MAAA;QAAmB,CAAA;AAElF,QAAA,yBAAA,IAAA,WAAA,EAAA;AACA,QAAA,oBAAA,IAAA,mBAAA,EAAA;AACA,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,WAAA,EAAA;AACA,QAAA,oBAAA,IAAA,uBAAA,EAAA;AACA,QAAA,uBAAA,EAAU,EAEI,EAqCd;;;AArGe,QAAA,sBAAA,OAAA,IAAA,UAAA;AAoBL,QAAA,oBAAA,EAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,QAAA;AAUA,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,QAAA;AA4BO,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,gBAAA,IAAA,YAAA,EAA6B,uBAAA,IAAA,mBAAA,EAA4C,cAAA,IAAA,UAAA;AAGrE,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,kBAAA,IAAA,cAAA,EAAiC,gBAAA,IAAA,YAAA,EAA8B,cAAA,IAAA,UAAA;;sBD1C9E,qBAAmB,sBAAA,oBAAA,iBAAE,aAAW,SAAE,aAAa,QAAQ,sBAAsB,sBAAsB,GAAA,QAAA,CAAA,i0LAAA,EAAA,CAAA;EAAA;;;6EAEpG,gCAA8B,EAAA,WAAA,kCAAA,UAAA,iIAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGlB3C,IAAA,yBAAA,GAAA,KAAA,EAAuD,GAAA,qBAAA,CAAA;AAGtD,IAAA,qBAAA,gBAAA,SAAA,kFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAgB,OAAA,aAAA,CAAc;IAAA,CAAA,EAAC,sBAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACT,OAAA,qBAAA,MAAA,CAA4B;IAAA,CAAA;AAElD,IAAA,uBAAA,EAAoB;;;;AAJpB,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA,YAAA;;;;;AAMD,IAAA,yBAAA,GAAA,KAAA;AACC,IAAA,oBAAA,GAAA,mCAAA,CAAA;AACD,IAAA,uBAAA;;;;AADkC,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA,YAAA;;;;;AAElC,IAAA,yBAAA,GAAA,KAAA;AACC,IAAA,oBAAA,GAAA,iCAAA,CAAA;AACD,IAAA,uBAAA;;;;AADgC,IAAA,oBAAA;AAAA,IAAA,qBAAA,kBAAA,OAAA,cAAA,EAAiC,gBAAA,OAAA,YAAA,EAA8B,iBAAA,OAAA,aAAA;;;;;AAE/F,IAAA,yBAAA,GAAA,KAAA;AACC,IAAA,oBAAA,GAAA,6BAAA,CAAA;AACD,IAAA,uBAAA;;;;AAD4B,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA,YAAA;;;;;AAE5B,IAAA,yBAAA,GAAA,KAAA;AACC,IAAA,oBAAA,GAAA,gCAAA,CAAA;AACD,IAAA,uBAAA;;;;AADgC,IAAA,oBAAA;AAAA,IAAA,qBAAA,kBAAA,OAAA,cAAA,EAAiC,gBAAA,OAAA,YAAA;;;ADL3D,IAAO,yBAAP,MAAO,wBAAsB;EAYjC,cAAA;AAXU,SAAA,eAAe,IAAI,aAAY;AAC/B,SAAA,0BAA6C,IAAI,aAAY;AAEvE,SAAA,eAAe;AAOjB,SAAA,gBAAgB;EACC;EAEf,WAAQ;EAER;EAED,YAAY,SAAsB;AAC/B,QAAG,KAAK,uBAAsB;AAC5B,WAAK,gBAAgB,KAAK;IAC5B;AACA,QAAG,QAAQ,mBAAmB,QAAQ,gBAAgB,iBAAgB,QAAQ,gBAAgB,cAAa;AACzG,WAAK,iBAAkB,KAAK;IAC9B;EACH;EAEC,iBAAc;AACZ,SAAK,eAAe,CAAC,KAAK;AAC1B,SAAK,aAAa,KAAI;EACxB;EAEA,qBAAqB,OAAK;AAEvB,QAAG,OAAM;AACR,WAAK,cAAc;AACnB,WAAK,wBAAwB,KAAK,KAAK,WAAW;IACpD;EACF;;;uCAtCW,yBAAsB;IAAA;EAAA;;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,qBAAA,CAAA,GAAA,QAAA,EAAA,uBAAA,yBAAA,cAAA,gBAAA,iBAAA,kBAAA,GAAA,SAAA,EAAA,cAAA,gBAAA,yBAAA,0BAAA,GAAA,YAAA,MAAA,UAAA,CAAA,gCAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,sBAAA,cAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,kBAAA,gBAAA,eAAA,GAAA,CAAA,GAAA,kBAAA,cAAA,CAAA,GAAA,UAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACbnC,QAAA,qBAAA,GAAA,uCAAA,GAAA,GAAA,OAAA,CAAA,EAAuD,GAAA,uCAAA,GAAA,GAAA,OAAA,CAAA,EAQK,GAAA,uCAAA,GAAA,GAAA,OAAA,CAAA,EAGgB,GAAA,uCAAA,GAAA,GAAA,OAAA,CAAA,EAGV,GAAA,uCAAA,GAAA,GAAA,OAAA,CAAA;;;AAd5D,QAAA,qBAAA,QAAA,IAAA,gBAAA,IAAA,aAAA,QAAA,MAAA;AAQA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,IAAA,aAAA,QAAA,WAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,IAAA,aAAA,QAAA,YAAA,CAAA,IAAA,cAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,IAAA,aAAA,QAAA,iBAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,IAAA,aAAA,QAAA,eAAA,CAAA,IAAA,cAAA;;sBDNQ,MAAM,uBAAuB,mCAAmC,kCAAkC,6BAA6B,8BAA8B,GAAA,QAAA,CAAA,wnDAAA,EAAA,CAAA;EAAA;;;6EAE9J,wBAAsB,EAAA,WAAA,0BAAA,UAAA,+GAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AG8I/B,IAAA,oBAAA,GAAA,KAAA;;;;;;AAII,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqH,GAAA,OAAA,EAAA,EACiB,GAAA,OAAA,EAAA;AAIlI,IAAA,qBAAA,SAAA,SAAA,kFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAHvB,IAAA,uBAAA,EAIA,EACI;;;;AAP4B,IAAA,qBAAA,WAAA,OAAA,eAAA,gBAAA,eAAA;AACO,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,eAAA,+BAAA,kCAAA;AAEvC,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,eAAA,OAAA,oBAAA,OAAA,oBAAA,uBAAA;;;;;;AAOJ,IAAA,yBAAA,GAAA,KAAA,EAA0B,GAAA,uBAAA,EAAA;AAGxB,IAAA,qBAAA,2BAAA,SAAA,kHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAA2B,OAAA,2BAAA,MAAA,CAAkC;IAAA,CAAA;AAG5D,IAAA,uBAAA,EAAsB;;;;AAJvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA,YAAA,EAA8B,yBAAA,OAAA,qBAAA,EAEiB,mBAAA,OAAA,eAAA;;;;;AAjBrD,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyH,GAAA,OAAA,EAAA,EACxB,GAAA,KAAA;AAE7F,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,OAAA,EAAA;AASA,IAAA,yBAAA,GAAA,OAAA,EAAA;AACA,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,OAAA,CAAA;AAQF,IAAA,uBAAA,EAAM,EACF,EACA;;;;AAvBY,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,OAAA,eAAA,UAAA,OAAA,eAAA,SAAA,KAAA,CAAA;AACT,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,gBAAA,OAAA,eAAA,uBAAA,qBAAA;AAE4F,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AASvD,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,OAAA,YAAA,CAAA;AACpC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;;;;;AA0BV,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;;AAEE,IAAA,qBAAA,SAAA,QAAA,IAAA,EAAmB,QAAA,OAAA,EACN,UAAA,QAAA,QAAA,OAAA,GAAA,gBAAA,OAAA,OAAA,OAAA,GAAA,aAAA,GAAA,EAC6B,UAAA,QAAA,MAAA,EACpB,gBAAA,KAAA;;;;;AAN1B,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,yEAAA,GAAA,GAAA,WAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA,YAAA,SAAA,CAAA;;;;;AAQL,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;AAEI,IAAA,qBAAA,YAAA,IAAA,EAAiB,QAAA,OAAA,EAAA,EACN,gBAAA,IAAA;;;;;AAoBf,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;;AAEE,IAAA,qBAAA,SAAA,OAAA,WAAA,EAAyB,QAAA,MAAA,EACb,UAAA,OAAA,QAAA,OAAA,GAAA,eAAA,OAAA,OAAA,OAAA,GAAA,YAAA,GAAA,EAC4B,UAAA,OAAA,MAAA,EACnB,SAAA,IAAA;;;;;AANzB,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,yEAAA,GAAA,GAAA,WAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA,aAAA,YAAA,QAAA,CAAA;;;;;AAQL,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;AAEE,IAAA,qBAAA,YAAA,IAAA,EAAiB,QAAA,OAAA,GAAA,YAAA,EACO,gBAAA,IAAA;;;;;;AAQtB,IAAA,yBAAA,GAAA,sBAAA,EAAA;AAQE,IAAA,qBAAA,uBAAA,SAAA,sHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAuB,OAAA,oBAAA,MAAA,CAA2B;IAAA,CAAA,EAAC,uBAAA,SAAA,sHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAC5B,OAAA,oBAAA,MAAA,CAA2B;IAAA,CAAA,EAAC,gBAAA,SAAA,+GAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACnC,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA,EAAC,cAAA,SAAA,6GAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAK3B,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,kBAAA,SAAA,iHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACf,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA,EAAC,oBAAA,SAAA,mHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBACrB,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA;AAC7C,IAAA,uBAAA;;;;AAjBC,IAAA,qBAAA,oBAAA,OAAA,YAAA,EAAkC,0BAAA,OAAA,WAAA,EAEI,QAAA,OAAA,GAAA,YAAA,EACd,OAAA,OAAA,GAAA,EACb,MAAA,OAAA,EAAA,EACF,eAAA,OAAA,GAAA,WAAA,EACqB,YAAA,OAAA,GAAA,SAAA,EAM7B,WAAA,OAAA,OAAA;;;;;AAMH,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,kBAAA,uBAAA;;;;;AAGF,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,qBAAA,uBAAA;;;;;AAGF,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,mBAAA,uBAAA;;;;;;AAKA,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAyD,IAAA,qBAAA,SAAA,SAAA,wFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AAC1E,IAAA,iBAAA,GAAA,qBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAyI,IAAA,oBAAA,GAAA,QAAA,EAAA,EAAgP,GAAA,QAAA,EAAA;AAAiJ,IAAA,uBAAA,EAAM,EAAO;;;;;AAL/hB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqD,GAAA,MAAA;AAC7C,IAAA,iBAAA,CAAA;AAA+B,IAAA,uBAAA;AACrC,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,UAAA,EAAA;AAKF,IAAA,uBAAA;;;;AANQ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,WAAA;AAC0B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;;;;;;AAQhC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAwD,IAAA,qBAAA,SAAA,SAAA,wFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AACzE,IAAA,iBAAA,GAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAyI,IAAA,oBAAA,GAAA,QAAA,EAAA,EAAgP,GAAA,QAAA,EAAA;AAAiJ,IAAA,uBAAA,EAAM,EAAO;;;;;AAL/hB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuD,GAAA,MAAA;AAC/C,IAAA,iBAAA,CAAA;AAA+B,IAAA,uBAAA;AACrC,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,UAAA,EAAA;AAKF,IAAA,uBAAA;;;;AANQ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,WAAA;AACyB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;;;;;AAQjC,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,4BAAA,uBAAA;;;;;;AApTN,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAkE,GAAA,KAAA,CAAA;AAC7D,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,CAAW;IAAA,CAAA;AACrB,IAAA,oBAAA,GAAA,OAAA,CAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA,EAAO,EACf;AAEN,IAAA,oBAAA,GAAA,eAAA;AACA,IAAA,yBAAA,GAAA,eAAA,CAAA;AAGE,IAAA,qBAAA,cAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAc,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,cAAA,SAAA,kFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACnB,OAAA,aAAA,CAAc;IAAA,CAAA,EAAC,eAAA,SAAA,mFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACd,OAAA,cAAA,CAAe;IAAA,CAAA;AAEhC,IAAA,uBAAA;AAsIA,IAAA,yBAAA,GAAA,WAAA,CAAA,EAMC,GAAA,OAAA,CAAA;AAGC,IAAA,qBAAA,IAAA,sDAAA,GAAA,GAAA,OAAA,CAAA,EAA8B,IAAA,sDAAA,GAAA,GAAA,OAAA,CAAA;AA6BlC,IAAA,yBAAA,IAAA,OAAA,CAAA,EAAkC,IAAA,YAAA,CAAA;AAEhC,IAAA,qBAAA,eAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,cAAA,SAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACrB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,WAAA,SAAA,2EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACtB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,aAAA,SAAA,6EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA;AAKhC,IAAA,qBAAA,IAAA,+DAAA,GAAA,GAAA,gBAAA,EAAA,EAAkD,IAAA,0DAAA,GAAA,GAAA,WAAA,EAAA;AAkBpD,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,YAAA,EAAA;AACA,IAAA,qBAAA,eAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,cAAA,SAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACrB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,WAAA,SAAA,2EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACtB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,aAAA,SAAA,6EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,WAAA,SAAA,2EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACtB,OAAA,QAAA,QAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,YAAA,CAAiC;IAAA,CAAA;AAM5C,IAAA,qBAAA,IAAA,+DAAA,GAAA,GAAA,gBAAA,EAAA,EAA+D,IAAA,0DAAA,GAAA,GAAA,WAAA,EAAA;AAiB/D,IAAA,uBAAA;AAII,IAAA,qBAAA,IAAA,qEAAA,GAAA,GAAA,sBAAA,EAAA,EAkBC,IAAA,sDAAA,GAAA,GAAA,OAAA,EAAA,EAMC,IAAA,sDAAA,GAAA,GAAA,OAAA,EAAA,EAMA,IAAA,sDAAA,GAAA,GAAA,OAAA,EAAA,EAMA,IAAA,sDAAA,GAAA,GAAA,OAAA,EAAA,EACmD,IAAA,sDAAA,GAAA,GAAA,OAAA,EAAA,EAQE,IAAA,sDAAA,GAAA,GAAA,OAAA,EAAA;AAgBzD,IAAA,uBAAA,EAAM,EACA;;;;;AArTG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,eAAA,uBAAA;AAMP,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA,IAAA,EAAgB,iBAAA,OAAA,EAAA;AAiJhB,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,GAAA,eAAA,OAAA,OAAA,OAAA,GAAA,YAAA,OAAA;AAIM,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,eAAA;AAC4F,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,GAAA,SAAA;AAkCpG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA,EAAsB,eAAA,IAAA,EACF,UAAA,IAAA;AAGa,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,QAAA;AAc5B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,GAAA,SAAA;AAcP,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA,EAAsB,aAAA,IAAA,EACJ,eAAA,IAAA;AAGc,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,gBAAA,OAAA,OAAA,OAAA,GAAA,aAAA,QAAA;AAW7B,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,SAAA,UAAA,KAAA,CAAA,OAAA,GAAA,SAAA;AAYI,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA;AAkBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,UAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,WAAA;AAKG,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,YAAA;AAQA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,cAAA;AAWH,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,oBAAA;;;AD/QD,IAAO,wBAAP,MAAO,uBAAqB;EA8B9B,IAAI,aAAU;AACV,WAAO,EAAE,MAAM,MAAM,QAAQ,CAAC,KAAK,GAAG,UAAS;EACnD;EAEA,IAAI,eAAY;AAEZ,WACI,KAAK,IAAI,cAAc,UAAU,UACjC,KAAK,IAAI,aAAa,YAAY,WAClC,CAAC,KAAK,GAAG,aAAa,UACtB,CAAC,KAAK,GAAG;EAEjB;EAEA,YACY,WACS,OACA,KACA,OACA,OACA,aACA,cACA,UACA,OACR,QAAiB;AATlB,SAAA,YAAA;AACS,SAAA,QAAA;AACA,SAAA,MAAA;AACA,SAAA,QAAA;AACA,SAAA,QAAA;AACA,SAAA,cAAA;AACA,SAAA,eAAA;AACA,SAAA,WAAA;AACA,SAAA,QAAA;AACR,SAAA,SAAA;AAlDb,SAAA,eAAe;AACf,SAAA,eAAwB;AAExB,SAAA,cAAwB,CAAA;AAExB,SAAA,kBAA0C,CAAA;AACzB,SAAA,gBAAgB,KAAK,MAAM,SAAS,YAAY;AACvD,SAAA,UAAU,IAAI,aAAY;AAEpC,SAAA,iBAAoB,CAAA;AAKpB,SAAA,mBAAmB,YAAY,eAAe,wCAAwC;AACtF,SAAA,sBAAsB,YAAY,eAAe,2CAA2C;AAC5F,SAAA,oBAAoB,YAAY,eAAe,yCAAyC;AACxF,SAAA,6BAA6B,YAAY,eAAe,oDAAoD;AAC5G,SAAA,oBAAoB,YAAY,eAAe,wDAAwD;AACvG,SAAA,qBAAqB,YAAY,eAAe,+DAA+D;AAC/G,SAAA,gBAAgB,YAAY,eAAe,2CAA2C;AAK7E,SAAA,gBAAgB,OAAO,OAAO,UAAU;AA6B7C,SAAK,aAAa,kBAAiB,EAAG,UAAU,UAAO;AAEnD,WAAK,eAAe;AACpB,WAAK,eAAe;AACpB,WAAK,eAAe;IAExB,CAAC;AACD,SAAK,aAAa,gBAAe,EAAG,UAAU,UAAO;AACjD,UAAI,MAAM;AACN,aAAK,eAAe;MAExB;IACJ,CAAC;EAEL;EAEA,WAAQ;AACJ,SAAK,SAAS,YAAY,SAAS,MAAM,WAAW;AAEpD,UAAMC,SAAQ,KAAK,SAAS,cAAc,OAAO;AACjD,IAAAA,OAAM,YAAY;;;;;;;;;;AAUlB,SAAK,SAAS,YAAY,SAAS,MAAMA,MAAK;AAE9C,SAAK,MAAK;EACd;EAEO,QAAK;AACR,UAAM,EAAE,aAAa,MAAM,QAAO,IAAK,KAAK,MAAM,SAAS,MAAM;AACjE,SAAK,MAAM,QAAQ,aAAa,MAAM,OAAO,EAAE,UAAU,CAAC,OAAM;AAC5D,WAAK,KAAK;AAChB,UAAG,KAAK,IAAG;AACD,aAAK,eAAe,cAAc,KAAK,GAAG;AAC1C,aAAK,eAAe;MACxB;AACA,YAAM,QAAQ,KAAK,MAAM,SAAS,YAAY,OAAO,KAAK,aAAa,QAAQ,aAAa,GAAG,IAAI,EAAE;AACrG,UAAI,OAAO;AACP,aAAK,gBAAgB,KAAK;MAC9B,OAAO;AACH,aAAK,iBAAgB;MACzB;IACJ,CAAC;EACL;EACC,iBAAc;AACb,UAAM,EAAE,aAAa,MAAM,QAAO,IAAK,KAAK,MAAM,SAAS,MAAM;AAClE,WAAO,KAAK,MAAM,QAAQ,aAAa,MAAM,OAAO;EACvD;;EAEE,gBAAgB,OAAa;AACzB,QAAI,CAAC,KAAK;AAAI;AACd,QAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,GAAG,aAAa;AAC3C,WAAK,iBAAgB;AACrB;IACJ;AACA,QAAI,KAAK,qBAAqB,OAAO,KAAK,GAAG,UAAU,KAAK,GAAG,WAAW,GAAG;AACzE;IACJ;AACA,SAAK,iBAAgB;EACzB;EAEQ,qBAAqB,OAAe,UAAoB,aAAgB;AAC5E,eAAW,UAAU,UAAU;AAC3B,YAAM,OAAO,YAAY,MAAM;AAC/B,UAAI,CAAC;AAAM;AACX,UAAI,KAAK,OAAO,OAAO;AACnB,aAAK,gBAAgB,IAAI;AACzB,aAAK,WAAW,EAAE,MAAM,MAAM,UAAU,MAAK,CAAS;AACtD,eAAO;MACX;AACA,UAAI,KAAK,YAAY,KAAK,aAAa;AACnC,YAAI,KAAK,oBAAoB,OAAO,IAAI,GAAG;AACvC,iBAAO;QACX;MACJ;IACJ;AACA,WAAO;EACX;EAEQ,oBAAoB,OAAe,QAAW;AAClD,eAAW,SAAS,OAAO,UAAU;AACjC,YAAM,MAAM,OAAO,YAAY,KAAK;AACpC,UAAI,IAAI,OAAO,MAAM,kBAAiB,GAAI;AACtC,aAAK,gBAAgB,MAAM;AAC3B,aAAK,eAAe,GAAG;AACvB,aAAK,WAAW,EAAE,MAAM,KAAK,UAAU,MAAK,CAAS;AACrD,eAAO;MACX;IACJ;AACA,WAAO;EACX;;EAGA,mBAAgB;AACZ,QAAI,KAAK,IAAI,YAAY,KAAK,IAAI,aAAa;AAC3C,YAAM,cAAc,KAAK,GAAG,SAAS,CAAC;AACtC,YAAM,YAAY,KAAK,GAAG,YAAY,WAAW;AACjD,UAAI,WAAW;AACX,aAAK,gBAAgB,SAAS;AAC9B,YAAI,UAAU,YAAY,UAAU,aAAa;AAC7C,gBAAM,aAAa,UAAU,SAAS,CAAC;AACvC,gBAAM,WAAW,UAAU,YAAY,UAAU;AACjD,cAAI,UAAU;AACV,iBAAK,eAAe,QAAQ;AAE5B,iBAAK,WAAW,EAAE,MAAM,UAAU,UAAU,MAAK,CAAS;UAC9D,OAAO;AAEH,iBAAK,WAAW,EAAE,MAAM,WAAW,UAAU,MAAK,CAAS;UAC/D;QACJ,OAAO;AAEH,eAAK,WAAW,EAAE,MAAM,WAAW,UAAU,MAAK,CAAS;QAC/D;MACJ;IACJ;EACJ;EAEA,gBAAgB,MAAS;AACrB,QAAI,KAAK,GAAG,cAAc;AAEtB,WAAK,gBAAgB,KAAK,GAAG,aAAa,EAAE,IAAI,KAAK,GAAG;IAC5D;AAGA,SAAK,GAAG,eAAe;AAGvB,SAAK,GAAG,cAAc,KAAK,gBAAgB,KAAK,EAAE,KAAK,KAAK,WAAW,CAAC;EAC5E;EAEA,eAAe,KAAQ;AACnB,SAAK,GAAG,cAAc;EAC1B;EAGO,WAAW,KAAiB;AAE/B,QAAI,KAAK,IAAI,QAAQ,KAAK,MAAM,IAAI;AAChC,mBAAa,QAAQ,aAAa,KAAK,GAAG,IAAI,IAAI,IAAI,KAAK,EAAE;IACjE;AACA,QAAI,KAAK,UAAU;AACf,WAAK,iBAAiB,KAAK,IAAI;AAC/B,WAAK,eAAe;AACpB,WAAK,aAAa,gBAAgB,KAAK,YAAY;IACvD;AACA,QAAI,KAAK,MAAM;AACX,WAAK,iBAAiB,IAAI;AAC1B,UAAI,IAAI,MAAM,gBAAgB;AAC1B,aAAK,gBAAgB,IAAI,KAAK,cAAc;MAChD,WACS,IAAI,MAAM,cAAc;AAC7B,aAAK,cAAc,IAAI,KAAK,YAAY;MAC5C,WACQ,IAAI,KAAK,UAAU,IAAI,KAAK,OAAM;AACtC,aAAK,eAAe,IAAI,KAAK;AAC7B,aAAK,qBAAsB,IAAI,KAAK;MACxC,OACK;AACD,aAAK,mBAAmB,IAAI,KAAK,QAAQ,YAAY;MACzD;IACJ;EACJ;EAGA,mBAAmB,aAAgB;AAC/B,QAAI,UAAyB;AAC7B,QAAI,YAA2B;AAE/B,QAAI,CAAC,aAAa;AACd,cAAQ,KAAK,kBAAkB;AAC/B,aAAO;IACX;AAEA,QAAI,YAAY,YAAY,kBAAkB,YAAY,gBAAgB;AACtE,gBAAU,YAAY;AACtB,WAAK,eAAe,YAAY;AAChC,WAAK,eAAe,cAAc,YAAY;IAClD,WAAW,YAAY,YAAY,gBAAgB,YAAY,cAAc;AACzE,gBAAU,YAAY;AACtB,WAAK,eAAe,YAAY;AAChC,WAAK,eAAe,cAAc,YAAY;IAElD,OAAO;AACH,cAAQ,KAAK,4CAA4C;IAC7D;AACA,WAAO,EAAE,SAAS,UAAS;EAC/B;EAEA,gBAAgB,WAAc;AAC1B,UAAM,OAAO,KAAK,IAAI,QAAQ,OAAO,KAAK,GAAG,KAAK,SAAQ,IAAK,KAAK,MAAM,SAAS,MAAM,IAAI,MAAM,SAAQ;AAC3G,SAAK,MAAM,oBAAoB,IAAI,EAAE,UAAU,cAAW;AACtD,WAAK,cAAc;AAEnB,UAAI,KAAK,aAAa,QAAQ;AAC1B,cAAM,eAAe,KAAK,YAAY,KAAK,OAAK,EAAE,UAAU,SAAS;AACrE,aAAK,eAAe,cAAc;AAClC,aAAK,qBAAqB,cAAc;MAC5C;IACJ,CAAC;EACL;EAEA,cAAc,WAAc;AACxB,SAAK,MAAM,kBAAkB,KAAK,GAAG,KAAK,SAAQ,CAAE,EAAE,UAAU,cAAW;AACvE,WAAK,cAAc;AAEnB,UAAI,KAAK,aAAa,QAAQ;AAC1B,cAAM,aAAa,KAAK,YAAY,KAAK,OAAK,EAAE,UAAU,SAAS;AACnE,aAAK,eAAe,YAAY;AAChC,aAAK,qBAAqB,YAAY;MAC1C;IACJ,CAAC;EACL;EAEA,aAAU;AACN,QAAI,CAAC,KAAK,gBAAgB,CAAC,KAAK,gBAAgB,aAAa;AACzD,cAAQ,MAAM,0BAA0B;AACxC;IACJ;AACA,QAAI;AACA,YAAM,iBAAiB,mBAAK;AAE5B,qBAAe,QAAQ,WAAW,KAAK,YAAY;AACnD,qBAAe,QAAQ,eAAe,KAAK,qBAAqB,KAAK,qBAAqB,KAAK,eAAe,WAAW;AAEzH,YAAM,gBAAgB,eAAe,QAAQ,SAAS;AACtD,YAAM,oBAAoB,eAAe,QAAQ,aAAa;AAE9D,UAAI,kBAAkB,KAAK,iBACtB,sBAAsB,KAAK,eAAe,eAAe,sBAAuB,KAAK,qBAAqB;AAC3G,eAAO,KAAK,aAAa,QAAQ;MACrC,OAAO;AACH,gBAAQ,MAAM,yCAAyC;AACvD,eAAO,QAAQ,cAAc,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AACpD,yBAAe,QAAQ,KAAK,KAAK;QACrC,CAAC;MACL;IACJ,SAAS,OAAO;AACZ,cAAQ,MAAM,mCAAmC,KAAK;IAC1D;EACJ;EAEO,YAAY,KAA8B;AAC7C,SAAK,GAAG,sBAAsB,IAAI,IAAI;AACtC,SAAK,eAAe;AACpB,SAAK,aAAa,gBAAgB,KAAK,YAAY;EAGvD;EAEO,UAAU,KAA8B;AAE7C,QAAI,IAAI,gBAAwB,KAAK;AAEnC,WAAK,eAAc,EAAG,UAAU;QAC9B,MAAM,CAAC,OAAM;AACT,eAAK,KAAK;AACT,qBAAW,MAAK;AACf,iBAAK,kBAAkB,IAAI,IAAI;AACjC,iBAAK,eAAe;AACpB,iBAAK,aAAa,gBAAgB,KAAK,YAAY;UAClD,GAAG,EAAE;QAEV;QACA,OAAO,CAAC,MAAK;QAEb;OACH;IAED,OAAK;AACH,WAAK,kBAAkB,IAAI,IAAI;AAC/B,WAAK,eAAe;AACpB,WAAK,aAAa,gBAAgB,KAAK,YAAY;IACrD;EAKF;EAEO,kBAAkB,KAAgB;AACrC,SAAK,iBAAiB,IAAI,QAAuB,GAAG;EACxD;EAEO,YAAY,KAA8B;AAC7C,UAAM,MAAM,IAAI;AAChB,QAAI,YAAY;AAChB,QAAI,eAAuB,IAAI;AAC3B,kBAAY;IAChB,WAAW,eAAuB,MAAM;AACpC,kBAAY;IAChB,WAAW,eAAuB,KAAK;AACnC,kBAAY;IAChB,WAAW,eAAuB,MAAM;AACpC,kBAAY;IAChB;AAEA,UAAM,OAAQ,KAAa,eAAe,IAAI;AAC9C,UAAM,YAAY,cAAc;AAChC,UAAM,UAAU,YAAY,YAAY;AACxC,UAAM,eAAe,QAAQ,QAAQ,YAAW,CAAE;AAClD,SAAK,IAAI,YAAY,WAAW;MAC5B,QAAQ,GAAG,OAAO,IAAI,SAAS;MAC/B,MAAM,4BAA4B,QAAQ,YAAW,CAAE,IAAI,IAAI;MAC/D,SAAS,GAAG,OAAO;MACnB;MACA,UAAU;MACV,UAAU;MACV,aAAa;MACb,UAAU,MAAM,KAAK,aAAa,GAAG;KACxC;EACL;EAEQ,aAAa,KAAgB;AACjC,UAAM,SAAS,IAAI;AAGnB,UAAM,MAAM,OAAO,SAAS,UAAU,CAAC,OAAO,OAAO,IAAI,EAAE;AAG3D,WAAO,YAAY,IAAI,EAAE;AAGzB,UAAM,WAAW,MAAM,OAAO,WAAW,KAAY,GAAG;AAExD,SAAK,MAAM,aAAa,KAAK,KAAK,EAAE,EAAE,UAAU;MAC5C,MAAM,CAAC,YAAa,CAAC,UAAU,SAAQ,IAAK,KAAK,MAAK;MACtD,OAAO,CAAC,MAAM,SAAQ;KACzB;EACL;EAGO,eAAY;AACf,SAAK,IAAI,YAAY,WAAW;MAC5B,QAAQ;MACR,MAAM;MACN,UAAU,MAAK;AACX,aAAK,MAAM,gBAAgB,KAAK,aAAa,EAAE,UAAU,CAAC,YAAW;AACjE,eAAK,MAAM,QAAQ,OAAO;QAC9B,CAAC;MACL;MACA,SAAS;MACT,gBAAgB;KACnB;EACL;EAEA,QAAQ,GAAiC,QAAmB;AAExD,oBAAgB,OAAO,UAAU,EAAE,MAAM,EAAE,EAAE;AAC7C,SAAK,MAAM,gBAAgB,MAAM,EAC5B,UAAU;MACP,MAAM,CAAC,MAAM,KAAK,MAAK;MACvB,OAAO,CAAC,MAAM,gBAAgB,OAAO,UAAU,EAAE,IAAI,EAAE,IAAI;KAC9D;EACT;EAEO,gBAAa;AAChB,SAAK,UAAU,aAAa,KAAK,GAAG,aAAa,KAAK,GAAG,OAAO,EAAE,KACxD,IAAI,cAAW;AAEb,WAAK,cAAc,CAAA;AACnB,UAAI,CAAC,UAAU;AACb,cAAM,IAAI,MAAM,+BAA+B;MACjD;AACA,UAAI,SAAS,iBAAiB;AAAW,aAAK,YAAY,KAAK,sBAAsB;AACrF,UAAI,SAAS,WAAW;AAAiB,aAAK,YAAY,KAAK,oBAAoB;AACnF,UAAI,SAAS,qBAAqB;AAAO,aAAK,YAAY,KAAK,+BAA+B;AAC9F,UAAI,SAAS,0BAA0B;AAAE,aAAK,YAAY,KAAK,oCAAoC;AAEnG,UAAI,KAAK,YAAY,SAAS,GAAG;AAC/B,cAAM,IAAI,MAAM,mBAAmB;MACrC;IACF,CAAC,GAAE,UAAU,MAAM,KAAK,UAAU,YAAY,KAAK,GAAG,aAAa,KAAK,GAAG,OAAO,CAAC,GACzE,WAAW,SAAM;AACf,WAAK,eAAc;AACnB,aAAO,GAAG,KAAK;IACjB,CAAC,CAAC,EACF,UAAU,aAAU;AACpB,UAAI,SAAS;AACX,aAAK,MAAM,QAAQ,6BAA6B;MAClD;IACF,CAAC;EACvB;EACI,iBAAc;AAEpB,UAAM,YAAY,KAAK,OAAO,KAAK,sBAAsB;MACvD,OAAO;MACP,cAAc;MACd,YAAY;MACZ,MAAM;QACJ,MAAM;QACN,aAAa,KAAK,GAAG;QACrB,OAAO,KAAK,GAAG;QACf,aAAa,KAAK;;KAErB;AAED,cAAU,kBAAkB,WAAW,UAAU,MAAK;AACpD,gBAAU,MAAK;IACjB,CAAC;EACH;EACW,WAAW,MAAmB;AACjC,SAAK,UAAU;AACf,QAAI,SAAS,KAAK,GAAG;AAAM;AAC3B,SAAK,MAAM,WAAW,KAAK,GAAG,MAAM,IAAI,EAAE,UAAU,CAAC,YAAW;AAC5D,UAAI,SAAS;AACT,aAAK,GAAG,OAAO,EAAE,MAAM,KAAI,CAAE;MACjC;IACJ,CAAC;EACL;EACc,iBAAiB,IAAoD;+CAApD,QAAqB,OAA6B,CAAA,GAAE;AAC/E,YAAM,YAAY,OAAO,KAAK,IAAI,EAAE,WAAW;AAC/C,YAAM,EAAE,UAAS,IAAK,KAAK,2BAA2B,QAAQ,IAAI;AAElE,YAAM,QAAQ,KAAK,IAAI,cAAc,WAAW,EAAE,MAA2B,QAAQ,UAAS,CAAE;AAChG,YAAM,MAAM,MAAM,MAAM;AACxB,UAAI,CAAC;AAAK;AAEV,UAAI,WAAW,UAAa,gBAAwB,IAAI;AACpD,aAAK,cAAc,GAAG;AACtB;MACJ;AAED,UAAI,IAAI,cAAc;AACjB,cAAM,cAAc,eAAe,QAAQ,SAAS;AAEpD,YAAI,kBAA0B,QAAQ,IAAI,aAAa,cAAc,MAAM;AACvE,gBAAM,eACN,KAAK,MAAM,WAAW,aAAa,IAAI,aAAa,SAAS,CAAC;QAElE,WAAW,kBAA0B,MAAM,IAAI,aAAa,aAAa,MAAM;AAC3E,gBAAM,eACN,KAAK,MAAM,UAAU,aAAa,IAAI,aAAa,UAAU,KAAK,GAAG,OAAO,CAAC;QAEjF;MACA;AACJ,YAAM,kBAAkB,CAAC,OAAc;AACnC,YAAI,kBAA0B,IAAI;AAC9B,cAAI,IAAI,OAAO,WAAW,QAAQ,CAAC,WAAW;AAC1C,mBAAO;UACX;AAEA,cAAI,OAAO,SAAS,MAAM,IAAI,OAAO;AACrC,iBAAO,KAAK,MAAM,eAAe,IAAI,OAAO,QAAQ,IAAI,OAAO,MAAM;QACzE,WACS,kBAA0B,MAAM;AACrC,cAAI,IAAI,OAAO,YAAY,QAAQ,CAAC,WAAW;AAC3C,mBAAO;UACX;AAEA,cAAI,OAAO,QAAQ,MAAM,IAAI,OAAO;AACpC,iBAAO,KAAK,MAAM,gBAAgB,IAAI,OAAO,OAAO,IAAI,OAAO,OAAO;QAC1E,WACS,kBAA0B,KAAK;AACpC,cAAI,IAAI,OAAO,iBAAiB,QAAQ,IAAI,OAAO,kBAAkB,QAAQ,CAAC,WAAW;AACrF,mBAAO;UACX;AACA,iBAAO,KAAK,MAAM,eAAe,IAAI,MAAM;QAC/C;MACJ;AAIA,WAAK,kBAAkB,QAAQ,MAAM,IAAI,SAAS,eAAe;IACrE;;EAIQ,cAAc,SAAmB;AACrC,SAAK,MAAM,OAAO,OAAO,EAAE,UAAU,CAAC,YAAW;AAC7C,UAAI,SAAS;AACT,aAAK,GAAG,OAAO,OAAO;MAC1B;IACJ,CAAC;EACL;EAEO,kBAAkB,QAAqB,MAA4B,CAAA,GAAI,SAA4BC,WAA0C;AAChJ,UAAM,YAAY,OAAO,KAAK,GAAG,EAAE,WAAW;AAE9C,UAAM,WAAW,mBAAK;AACtB,QAAI;AAGJ,QAAI,WAAW;AACX,YAAM,EAAE,WAAU,IAAK,KAAK,2BAA2B,MAAM;AAC7D,iBAAW,IAAI,WAAW,SAAS,MAAM;AACzC,aAAO,SAAS,QAAQ;IAC5B,OAAO;AACH,UAAI,OAAO,OAAO;IACtB;AAGA,UAAM,WAAW,MAAK;AAClB,UAAI,WAAW;AACX,eAAO,YAAY,QAAQ,EAAE;MACjC,OAAO;AACH,YAAI,OAAO,QAAQ;MACvB;IACJ;AAEA,SAAK,MAAM,WAAW,SAAS,KAAK,EAAE,EACjC,KACG,UAAU,QAAK;AACX,UAAIA,WAAU;AACV,eAAOA,UAAS,EAAE,EAAE,KAAK,IAAI,MAAM,EAAE,CAAC;MAC1C;AACA,aAAO,GAAG,EAAE;IAChB,CAAC,CAAC,EAEL,UAAU;MACP,MAAM,CAAC,YAAW;AACd,YAAI,CAAC;AAAS,mBAAQ;aACjB;AACD,eAAK,GAAG,cAAc,OAAO;AAG7B,cAAI,aAAa,UAAU;AAEvB,gBAAI,oBAA4B,MAAM;AAClC,mBAAK,gBAAgB,QAAQ;AAE7B,2BAAa,QAAQ,aAAa,KAAK,GAAG,IAAI,IAAI,SAAS,EAAE;YACjE,WAES,oBAA4B,KAAK;AAEtC,kBAAI,KAAK,GAAG,iBAAiB,QAAQ;AACjC,qBAAK,gBAAgB,MAAM;cAC/B;AACA,mBAAK,eAAe,QAAQ;AAE5B,2BAAa,QAAQ,aAAa,KAAK,GAAG,IAAI,IAAI,SAAS,EAAE;YACjE,WAES,oBAA4B,QAAQ,kBAA0B,KAAK;AAExE,kBAAI,KAAK,GAAG,gBAAgB,QAAQ;AAChC,qBAAK,eAAe,MAAM;cAC9B;YACJ;UACJ;QACJ;MACJ;MACA,OAAO,CAAC,MAAM,SAAQ;MACtB,UAAU,MAAM,KAAK,MAAK;KAC7B;EACT;EAEQ,2BAA2B,QAAqB,OAA6B,CAAA,GAAE;AACnF,QAAI;AACJ,QAAI;AACJ,QAAI,kBAA0B,IAAI;AAC9B,kBAAuB;AACvB,mBAAqB;IACzB,WAAW,kBAA0B,MAAM;AACvC,kBAAuB;AACvB,mBAAqB;IACzB,WAAW,kBAA0B,KAAK;AACtC,kBAAuB;AACvB,mBAAqB;IACzB,WAAW,WAAW,UAAa,gBAAwB,IAAI;AAC3D,kBAAuB;AACvB,mBAAa;IACjB;AACA,WAAO,EAAE,WAAW,WAAU;EAClC;EAEa,aAAa,OAA4B;;AAClD,WAAK,aAAa,aAAa,KAAK;IAExC;;EAEA,eAAY;AACR,SAAK,eAAe,CAAC,KAAK;EAC9B;EACA,2BAA2B,OAAK;AAC5B,QAAI,OAAO;AACP,WAAK,cAAc;IACvB;EACJ;EACA,oBAAoB,OAAK;AACrB,QAAI,OAAO;AACP,WAAK,eAAe;IACxB;EACJ;EACA,oBAAoB,OAAK;AACrB,QAAI,OAAO;AACP,WAAK,eAAe;IACxB;EACJ;EAEA,iBAAiB,OAAK;AAClB,QAAI,OAAO;IAEX;EACJ;EACA,WAAW,OAAK;AACZ,SAAK,KAAK;AACV,SAAK,aAAa,KAAK,GAAG,eAAe,KAAK,GAAG,cAAc,KAAK,GAAG,YAAY;EAEvF;EAEc,aAAa,IAAa,IAAwC;+CAArD,QAAa,SAAS,OAA6B,CAAA,GAAE;AAE5E,UAAI,UAAU,CAAA;AACd,iBAAW,WAAW,KAAK,UAAU;AACjC,mBAAW,QAAQ,OAAO,OAAO,KAAK,WAAW,GAAG;AAChD,cAAI,KAAK,SAAS,SAAS;AACvB,oBAAQ,KAAK,KAAK,MAAM;UAC5B;QACJ;MACJ;AAEA,YAAM,SAAS;QACX,OAAO,KAAK,GAAG,aAAa;QAC5B,SAAS,QAAQ,KAAK,GAAG;;AAE7B,aAAO,KAAK,MAAM,iBAAiB,OAAO,MAAM,SAAQ,GAAI,OAAO,OAAO;IAE9E;;EACA,eAAe,OAAS;AAChB,SAAK,kBAAkB;AACxB,QAAG,KAAK,mBAAmB,KAAK,cAAa;AACxC,WAAK,eAAa;IACtB;AACA,SAAK,MAAM,cAAa;EAChC;EAEA,iBAAiB,OAAS;AACtB,QAAG,OAAM;AACL,WAAK,KAAK;IACd;EACJ;EAEO,YAAS;AACZ,WAAO,QAAQ,KAAI;EACvB;;;uCA7rBS,wBAAqB,4BAAA,SAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,SAAA,CAAA;IAAA;EAAA;;yEAArB,wBAAqB,WAAA,CAAA,CAAA,mBAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,uBAAA,wBAAA,GAAA,SAAA,EAAA,SAAA,UAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,OAAA,QAAA,GAAA,oBAAA,MAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,SAAA,QAAA,GAAA,UAAA,mCAAA,GAAA,KAAA,GAAA,CAAA,GAAA,cAAA,cAAA,eAAA,QAAA,eAAA,GAAA,CAAA,cAAA,8BAAA,QAAA,YAAA,GAAA,cAAA,cAAA,GAAA,WAAA,kBAAA,GAAA,UAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,MAAA,WAAA,GAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,sBAAA,GAAA,CAAA,GAAA,eAAA,cAAA,WAAA,aAAA,WAAA,eAAA,QAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,YAAA,GAAA,YAAA,QAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,KAAA,IAAA,GAAA,eAAA,cAAA,WAAA,aAAA,WAAA,WAAA,aAAA,aAAA,GAAA,CAAA,SAAA,WAAA,GAAA,YAAA,QAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,oBAAA,0BAAA,QAAA,OAAA,MAAA,eAAA,YAAA,WAAA,uBAAA,uBAAA,gBAAA,cAAA,kBAAA,oBAAA,GAAA,cAAA,GAAA,CAAA,SAAA,QAAA,OAAA,YAAA,GAAA,OAAA,GAAA,cAAA,GAAA,CAAA,SAAA,cAAA,GAAA,cAAA,GAAA,CAAA,MAAA,WAAA,GAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,SAAA,yBAAA,GAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,sBAAA,GAAA,SAAA,GAAA,CAAA,GAAA,yBAAA,GAAA,SAAA,GAAA,CAAA,GAAA,6BAAA,GAAA,CAAA,OAAA,sBAAA,GAAA,SAAA,KAAA,GAAA,CAAA,GAAA,2BAAA,gBAAA,yBAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,QAAA,UAAA,UAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,QAAA,UAAA,UAAA,cAAA,GAAA,CAAA,SAAA,YAAA,GAAA,YAAA,QAAA,cAAA,GAAA,CAAA,GAAA,SAAA,QAAA,UAAA,UAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,QAAA,UAAA,UAAA,OAAA,GAAA,CAAA,SAAA,WAAA,GAAA,YAAA,QAAA,cAAA,GAAA,CAAA,GAAA,uBAAA,uBAAA,gBAAA,cAAA,kBAAA,oBAAA,oBAAA,0BAAA,QAAA,OAAA,MAAA,eAAA,YAAA,SAAA,GAAA,CAAA,SAAA,QAAA,OAAA,YAAA,GAAA,KAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,SAAA,8BAAA,SAAA,MAAA,UAAA,MAAA,QAAA,gBAAA,WAAA,aAAA,GAAA,MAAA,uBAAA,GAAA,CAAA,aAAA,WAAA,KAAA,kNAAA,GAAA,CAAA,aAAA,WAAA,KAAA,iHAAA,CAAA,GAAA,UAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACnClC,QAAA,qBAAA,GAAA,+CAAA,IAAA,IAAA,gBAAA,CAAA;;;AAAe,QAAA,qBAAA,QAAA,IAAA,EAAA;;sBDiCD,MAAM,mBAAmB,iBAAiB,UAAU,SAAS,SAAS,wBAAwB,eAAe,SAAO,cAAc,cAAc,qBAAqB,GAAA,QAAA,CAAA,mpIAAA,EAAA,CAAA;EAAA;;;6EAEtK,uBAAqB,EAAA,WAAA,yBAAA,UAAA,8DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AE/BlC,IAAM,SAAiB,CAAC,EAAE,MAAM,IAAI,WAAW,sBAAqB,CAAE;AAMhE,IAAO,4BAAP,MAAO,2BAAyB;;;uCAAzB,4BAAyB;IAAA;EAAA;;wEAAzB,2BAAyB,CAAA;EAAA;;4EAH1B,aAAa,SAAS,MAAM,GAC5B,YAAY,EAAA,CAAA;EAAA;;;;AC6DlB,IAAO,qBAAP,MAAO,oBAAkB;;;uCAAlB,qBAAkB;IAAA;EAAA;;wEAAlB,oBAAkB,CAAA;EAAA;;;MAxC3B;MACA;MACA;MACI;MACJ;MACA;MACA;MACe;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAIA;MAEA;MACA;MAGf;MACA;MACA;MAGA;MACA;IAA8B,EAAA,CAAA;EAAA;;","names":["DMOGType","BMOType","FormBmoType","CanvasType","EnableTLCorner","MethodTypes","GridViewDataSource","DataSource","CustomDataSource","RegExType","StorageProvider","ActionState","Status","DMOStatus","NotificationOption","bmog","id","item","item","_c0","import_lodash","dmo","_c0","_c0","_c1","_c0","key","value","_c1","_c2","_c0","style","import_lodash","DMOS","DMOS","index","_c0","_c1","_c2","DMOS","_c3","DMOS","looped","ApiService","DMOS","_","from","success","finalize","filter","model","_c0","_c1","_c2","_c3","_c4","passiveEventListenerOptions","_c0","_c1","DMOS","ApiService","_c0","index","DMOS","_c0","_c0","_c1","style","finalize"],"x_google_ignoreList":[48,54]}