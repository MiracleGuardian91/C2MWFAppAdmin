{
  "version": 3,
  "sources": ["src/app/admin/AppList/wf-app-list/wf-app-list.component.ts", "src/app/admin/AppList/wf-app-list/wf-app-list.component.html", "src/app/admin/AppList/wf-app-list/wf-app-list-routing.module.ts", "src/app/admin/AppList/wf-app-list/wf-app-list.module.ts"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { WFService } from '@app/admin/core/services/wfservice.service';\r\nimport { LiveVersionComponent } from '@app/admin/LiveVersion/components/live-version/live-version.component';\r\nimport { ProcessListItem } from '@app/admin/models/process-list-item.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { NgFor, AsyncPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-wf-app-list',\r\n  templateUrl: './wf-app-list.component.html',\r\n  styleUrls: ['./wf-app-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [NgFor, AsyncPipe],\r\n})\r\nexport class WfAppListComponent implements OnInit {\r\n  list$: Observable<ProcessListItem[]>;\r\n\r\n  constructor(\r\n    public wfsrvc: WFService,\r\n    public toastr: ToastrService,\r\n    public modalService: NgbModal,\r\n    public title: Title,\r\n    readonly router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.list$ = this.wfsrvc.GetWFAppList();\r\n    this.title.setTitle('Dashboard');\r\n  }\r\n\r\n  public goToBMGrid(item: ProcessListItem) {\r\n    this.updateSessionStorage(item);\r\n    if (item.Name.toLowerCase() == 'businessmodelcomparison') {\r\n      this.navigateToCompare('BM');\r\n    } else if (item.Name.toLowerCase() == 'workflowcomparison') {\r\n      this.navigateToCompare('WF');\r\n    } else {\r\n      window.open('/admin/bm', '_blank');\r\n    }\r\n  }\r\n\r\n  navigateToCompare(type: string) {\r\n    const typeMap: { [key: string]: number } = { BM: 1, WF: 2 };\r\n    if (typeMap[type]) {\r\n      const url = this.router.serializeUrl(\r\n        this.router.createUrlTree(['/bmwfcompare/user-verification'], {\r\n          queryParams: { type: typeMap[type] },\r\n        })\r\n      );\r\n      window.open(url, '_blank');\r\n    }\r\n  }\r\n\r\n  public goToWFGrid(item: ProcessListItem) {\r\n    this.updateSessionStorage(item);\r\n    if (item.Name.toLowerCase() == 'businessmodelcomparison') {\r\n      this.navigateToCompare('BM');\r\n    } else if (item.Name.toLowerCase() == 'workflowcomparison') {\r\n      this.navigateToCompare('WF');\r\n    } else {\r\n      window.open('/admin/wf', '_blank');\r\n    }\r\n  }\r\n\r\n  public goToVersionGrid(item: ProcessListItem) {\r\n    this.updateSessionStorage(item);\r\n    const modalRef = this.modalService.open(LiveVersionComponent, {\r\n      backdrop: 'static',\r\n      size: 'lg',\r\n      keyboard: false,\r\n    });\r\n    modalRef.result.then(\r\n      async (result) => {\r\n        if (result) {\r\n          this.toastr.success('Data saved successfully.');\r\n        }\r\n      },\r\n      (reason) => {}\r\n    );\r\n  }\r\n\r\n  public goToApplicationGrid(item: ProcessListItem) {\r\n    this.OpenApp(item);\r\n  }\r\n\r\n  private updateSessionStorage(item: ProcessListItem) {\r\n    sessionStorage.setItem('AppName', item.Name);\r\n    sessionStorage.setItem('DisplayName', item.DisplayName);\r\n  }\r\n\r\n  private OpenApp(item: ProcessListItem): void {\r\n    const copy = { ...item };\r\n\r\n    this.updateSessionStorage(copy);\r\n\r\n    if (copy.Name === 'BusinessModelComparison') {\r\n      window.open('/bmwfcompare/user-verification?type=1', '_blank');\r\n    } else if (copy.Name === 'workflowcomparison') {\r\n      window.open('/bmwfcompare/user-verification?type=2', '_blank');\r\n    } else {\r\n      window.open(`/process_control/${copy.Name}`, '_blank');\r\n    }\r\n  }\r\n}\r\n", "<div style=\"height: auto;padding:20px;\">\r\n<table class=\"basicTable stripped\" style=\"border-top:0;border-right:0;border-left:0;\">\r\n    <thead>\r\n        <th  class=\"colHead\">List BM</th>\r\n        <th  class=\"colHead\">List WF</th>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let item of list$ | async\">\r\n            <td><a href=\"javascript:void(0)\" (click)=\"goToBMGrid(item)\">{{item.DisplayName}}</a></td>\r\n            <td><a href=\"javascript:void(0)\" (click)=\"goToWFGrid(item)\">{{item.DisplayName}}</a></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</div>\r\n", "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WfAppListComponent } from './wf-app-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WfAppListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class WFAppListRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@app/shared';\r\nimport { WFAppListRoutingModule } from './wf-app-list-routing.module';\r\nimport { WfAppListComponent } from './wf-app-list.component';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, WFAppListRoutingModule, WfAppListComponent],\r\n})\r\nexport class WFAppListModule {}\r\n"],
  "mappings": "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",
  "names": []
}
