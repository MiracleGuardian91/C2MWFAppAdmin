{
  "version": 3,
  "sources": ["src/app/admin/data-modeler/components/bm-detail/bm-detail.component.ts", "src/app/admin/data-modeler/components/bm-detail/bm-detail.component.html", "src/app/admin/data-modeler/components/bmo-detail/bmo-detail.component.ts", "src/app/admin/data-modeler/components/bmo-detail/bmo-detail.component.html", "src/app/admin/data-modeler/components/bmog-detail/bmog-detail.component.ts", "src/app/admin/data-modeler/components/bmog-detail/bmog-detail.component.html", "src/app/admin/data-modeler/components/dm-breadcrumbs/dm-breadcrumbs.component.ts", "src/app/admin/data-modeler/components/dm-breadcrumbs/dm-breadcrumbs.component.html", "src/app/admin/data-modeler/components/dm-header/dm-header.component.ts", "src/app/admin/data-modeler/components/dm-menu/dm-menu.component.ts", "src/app/admin/data-modeler/components/dm-menu/dm-menu.component.html", "src/app/admin/data-modeler/components/dmo-condition/dmo-condition.component.ts", "src/app/admin/data-modeler/components/dmo-condition/dmo-condition.component.html", "src/app/admin/data-modeler/components/dmo-detail/dmo-detail.component.ts", "src/app/admin/data-modeler/components/dmo-detail/dmo-detail.component.html", "src/app/admin/data-modeler/components/dmo/dmo.component.ts", "src/app/admin/data-modeler/components/dmo/dmo.component.html", "src/app/admin/data-modeler/components/dmog-detail/dmog-detail.component.ts", "src/app/admin/data-modeler/components/dmog-detail/dmog-detail.component.html", "src/app/admin/data-modeler/components/dmog-form-view/dmog-form-view.component.ts", "src/app/admin/data-modeler/components/dmog-form-view/dmog-form-view.component.html", "src/app/admin/data-modeler/data-modeler.component.ts", "src/app/admin/data-modeler/data-modeler.component.html", "src/app/admin/data-modeler/data-modeler-routing.module.ts", "src/app/admin/data-modeler/data-modeler.module.ts"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { enumToList } from '@app/admin/wf/wfd/util/helpers';\r\nimport { of } from 'rxjs';\r\nimport { BM, ObjectControl } from '../../classes';\r\nimport { IBM, ObjectDetail, Status } from '../../models';\r\nimport { NgIf, NgFor, AsyncPipe } from '@angular/common';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\n\r\n@Component({\r\n    selector: 'app-bm-detail',\r\n    templateUrl: './bm-detail.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgFor,\r\n        ObjectControlComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class BmDetailComponent extends ObjectDetail<BM, undefined> {\r\n  title = 'Business Model';\r\n\r\n  public controls: ObjectControl<IBM>[];\r\n  \r\n  private status = enumToList(Status);\r\n\r\n  initForm() {\r\n    this.form = this.fb.group({\r\n      Name: [this.data.Name],\r\n      DisplayName: [this.data.DisplayName, [Validators.required]],\r\n      Version: [this.data.Version, [Validators.required]],\r\n      ProcessName: [this.data.ProcessName],\r\n      Status: [this.status.find(s => s.key == this.data.Status), [Validators.required]],\r\n      IntegrateWorkspace: [+this.data.IntegrateWorkspace],\r\n      Description: [this.data.Description],\r\n    });\r\n\r\n    this.controls = [\r\n      new ObjectControl({name: 'Name', readonly: true, required: true}),\r\n      new ObjectControl({name: 'DisplayName', label: 'Friendly Name', required: true}),\r\n      new ObjectControl({name: 'Version', readonly: true}),\r\n      new ObjectControl({name: 'ProcessName', label: 'Process Name', readonly: true}),\r\n      new ObjectControl({\r\n        name: 'Status', type: 'dropdown', \r\n        required: true, options: of(this.status),\r\n      }),\r\n      new ObjectControl({name: 'IntegrateWorkspace', label: 'Integrate Workspace', type: 'switch'}),\r\n      new ObjectControl({name: 'Description', label: 'Long Description', type: 'rich', class: 'span-12'}),\r\n    ];\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const val = this.form.value;\r\n      const payload: IBM = {\r\n        ...this.data.unreferenceAll(),\r\n        ...val,\r\n        Status: val.Status?.key || val.Status,\r\n        IntegrateWorkspace: +val.IntegrateWorkspace,\r\n      };\r\n      this.output.emit(payload as any);\r\n      this.ref.close(payload);\r\n    }\r\n  }\r\n}\r\n", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newObject\">New {{title}}</h2>\r\n    <h2 *ngIf=\"!newObject\">{{title}} Details</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  \r\n  <form [formGroup]=\"form\">\r\n    <div class=\"double-column\">\r\n      <ng-container *ngFor=\"let control of controls\">\r\n        <app-object-control\r\n          *ngIf=\"control.show | async\"\r\n          [config]=\"control\"\r\n          [parentForm]=\"form\"\r\n          [class]=\"control.class\"\r\n        ></app-object-control>\r\n      </ng-container>\r\n    </div>\r\n  \r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!data.published\">\r\n        <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newObject\">Update</ng-container> \r\n      </button>\r\n    </div>\r\n  \r\n  </form>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { KeyValue } from '@app/admin/BM/models';\r\nimport { arrayToList, enumToList, KeyValueList } from '@app/admin/wf/wfd/util/helpers';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { BMO, BMOG, ObjectControl } from '../../classes';\r\nimport { BMOType, FormBmoType, IBMO, ObjectDetail, Status } from '../../models';\r\nimport { DataModelerApiService } from '../../services/data-modeler-api.service';\r\nimport { checkNameValidatorSync } from '../../validators';\r\nimport { NgIf, NgFor, AsyncPipe } from '@angular/common';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\n\r\n@Component({\r\n    selector: 'app-bmo-detail',\r\n    templateUrl: './bmo-detail.component.html',\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgFor,\r\n        ObjectControlComponent,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class BmoDetailComponent extends ObjectDetail<IBMO | BMO, BMOG> {\r\n  dmogSharing:boolean=true;\r\n  public title = 'Business Model Object';\r\n  public controls: ObjectControl<IBMO>[];\r\n  \r\n  private bmoTypeList = enumToList(BMOType);\r\n  private FormBmoType=enumToList(FormBmoType);\r\n  private status = enumToList(Status);\r\n  \r\n  private subprocessList$: Observable<KeyValueList<string, string>>;\r\n  private childProcessList$: Observable<KeyValueList<string, string>>;\r\n  private parentProcessDmos$: Observable<KeyValueList<string, string>>;\r\n  private availableDmogToShare = [];\r\n  allDmogs = [];\r\n  associatedSharedItems = [];\r\n  sharedChanged = false;\r\n\r\n  constructor(\r\n    ref: NgbActiveModal, \r\n    fb: UntypedFormBuilder, \r\n    private api: DataModelerApiService,\r\n    private readonly toastr: ToastrService\r\n  ) { \r\n    super(ref, fb);\r\n    this.formActions = [\r\n      {controlName: 'BmoType', handler: (type: BMOType) => this.onBmoTypeChange(type)},\r\n      {controlName: 'ChildProcessId', handler: (processId: string) => this.onChildProcessIdChange(processId)}\r\n    ];\r\n  }\r\n\r\n  beforeFormInit() {\r\n    this.allDmogs = this.getSharedItems();    \r\n    this.associatedSharedItems = this.allDmogs.filter(item => item.selected)\r\n\r\n    this.subprocessList$ = this.api.getSubprocessList(this.parent.parent.BMId.toString())\r\n      .pipe(this.handleApiResponse('SubProcessId'));\r\n    this.childProcessList$ = this.api.getChildProcessList(this.parent.parent.BMId.toString())\r\n      .pipe(this.handleApiResponse('ChildProcessId'));\r\n    this.parentProcessDmos$ = this.api.getProcessDmos(this.parent.parent.ProcessId)\r\n      .pipe(this.handleApiResponse('ParentProcessDmoGuid'));\r\n  }\r\n\r\n  initForm() {\r\n    const validators = [...NAME_VALIDATORS]\r\n    if (this.newObject) {\r\n      const allBmos = Object.values(this.parent.root.childrenMap)\r\n        .flatMap(bmog => Object.values(bmog.childrenMap));\r\n      //validators.push(checkNameValidatorSync(Object.values(allBmos), 'Name'));\r\n    };\r\n    this.form = this.fb.group({\r\n      Name: [this.data.Name, {validators, updateOn: 'blur'}],\r\n      DisplayName: [this.data.DisplayName, [Validators.required]],\r\n      Version: [this.data.Version || this.parent.Version, [Validators.required]],\r\n      BmoType: [this.bmoTypeList.find(t => t.key === this.data.BmoType), [Validators.required]],\r\n      Status: [this.status.find(s => s.key == (this.data.Status || Status.Active)), [Validators.required]],\r\n      ShortDesc: [this.data.ShortDesc, [Validators.required]],\r\n      LongDesc: [this.data.LongDesc],\r\n      SubProcessId: [this.data.SubProcessId],\r\n      ChildProcessId: [this.data.ChildProcessId],\r\n      ChildProcessDmoGuid: [this.data.ChildProcessDmoGuid],\r\n      ParentProcessDmoGuid: [this.data.ParentProcessDmoGuid],   \r\n    });\r\n\r\n    this.controls = [\r\n      new ObjectControl({name: 'Name', readonly: !this.newObject, required: true}),\r\n      new ObjectControl({name: 'DisplayName', label: 'Friendly Name', required: true}),\r\n      new ObjectControl({name: 'Version', readonly: true}),\r\n      new ObjectControl({\r\n        name: 'BmoType', label: 'Type', type: 'dropdown',\r\n        required: true, options: of(this.parent.CanvasType==='Form'? this.FormBmoType :this.bmoTypeList)\r\n      }),\r\n      new ObjectControl({\r\n        name: 'Status', type: 'dropdown', \r\n        required: true, options: of(this.status),\r\n      }),\r\n      // new ObjectControl({\r\n      //   name: 'Share', type: 'dropdown', options: of(this.sharedItems), multiple: true,\r\n      //   show: this.show('BmoType', BMOType.Form), groupOptionsBy: 'parent',  \r\n      // }),\r\n      new ObjectControl({\r\n        name: 'SubProcessId', label: 'Subprocess List', type: 'dropdown', required: true,\r\n        options: this.subprocessList$, show: this.show('BmoType', BMOType.SubProcess),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'ChildProcessId', label: 'Child Process List', type: 'dropdown', required: true,\r\n        options: this.childProcessList$, show: this.show('BmoType', BMOType.ChildProcess), \r\n      }),\r\n      new ObjectControl({\r\n        name: 'ParentProcessDmoGuid', label: 'Parent Process DMOs', type: 'dropdown', required: true,\r\n        options: this.parentProcessDmos$, show: this.show('BmoType', BMOType.ChildProcess), \r\n      }),\r\n      new ObjectControl({\r\n        name: 'ChildProcessDmoGuid', label: 'Child Process DMOs', type: 'dropdown', required: true,\r\n        options: of([]), show: this.show('BmoType', BMOType.ChildProcess), \r\n      }),\r\n      new ObjectControl({name: 'ShortDesc', label: 'Short Description', required: true}),\r\n      new ObjectControl({name: 'LongDesc', label: 'Long Description', type: 'rich', class: 'span-12'}),\r\n    ];\r\n\r\n    this.api.GetAvailableDmogToShare(this.parent.root.selectedBMOG.BMOGID, this.parent.root.BMId).subscribe(x=>{\r\n      this.availableDmogToShare= x;\r\n      const avDmogs = this.getAllDmog();\r\n      this.allDmogs= avDmogs;\r\n    });\r\n\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => Start\r\n    this.form.get(\"Name\").valueChanges.subscribe(name=>{\r\n      if(this.newObject && name && name.length>=4  && !this.form.get('Name').hasError(\"maxlength\")\r\n      && !this.form.get('Name').hasError(\"pattern\")){\r\n        this.api.checkNameValidity('bmo',0,name,this.parent.root.Version,this.parent.root.ProcessName).subscribe(IsExits=>{\r\n          if(IsExits){\r\n              const nameControl = this.form.get('Name');\r\n              nameControl.setErrors({\r\n              nameExists: true,\r\n              message: 'Duplicate name'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => End\r\n\r\n  }\r\n\r\n  private getSharedItems() {\r\n    let list: KeyValue[] = [];\r\n    const share = this.data.Share || [];\r\n    \r\n    Object.values(this.parent.root.childrenMap).forEach(bmog => {\r\n      Object.values(bmog.childrenMap).filter(bmo => !bmo.shared).forEach(bmo => {\r\n        Object.values(bmo.childrenMap)\r\n          .filter(dmog => !dmog.shared)\r\n          .forEach(dmog => {\r\n            const selected = share.some((item) => item.value === dmog.id) || this.data?.Children?.some(guid => guid === dmog.id);\r\n            // parent is responsible for grouping items\r\n            // parent id is used later on submit and replaces bmo id in key property\r\n            const item = {\r\n              key: dmog.id,\r\n              dmogId: dmog.DMOGID, \r\n              value: `${dmog.DisplayName} (${dmog.Name})` , \r\n              bmogId: this.parent.BMOGID,\r\n              parent: `${bmog.Name} / ${bmo.DisplayName}`, \r\n              parentId: bmo.id,\r\n              selected, disabled: selected,};\r\n            list.push(item);\r\n        })\r\n      });\r\n    });\r\n    return list;\r\n  }\r\n\r\n  private getAllDmog() {\r\n    let list: KeyValue[] = [];\r\n    const share = this.data.Share || [];\r\n       \r\n    this.availableDmogToShare.forEach((dmog, i) =>{\r\n      const check = share.some((item) => item.value === dmog.dmogGuid) || this.data?.Children?.some(guid => guid === dmog.dmogGuid); \r\n      const item = {\r\n        key: dmog.dmogGuid,\r\n        value: dmog.NAME,\r\n        dmogId: dmog.DMOGID,\r\n        bmogId: this.parent.BMOGID,\r\n        parent: `${this.parent.Name} / ${this.parent.parent.selectedBMOG.Name}`, \r\n        parentId: this.parent.parent.selectedBMOG.id,\r\n        selected: check,\r\n        disabled: check,\r\n      };   \r\n      \r\n      list.push(item);\r\n    });\r\n\r\n    return list;\r\n  }\r\n\r\n\r\n  afterFormInit() {\r\n    // Force patch the control to activate form action on start\r\n    setTimeout(() => {\r\n      const val = this.bmoTypeList.find(({key}) => key === this.data.BmoType);\r\n      this.f.BmoType.patchValue(val);\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const val = this.form.value;\r\n      const payload: IBMO = {\r\n        ...val,\r\n        Parent: this.parent.id,\r\n        BMOID: this.data.BMOID,\r\n        BmoType: val.BmoType?.key || val.BmoType,\r\n        Status: val.Status?.key || val.Status,\r\n        Children: this.data?.Children || [],\r\n        id: this.data?.id || val.Name,\r\n        GUID: this.data?.GUID || val.Name,\r\n        SubProcessId: val.SubProcessId?.key || val.SubProcessId,\r\n        ChildProcessId: val.ChildProcessId?.key || val.ChildProcessId,\r\n        ChildProcessDmoGuid: val.ChildProcessDmoGuid?.key || val.ChildProcessDmoGuid,\r\n        ParentProcessDmoGuid: val.ParentProcessDmoGuid?.key || val.ParentProcessDmoGuid,\r\n        ParentBMId: this.parent.root.BMId,\r\n      };\r\n\r\n      const shared = {         \r\n        bmoid:this.data.BMOID,\r\n        dmogIds: this.sharedChanged ? this.associatedSharedItems.map(({ dmogId }) => dmogId).toString() : '-1',\r\n      };\r\n\r\n      this.output.emit(payload);\r\n      this.ref.close({ payload, shared });\r\n    }\r\n  }\r\n\r\n  private onBmoTypeChange(val: any) {\r\n    val = val?.key || val;\r\n    this.dmogSharing=false;\r\n    if (val === BMOType.SubProcess) {\r\n      this.f.SubProcessId.setValidators(Validators.required);\r\n      this.f.ChildProcessId.clearValidators();\r\n      this.f.ChildProcessDmoGuid.clearValidators();\r\n      this.f.ParentProcessDmoGuid.clearValidators();\r\n      \r\n    } else if (val === BMOType.ChildProcess) {\r\n      this.f.SubProcessId.clearValidators();\r\n      this.f.ChildProcessId.setValidators(Validators.required);\r\n      this.f.ChildProcessDmoGuid.setValidators(Validators.required);\r\n      this.f.ParentProcessDmoGuid.setValidators(Validators.required);\r\n      \r\n      \r\n    }\r\n    if(val===BMOType.Form){\r\n      this.dmogSharing=true;\r\n    }\r\n    this.form.updateValueAndValidity();\r\n  }\r\n\r\n  private onChildProcessIdChange(processId: any) {\r\n    processId = processId?.key || processId;\r\n    const control = this.controls.find(c => c.name === 'ChildProcessDmoGuid');\r\n    control.options = this.api.getProcessDmos(processId)\r\n      .pipe(this.handleApiResponse('ChildProcessDmoGuid'));\r\n    this.f.ChildProcessDmoGuid.reset();\r\n  }\r\n\r\n  private handleApiResponse(control: keyof IBMO) {\r\n    return (source: Observable<any[]>) => {\r\n      return source.pipe(\r\n        map(list => arrayToList(list, 'Value', 'Label')),\r\n        tap(list => {\r\n          const val = list.find(({key}) => key === this.data[control]);\r\n          this.f[control].patchValue(val);\r\n        }),\r\n      )\r\n    }\r\n  }\r\n\r\n  private show(controlName: keyof IBMO, compareTo: any) {\r\n    return this.form.get(controlName).valueChanges.pipe(\r\n      startWith(this.form.get(controlName).value),\r\n      map(v => v?.key || v),\r\n      map(v => v === compareTo)\r\n    )\r\n  }\r\n\r\n  displayShare = (item: SharedItem) => item.value;\r\n  uniqueShare = (item: SharedItem) => item.value;\r\n\r\n  shouldAdd = (item: SharedItem) =>\r\n  this.api.checkDmogInBmo(item.dmogId.toString(), item.bmogId.toString()).pipe(\r\n    tap((success) => {\r\n      if (!success) {\r\n        this.toastr.warning('This dmog cannot be shared');\r\n      }\r\n    })\r\n  );\r\n\r\n  onShareAdd(item: SharedItem) {\r\n    this.associatedSharedItems = this.associatedSharedItems.concat(item);\r\n    this.sharedChanged = true;\r\n    this.refreshAllDmogs();\r\n  }\r\n  onShareRemove(item: SharedItem) {\r\n    this.associatedSharedItems = this.associatedSharedItems.filter((dmog) => dmog.dmogId !== item.dmogId);\r\n    this.sharedChanged = true;\r\n    this.refreshAllDmogs();\r\n  }  \r\n\r\n  onShareReorder = (items: SharedItem[]) => {\r\n    this.associatedSharedItems = items;\r\n    this.sharedChanged = true;\r\n  };  \r\n\r\n  refreshAllDmogs = () => {\r\n    this.allDmogs.forEach((dmog) => {\r\n      const rightCheck = this.associatedSharedItems.some((item) => item.key === dmog.key);      \r\n      dmog.selected = rightCheck;\r\n      dmog.disabled = rightCheck;\r\n    });\r\n    this.allDmogs = this.allDmogs;\r\n  };\r\n\r\n}\r\n\r\ntype SharedItem = KeyValue & { selected?: boolean; disabled?: boolean; dmogId: number; bmogId: number, parentId: number };", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newObject\">New {{title}}</h2>\r\n    <h2 *ngIf=\"!newObject\">{{title}} Details</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  \r\n  <form [formGroup]=\"form\">\r\n    <div class=\"double-column\">\r\n      <ng-container *ngFor=\"let control of controls\">\r\n        <app-object-control\r\n          *ngIf=\"control.show | async\"\r\n          [config]=\"control\"\r\n          [parentForm]=\"form\"\r\n          [class]=\"control.class\"\r\n        ></app-object-control>\r\n      </ng-container>\r\n\r\n      <div class=\"span-12\" *ngIf=\"dmogSharing\">\r\n        <div class=\"double-column\" style=\"margin: 0\">\r\n          <label class=\"span-6\" for=\"\">Available DMOGs</label>\r\n          <label class=\"span-6\" for=\"\">Selected DMOGs</label>\r\n        </div>\r\n        \r\n        <app-association\r\n          [items]=\"allDmogs\"\r\n          [associatedItems]=\"associatedSharedItems\"\r\n          [displayWith]=\"displayShare\"\r\n          [uniqueWith]=\"uniqueShare\"\r\n          [checkAll]=\"false\"\r\n          checkBy=\"selected\"\r\n          disableBy=\"disabled\"\r\n          [shouldAdd]=\"shouldAdd\"\r\n          (add)=\"onShareAdd($event)\"\r\n          (remove)=\"onShareRemove($event)\"\r\n          (reorder)=\"onShareReorder($event)\"\r\n        >\r\n        </app-association>\r\n      </div>\r\n\r\n    </div>\r\n  \r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!parent.root.published\">\r\n        <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newObject\">Update</ng-container> \r\n      </button>\r\n    </div>\r\n  \r\n  </form>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { KeyValue, Share } from '@app/admin/BM/models';\r\nimport { enumToList } from '@app/admin/wf/wfd/util/helpers';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { of, tap } from 'rxjs';\r\nimport { BM, BMOG, ObjectControl } from '../../classes';\r\nimport { canvasType, EnableTLCorner, IBMOG, ObjectDetail, Status } from '../../models';\r\nimport { DataModelerApiService } from '../../services/data-modeler-api.service';\r\nimport { checkNameValidatorSync } from '../../validators';\r\nimport { NgIf, NgFor, AsyncPipe } from '@angular/common';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\n\r\n@Component({\r\n    selector: 'app-bmog-detail',\r\n    templateUrl: './bmog-detail.component.html',\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgFor,\r\n        ObjectControlComponent,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class BmogDetailComponent extends ObjectDetail<IBMOG | BMOG, BM> {\r\n  public title = 'Business Model Object Group';\r\n  public canvasTypeList = enumToList(canvasType);\r\n  private status = enumToList(Status);\r\n  \r\n  private enableTLValues = enumToList(EnableTLCorner);\r\n  public controls: ObjectControl<IBMOG>[];\r\n  private availableBmoToShare = [];\r\n  allBMOs = [];\r\n  associatedSharedItems = [];\r\n  sharedChanged = false;\r\n\r\n  constructor(\r\n    ref: NgbActiveModal, \r\n    fb: UntypedFormBuilder, \r\n    private readonly api: DataModelerApiService,\r\n    private readonly toastr: ToastrService,\r\n    ) {\r\n    super(ref, fb);\r\n  }\r\n  \r\n  protected beforeFormInit(): void {\r\n    this.allBMOs = this.getSharedItems() || [];\r\n    this.associatedSharedItems = this.allBMOs.filter(item => item.selected);\r\n  }\r\n\r\n  initForm() {\r\n    const validators = [...NAME_VALIDATORS]\r\n    // if (this.newObject) {\r\n    //   validators.push(checkNameValidatorSync(Object.values(this.parent.childrenMap), 'Name'));\r\n    // };\r\n    this.form = this.fb.group({\r\n      Name: [this.data.Name, {validators, updateOn: 'blur'}],\r\n      Version: [this.data.Version || this.parent.Version, [Validators.required]],\r\n      CanvasType: [this.canvasTypeList.find(t => t.key === this.data.CanvasType), [Validators.required]],\r\n      Status: [this.status.find(s => s.key == this.data.Status), [Validators.required]],\r\n      LongDesc: [this.data.LongDesc],\r\n      EnableTLCorner : [this.enableTLValues?.find(s =>s?.key == this.data?.EnableTLCorner)?.key , [Validators.required]]\r\n   });\r\n\r\n    this.controls = [\r\n      new ObjectControl({name: 'Name', label: 'Name', readonly: !this.newObject, required: true}),\r\n      new ObjectControl({name: 'Version', label: 'Version', readonly: true}),\r\n      new ObjectControl({\r\n        name: 'CanvasType', label: 'Canvas Type', type: 'dropdown',\r\n        required: true, options: of(this.canvasTypeList),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'Status', label: 'Status', type: 'dropdown', required: true,  \r\n        options: of(this.status),\r\n      }),\r\n      new ObjectControl({name: 'LongDesc', label: 'Long Description', type: 'rich', class: 'span-12'}),\r\n      new ObjectControl({name:'EnableTLCorner', label:'Enable Top Left Corner', type:'radio', required: true,  \r\n      options: of(this.enableTLValues)})\r\n    ];\r\n\r\n    this.api.GetAvailableBmoToShare(this.data.BMOGID, this.parent.BMId).subscribe(x=>{\r\n      this.availableBmoToShare= x;\r\n      const avBmos = this.getAllBmo();\r\n      this.allBMOs= avBmos;\r\n    });\r\n\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => Start\r\n    this.form.get(\"Name\").valueChanges.subscribe(name=>{\r\n      if(this.newObject && name && name.length>=4  && !this.form.get('Name').hasError(\"maxlength\")\r\n      && !this.form.get('Name').hasError(\"pattern\")){\r\n        this.api.checkNameValidity('bmog',0,name,this.parent.root.Version,this.parent.root.ProcessName).subscribe(IsExits=>{\r\n          if(IsExits){\r\n              const nameControl = this.form.get('Name');\r\n              nameControl.setErrors({\r\n              nameExists: true,\r\n              message: 'Duplicate name'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => End\r\n    this.form.get(\"CanvasType\").valueChanges.subscribe(CT=>{\r\n      if(CT[\"key\"].length>0){\r\n        this.api.checkCanvasType(\r\n          'bmog', \r\n          this.data.BMOGID ?? 0, // Replaced ternary with nullish coalescing\r\n          CT[\"key\"], \r\n          this.parent.root.Version, \r\n          this.parent.root.ProcessName\r\n        ).subscribe(IsExits => {\r\n          if (IsExits) {\r\n            const nameControl = this.form.get('CanvasType');\r\n            nameControl?.setErrors({\r\n              nameExists: true,\r\n              message: 'Duplicate Canvas Type'\r\n            });\r\n          }\r\n        });        \r\n    }\r\n    if(CT?.key==='Form'){\r\n      const nameControl = this.form.get('EnableTLCorner');\r\n       nameControl.setErrors(null);\r\n       nameControl.setValue(null);\r\n      nameControl.disable();\r\n    }else{\r\n      const nameControl = this.form.get('EnableTLCorner');\r\n      nameControl.enable();\r\n    }\r\n    })\r\n    if(this.form.value.CanvasType !=null){\r\n      if(this.form.value.CanvasType.key==='Form'){\r\n       const nameControl = this.form.get('EnableTLCorner');\r\n          nameControl.setErrors(null);\r\n         nameControl.disable();\r\n      }\r\n     }\r\n     else\r\n     {\r\n       const nameControl = this.form.get('EnableTLCorner');\r\n          nameControl.setErrors(null);\r\n         nameControl.disable();\r\n     }\r\n      this.form.get(\"CanvasType\").valueChanges.subscribe(name=>{\r\n       if(name?.key==='Form'){\r\n         const nameControl = this.form.get('EnableTLCorner');\r\n          nameControl.setErrors(null);\r\n          nameControl.setValue(null);\r\n         nameControl.disable();\r\n       }else{\r\n         const nameControl = this.form.get('EnableTLCorner');\r\n         nameControl.enable();\r\n       }\r\n      })\r\n\r\n  }\r\n\r\n  private getSharedItems() {\r\n    let list: KeyValue[] = [];\r\n    Object.values(this.parent.childrenMap).forEach(bmog => {\r\n      Object.values(bmog.childrenMap).filter(bmo => !bmo.shared).forEach(bmo => {\r\n        const selected = this.data?.Share?.some((item) => item.value === bmo.GUID) || this.data?.Children?.some(guid => bmo.GUID === guid)\r\n        // parent is responsible for grouping items\r\n        // parent id is used later on submit and replaces bmo id in key property\r\n        const item = {key: bmo.BMOID.toString(),selected,disabled: selected, GUID: bmo.GUID , type:bmo.BmoType,\r\n          value:`${bmo.DisplayName} (${bmo.Name})`, \r\n          parent: bmog.Name, parentId: bmog.id};\r\n        list.push(item);\r\n      });\r\n    });\r\n    return list;\r\n  }\r\n\r\n  private getAllBmo() {\r\n    let list: KeyValue[] = [];\r\n    const share = this.data.Share || [];\r\n       \r\n    this.availableBmoToShare.forEach((bmo, i) =>{\r\n      const check = this.data?.Share?.some((item) => item.value === bmo.bmoGuid) || this.data?.Children?.some(guid => bmo.bmoGuid === guid)\r\n      const item = {\r\n        key: bmo.bmoid,\r\n        GUID:bmo.bmoGuid,\r\n        value: bmo.NAME,              \r\n        parent: this.data.Name, \r\n        parentId: this.data.id,\r\n        selected: check,\r\n        disabled: check,\r\n        type:bmo.BMOTYP,\r\n      };   \r\n      \r\n      list.push(item);\r\n    });\r\n\r\n    return list;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const val = this.form.value;\r\n      const payload: IBMOG = {\r\n        ...val,\r\n        Parent: this.parent.id,\r\n        BMOGID: this.data.BMOGID,\r\n        Children: this.data?.Children || [],\r\n        id: this.data?.id || val.Name,\r\n        CanvasType: val.CanvasType?.key || val.CanvasType,\r\n        Status: val.Status?.key || val.Status,\r\n        enableTLCorner : val.enableTLValues?.key, \r\n      };\r\n      const shared = {         \r\n        bmogId: this.data.BMOGID || '-1',\r\n        bmoIds: this.sharedChanged ? this.associatedSharedItems.map(({ key }) => key).toString() : '-1',\r\n      };\r\n      this.output.emit(payload);\r\n      this.ref.close({payload, shared});\r\n    }\r\n  }\r\n  \r\n  \r\n  displayShare = (item: SharedItem) => item.value;\r\n  uniqueShare = (item: SharedItem) => item.value + item.key;\r\n\r\n  shouldAdd = (item: SharedItem) =>{\r\n    const val = this.form.value;\r\n    if(val.CanvasType?.key==undefined){\r\n      this.toastr.warning('Please select canvas type before shared');  \r\n      return of(false);\r\n    }\r\n    if(val.CanvasType?.key==='Form' && item.type!=\"Forms\"){\r\n      this.toastr.warning('Only form type bmo can be shared in case of form type bmog');  \r\n      return of(false);\r\n    }\r\n    \r\n   return this.api.checkBmoInBmog(item.key.toString(), (this.data.BMOGID || -1).toString()).pipe(\r\n      tap((success) => {\r\n        if (!success) {\r\n          this.toastr.warning('This bmo cannot be shared');\r\n        }\r\n      })\r\n   );\r\n  };\r\n\r\n  onShareAdd(item: SharedItem) {\r\n    this.associatedSharedItems = this.associatedSharedItems.concat(item);\r\n    this.sharedChanged = true;\r\n    this.refreshAllBMOs();\r\n  }\r\n  onShareRemove(item: SharedItem) {\r\n    this.associatedSharedItems = this.associatedSharedItems.filter((bmo) => bmo.key !== item.key.toString());\r\n    this.sharedChanged = true;\r\n    this.refreshAllBMOs();\r\n  }  \r\n\r\n  onShareReorder = (items: SharedItem[]) => {\r\n    this.associatedSharedItems = items;\r\n    this.sharedChanged = true;\r\n    this.refreshAllBMOs();\r\n  };  \r\n\r\n  refreshAllBMOs = () => {\r\n    this.allBMOs.forEach((dmog) => {\r\n      const rightCheck = this.associatedSharedItems.some((item) => item.GUID === dmog.GUID);      \r\n      dmog.selected = rightCheck;\r\n      dmog.disabled = rightCheck;\r\n    });\r\n    this.allBMOs = this.allBMOs;\r\n  };\r\n\r\n}\r\ntype SharedItem = KeyValue & { selected?: boolean; disabled?: boolean; dmogId: number; bmogId: number, parentId: number,type:string };", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newObject\">New {{title}}</h2>\r\n    <h2 *ngIf=\"!newObject\">{{title}} Details</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  \r\n  <form [formGroup]=\"form\">\r\n    <div class=\"double-column\">\r\n      <ng-container *ngFor=\"let control of controls\">\r\n        <app-object-control \r\n          *ngIf=\"control.show | async\"\r\n          [parentForm]=\"form\" \r\n          [config]=\"control\"\r\n          [class]=\"control.class\" >\r\n        </app-object-control>\r\n      </ng-container>\r\n      <div class=\"span-12\">\r\n        <div class=\"double-column\" style=\"margin: 0\">\r\n          <label class=\"span-6\" for=\"\">Available BMOs</label>\r\n          <label class=\"span-6\" for=\"\">Selected BMOs</label>\r\n        </div>\r\n        <app-association\r\n          [items]=\"allBMOs\"\r\n          [associatedItems]=\"associatedSharedItems\"\r\n          [displayWith]=\"displayShare\"\r\n          [uniqueWith]=\"uniqueShare\"\r\n          [checkAll]=\"false\"\r\n          checkBy=\"selected\"\r\n          disableBy=\"disabled\"\r\n          [shouldAdd]=\"shouldAdd\"\r\n          (add)=\"onShareAdd($event)\"\r\n          (remove)=\"onShareRemove($event)\"\r\n          (reorder)=\"onShareReorder($event)\"\r\n        >\r\n        </app-association>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!parent.published\">\r\n        <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newObject\">Update</ng-container> \r\n      </button>\r\n    </div>\r\n  \r\n  </form>\r\n</div>\r\n\r\n", "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { BM, ObjectClass } from '../../classes';\r\nimport { NgFor, NgIf } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-dm-breadcrumbs',\r\n    templateUrl: './dm-breadcrumbs.component.html',\r\n    standalone: true,\r\n    imports: [NgFor, NgIf],\r\n})\r\nexport class DmBreadcrumbsComponent {\r\n  @Output() readonly select = new EventEmitter<ObjectClass>();\r\n  @Input()\r\n  set bm(bm: BM) {\r\n    this._bm = bm;\r\n  }\r\n  get bm() {\r\n    return this._bm;\r\n  }\r\n\r\n  private _bm: BM;\r\n}\r\n", "<nav aria-label=\"breadcrumb\">\r\n\t<ul class=\"breadcrumb\" style=\"margin: 0; padding-top: 0; padding-bottom: 0; font-size: 0.8rem; gap: 10px;\">\r\n\t\t<ng-container *ngFor=\"let obj of [bm, bm.selectedBMOG, bm.selectedBMO, bm.selectedDMOG]\">\r\n\t\t\t<li class=\"breadcrumb-item\" *ngIf=\"obj\" (click)=\"select.emit(obj)\">\r\n\t\t\t\t<a class=\"link\">{{obj.DisplayName || obj.Name}}</a>\r\n\t\t\t</li>\r\n\t\t</ng-container>\r\n\t</ul>\r\n</nav>", "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { UtilService } from '@app/shared/services/util.service';\r\n\r\n@Component({\r\n    selector: 'app-dm-header',\r\n    template: `\r\n    <header>\r\n      <img [src]=\"imgUrl\" alt=\"C2M Logo\" style=\"height: 45px\" />\r\n      <span>Data Modeler</span>\r\n    </header>\r\n  `,\r\n    styles: [`\r\n      header {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 10px;\r\n      color: #fff;\r\n      background: #aaadaa;\r\n      text-transform: uppercase;\r\n      padding: 0.2rem 1rem;\r\n      display:none;\r\n    }\r\n  `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true\r\n})\r\nexport class DmHeaderComponent {\r\n  readonly imgUrl = UtilService.getUrlForImage('/assets/styles/images/datamodeler-icon.png');\r\n}\r\n", "import { Component, OnInit, ChangeDetectionStrategy, Output, EventEmitter, Input } from '@angular/core';\r\nimport { NgbDropdown, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgIf, NgFor } from '@angular/common';\r\n\r\ntype Mode = 'Edit' | 'Published';\r\n\r\n@Component({\r\n    selector: 'app-dm-menu',\r\n    templateUrl: './dm-menu.component.html',\r\n    styleUrls: ['./dm-menu.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true,\r\n    imports: [NgbDropdown, NgbDropdownToggle, NgIf, NgbDropdownMenu, NgFor, NgbDropdownItem]\r\n})\r\nexport class DmMenuComponent {\r\n  @Output() readonly newVersion = new EventEmitter();\r\n  @Output() readonly generateXml = new EventEmitter();\r\n  @Output() readonly modeChange = new EventEmitter<Mode>();\r\n\r\n  @Input()\r\n  set mode(mode: Mode) {\r\n    this._mode = mode;\r\n  }\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n  \r\n  private _mode: Mode;\r\n\r\n}\r\n", "<div class=\"header-row col-sm-12 pt-2 pb-2\">\r\n\t<button class=\"btn btn-outline-white btn-sm\" (click)=\"newVersion.emit()\"><i class=\"fas fa-code-branch\" ></i> New Version</button>\r\n\t<button class=\"btn btn-outline-white btn-sm\" (click)=\"generateXml.emit()\"><i class=\"fas fa-code\"></i> Generate JSON</button>\r\n\t<div class=\"mode\" ngbDropdown>\r\n\t<button class=\"btn btn-sm\" [class]=\"mode === 'Edit' ? 'btn-outline-white' : 'btn-primary'\" ngbDropdownToggle>\r\n\t\t<i class=\"fas fa-edit\" *ngIf=\"mode === 'Edit'\"></i>\r\n\t\t<i class=\"fas fa-lock\" *ngIf=\"mode === 'Published'\"></i>\r\n\t\t{{mode}}\r\n\t</button>\r\n\t<ul ngbDropdownMenu>\r\n\t\t<li ngbDropdownItem *ngFor=\"let mode of ['Edit', 'Published']\" (click)=\"modeChange.emit(mode)\">\r\n\t\t{{mode}}\r\n\t\t</li>\r\n\t</ul>\r\n\t</div>\r\n</div>\r\n", "import { Component, Input, } from '@angular/core';\r\nimport { KeyValue, NgFor, NgIf, AsyncPipe } from '@angular/common'\r\nimport { UntypedFormArray, UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { ListColumnType, ListConfig } from '@app/admin/lib/list/list-config.model';\r\nimport { arrayToList, enumToList, primitiveArrayToList, toFormArray, toFormGroup } from '@app/admin/wf/wfd/util/helpers';\r\nimport { WF } from '@lib/models';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { intersectionWith } from 'lodash';\r\nimport { BehaviorSubject, of } from 'rxjs';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { DMComponent, ObjectControl } from '../../classes';\r\nimport { ActionState, ConditionArea, ConditionAreaKey, DMOUI, ICondition, IConditionBody, ObjectDetail, Status } from '../../models';\r\nimport { DataModelerApiService } from '../../services/data-modeler-api.service';\r\nimport { checkNameValidatorSync } from '../../validators';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { MatExpansionPanel, MatExpansionPanelHeader } from '@angular/material/expansion';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\n@Component({\r\n    selector: 'app-dmo-condition',\r\n    templateUrl: './dmo-condition.component.html',\r\n    styleUrls: ['./dmo-condition.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        MatExpansionPanel,\r\n        MatExpansionPanelHeader,\r\n        NgFor,\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        ObjectControlComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class DmoConditionComponent extends ObjectDetail<IConditionBody, DMComponent> {\r\n  @Input() uiData: DMOUI;\r\n  @Input() readonly = false;\r\n  public newObject = true;\r\n  public controls: ObjectControl<IConditionBody>[];\r\n  public conditions: IConditionBody[] = [];\r\n  private readonly deletedConditions: IConditionBody[] = [];\r\n  private dmoList = [];\r\n  private readonly status = enumToList(Status);\r\n  private readonly availableItems$ = new BehaviorSubject<KeyValue<string, string>[]>([]);\r\n  private conditionsConfig: ListConfig<ICondition>;\r\n  private editedCondition: IConditionBody;\r\n  private allConditions: IConditionBody[] = [];\r\n  private bmoConditionItems = [];\r\n  private dmogConditionItems = [];\r\n  private dmoConditionItems = [];\r\n  private triggersConditionItems: any[];\r\n  readonly #areas: KeyValue<WF.ConditionArea, string>[] = [\r\n    { key: 'BusinessModelObject', value: 'Section' },\r\n    { key: 'DataModelGroup', value: 'Card' },\r\n    { key: 'DataModelObject', value: 'Data Model Object' },\r\n    { key: 'Trigger', value: 'Trigger' },\r\n  ];\r\n\r\n  constructor(ref: NgbActiveModal, fb: UntypedFormBuilder, private readonly api: DataModelerApiService) {\r\n    super(ref, fb);\r\n  }\r\n\r\n  beforeFormInit() {\r\n    this.conditions = [...this.parent.conditions];\r\n    this.dmoList = this.parent.dmoListByType().map((item) => ({...item, disabled: (item.key === this.parent.guid)}));\r\n    this.createConditionsConfig();\r\n    this.generateConditionAreaItems();\r\n  }\r\n\r\n  initForm() {\r\n    const validators = [...NAME_VALIDATORS];\r\n    // if (this.newObject) {\r\n    //   validators.push(checkNameValidatorSync(this.allConditions, 'Name'));\r\n    // }\r\n    this.form = this.fb.group({\r\n      Name: ['', { validators, updateOn: 'blur' }],\r\n      Version: [this.parent.parent.Version, [Validators.required]],\r\n      Status: [this.status[0]],\r\n      ShortDesc: ['', [Validators.required]],\r\n      ExecuteElse: [true],\r\n      Conditions: toFormArray([], { addCheckbox: true }),\r\n      ConditionArea: this.fb.group({\r\n        key: [''],\r\n        value: [[]],\r\n      }),\r\n      Action: this.fb.group({\r\n        Enabled: '',\r\n        Mandatory: '',\r\n        Visible: [],\r\n      }),\r\n    });\r\n    this.defaultCondition();\r\n\r\n    this.controls = [\r\n      new ObjectControl({ name: 'Name', label: 'Condition Name', required: true, readonly: !this.newObject }),\r\n      new ObjectControl({ name: 'Version', readonly: true, required: true }),\r\n      new ObjectControl({ name: 'Status', options: of(this.status), type: 'dropdown' }),\r\n      new ObjectControl({ name: 'ShortDesc', label: 'Short Description', required: true }),\r\n      new ObjectControl({ name: 'ExecuteElse', label: 'Execute else?', type: 'switch' }),\r\n      new ObjectControl({ name: 'Conditions', type: 'list', config: this.conditionsConfig, class: 'span-12' }),\r\n      new ObjectControl({\r\n        name: 'key' as any,\r\n        label: 'Condition Area',\r\n        type: 'radio',\r\n        group: this.f.ConditionArea,\r\n        options: of(this.#areas),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'value' as any,\r\n        label: 'Available Items',\r\n        type: 'dropdown',\r\n        group: this.f.ConditionArea,\r\n        options: this.availableItems$,\r\n        multiple: true,\r\n        groupOptionsBy: 'parent',\r\n      }),\r\n      new ObjectControl<any>({\r\n        name: 'Enabled',\r\n        type: 'radio',\r\n        class: 'span-4',\r\n        options: of([ActionState[0], ActionState[2], ActionState[1]]),\r\n        group: this.f.Action,\r\n      }),\r\n      new ObjectControl<any>({\r\n        name: 'Mandatory',\r\n        type: 'radio',\r\n        class: 'span-4',\r\n        options: of([ActionState[0], ActionState[2], ActionState[1]]),\r\n        group: this.f.Action,\r\n      }),\r\n      new ObjectControl<any>({\r\n        name: 'Visible',\r\n        type: 'radio',\r\n        class: 'span-4',\r\n        options: of([ActionState[0], ActionState[2], ActionState[1]]),\r\n        group: this.f.Action,\r\n      }),\r\n    ];\r\n\r\n  this.form.get(\"Name\").valueChanges.subscribe(name=>{\r\n    if (this.newObject && name && name.length>=4 && !this.form.get('Name').hasError(\"maxlength\")\r\n        && !this.form.get('Name').hasError(\"pattern\")) {\r\n      this.api.checkNameValidity('condition',0,name,this.parent.parent.Version,this.parent.parent.root.ProcessName).subscribe(IsExits=>{\r\n        if(IsExits){\r\n          const nameControl = this.form.get('Name');\r\n          nameControl.setErrors({\r\n            nameExists: true,\r\n            message: 'Duplicate name'\r\n          });\r\n        }\r\n      });\r\n    }\r\n })\r\n\r\n  }\r\n  afterFormInit() {\r\n    this.f.ConditionArea.get('key')\r\n      .valueChanges.pipe(takeWhile((_) => this.componentActive))\r\n      .subscribe((val) => this.conditionAreaHandler(val));\r\n  }\r\n\r\n  public editCondition(condition: IConditionBody) {\r\n    this.editedCondition = condition;\r\n    this.submitted = false;\r\n    this.newObject = false;\r\n    if (this.controls) {\r\n      this.controls[0].readonly = !this.newObject;\r\n    }\r\n\r\n    const selfAdded = condition.Conditions.some(cond => cond.Dmo === this.parent.guid);\r\n    const dmo = this.dmoList.find(dmo => dmo.key === this.parent.guid);\r\n    dmo.disabled = selfAdded;\r\n\r\n    const validators = [...NAME_VALIDATORS]\r\n    this.f.Name.clearValidators();\r\n    this.f.Name.setValidators(validators);\r\n    this.form.patchValue({\r\n      ...condition,\r\n      ConditionArea: {\r\n        ...condition.ConditionArea,\r\n        value: this.parseConditionArea(condition.ConditionArea),\r\n      },\r\n      Status: this.status.find((s) => s.key == condition.Status),\r\n      ExecuteElse:condition.ExecuteElse==\"0\" ? false : true,\r\n      Action: {\r\n        Enabled: ActionState[condition.Action[0].value || 2],\r\n        Mandatory: ActionState[condition.Action[1].value || 2],\r\n        Visible: ActionState[condition.Action[2].value || 2],\r\n      },\r\n    });\r\n    (this.f.Conditions as UntypedFormArray).clear();\r\n    condition.Conditions\r\n      .map(cond => ({...cond, Dmo: {key: cond.Dmo, value: this.dmoList.find(dmo => dmo.key === cond.Dmo).value}}))\r\n      .map(cond => toFormGroup(cond, {addCheckbox: cond.Dmo.key !== this.parent.guid, deletable: cond.Dmo.key !== this.parent.guid}))\r\n      .forEach(group => (this.f.Conditions as UntypedFormArray).push(group))\r\n    if (!selfAdded) {\r\n      this.defaultCondition();\r\n    }\r\n\r\n    this.form.updateValueAndValidity();\r\n  }\r\n\r\n  private defaultCondition() {\r\n    const first: Partial<ICondition> = {\r\n      Dmo: {key: this.parent.guid, value: this.parent.label, parent: this.parent.parent.DisplayName} as any,\r\n      Exp: 'equal',\r\n      Logical: 'AND',\r\n      Label: this.parent.dmoName,\r\n      Value: '',\r\n    };\r\n    (this.f.Conditions as UntypedFormArray).push(toFormGroup(first, {addCheckbox: false, deletable: false}));\r\n  }\r\n\r\n  public deleteCondition(i: number) {\r\n    this.deletedConditions.push(this.conditions[i]);\r\n    this.conditions = this.conditions.filter((_, idx) => idx !== i);\r\n  }\r\n\r\n  public updateCondition() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const f = this.form.value;\r\n      const condition: IConditionBody = {\r\n        ...f,\r\n        Action: Object.entries(f.Action).map(([key, v]) => ({ key, value: v ? ActionState[v as string].toString() : ActionState.NA })),\r\n        Status: f.Status?.key || f.Status || 0,\r\n        Conditions: this.f.Conditions.value.map(cond => ({...cond, Dmo: cond.Dmo?.key || cond.Dmo})),\r\n        ExecuteElse: +f.ExecuteElse,\r\n        ConditionArea: {\r\n          key: f.ConditionArea.key || '',\r\n          value: this.sanitizeConditionArea(f.ConditionArea.value || []),\r\n        },\r\n      };\r\n      const idx = this.conditions.findIndex((c) => c.Name === condition.Name);\r\n      if (idx !== -1) this.conditions[idx] = condition;\r\n      else this.conditions.push(condition);\r\n      this.onReset();\r\n    }\r\n  }\r\n\r\n  private generateConditionAreaItems() {\r\n    const bm = this.parent.parent.root;\r\n    const { selectedBMO, selectedDMOG } = bm;\r\n    Object.values(bm.childrenMap).forEach((bmog) => {\r\n      Object.values(bmog.childrenMap)\r\n        .filter((bmo) => !bmo.shared)\r\n        .forEach((bmo) => {\r\n          if (bmo.id !== selectedBMO.id) {\r\n            const bmoItem = { key: bmo.id, value: bmo.DisplayName, parent: bmog.Name, parentId: bmog.id };\r\n            this.bmoConditionItems.push(bmoItem);\r\n          }\r\n          Object.values(bmo.childrenMap)\r\n            .filter((dmog) => !dmog.shared)\r\n            .forEach((dmog) => {\r\n              if (dmog.id !== selectedDMOG.id) {\r\n                const dmogItem = { key: dmog.id, value: dmog.DisplayName, parent: `${bmog.Name} / ${bmo.DisplayName}`, parentId: bmo.id };\r\n                this.dmogConditionItems.push(dmogItem);\r\n              }\r\n              Object.values(dmog.childrenMap).forEach((dmo) => {\r\n                const dmoItem = {\r\n                  key: dmo.guid,\r\n                  value: dmo.label,\r\n                  parent: `${bmog.Name} / ${bmo.DisplayName} / ${dmog.DisplayName}`,\r\n                  parentId: dmog.id,\r\n                };\r\n                this.dmoConditionItems.push(dmoItem);\r\n                this.allConditions.push(...dmo.conditions);\r\n              });\r\n            });\r\n        });\r\n    });\r\n  }\r\n\r\n  private conditionAreaHandler(val: ConditionAreaKey) {\r\n    let list: KeyValue<string, string>[] = [];\r\n    this.f.ConditionArea.get('value').reset([]);\r\n    if (val == 'BusinessModelObject') {\r\n      list = this.bmoConditionItems;\r\n    } else if (val === 'DataModelGroup') {\r\n      list = this.dmogConditionItems;\r\n    } else if (val === 'DataModelObject') {\r\n      list = this.dmoConditionItems;\r\n    } else if (val === 'Trigger') {\r\n      if (!this.triggersConditionItems) {\r\n        this.api.getTriggers(this.parent.parent.root.ProcessName).subscribe((res) => {\r\n          this.triggersConditionItems = arrayToList(res, 'Key', 'Value');\r\n\r\n          this.availableItems$.next(this.triggersConditionItems);\r\n          this.f.ConditionArea.get('value').patchValue(this.parseConditionArea(this.editedCondition?.ConditionArea));\r\n        });\r\n      } else {\r\n        this.availableItems$.next(this.triggersConditionItems);\r\n      }\r\n      return;\r\n    }\r\n    this.availableItems$.next(list);\r\n  }\r\n\r\n  public onReset() {\r\n    this.form.reset({ Version: this.parent.parent.Version });\r\n    if (this.controls) {\r\n      this.controls[0].readonly = false;\r\n    }\r\n    (this.f.Conditions as UntypedFormArray).clear();\r\n    this.defaultCondition();\r\n    this.newObject = true;\r\n  }\r\n\r\n  onSubmit() {\r\n    const bm = this.parent.parent.root;\r\n    const payload = {\r\n      BMName: bm.Name,\r\n      BMOGName: bm.selectedBMOG.Name,\r\n      BMOName: bm.selectedBMO.Name,\r\n      DMOGName: bm.selectedDMOG.Name,\r\n      CanvasType: bm.selectedBMOG.CanvasType,\r\n      ProcessName: bm.ProcessName,\r\n      Version: bm.Version,\r\n      dmo: bm.selectedDMOG.formData,\r\n      dmoCondition: {\r\n        [this.parent.guid]: {\r\n          Condition: this.conditions.map((obj) => {\r\n            return {\r\n              ...obj,\r\n              Conditions: this.sanitizeConditions(obj),\r\n            };\r\n          }),\r\n        },\r\n      },\r\n    };\r\n    const res = { payload, deletedConditions: this.deletedConditions };\r\n    this.output.emit(res as any);\r\n    this.ref.close(res);\r\n  }\r\n\r\n  private sanitizeConditions = (body) => {\r\n    return body.Conditions.map((c) => {\r\n      return {\r\n        ...c,\r\n        Dmo: c.Dmo?.key || c.Dmo,\r\n        Exp: c.Exp?.key || c.Exp,\r\n        Logical: c.Logical?.key || c.Logical,\r\n        Value: c.Dmo?.Value || c.Value,\r\n      };\r\n    });\r\n  };\r\n\r\n  private sanitizeConditionArea(items: any[]) {\r\n    return items.map((area) => ({ Key: area.parentId, Value: area.key }));\r\n  }\r\n\r\n  private parseConditionArea(area: ConditionArea) {\r\n    if (!area) return [];\r\n    const selectedList = (list: any[]) => intersectionWith(list, area.value, (a, b) => a.key === b.Value);\r\n    switch (area.key) {\r\n      case 'BusinessModelObject':\r\n        return selectedList(this.bmoConditionItems);\r\n      case 'DataModelGroup':\r\n        return selectedList(this.dmogConditionItems);\r\n      case 'DataModelObject':\r\n        return selectedList(this.dmoConditionItems);\r\n      case 'Trigger':\r\n        return selectedList(this.triggersConditionItems);\r\n      default: return [];\r\n    }\r\n  }\r\n\r\n  private createConditionsConfig() {\r\n    const operators = ['AND', 'OR'];\r\n    const expressions = ['equal', 'not equal'];\r\n    this.conditionsConfig = {\r\n      columns: [\r\n        { key: 'Dmo', displayValue: 'Data Model Object', type: ListColumnType.Dropdown, validators: [Validators.required] },\r\n        { key: 'Exp', displayValue: 'Expression', type: ListColumnType.Dropdown, validators: [Validators.required] },\r\n        { key: 'Value', displayValue: 'Value', validators: [Validators.required] },\r\n        { key: 'Logical', displayValue: 'Operator', type: ListColumnType.Dropdown },\r\n      ],\r\n      defaultValues: {\r\n        Exp: primitiveArrayToList(expressions),\r\n        Logical: primitiveArrayToList(operators),\r\n        Dmo: this.dmoList,\r\n      },\r\n      actions: { add: true, edit: true, delete: true },\r\n      checkbox: true,\r\n    };\r\n  }\r\n}\r\n", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2><i [class]=\"uiData.class\" style=\"margin-right: 5px\"> </i>{{ uiData.name }} Conditions</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  \r\n  <mat-expansion-panel [expanded]=\"false\">\r\n    <mat-expansion-panel-header>\r\n    Conditions\r\n    </mat-expansion-panel-header>\r\n    <table class=\"basicTable stripped table-bordered\">\r\n      <thead >\r\n        <tr class=\"span-row\">\r\n          <th>\r\n            <span>Condition</span>\r\n          </th>\r\n          <th style=\"width:100px;\">\r\n            <span>Status</span>\r\n          </th>\r\n          <th>\r\n            <span>Sort Description</span>\r\n          </th>\r\n          <th class=\"text-center\" style=\"width: 60px;\">\r\n            <span>Actions</span>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          <tr *ngFor=\"let condition of conditions; let i = index\">\r\n            <td><span>{{condition.Name}}</span></td>\r\n            <td><span>{{condition.Status === '1'?'Active' : 'Inactive'}}</span></td>\r\n            <td><span>{{condition.ShortDesc}}</span></td>\r\n            <td class=\"d-flex align-items-center justify-content-around\">\r\n              <a title=\"Open\" class=\"save-btn\" (click)=\"editCondition(condition); formPanel.open()\"\r\n                style=\"color:#4C9E00;cursor: pointer;\"><i class=\"fas fa-pencil-alt\"></i>\r\n              </a>\r\n              <a title=\"Delete\" class=\"save-btn\" (click)=\"deleteCondition(i)\" *ngIf=\"!readonly\"\r\n                style=\"color:#4C9E00;cursor: pointer;\"><i class=\"far fa-trash-alt\"></i>\r\n              </a>\r\n            </td>\r\n          </tr>\r\n      </tbody>\r\n    </table>\r\n  </mat-expansion-panel>\r\n  \r\n  <mat-expansion-panel #formPanel [hidden]=\"!conditions.length && readonly\">\r\n    <mat-expansion-panel-header>\r\n    {{readonly ? 'Select Condition' : newObject ? 'Create Condition' : 'Update Condition'}}\r\n    </mat-expansion-panel-header>\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"double-column\">\r\n        <ng-container *ngFor=\"let control of controls\">\r\n          <app-object-control [parentForm]=\"form\" [config]=\"control\" *ngIf=\"control.show | async\"></app-object-control>\r\n        </ng-container> \r\n      </div>\r\n      <div class=\"actions\">\r\n        <button class=\"btn btn-light btn-sm\" (click)=\"onReset()\">Cancel</button>\r\n        <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"updateCondition()\" *ngIf=\"!readonly\">\r\n          <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n          <ng-container *ngIf=\"!newObject\">Update</ng-container>\r\n        </button>\r\n      </div>\r\n      \r\n    </form>\r\n  </mat-expansion-panel>\r\n  \r\n  <div class=\"popup__actions\">\r\n    <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n    <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!readonly\">Save</button>\r\n  </div>\r\n</div>", "import { Component, HostListener, Input } from '@angular/core';\r\nimport { AbstractControl, UntypedFormBuilder, FormGroup, ValidatorFn, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Data } from '@angular/router';\r\nimport { KeyValue } from '@app/admin/BM/models';\r\nimport { ListConfig } from '@app/admin/lib/list/list-config.model';\r\nimport {\r\n  arrayToList,\r\n  enumToList,\r\n  KeyValueList,\r\n  listToTypeArray,\r\n  primitiveArrayToList,\r\n  toFormArray,\r\n} from '@app/admin/wf/wfd/util/helpers';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { hide } from '@popperjs/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  skipWhile,\r\n  startWith,\r\n  takeWhile,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { DMComponent, DMOG, ObjectControl } from '../../classes';\r\nimport {\r\n  ASBMapping,\r\n  CustomDataSource,\r\n  DMOType,\r\n  DMOUI,\r\n  IDMComponent,\r\n  JsonData,\r\n  ObjectDetail,\r\n  RegExType,\r\n  StorageProvider,\r\n  Validate,\r\n  DataSource,\r\n  DMOStatus,\r\n} from '../../models';\r\nimport { DataModelerApiService } from '../../services/data-modeler-api.service';\r\nimport { checkNameValidatorSync } from '../../validators';\r\nimport { NgIf, NgTemplateOutlet, NgFor, AsyncPipe } from '@angular/common';\r\nimport { TabsComponent } from '../../../Shared/tabs/tabs.component';\r\nimport { TabComponent } from '../../../Shared/tab/tab.component';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\n\r\ntype FormType = IDMComponent & Data & Validate;\r\ntype DmoDetailControls = ObjectControl<FormType>[];\r\n@Component({\r\n    selector: 'app-dmo-detail',\r\n    templateUrl: './dmo-detail.component.html',\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        TabsComponent,\r\n        TabComponent,\r\n        NgTemplateOutlet,\r\n        NgFor,\r\n        ObjectControlComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class DmoDetailComponent extends ObjectDetail<IDMComponent, DMOG> {\r\n  @Input() uiData: DMOUI;\r\n  @Input() readonly = false;\r\n\r\n  public displayControls: DmoDetailControls;\r\n  public dataControls: DmoDetailControls;\r\n  public validationControls: DmoDetailControls;\r\n\r\n  public dataClass: DMComponent;\r\n\r\n  private colorCodes$: Observable<KeyValueList<string, string>>;\r\n  private roles$: Observable<KeyValueList<string, string>>;\r\n\r\n  private readonly dataSources = enumToList(DataSource);\r\n  private readonly customDataSources = enumToList(CustomDataSource);\r\n  private readonly regexTypes = enumToList(RegExType);\r\n  private readonly storageProviders = enumToList(StorageProvider);\r\n  private readonly status = enumToList(DMOStatus);\r\n  private uploadLimit = primitiveArrayToList([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\r\n  dropDownTypeDMO: Array<{ key: string; dmoName: string; value: string }> = [];\r\n  managedDDLTypedmo: Array<{ key: string; dmoName: string; value: string }> =\r\n    [];\r\n\r\n  private readonly keyValueConfig: ListConfig<KeyValue> = {\r\n    columns: [\r\n      {\r\n        key: 'value',\r\n        displayValue: 'Value',\r\n        validators: [Validators.required],\r\n      },\r\n    ],\r\n    checkbox: true,\r\n    actions: { add: true, edit: true, delete: true },\r\n  };\r\n\r\n  private readonly jsonConfig: ListConfig<JsonData> = {\r\n    columns: [\r\n      {\r\n        key: 'TextField',\r\n        displayValue: 'Text Field',\r\n        validators: [Validators.required],\r\n      },\r\n      {\r\n        key: 'ValueField',\r\n        displayValue: 'Value Field',\r\n        validators: [Validators.required],\r\n      },\r\n      {\r\n        key: 'ParentKey',\r\n        displayValue: 'Parent Key',\r\n        validators: [Validators.required],\r\n      },\r\n    ],\r\n    checkbox: true,\r\n    actions: { add: true, edit: true, delete: true },\r\n  };\r\n\r\n  private readonly mappingConfig: ListConfig<ASBMapping> = {\r\n    columns: [\r\n      { key: 'Name', displayValue: 'Name', validators: [Validators.required] },\r\n      { key: 'GUID', displayValue: 'GUID', validators: [Validators.required] },\r\n    ],\r\n    checkbox: true,\r\n    actions: { add: true, edit: true, delete: true },\r\n  };\r\n\r\n  private readonly depConfig: ListConfig<ASBMapping> = {\r\n    columns: [\r\n      { key: 'Name', displayValue: 'Name', validators: [Validators.required] },\r\n    ],\r\n    checkbox: true,\r\n    actions: { add: true, edit: true, delete: true },\r\n  };\r\n\r\n  constructor(\r\n    ref: NgbActiveModal,\r\n    fb: UntypedFormBuilder,\r\n    private readonly api: DataModelerApiService,\r\n    private readonly toastr: ToastrService\r\n  ) {\r\n    super(ref, fb);\r\n  }\r\n  get f_form() {\r\n    return this.form.controls;\r\n  }\r\n  beforeFormInit() {\r\n    this.dataClass = new DMComponent(this.data, this.parent);\r\n    console.log(this.data, this.dataClass);\r\n    this.dataClass.type = this.uiData.type;\r\n    this.colorCodes$ = this.api\r\n      .getColorCodes()\r\n      .pipe(map((list: any) => arrayToList(list, 'value', 'value')));\r\n    const { ProcessName } = this.parent.root;\r\n    this.roles$ = this.api\r\n      .getRoles(ProcessName)\r\n      .pipe(map((list: any) => arrayToList(list, 'value', 'label')));\r\n\r\n    this.parent?.formData?.components[0]?.columns.forEach((ele) => {\r\n      ele.components.forEach((dmo) => {\r\n        if (dmo.type === 'select') {\r\n          if (dmo.guid != this.dataClass.guid)\r\n            this.dropDownTypeDMO.push({\r\n              key: dmo.guid,\r\n              dmoName: dmo.dmoName,\r\n              value: dmo.label,\r\n            });\r\n        }\r\n        if (dmo.type === 'manageddropdown') {\r\n          if (dmo.guid != this.dataClass.guid)\r\n            this.managedDDLTypedmo.push({\r\n              key: dmo.guid,\r\n              dmoName: dmo.dmoName,\r\n              value: dmo.label,\r\n            });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  initForm() {\r\n    this.form = this.toFormGroup();\r\n    this.runDynamicValidation();\r\n    this.displayControls = [\r\n      new ObjectControl({\r\n        name: 'dmoName',\r\n        label: 'Data Model Object Name',\r\n        required: true,\r\n        hint: '25 characters max',\r\n        readonly: !this.newObject,\r\n      }),\r\n      new ObjectControl({\r\n        name: 'label',\r\n        label: 'Friendly Name',\r\n        hint: 'The label for this field that will appear next to it',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'description',\r\n        label: 'Short Description',\r\n        type: 'text',\r\n        hint: 'The description is text that will appear below the input field',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'defaultValue',\r\n        label: 'Default Value',\r\n        hint: `The will be the value for this field, before user interaction. \r\n        Having a default value will override the placeholder text. \r\n        Current Date for Date With Calendar DMO use xxxCurrentDatexxx in Default Value`,\r\n      }),\r\n      new ObjectControl({\r\n        name: 'tooltip',\r\n        label: 'Long Description',\r\n        class: 'span-12',\r\n        type: 'rich',\r\n        hint: 'The description is text that will appear below the input field',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'searchField',\r\n        label: 'Parent Control',\r\n        show: of(this.uiData.type === 'keyvaluesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'customDefaultValue',\r\n        label: 'Child Control',\r\n        show: of(this.uiData.type === 'keyvaluesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'compareOprator',\r\n        label: 'Operator',\r\n        type: 'dropdown',\r\n        options: of(\r\n          ['GT', 'GE', 'LT', 'LE'].map((key) => ({ key, value: key }))\r\n        ),\r\n        show: of(['datetime', 'staticdatebox'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'comparatorSelect',\r\n        label: 'Comparator',\r\n        type: 'dropdown',\r\n        options: of(this.dataClass.dmoListByType(this.uiData.type)),\r\n        hint: 'Allow to load data on the basis of comparator control',\r\n        show: of(['datetime', 'staticdatebox'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'RangeCal',\r\n        label: 'Range',\r\n        placeholder: '_-_',\r\n        hint: 'Put range to allow date before and after from current date',\r\n        show: of(['datetime', 'staticdatebox'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'showtooltip',\r\n        label: 'Show Long Description as Help',\r\n        type: 'switch',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'is24hourformat',\r\n        label: '24 Hour Format',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'datetimebox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'parentDmo',\r\n        label: 'Parent Control',\r\n        type: 'dropdown',\r\n        options: of(this.dropDownTypeDMO),\r\n        show: of(this.uiData.type === 'select'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'parentDmo',\r\n        label: 'Parent Control',\r\n        type: 'dropdown',\r\n        options: of(this.managedDDLTypedmo),\r\n        show: of(this.uiData.type === 'manageddropdown'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'status',\r\n        label: 'Status',\r\n        type: 'dropdown',\r\n        options: of(this.status),\r\n      }),\r\n    ];\r\n\r\n    this.dataControls = [\r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Options',\r\n        type: 'list',\r\n        required: true,\r\n        config: this.keyValueConfig,\r\n        show: of(['selectboxes', 'radio'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Options',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.keyValueConfig,\r\n        required: this.uiData.type === 'list',\r\n        show: of(['datetimezone', 'list'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'dataSrc',\r\n        label: 'Data Source',\r\n        type: 'dropdown',\r\n        options: of(enumToList(DataSource)),\r\n        show: of(['select', 'multiselect'].includes(this.uiData.type)),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Options',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.keyValueConfig,\r\n        required: true,\r\n        show: this.show(this.form, 'dataSrc', DataSource.Values, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'json',\r\n        label: 'JSON Data',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.jsonConfig,\r\n        show: this.show(this.form, 'dataSrc', DataSource.JSON, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'resource',\r\n        label: 'Options',\r\n        type: 'dropdown',\r\n        options: of(enumToList(CustomDataSource)),\r\n        group: this.f.data,\r\n        required: true,\r\n        show: this.show(this.form, 'dataSrc', DataSource.Custom, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'apiurl',\r\n        label: 'API URL',\r\n        group: this.f.data,\r\n        hint: 'API URL that returns data from the data source',\r\n        show: this.show(this.form, 'dataSrc', DataSource.C2MIceApi, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'apiparams',\r\n        label: 'API Response Parameter',\r\n        group: this.f.data,\r\n        show: this.show(this.form, 'dataSrc', DataSource.C2MIceApi, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'fieldparams',\r\n        label: 'Response Parameter',\r\n        group: this.f.data,\r\n        show: this.show(this.form, 'dataSrc', DataSource.WFApi, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'modelbody',\r\n        label: 'Model Body',\r\n        type: 'textarea',\r\n        group: this.f.data,\r\n        show: this.show(this.form, 'dataSrc', DataSource.WFApi, [\r\n          'select',\r\n          'multiselect',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Color Codes',\r\n        type: 'dropdown',\r\n        group: this.f.data,\r\n        multiple: true,\r\n        options: this.colorCodes$,\r\n        show: of(this.uiData.type === 'colorpicker'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'startwith',\r\n        label: 'Start With',\r\n        show: of(this.uiData.type === 'id'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'minlength',\r\n        label: 'Number of digits/characters',\r\n        show: of(this.uiData.type === 'id'),\r\n        required: true,\r\n      }),\r\n      new ObjectControl({\r\n        name: 'israndom',\r\n        label: 'Random (incremental if unchecked)',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'id'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'isalphanumeric',\r\n        label: 'Alphanumeric (numeric if unchecked)',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'id'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'values',\r\n        label: 'Data Source',\r\n        type: 'dropdown',\r\n        multiple: true,\r\n        group: this.f.data,\r\n        options: this.roles$,\r\n        show: of(this.uiData.type === 'roletype'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'regxType',\r\n        label: 'Regular Expression',\r\n        type: 'dropdown',\r\n        options: of(enumToList(RegExType)),\r\n        show: of(\r\n          ['textarea', 'textfield', 'url', 'rangebox'].includes(\r\n            this.uiData.type\r\n          )\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'expression',\r\n        label: 'Expression',\r\n        hint: 'Create your own regular expression',\r\n        show: this.show(this.form, 'regxType', RegExType.Custom, [\r\n          'textarea',\r\n          'textfield',\r\n          'url',\r\n          'rangebox',\r\n        ]),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'expressionMessage',\r\n        label: 'Validation Message',\r\n        hint: 'Write your custom validation message if expression fail',\r\n        show: of(\r\n          ['textarea', 'textfield', 'url', 'rangebox'].includes(\r\n            this.uiData.type\r\n          )\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'isEncrypt',\r\n        label: 'Encrypt',\r\n        type: 'switch',\r\n        show: of(\r\n          [\r\n            'textarea',\r\n            'textfield',\r\n            'file',\r\n            'uploadimage',\r\n            'url',\r\n            'rangebox',\r\n          ].includes(this.uiData.type)\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'conditionNA',\r\n        label: 'Condition NA',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'file'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'isautoCrop',\r\n        label: 'Auto Crop',\r\n        type: 'switch',\r\n        show: of(this.uiData.type === 'uploadimage'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'uploadLimit',\r\n        label: 'Number of files to be uploaded',\r\n        type: 'dropdown',\r\n        options: of(this.uploadLimit),\r\n        show: of(this.uiData.type === 'uploadimage'),\r\n        required: true,\r\n      }),\r\n      new ObjectControl({\r\n        name: 'datasource',\r\n        label: 'Data Source',\r\n        required: true,\r\n        group: this.f.data,\r\n        show: of(\r\n          [\r\n            'keyvaluesearchbox',\r\n            'keyvaluedropdownlist',\r\n            'autocompletesearchbox',\r\n          ].includes(this.uiData.type)\r\n        ),\r\n        hint: 'LMKAPI/WFAPI/ICEAPI/MethodName',\r\n      }),\r\n      new ObjectControl({\r\n        name: 'fieldparams',\r\n        label: 'Response Parameter',\r\n        group: this.f.data,\r\n        required: true,\r\n        show: of(\r\n          [\r\n            'keyvaluesearchbox',\r\n            'keyvaluedropdownlist',\r\n            'autocompletesearchbox',\r\n          ].includes(this.uiData.type)\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'modelbody',\r\n        label: 'Model Body',\r\n        type: 'textarea',\r\n        required: true,\r\n        group: this.f.data,\r\n        show: of(\r\n          [\r\n            'keyvaluesearchbox',\r\n            'keyvaluedropdownlist',\r\n            'autocompletesearchbox',\r\n          ].includes(this.uiData.type)\r\n        ),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'resource',\r\n        label: 'Display Value',\r\n        group: this.f.data,\r\n        required: true,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'mappings',\r\n        label: 'Mappings',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.mappingConfig,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'dependencydmos',\r\n        label: 'Dependency Dmos',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.mappingConfig,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'dependentdmos',\r\n        label: 'Dependent Dmos',\r\n        type: 'list',\r\n        group: this.f.data,\r\n        config: this.depConfig,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'emitonstart',\r\n        label: 'Emit On Start',\r\n        type: 'switch',\r\n        group: this.f.data,\r\n        show: of(this.uiData.type === 'autocompletesearchbox'),\r\n      }),\r\n    ];\r\n\r\n    this.validationControls = [\r\n      new ObjectControl({\r\n        name: 'required',\r\n        label: 'Required',\r\n        type: 'switch',\r\n        hint: 'A required field must be filled in before the form can be submitted',\r\n        group: this.f.validate,\r\n        show: of(!!this.uiData.validate),\r\n      }),\r\n\r\n      new ObjectControl({\r\n        name: 'disabled',\r\n        label: 'Read Only',\r\n        type: 'switch',\r\n        group: this.f.validate,\r\n        show: of(!!this.uiData.validate),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'minLength',\r\n        label: 'Minimum Length',\r\n        group: this.f.validate,\r\n        hint: 'The minimum length requirement this field must meet',\r\n        show: of(this.uiData.validate?.minLength),\r\n      }),\r\n      new ObjectControl({\r\n        name: 'maxLength',\r\n        label: 'Maximum Length',\r\n        group: this.f.validate,\r\n        hint: 'The maximum length requirement this field must meet',\r\n        required: true,\r\n        show: of(this.uiData.validate?.maxLength),\r\n      }),\r\n    ];\r\n\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => Start\r\n      this.form.get(\"dmoName\").valueChanges.subscribe(name=>{\r\n      if (this.newObject && name && name.length>=4 && !this.form.get('dmoName').hasError(\"maxlength\")\r\n      && !this.form.get('dmoName').hasError(\"pattern\")) {\r\n        this.api.checkNameValidity('dmo',0,name,this.parent.root.Version,this.parent.root.ProcessName).subscribe(IsExits=>{\r\n          if(IsExits){\r\n            const nameControl = this.form.get('dmoName');\r\n            nameControl.setErrors({\r\n              nameExists: true,\r\n              message: 'Duplicate name'\r\n            });\r\n          }\r\n        });\r\n      }\r\n      });\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => End \r\n    let cntrlRequired = this.form.controls['validate']['controls'].required;\r\n    let cntrlReadOnly = this.form.controls['validate']['controls'].disabled;\r\n\r\n    cntrlRequired.valueChanges.subscribe((val) => {\r\n      if (val == true && cntrlReadOnly.value == true) {\r\n        cntrlReadOnly.setValue(false);\r\n      }\r\n    });\r\n\r\n    cntrlReadOnly.valueChanges.subscribe((val) => {\r\n      if (val == true && cntrlRequired.value == true) {\r\n        cntrlRequired.setValue(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  private show(\r\n    group: AbstractControl,\r\n    name: keyof IDMComponent,\r\n    compareTo: any,\r\n    type: DMOType | DMOType[]\r\n  ) {\r\n    return group.get(name).valueChanges.pipe(\r\n      startWith(group.get(name).value),\r\n      map((v) => v?.key || v),\r\n      map((v) => {\r\n        const types = Array.isArray(type) ? type : [type];\r\n        return v === compareTo && types.includes(this.uiData.type);\r\n      })\r\n    );\r\n  }\r\n\r\n  private toFormGroup() {\r\n    const group: Partial<Record<keyof IDMComponent, AbstractControl>> = {};\r\n    Object.entries(this.dataClass).forEach(([key, value]) => {\r\n      if (key === 'dataSrc') {\r\n        value = this.dataSources.find(({ key }) => key === value);\r\n      } else if (key === 'regxType') {\r\n        value = this.regexTypes.find(({ key }) => key === value);\r\n      } else if (key === 'uploadStorage') {\r\n        value = this.storageProviders.find(({ key }) => key === value);\r\n      }\r\n      group[key] = this.fb.control(value);\r\n    });\r\n    const validators = [...NAME_VALIDATORS];\r\n    if (this.newObject) {\r\n      // const allDmos = this.dataClass.dmoListByType();\r\n\r\n      let allDmos = Object.values(this.parent.root.childrenMap)\r\n        .flatMap((bmog) => Object.values(bmog.childrenMap))\r\n        .flatMap((bmo) => Object.values(bmo.childrenMap))\r\n        .flatMap((dmog) => Object.values(dmog.childrenMap));\r\n      if (!this.dataClass.fromApi) {\r\n        allDmos = allDmos.filter((dmo) => dmo.dmoName !== this.data.dmoName);\r\n      }\r\n     // validators.push(checkNameValidatorSync(allDmos, 'dmoName'));\r\n    \r\n    }\r\n    group.dmoName = this.fb.control(this.dataClass.dmoName, {\r\n      validators,\r\n      updateOn: 'blur',\r\n    });\r\n    group.values = toFormArray(this.dataClass.values, { addCheckbox: true });\r\n    group.status = this.fb.control(\r\n      this.status.find((s) => s.key == this.dataClass.status)\r\n    );\r\n    if (this.uiData.type === 'uploadimage') {\r\n      group.uploadLimit = this.fb.control(\r\n        this.uploadLimit.find(\r\n          (limit) => limit.key === +this.dataClass.uploadLimit\r\n        ) || null,\r\n        [Validators.required]\r\n      );\r\n    }\r\n\r\n    const data = {};\r\n    Object.entries(this.dataClass.data).forEach(([key, value]) => {\r\n      if (\r\n        [\r\n          'apiurl',\r\n          'apiparams',\r\n          'fieldparams',\r\n          'modelbody',\r\n          'resource',\r\n        ].includes(key)\r\n      ) {\r\n        data[key] = this.fb.control(value);\r\n        return;\r\n      }\r\n      if (key === 'values') {\r\n        if (this.uiData.type === 'roletype') {\r\n          value = arrayToList(value, 'value', 'label');\r\n        } else {\r\n          value = value.map(({ value }) => ({ key: value, value }));\r\n        }\r\n        if (\r\n          ['datetimezone', 'select', 'list', 'multiselect'].includes(\r\n            this.uiData.type\r\n          )\r\n        ) {\r\n          data[key] = toFormArray(value, { addCheckbox: true });\r\n          return;\r\n        }\r\n      } else if (key === 'json') {\r\n        data[key] = toFormArray(value, { addCheckbox: true });\r\n        return;\r\n      } else if (key === 'resource' || this.uiData.type === 'select') {\r\n        value = this.customDataSources.find(({ key }) => key === value);\r\n      } else if (\r\n        ['dependencydmos', 'dependentdmos', 'mappings'].includes(key)\r\n      ) {\r\n        data[key] = toFormArray(value, { addCheckbox: true });\r\n        return;\r\n      }\r\n\r\n      data[key] = this.fb.control(value);\r\n    });\r\n    group.data = this.fb.group(data);\r\n\r\n    const validate = {};\r\n    Object.entries(this.dataClass.validate).forEach(([key, value]) => {\r\n      if (key === 'maxLength' && this.uiData.validate?.maxLength) {\r\n        validate[key] = this.fb.control(value, [Validators.required]);\r\n      } else {\r\n        validate[key] = this.fb.control(value);\r\n      }\r\n    });\r\n    group.validate = this.fb.group(validate);\r\n\r\n    return this.fb.group(group);\r\n  }\r\n\r\n  private runDynamicValidation() {\r\n    if (['select', 'list', 'multiselect'].includes(this.uiData.type)) {\r\n      this.validateControl({\r\n        trackedControl: this.f.dataSrc,\r\n        addValidation: (src) => (src?.key || src) === DataSource.Values,\r\n        validatedControl: this.f.data.get('values'),\r\n        validators: Validators.required,\r\n      }).subscribe();\r\n    }\r\n    if (['selectboxes', 'radio'].includes(this.uiData.type)) {\r\n      this.validateControl({\r\n        trackedControl: this.f.type,\r\n        addValidation: (type) => type === this.uiData.type,\r\n        validatedControl: this.f.values,\r\n        validators: Validators.required,\r\n      }).subscribe();\r\n    }\r\n    if (['select', 'multiselect'].includes(this.uiData.type)) { \r\n      this.validateControl({\r\n        trackedControl: this.f.dataSrc,\r\n        addValidation: (src) => (src?.key || src) === DataSource.Custom,\r\n        validatedControl: this.f.data.get('resource'),\r\n        validators: Validators.required,\r\n      }).subscribe();\r\n    }\r\n    if (['autocompletesearchbox'].includes(this.uiData.type)) {\r\n      const controlsToValidate = ['resource', 'datasource', 'fieldparams','modelbody']; \r\n      controlsToValidate.forEach((controlName) => {\r\n      const control = this.f.data.get(controlName);\r\n      if (control) {\r\n        this.validateControl({\r\n          trackedControl: this.f.type,\r\n          addValidation: (type) => type === this.uiData.type,\r\n          validatedControl: control,\r\n          validators: Validators.required,\r\n        }).subscribe();\r\n      }\r\n    });\r\n   }\r\n  }\r\n\r\n  private validateControl = (config: ControlValidation) => {\r\n    const { trackedControl, addValidation, validatedControl, validators } =\r\n      config;\r\n    return trackedControl.valueChanges.pipe(\r\n      takeWhile((_) => this.componentActive),\r\n      startWith(trackedControl.value),\r\n      tap((val) => {\r\n        if (addValidation(val)) {\r\n          validatedControl.setValidators(validators);\r\n        } else {\r\n          validatedControl.clearValidators();\r\n        }\r\n        validatedControl.updateValueAndValidity();\r\n      })\r\n    );\r\n  };\r\n\r\n  onSubmit() {\r\n    if (\r\n      this.form?.value?.parent?.Type === 'Grid' &&\r\n      (this.uiData.type === 'uploadimage' || this.uiData.type === 'file')\r\n    ) {\r\n      this.toastr.warning(\r\n        \"You can't create file upload and image upload type dmo for Grid type dmog\",\r\n        'Warning'\r\n      );\r\n      return false;\r\n    }\r\n    this.submitted = true;\r\n\r\n    if (this.form.valid) {\r\n      // Exclude parent DMOG class from the form value.\r\n      const { parent, ...f } = this.form.value;\r\n      let dataValues = [];\r\n      let dataResource = '';\r\n      if (['roletype', 'colorpicker'].includes(this.uiData.type)) {\r\n        dataValues = listToTypeArray(f.data.values, 'value', 'label');\r\n      } else {\r\n        dataValues = f.data.values.map(({ value, key }) => ({\r\n          label: value,\r\n          value,\r\n        }));\r\n        dataResource = f.data.resource?.key || f.data.resource || '';\r\n      }\r\n      const formValue: IDMComponent = {\r\n        ...f,\r\n        type: this.uiData.type,\r\n        default_Value: f.defaultValue,\r\n        values: f.values.map(({ value }) => ({ label: value, value })),\r\n        data: {\r\n          ...f.data,\r\n          values: dataValues,\r\n          resource: dataResource,\r\n          json: f.data.json?.key || f.data.json,\r\n        },\r\n        dataSrc: f.dataSrc?.key || f.dataSrc,\r\n        regxType: f.regxType?.key || f.regxType,\r\n        status: f.status?.key || f.status,\r\n        uploadLimit: f.uploadLimit?.key || f.uploadLimit,\r\n        parentGuid: f.parentDmo?.key,\r\n      };\r\n      // code by anas for mandatory and readonly validation\r\n      //if(this.form.controls[\"validate\"][\"controls\"].required.value===true)\r\n      //{formValue['validate'].disabled=false;}\r\n      // ended\r\n\r\n      this.output.emit(formValue);\r\n      this.ref.close(formValue);\r\n    }\r\n  }\r\n}\r\n\r\n/** If `addValidation` returns true when `trackedControl` changes,\r\n *  set specified `validators` on the `validatedControl`,\r\n *  otherwise clear all validators set before\r\n */\r\ntype ControlValidation = {\r\n  trackedControl: AbstractControl;\r\n  validatedControl: AbstractControl;\r\n  addValidation: (val: any) => boolean;\r\n  validators: ValidatorFn | ValidatorFn[];\r\n};\r\n", "<ng-container *ngIf=\"dataClass\">\r\n  <div class=\"popup\">\r\n    <div class=\"popup__header\">\r\n      <h2 *ngIf=\"newObject\"><i [class]=\"uiData.class\" style=\"margin-right: 5px\"></i>New {{ uiData.name }}</h2>\r\n      <h2 *ngIf=\"!newObject\"><i [class]=\"uiData.class\" style=\"margin-right: 5px\"> </i>{{ uiData.name }} Details</h2>\r\n      <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n    </div>\r\n    \r\n    <form [formGroup]=\"form\">\r\n      <app-tabs>\r\n        <app-tab title=\"Display\">\r\n          <ng-container *ngTemplateOutlet=\"renderControls; context: {controls: displayControls}\"></ng-container>\r\n        </app-tab>\r\n        <app-tab *ngIf=\"uiData.hasData\" title=\"Data\">\r\n          <ng-container *ngTemplateOutlet=\"renderControls; context: {controls: dataControls}\"></ng-container>\r\n        </app-tab>\r\n        <app-tab *ngIf=\"uiData.validate\" title=\"Validation\">\r\n          <ng-container *ngTemplateOutlet=\"renderControls; context: {controls: validationControls}\"></ng-container>\r\n        </app-tab>\r\n      </app-tabs>\r\n    \r\n      <div class=\"popup__actions\">\r\n        <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n        <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!parent.root.published && !readonly\">\r\n          <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n          <ng-container *ngIf=\"!newObject\">Update</ng-container>\r\n        </button>\r\n      </div>\r\n      <!-- </div> -->\r\n    </form>\r\n  </div>\r\n \r\n</ng-container>\r\n\r\n\r\n<ng-template #renderControls let-controls=\"controls\">\r\n  <div class=\"double-column mt-3\" [formGroup]=\"form\">\r\n    <ng-container *ngFor=\"let control of controls\">\r\n      <app-object-control [submitted]=\"submitted\" [parentForm]=\"form\" [config]=\"control\" *ngIf=\"control.show | async\"></app-object-control>\r\n    </ng-container> \r\n  </div>\r\n</ng-template>\r\n", "import { Component, ElementRef, Input } from '@angular/core';\r\nimport { UtilService } from '@app/shared/services/util.service';\r\nimport { NgbDateFRParserFormatter } from '@app/core';\r\nimport { DmoImageControlService } from '@app/core/services/dmo-image-control.service';\r\nimport { environment } from '@env/environment';\r\nimport { NgbDateParserFormatter, NgbProgressbar, NgbInputDatepicker } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IDatePickerConfig } from 'ng2-date-picker';\r\nimport { IDMComponent } from '../../models';\r\nimport { NgIf, NgSwitch, NgSwitchCase, NgFor, NgSwitchDefault } from '@angular/common';\r\nimport { NgSelectComponent, NgLabelTemplateDirective, NgOptionTemplateDirective, NgOptionComponent } from '@ng-select/ng-select';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatRadioButton } from '@angular/material/radio';\r\n\r\n@Component({\r\n    selector: 'app-dmo',\r\n    templateUrl: './dmo.component.html',\r\n    providers: [{ provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter }],\r\n    styleUrls: ['./dmo.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        NgSwitch,\r\n        NgSwitchCase,\r\n        NgSelectComponent,\r\n        NgLabelTemplateDirective,\r\n        NgOptionTemplateDirective,\r\n        NgFor,\r\n        NgOptionComponent,\r\n        ReactiveFormsModule,\r\n        NgbProgressbar,\r\n        NgbInputDatepicker,\r\n        MatInput,\r\n        MatAutocomplete,\r\n        MatSelect,\r\n        NgSwitchDefault,\r\n        MatRadioButton\r\n    ],\r\n})\r\nexport class DmoComponent {\r\n  @Input() dmo: IDMComponent;\r\n  fileList = [];\r\n  gridViewImageUrl = UtilService.getUrlForImage('/assets/styles/images/gridView.jpg');\r\n  dateFieldImageUrl = UtilService.getUrlForImage('/assets/styles/images/dateField.jpg');\r\n  maxDate = { year: 2199, month: 12, day: 31 };\r\n  minDate = { year: 1990, month: 1, day: 1 };\r\n  get getFileList() {\r\n    if (this.dmoimage.ImagesRemoveFileList.length > 0) {\r\n      this.dmoimage.ImagesRemoveFileList.forEach((element) => {\r\n        if (this.fileList.length > 0) {\r\n          const index = this.fileList.findIndex((x) => x['FileName'] === element.FileName);\r\n          if (index !== -1) {\r\n            this.fileList.splice(index, 1);\r\n          }\r\n        } else {\r\n          if (this.fileInfoList.length > 0 && element.imgId !== undefined) {\r\n            const index = this.fileInfoList.findIndex((x) => x['FileName'] === element.FileName);\r\n            if (index !== -1) {\r\n              this.fileInfoList.splice(index, 1);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return this.fileList.length > 0 ? this.fileList : this.fileInfoList;\r\n  }\r\n  fileInfoList: Array<object> = [];\r\n  dateTimePickerConfig: IDatePickerConfig = {\r\n    format: 'DD/MM/YYYY HH:mm:ss',\r\n    showTwentyFourHours: environment.Setting.dateTimeFormat24,\r\n    showSeconds: true,\r\n    disableKeypress: true,\r\n  };\r\n\r\n  constructor(public elRef: ElementRef, private dmoimage: DmoImageControlService, public ngbDateParserFormatter: NgbDateParserFormatter) {\r\n    this.maxDate = { year: 2199, month: 12, day: 31 };\r\n    this.minDate = { year: 1990, month: 1, day: 1 };\r\n  }\r\n\r\n  displayWith(lookup) {\r\n    return lookup ? lookup.ddOptionValue + ' (' + lookup.ddOptionKey + ')' : null;\r\n  }\r\n\r\n  getColor(color: { label: string }): string {\r\n    return color.label.toLowerCase();\r\n  }\r\n\r\n  mask(rawValue) {\r\n    if (rawValue && rawValue.replace(/\\D+/g, '').length > 11) {\r\n      return ['+', /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\r\n    } else if (rawValue && rawValue.replace(/\\D+/g, '').length > 10) {\r\n      return ['+', /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\r\n    } else {\r\n      return ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\r\n    }\r\n  }\r\n\r\n  upload(UploadEvent: any, dmoGUID: string, dmoName: any, modal: any = undefined, cropedFile = undefined) {\r\n    let fileName = '';\r\n\r\n    this.dmoimage.index = this.dmoimage.index + 1;\r\n    if (cropedFile) {\r\n      fileName = cropedFile.ImgFileName;\r\n      this.dmoimage.ImagesFileList.push({\r\n        file: cropedFile.file,\r\n        ImgFileName: cropedFile.ImgFileName,\r\n        Guid: dmoGUID,\r\n        imgId: this.dmoimage.index,\r\n        dmoName: dmoName,\r\n      });\r\n    } else {\r\n      fileName = UploadEvent.target.files[0].name;\r\n      if (UploadEvent.currentTarget['files'].length === 0) {\r\n        return;\r\n      }\r\n      if (UploadEvent.currentTarget['files']['files'] != undefined) {\r\n        this.dmoimage.ImagesFileList.push({\r\n          file: { file: UploadEvent.currentTarget['files']['files'][0] },\r\n          ImgFileName: '',\r\n          Guid: dmoGUID,\r\n          imgId: this.dmoimage.index,\r\n          dmoName: dmoName,\r\n        });\r\n      } else {\r\n        this.dmoimage.ImagesFileList.push({\r\n          file: { file: UploadEvent.currentTarget['files'][0] },\r\n          ImgFileName: '',\r\n          Guid: dmoGUID,\r\n          imgId: this.dmoimage.index,\r\n          dmoName: dmoName,\r\n        });\r\n      }\r\n    }\r\n    const img = {\r\n      FileName: fileName,\r\n      FileSize: '0 Kb',\r\n      OldFileName: fileName,\r\n      CreatedOn: null,\r\n      CreatedBy: null,\r\n      DISPNAME: null,\r\n      UserFullName: null,\r\n      IsEncrypted: false,\r\n      Id: null,\r\n      uId: this.dmoimage.index,\r\n      dmoName: dmoName,\r\n    };\r\n    this.fileInfoList.push(img);\r\n    this.fileList.push(img);\r\n    if (modal) {\r\n      modal.dismiss('Cross click');\r\n    }\r\n  }\r\n\r\n  uploadImage(event: any) {\r\n    if (+this.dmo.uploadLimit < this.fileList.length) {\r\n      return;\r\n    }\r\n    const file = event.target.files.item(0);\r\n    const ext = file.name.split('.').pop().toLowerCase();\r\n    if (!['jpg', 'jpeg', 'png'].includes(ext)) {\r\n      return;\r\n    }\r\n    this.upload(event, this.dmo.id, this.dmo.dmoName);\r\n  }\r\n\r\n  DeleteFile(objfile: any) {\r\n    if (objfile.uId) {\r\n      let ind = this.fileInfoList.findIndex((x) => x['uId'] === objfile.uId);\r\n      if (ind > -1) {\r\n        this.fileInfoList.splice(ind, 1);\r\n      }\r\n      ind = -1;\r\n      ind = this.fileList.indexOf(objfile);\r\n      if (ind > -1) {\r\n        this.fileList.splice(ind, 1);\r\n      }\r\n      ind = -1;\r\n      ind = this.dmoimage.ImagesFileList.findIndex((x) => x['imgId'] === objfile.uId);\r\n      if (ind > -1) {\r\n        this.dmoimage.ImagesFileList.splice(ind, 1);\r\n      }\r\n      return;\r\n    }\r\n    this.dmoimage.ImagesRemoveFileList.push({\r\n      ...objfile,\r\n      IsPermanentFileDeletion: environment.Setting.IsPermanentFileDeletion.toString(),\r\n    });\r\n    const index = this.fileList.indexOf(objfile);\r\n    const index1 = this.fileInfoList.indexOf(objfile);\r\n    if (index > -1) {\r\n      this.fileList.splice(index, 1);\r\n      this.dmoimage.ImagesFileList.splice(index, 1);\r\n    }\r\n    if (index1 > -1) {\r\n      this.fileInfoList.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n", "<div [id]=\"'control_' + dmo.dmoName\" class=\"form-group\" style=\"min-width: 200px; width: 100%\">\r\n  <label [id]=\"'label_' + dmo.dmoName\" class=\"input-label\" [hidden]=\"['button', 'roletypehidden'].includes(dmo.type)\">\r\n    {{ dmo.label }}\r\n    <span *ngIf=\"dmo.validate.required\" style=\"color: red\">*</span>\r\n  </label>\r\n\r\n  <ng-container [ngSwitch]=\"dmo.type\">\r\n    <ng-container *ngSwitchCase=\"'button'\">\r\n      <button class=\"btn btn-primary btn-sm \">{{ dmo.label }}</button>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'textfield'\">\r\n      <input\r\n        type=\"text\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [placeholder]=\"dmo.placeholder\"\r\n        [maxlength]=\"dmo.Length == null || dmo.Length === 0 ? null : dmo.Length\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'colorpicker'\">\r\n      <ng-select\r\n        [items]=\"dmo?.data?.values\"\r\n        [searchable]=\"true\"\r\n        class=\"form-control\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n      >\r\n        <ng-template ng-label-tmp let-item=\"item\" let-label=\"label\">\r\n          <span class=\"color-code-option\" [style.background-color]=\"getColor(item)\"></span>\r\n          <span class=\"ml-1\">{{ label }}</span>\r\n        </ng-template>\r\n        <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\r\n          <span class=\"color-code-option\" [style.background-color]=\"getColor(item)\"></span>\r\n          <span class=\"ml-1\">{{ item.label }}</span>\r\n        </ng-template>\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'countrylist'\">\r\n      <ng-select\r\n        [searchable]=\"true\"\r\n        [placeholder]=\"'Select...'\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n      >\r\n        <ng-option *ngFor=\"let op of dynamicOptions\" [value]=\"op.label\">{{ op.label }}</ng-option>\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'select'\">\r\n      <ng-select [searchable]=\"true\" [virtualScroll]=\"true\" class=\"form-control\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\">\r\n        <ng-option *ngFor=\"let op of dmo?.data?.values\" [value]=\"op.value\">{{ op.label }}</ng-option>\r\n      </ng-select>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'manageddropdown'\">\r\n      <ng-select [searchable]=\"true\" [virtualScroll]=\"true\" class=\"form-control\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\">\r\n        <!-- <ng-option *ngFor=\"let op of dmo?.values\" [value]=\"op.value\">{{op.label }}</ng-option> -->\r\n      </ng-select>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container *ngSwitchCase=\"'list'\" >\r\n      <select [id]=\"dmo.dmoName\" [disabled]=\"dmo.validate?.disabled\"class=\"form-control\" multiple style=\"height: auto;\">\r\n        <option  *ngFor=\"let op of dmo?.data?.values\">{{ op.value }}</option>\r\n      </select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'progressbar'\">\r\n      <p>\r\n        <ngb-progressbar\r\n          [id]=\"dmo.dmoName\"\r\n          [readonly]=\"dmo.validate?.disabled\"\r\n          [animated]=\"true\"\r\n          [striped]=\"true\"\r\n          [value]=\"dmo?.defaultValue\"\r\n          showValue=\"true\"\r\n          type=\"success\"\r\n        ></ngb-progressbar>\r\n      </p>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'roletype'\">\r\n      <ng-select\r\n        [items]=\"dmo?.data?.values\"\r\n        [multiple]=\"dmo.multiple\"\r\n        [closeOnSelect]=\"false\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n        placeholder=\"Select...\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n      >\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'file'\">\r\n      <div class=\"custom-file\">\r\n        <input type=\"file\" [disabled]=\"dmo.validate?.disabled\" (change)=\"upload($event, dmo.id, dmo.dmoName)\" class=\"custom-file-input\" />\r\n        <input type=\"hidden\" name=\"fileHidden\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" />\r\n        <label class=\"custom-file-label\" for=\"{{ 'TextBox_' + dmo.id }}\"></label>\r\n      </div>\r\n      <div class=\"uploadList\" *ngIf=\"fileList.length > 0\">\r\n        <ul>\r\n          <li *ngFor=\"let file of getFileList\">\r\n            <span (click)=\"DownloadFile(file)\" title=\"{{ file.OldFileName }}\">{{ file.OldFileName }}</span\r\n            ><a href=\"javascript:void(0)\" (click)=\"DeleteFile(file)\" title=\"Delete\"><i class=\"fas fa-trash-alt\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"uploadList\" *ngIf=\"fileList.length === 0\">\r\n        <ul>\r\n          <li *ngFor=\"let file of fileInfoList\">\r\n            <span (click)=\"DownloadFile(file)\" title=\"{{ file.OldFileName }}\">{{ file.OldFileName }}</span\r\n            ><a href=\"javascript:void(0)\" (click)=\"DeleteFile(file)\" title=\"Delete\"><i class=\"fas fa-trash-alt\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'uploadimage'\">\r\n      <div class=\"custom-file\">\r\n        <input type=\"file\" #fileInput [disabled]=\"dmo.validate?.disabled\" (click)=\"fileInput.value = null\" class=\"custom-file-input\" (change)=\"uploadImage($event)\" />\r\n        <input type=\"text\" [id]=\"dmo.dmoName\" [disabled]=\"dmo.validate?.disabled\" style=\"display: none\" />\r\n        <label class=\"custom-file-label\" for=\"{{ 'liUploadDiv_' + dmo.id }}\"></label>\r\n      </div>\r\n\r\n      <div class=\"uploadList\">\r\n        <ul>\r\n          <li *ngFor=\"let file of fileList\">\r\n            <span (click)=\"DownloadFile(file)\" title=\"{{ file.OldFileName }}\">{{ file.OldFileName }}</span\r\n            ><a href=\"javascript:void(0)\" (click)=\"DeleteFile(file)\" title=\"Delete\"><i class=\"fas fa-trash-alt\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"uploadList\" *ngIf=\"fileList.length === 0\">\r\n        <ul>\r\n          <li *ngFor=\"let file of fileInfoList\">\r\n            <span (click)=\"DownloadFile(file)\" title=\"{{ file.OldFileName }}\">{{ file.OldFileName }}</span\r\n            ><a href=\"javascript:void(0)\" (click)=\"DeleteFile(file)\" title=\"Delete\"><i class=\"fas fa-trash-alt\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'usstatelist'\">\r\n      <ng-select\r\n        [searchable]=\"true\"\r\n        [placeholder]=\"'Select...'\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n      >\r\n        <ng-option *ngFor=\"let op of dynamicOptions\" [value]=\"op.label\">{{ op.label }}</ng-option>\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'autocompletesearchbox'\">\r\n      <ng-select [searchable]=\"true\" [virtualScroll]=\"true\" class=\"form-control\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\">\r\n        <ng-option *ngFor=\"let op of dmo?.data?.values\" [value]=\"op.value\">{{ op.label }}</ng-option>\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'rangebox'\">\r\n      <div>\r\n        <span class=\"range-control\">\r\n          <input\r\n            type=\"text\"\r\n            [id]=\"dmo.dmoName\"\r\n            [readonly]=\"dmo.validate?.disabled\"\r\n            class=\"form-control range-control__input\"\r\n            [value]=\"dmo.default_Value\"\r\n            appRange\r\n          />\r\n        </span>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'phoneNumber'\">\r\n      <input\r\n        type=\"tel\"\r\n        [textMask]=\"{ mask: mask }\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [value]=\"dmo.default_Value\"\r\n        [maxlength]=\"dmo.Length == null ? null : dmo.Length\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'roletypehidden'\">\r\n      <input\r\n        type=\"text\"\r\n        readonly\r\n        [id]=\"dmo.dmoName\"\r\n        class=\"form-control\"\r\n        style=\"border: 2px dashed lightgrey\"\r\n        [placeholder]=\"dmo.placeholder || 'hidden'\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'email'\">\r\n      <input\r\n        type=\"email\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [value]=\"dmo.default_Value\"\r\n        [maxlength]=\"dmo.validate.maxLength == null ? null : dmo.validate.maxLength\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'usergroup'\">\r\n      <input\r\n        type=\"text\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [value]=\"dmo.default_Value\"\r\n        [value]=\"dmo.default_Value\"\r\n        [maxlength]=\"dmo.validate.maxLength == null ? null : dmo.validate.maxLength\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'url'\">\r\n      <input\r\n        type=\"text\"\r\n        [id]=\"dmo.dmoName\"\r\n        [disabled]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [value]=\"dmo.default_Value\"\r\n        [value]=\"dmo.default_Value\"\r\n        [maxlength]=\"dmo.Length == null ? null : dmo.Length\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'textarea'\">\r\n      <textarea\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control textareaHeight\"\r\n        [value]=\"dmo.default_Value\"\r\n        [value]=\"dmo.default_Value\"\r\n        [maxlength]=\"dmo.Length == null || dmo.Length === 0 ? null : dmo.Length\"\r\n      ></textarea>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'id'\">\r\n      <input type=\"text\" [id]=\"dmo.dmoName\" class=\"form-control\" readonly [maxLength]=\"dmo.Length == null ? null : dmo.Length\" />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'multiselect'\">\r\n      <ng-select\r\n        [items]=\"dmo.data?.values\"\r\n        [multiple]=\"true\"\r\n        [closeOnSelect]=\"false\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n        placeholder=\"Select...\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n      >\r\n      </ng-select>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'radio'\">\r\n      <div class=\"d-flex input-group\">\r\n        <ng-container *ngFor=\"let option of dmo?.values; let i = index\">\r\n          <label class=\"radio-container\"\r\n            >{{ option.label }}\r\n            <input type=\"radio\" [disabled]=\"dmo.disabled\" [value]=\"option.value\" [id]=\"dmo.id + i\" [name]=\"dmo.dmoName\" />\r\n            <span class=\"checkmark\"  [style.background-color]=\"dmo.disabled?'#e9ecef':'transparent'\"></span>\r\n          </label>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'selectboxes'\">\r\n      <div class=\"d-flex input-group\">\r\n        <ng-container *ngFor=\"let control of dmo?.values; let i = index\">\r\n          <label class=\"form-checkbox mr-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              [value]=\"control.value\"\r\n              [checked]=\"control.value === dmo.default_Value\"\r\n              [id]=\"dmo.dmoName\"\r\n              [disabled]=\"dmo.validate?.disabled\"\r\n              (change)=\"fun_click(dmo)\"\r\n            />\r\n            <i class=\"skin\"   [style.background-color]=\"dmo.validate?.disabled ?'#e9ecef':'transparent'\"></i>\r\n            <span>{{ control.value }}</span>\r\n          </label>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'staticdatebox'\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\" [style.background-color]=\"dmo.validate?.disabled?'#e9ecef':'transparent'\">\r\n          <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"d.toggle()\" type=\"button\" disabled=\"dmo.validate?.disabled\">\r\n            <i class=\"far fa-calendar-alt\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"dd/mm/yyyy\"\r\n          [id]=\"dmo.dmoName\"\r\n          [readonly]=\"dmo.validate?.disabled\"\r\n          class=\"form-control\"\r\n          ngbDatepicker\r\n          #d=\"ngbDatepicker\"\r\n          [minDate]=\"minDate\"\r\n          [maxDate]=\"maxDate\"\r\n          (keyup)=\"dateMasks($event)\"\r\n        />\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'day'\">\r\n      <input\r\n        type=\"text\"\r\n        [textMask]=\"{ mask: dateMask, keepCharPositions: true, pipe: autoCorrectedDatePipe }\"\r\n        pattern=\"\\d{2}/\\d{2}/\\d{4}\"\r\n        [id]=\"dmo.dmoName\"\r\n        [readonly]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'datetime'\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\" [style.background-color]=\"dmo.validate?.disabled?'#e9ecef':'transparent'\">\r\n          <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"d.toggle()\" type=\"button\" disabled=\"dmo.validate?.disabled\">\r\n              <i class=\"far fa-calendar-alt\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"dd/mm/yyyy\"\r\n          [id]=\"dmo.dmoName\"\r\n          class=\"form-control\"\r\n          ngbDatepicker\r\n          #d=\"ngbDatepicker\" \r\n          [minDate]=\"minDate\" \r\n          [maxDate]=\"maxDate\"\r\n          [readonly]=\"dmo.validate?.disabled\"\r\n        />\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'datetimezone'\">\r\n      <div [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" class=\"d-flex date-tz-picker\">\r\n        <div class=\"input-group flex-nowrap\">\r\n          <div class=\"input-group-prepend\" [style.background-color]=\"dmo.validate?.disabled?'#e9ecef':'transparent'\">\r\n            <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"d.toggle()\" type=\"button\" disabled=\"dmo.validate?.disabled\">\r\n              <i class=\"far fa-calendar-alt\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n          <input type=\"text\" class=\"form-control date-picker\" [readonly]=\"dmo.validate?.disabled\" ngbDatepicker #d=\"ngbDatepicker\" />\r\n        </div>\r\n        <ng-select [items]=\"timeOptions\" [readonly]=\"dmo.validate?.disabled\" class=\"form-control\"> </ng-select>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'datagrd'\">\r\n      <img\r\n        name=\"dmo.dmoName\"\r\n        type=\"img\"\r\n        class=\"img-responsive\"\r\n        lang=\"en\"\r\n        id=\"dmo.dmoName\"\r\n        [src]=\"gridViewImageUrl\"\r\n        disabled=\"true\"\r\n        style=\"height: 30px; width: 100%\"\r\n      />\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'jsonstaticgrid'\">\r\n      <img\r\n        name=\"dmo.dmoName\"\r\n        type=\"img\"\r\n        class=\"img-responsive\"\r\n        lang=\"en\"\r\n        id=\"dmo.dmoName\"\r\n        [src]=\"gridViewImageUrl\"\r\n        disabled=\"true\"\r\n        style=\"height: 30px; width: 100%\"\r\n      />\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'datetimebox'\">\r\n      <img\r\n        name=\"dmo.dmoName\"\r\n        type=\"img\"\r\n        class=\"img-responsive\"\r\n        lang=\"en\"\r\n        id=\"dmo.dmoName\"\r\n        [src]=\"dateFieldImageUrl\"\r\n        disabled=\"true\"\r\n        style=\"height: 30px; width: 100%\"\r\n      />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'hidden'\">\r\n      <div class=\"custom-file\">\r\n        <input type=\"hidden\" name=\"fileHidden\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" />\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'createdby'\">\r\n      <input type=\"text\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" class=\"form-control\" disabled [value]=\"dmo.default_Value\" />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'createddate'\">\r\n      <input type=\"text\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\" class=\"form-control\" disabled [value]=\"dmo.default_Value\" />\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'keyvaluesearchbox'\">\r\n      <input\r\n        type=\"text\"\r\n        [id]=\"dmo.dmoName\"\r\n        [disabled]=\"dmo.validate?.disabled\"\r\n        class=\"form-control\"\r\n        [value]=\"dmo.default_Value\"\r\n        matInput\r\n      />\r\n      <mat-autocomplete [displayWith]=\"displayWith\" showPanel=\"true\"> </mat-autocomplete>\r\n    </ng-container>\r\n    <ng-container *ngSwitchCase=\"'keyvaluedropdownlist'\">\r\n      <ng-select class=\"form-control input-group\" [id]=\"dmo.dmoName\" [readonly]=\"dmo.validate?.disabled\"> </ng-select>\r\n    </ng-container>\r\n    \r\n    \r\n  <ng-container *ngSwitchCase=\"'notificationflag'\">\r\n      <div class=\"d-flex input-group\">\r\n        <mat-radio-group>\r\n          <mat-radio-button value=\"On\">\r\n            <span style=\"font-size: 12px\">On</span>\r\n          </mat-radio-button>\r\n          <mat-radio-button value=\"Off\">\r\n            <span style=\"font-size: 12px\">Off</span>\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchDefault></ng-container>\r\n  </ng-container>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { KeyValue } from '@app/admin/BM/models';\r\nimport { arrayToList, enumToList, KeyValueList, listToTypeArray } from '@app/admin/wf/wfd/util/helpers';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { BMO, DMOG, ObjectControl } from '../../classes';\r\nimport { DMOGType, IDMOG, ObjectDetail, Status } from '../../models';\r\nimport { DataModelerApiService } from '../../services/data-modeler-api.service';\r\nimport { checkNameValidatorSync } from '../../validators';\r\nimport { AfterViewChecked, ChangeDetectorRef } from '@angular/core'\r\nimport { NgIf, NgFor, AsyncPipe, SlicePipe } from '@angular/common';\r\nimport { ObjectControlComponent } from '../../../lib/object-control/object-control.component';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\n@Component({\r\n    selector: 'app-dmog-detail',\r\n    templateUrl: './dmog-detail.component.html',\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgFor,\r\n        ObjectControlComponent,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n        SlicePipe,\r\n    ],\r\n})\r\nexport class DmogDetailComponent extends ObjectDetail<IDMOG | DMOG, BMO> {\r\n  public title = 'Data Model Object Group';\r\n  public controls: ObjectControl<IDMOG>[];\r\n\r\n  private dmogTypeList = enumToList(DMOGType);\r\n  private status = enumToList(Status);\r\n  private roles$: Observable<KeyValueList<string, string>>;\r\n  private availableDmoToShare = [];\r\n  allDmos = [];\r\n\r\n  leftSelectedSharedItems = [];\r\n  rightSelectedSharedItems = [];\r\n\r\n  leftSharedChanged = false;\r\n  rightSharedChanged = false;\r\n\r\n  constructor(ref: NgbActiveModal, fb: UntypedFormBuilder, private api: DataModelerApiService, private readonly toastr: ToastrService,private readonly changeDetectorRef: ChangeDetectorRef) {\r\n    super(ref, fb);\r\n    this.formActions = [{ controlName: 'Type', handler: (type: DMOGType) => this.onDmogTypeChange(type) }];\r\n  }\r\n  ngAfterViewChecked(): void {\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n  beforeFormInit() {\r\n    const { ProcessName } = this.parent.root;\r\n    this.roles$ = this.api.getRoles(ProcessName).pipe(map((list) => arrayToList(list, 'value', 'label')));\r\n  }\r\n\r\n  initForm() {\r\n    const validators = [...NAME_VALIDATORS];\r\n    if (this.newObject) {\r\n      const allDmogs = Object.values(this.parent.root.childrenMap).flatMap((bmog) =>\r\n        Object.values(bmog.childrenMap).flatMap((bmo) => Object.values(bmo.childrenMap))\r\n      );\r\n     // validators.push(checkNameValidatorSync(allDmogs, 'Name'));\r\n    }\r\n    this.form = this.fb.group({\r\n      Name: [this.data.Name, { validators, updateOn: 'blur' }],\r\n      DefCollapsed: [+this.data.DefCollapsed || 0],\r\n      DisplayName: [this.data.DisplayName, [Validators.required]],\r\n      IsCollapsed: [+this.data.IsCollapsed || 0],\r\n      IsHidden: [+this.data.IsHidden || 0],\r\n      LongDesc: [this.data.LongDesc],\r\n      Roles: [arrayToList(this.data.Roles, 'Value', 'Key')],\r\n      // Share: [this.selectedSharedItems()],\r\n      Status: [this.status.find((s) => s.key == this.data.Status), [Validators.required]],\r\n      Type: [this.dmogTypeList.find((t) => t.key === this.data.Type), [Validators.required]],\r\n      Version: [this.data.Version || this.parent.Version, [Validators.required]],\r\n      showHelp: [+this.data.showHelp || 0],\r\n    });\r\n\r\n    const map = this.getSharedItems();\r\n    const left = map.get(0) || [];\r\n    const right = map.get(1) || [];\r\n    //this.allDmos = left.concat(right);    \r\n\r\n    this.leftSelectedSharedItems = left.filter((item) => item.selected);\r\n    this.rightSelectedSharedItems = right.filter((item) => item.selected);\r\n\r\n    this.controls = [\r\n      new ObjectControl({ name: 'Name', label: 'Name', readonly: !this.newObject, required: true }),\r\n      new ObjectControl({ name: 'DisplayName', label: 'Friendly Name', required: true }),\r\n      new ObjectControl({ name: 'Version', label: 'Version', readonly: true }),\r\n      new ObjectControl({ name: 'Status', label: 'Status', type: 'dropdown', required: true, options: of(this.status) }),\r\n      new ObjectControl({ name: 'Type', label: 'Type', type: 'dropdown', required: true, options: of(this.dmogTypeList) }),\r\n      new ObjectControl({\r\n        name: 'Roles',\r\n        label: 'Roles',\r\n        type: 'dropdown',\r\n        required: true,\r\n        options: this.roles$,\r\n        show: this.show('Type', DMOGType.Grid),\r\n        multiple: true,\r\n      }),\r\n      new ObjectControl({ name: 'LongDesc', label: 'Long Description', type: 'rich', class: 'span-12' }),\r\n\r\n      new ObjectControl({ name: 'showHelp', label: 'Show Long Description as Help', type: 'switch' }),\r\n      new ObjectControl({ name: 'IsCollapsed', label: 'Is Collapsible', type: 'switch' }),\r\n      new ObjectControl({\r\n        name: 'DefCollapsed',\r\n        label: 'Is Collapsed',\r\n        type: 'switch',\r\n        show: this.show('IsCollapsed', true),\r\n      }),\r\n      new ObjectControl({ name: 'IsHidden', label: 'Is Hidden', type: 'switch' }),\r\n    ];\r\n\r\n    this.api.GetAvailableDmoToShare(this.parent.root.selectedBMOG.BMOGID, this.parent.root.BMId).subscribe(x=>{\r\n      this.availableDmoToShare= x;\r\n      const avDmos = this.getAllDmos();\r\n      this.allDmos= avDmos.get(0)|| [];\r\n    });\r\n  \r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => Start\r\n    this.form.get(\"Name\").valueChanges.subscribe(name=>{\r\n      if(this.newObject && name && name.length>=4 && !this.form.get('Name').hasError(\"maxlength\")\r\n      && !this.form.get('Name').hasError(\"pattern\")){\r\n        this.api.checkNameValidity('dmog',0,name,this.parent.root.Version,this.parent.root.ProcessName).subscribe(IsExits=>{\r\n          if(IsExits){\r\n              const nameControl = this.form.get('Name');\r\n              nameControl.setErrors({\r\n              nameExists: true,\r\n              message: 'Duplicate name'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n    // #C2MC-7667 - Check Duplicate Name of BMO,  BMOG , DMO and  DMOG  => End\r\n\r\n\r\n  }\r\n\r\n  afterFormInit() {\r\n    // Force patch the control to activate form action on start\r\n    const val = this.dmogTypeList.find(({ key }) => this.data.Type === key);\r\n    this.f.Type.patchValue(val);\r\n  }\r\n\r\n  private getAllDmos() {\r\n    const share = this.data.Share || [];\r\n    const colMap = new Map<number, SharedItem[]>();\r\n    this.availableDmoToShare.forEach((dmo, i) =>{\r\n      const check = share.some((item) => item.value === dmo.dmoGuid);\r\n      const item = {\r\n        key: dmo.dmoGuid,\r\n        value: dmo.NAME,\r\n        dmoId: dmo.dmoID,\r\n        bmogId: this.parent.parent.BMOGID,\r\n        selected: check,\r\n        disabled: check,\r\n      };\r\n    \r\n\r\n          if (!colMap.get(0)) colMap.set(0, []);\r\n            const col = colMap.get(0);\r\n            if (!col.find((d) => d.key === item.key)) {\r\n              colMap.get(0).push(item);\r\n            }\r\n    });\r\n\r\n    return colMap;\r\n  }\r\n\r\n  private getSharedItems() {\r\n    const share = this.data.Share || [];\r\n    const colMap = new Map<number, SharedItem[]>();\r\n    const collectShared = (dmog: DMOG) => {\r\n      dmog.formData.components.forEach((row) => {\r\n        row.columns.forEach((col, i) =>\r\n          col.components.forEach((obj) => {\r\n            const dmo = dmog.getChild(obj.dmoName);\r\n            const check = share.some((item) => item.value === dmo.guid && item.key===dmog.GUID);\r\n            const item = {\r\n              key: dmo.guid,\r\n              //value: `${dmog.parent.DisplayName} > ${dmog.DisplayName} > ${dmo.label}`,\r\n              value: `${dmo.label} (${dmo.dmoName})`,\r\n              dmoId: dmo.dmoId,\r\n              bmogId: this.parent.parent.BMOGID,\r\n              selected: check,\r\n              disabled: check,\r\n            };\r\n\r\n            if (!colMap.get(i)) colMap.set(i, []);\r\n            const col = colMap.get(i);\r\n            if (!col.find((d) => d.key === item.key)) {\r\n              colMap.get(i).push(item);\r\n            }\r\n          })\r\n        );\r\n      });\r\n    };\r\n    if (this.data.Children) {\r\n      collectShared(this.data as DMOG);\r\n    }\r\n    Object.values(this.parent.root.childrenMap)\r\n      .filter((bmog) => bmog.BMOGID !== this.parent.parent.BMOGID)\r\n      .forEach((bmog) => {\r\n        Object.values(bmog.childrenMap)\r\n          .filter((bmo) => !bmo.shared && bmo.BMOID !== this.parent?.BMOID)\r\n          .forEach((bmo) => {\r\n            Object.values(bmo.childrenMap).forEach((dmog) => {\r\n              collectShared(dmog);\r\n            });\r\n          });\r\n      });\r\n    return colMap;\r\n  }\r\n\r\n  displayShare = (item: any) => item.value;\r\n  uniqueShare = (item: any) => item.value;\r\n\r\n  shouldAdd = (item: SharedItem) =>\r\n    this.api.checkDmoInBmog(item.dmoId.toString(), item.bmogId.toString()).pipe(\r\n      tap((success) => {\r\n        if (!success) {\r\n          this.toastr.warning('This dmo cannot be shared');\r\n        }\r\n      })\r\n    );\r\n\r\n  onLeftShareAdd(item: SharedItem) {\r\n    this.leftSelectedSharedItems = this.leftSelectedSharedItems.concat(item);\r\n    this.leftSharedChanged = true;\r\n    this.refreshAllDmos();\r\n  }\r\n  onLeftShareRemove(item: SharedItem) {\r\n    this.leftSelectedSharedItems = this.leftSelectedSharedItems.filter((dmo) => dmo.key !== item.key);\r\n    this.leftSharedChanged = true;\r\n    this.refreshAllDmos();\r\n  }\r\n\r\n  onRightShareAdd(item: SharedItem) {\r\n    this.rightSelectedSharedItems = this.rightSelectedSharedItems.concat(item);\r\n    this.rightSharedChanged = true;\r\n    this.refreshAllDmos();\r\n  }\r\n  onRightShareRemove(item: SharedItem) {\r\n    this.rightSelectedSharedItems = this.rightSelectedSharedItems.filter((dmo) => dmo.key !== item.key);\r\n    this.rightSharedChanged = true;\r\n    this.refreshAllDmos();\r\n  }\r\n\r\n  onLeftShareReorder = (items: SharedItem[]) => {\r\n    this.leftSelectedSharedItems = items;\r\n    this.leftSharedChanged = true;\r\n  };\r\n\r\n  onRightShareReorder = (items: SharedItem[]) => {\r\n    this.rightSelectedSharedItems = items;\r\n    this.rightSharedChanged = true;\r\n  };\r\n\r\n  refreshAllDmos = () => {\r\n    this.allDmos.forEach((dmo) => {\r\n      const rightCheck = this.rightSelectedSharedItems.some((item) => item.key === dmo.key);\r\n      const leftCheck = this.leftSelectedSharedItems.some((item) => item.key === dmo.key);\r\n      dmo.selected = rightCheck || leftCheck;\r\n      dmo.disabled = rightCheck || leftCheck;\r\n    });\r\n    this.allDmos = this.allDmos.slice();\r\n  };\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const val = this.form.value;\r\n      const payload: IDMOG = {\r\n        ...val,\r\n        Parent: this.data.Parent || this.parent.id,\r\n        DMOGID: this.data.DMOGID,\r\n        id: this.data.id || val.Name,\r\n        GUID: (this.data.GUID || (val.Name as string)).replace('`', ''),\r\n        LnkBmoDmogID: this.data.LnkBmoDmogID,\r\n        Type: val.Type?.key || val.Type,\r\n        Status: val.Status?.key || val.Status,\r\n        DefCollapsed: (+val.DefCollapsed).toString(),\r\n        IsCollapsed: (+val.IsCollapsed).toString(),\r\n        IsHidden: (+val.IsHidden).toString(),\r\n        showHelp: (+val.showHelp).toString(),\r\n        Roles: listToTypeArray(val.Roles, 'value', 'key'),\r\n      };\r\n      const shared = {\r\n        processName: this.parent.root.ProcessName,\r\n        bmName: this.parent.root.Name,\r\n        bmVersion: this.parent.root.Version,\r\n        dmogName: val.Name,\r\n        leftDMOGuids: this.leftSharedChanged ? this.leftSelectedSharedItems.map(({ key }) => key).toString() : '-1',\r\n        rightDMOGuids: this.rightSharedChanged ? this.rightSelectedSharedItems.map(({ key }) => key).toString() : '-1',\r\n      };\r\n\r\n      this.output.emit(payload);\r\n      this.ref.close({ payload, shared });\r\n    }\r\n  }\r\n\r\n  private onDmogTypeChange(val: any) {\r\n    val = val?.key || val;\r\n    if (val === DMOGType.Grid) {\r\n      this.f.Roles.setValidators(Validators.required);\r\n    } else {\r\n      this.f.Roles.clearValidators();\r\n    }\r\n     this.f.Roles.updateValueAndValidity();\r\n  }\r\n\r\n  private show(controlName: keyof IDMOG, compareTo: any) {\r\n    return this.form.get(controlName).valueChanges.pipe(\r\n      startWith(this.form.get(controlName).value),\r\n      map((v) => v?.key || v),\r\n      map((v) => v === compareTo)\r\n    );\r\n  }\r\n}\r\n\r\ntype SharedItem = KeyValue & { selected?: boolean; disabled?: boolean; dmoId: number; bmogId: number };\r\n", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newObject\">New {{ title }}</h2>\r\n    <h2 *ngIf=\"!newObject\">{{ title }} Details</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr />\r\n\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"double-column\">\r\n      <ng-container *ngFor=\"let control of controls | slice: 0:7\">\r\n        <app-object-control *ngIf=\"control.show | async\" [config]=\"control\" [parentForm]=\"form\" [class]=\"control.class\">\r\n        </app-object-control>\r\n      </ng-container>\r\n      \r\n      <div class=\"span-12\">\r\n        <div class=\"double-column\" style=\"margin: 0\">\r\n          <label class=\"span-6\" for=\"\">Available DMOs For Left Column</label>\r\n          <label class=\"span-6\" for=\"\">Selected DMOs For Left Column</label>\r\n        </div>\r\n\r\n        <app-association\r\n          [items]=\"allDmos\"\r\n          [associatedItems]=\"leftSelectedSharedItems\"\r\n          [displayWith]=\"displayShare\"\r\n          [uniqueWith]=\"uniqueShare\"\r\n          [checkAll]=\"false\"\r\n          checkBy=\"selected\"\r\n          disableBy=\"disabled\"\r\n          [shouldAdd]=\"shouldAdd\"\r\n          (add)=\"onLeftShareAdd($event)\"\r\n          (remove)=\"onLeftShareRemove($event)\"\r\n          (reorder)=\"onLeftShareReorder($event)\"\r\n        >\r\n        </app-association>\r\n      </div>\r\n\r\n      <div class=\"span-12\">\r\n        <div class=\"double-column\" style=\"margin: 0\">\r\n          <label class=\"span-6\" for=\"\">Available DMOs For Right Column</label>\r\n          <label class=\"span-6\" for=\"\">Selected DMOs For Right Column</label>\r\n        </div>\r\n        <app-association\r\n          [items]=\"allDmos\"\r\n          [associatedItems]=\"rightSelectedSharedItems\"\r\n          [displayWith]=\"displayShare\"\r\n          [uniqueWith]=\"uniqueShare\"\r\n          [checkAll]=\"false\"\r\n          checkBy=\"selected\"\r\n          disableBy=\"disabled\"\r\n          [shouldAdd]=\"shouldAdd\"\r\n          (add)=\"onRightShareAdd($event)\"\r\n          (remove)=\"onRightShareRemove($event)\"\r\n          (reorder)=\"onRightShareReorder($event)\"\r\n        >\r\n        </app-association>\r\n      </div>\r\n\r\n      <ng-container *ngFor=\"let control of controls | slice: 7\">\r\n        <app-object-control *ngIf=\"control.show | async\" [config]=\"control\" [parentForm]=\"form\" [class]=\"control.class\">\r\n        </app-object-control>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\" *ngIf=\"!parent.root.published\">\r\n        <ng-container *ngIf=\"newObject\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newObject\">Update</ng-container>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n", "import { CdkDragDrop, CdkDropList, moveItemInArray, transferArrayItem, CdkDropListGroup, CdkDrag } from '@angular/cdk/drag-drop';\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MessageService } from '@app/core';\r\nimport { intersectionBy } from 'lodash';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { from, of, Subject } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  filter,\r\n  finalize,\r\n  map,\r\n  mergeAll,\r\n  switchMap,\r\n  takeWhile,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { DMComponent, DMOG, FormDataComponentInfo } from '../../classes';\r\nimport { DMOS } from '../../const';\r\nimport { DataModelerComponent } from '../../data-modeler.component';\r\nimport { DMOUI, IConditionBody, IDMComponent } from '../../models';\r\nimport { DataModelerApiService } from '../../services/data-modeler-api.service';\r\nimport { DmoConditionComponent } from '../dmo-condition/dmo-condition.component';\r\nimport { DmoDetailComponent } from '../dmo-detail/dmo-detail.component';\r\nimport { NgIf, NgFor, NgTemplateOutlet } from '@angular/common';\r\nimport { DmoComponent } from '../dmo/dmo.component';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-dmog-form-view',\r\n    templateUrl: './dmog-form-view.component.html',\r\n    styleUrls: ['./dmog-form-view.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        CdkDropListGroup,\r\n        NgIf,\r\n        CdkDropList,\r\n        NgFor,\r\n        CdkDrag,\r\n        NgTemplateOutlet,\r\n        DmoComponent,\r\n        NgbTooltip,\r\n    ],\r\n})\r\nexport class DmogFormViewComponent implements OnInit, OnDestroy {\r\n  private readonly saveDmog = new Subject<void>();\r\n  private componentActive = true;\r\n  private IsJsonStaticGridDmo:boolean=false;\r\n  @Input()\r\n  set dmog(dmog: DMOG) {\r\n    this._dmog = dmog;\r\n  }\r\n  get dmog() {\r\n    return this._dmog;\r\n  }\r\n\r\n  @Input()\r\n  set readonly(readonly: boolean) {\r\n    this._readonly = readonly;\r\n  }\r\n  get readonly() {\r\n    return this._readonly;\r\n  }\r\n  readonly formsControls = Object.values(DMOS).sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));;\r\n\r\n  private _dmog: DMOG;\r\n  private _readonly = false;\r\n\r\n  constructor(\r\n    private dmApi: DataModelerApiService,\r\n    private msg: MessageService,\r\n    private toast: ToastrService,\r\n    private dm: DataModelerComponent\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.onSaveDmog();\r\n  }\r\n\r\n  private onSaveDmog() {\r\n    const message = \"Don't close the window while saving\";\r\n    const title = 'Save in progress';\r\n    this.saveDmog\r\n      .pipe(\r\n        takeWhile((_) => this.componentActive),\r\n        switchMap((_) => {\r\n          let activeToast = this.toast.findDuplicate(\r\n            title,\r\n            message,\r\n            true,\r\n            false\r\n          );\r\n          if (activeToast) {\r\n            this.toast.remove(activeToast.toastId);\r\n          }\r\n          activeToast = this.toast.info(message, title, {\r\n            timeOut: 10000,\r\n            tapToDismiss: false,\r\n          });\r\n          return this.dmApi\r\n            .saveObject(this.dmog.unreference(), this.dmog.root, true)\r\n            .pipe(\r\n              catchError((_) => of(false)),\r\n              finalize(() => this.toast.remove(activeToast.toastId))\r\n            );\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  public async onDrop(e: CdkDragDrop<DMOUI[] | Partial<IDMComponent>[]>) {\r\n    if(this.IsJsonStaticGridDmo){\r\n      this.toast.warning('More than one json static grid not allowed.', 'Warning');\r\n      return ;\r\n    }\r\n    const from = e.previousContainer;\r\n    const to = e.container as CdkDropList<IDMComponent[]>;\r\n    const fromIdx = e.previousIndex;\r\n    const toIdx = e.currentIndex;\r\n    if (from.id === 'form-controls') {\r\n      const uiData = from.data[fromIdx] as DMOUI;\r\n      const res = await this.getDmoDetails(uiData);\r\n      if (!res) {\r\n        return;\r\n      }\r\n      transferArrayItem([res], to.data as Partial<IDMComponent>[], 0, toIdx);\r\n      const dmoId = await this.saveDmoDetails(res);\r\n      if (!dmoId) {\r\n        to.data = to.data.filter((dmo) => dmo.dmoName !== res.dmoName);\r\n      }\r\n      res.dmoId = +dmoId;\r\n      this.dmApi.reorderChildren(this.dmog).subscribe(() => this.dm.getBM());\r\n      return;\r\n    } else if (from.id !== to.id) {\r\n      transferArrayItem(from.data as any[], to.data, fromIdx, toIdx);\r\n    } else {\r\n      if (from.id === to.id && fromIdx === toIdx) return;\r\n      moveItemInArray(from.data as any[], fromIdx, toIdx);\r\n    }\r\n    this.dmApi.reorderChildren(this.dmog).subscribe();\r\n    // this.saveDmog.next();\r\n  }\r\n\r\n  public async onDmoEdit(data: DMComponent) {\r\n    const uiData = DMOS[data.type];\r\n    const res = await this.getDmoDetails(uiData, data);\r\n    if (res) {\r\n      const dmoId = await this.saveDmoDetails(res);\r\n      if (dmoId) {\r\n        res.dmoId = +dmoId;\r\n        this.dmApi.reorderChildren(this.dmog).subscribe();\r\n        this.toast.success('Data was saved successfully', 'Success');\r\n      } else {\r\n        this.toast.warning('Data was not saved', 'Warning');\r\n      }\r\n    }\r\n  }\r\n\r\n  public onDmoClone(data: IDMComponent) {\r\n    this.dmog.findDmoAndThen(data.dmoName, async (info) => {\r\n      if (!info) return;\r\n      const { rowIndex: r, columnIndex: c, dmoIndex: d } = info;\r\n      const rows = this.dmog.formData.components;\r\n      const col = rows[r].columns[c];\r\n      const cloned = this.dmog.childrenMap[data.dmoName].clone();\r\n      const newComponents = col.components\r\n        .slice(0, d + 1)\r\n        .concat(cloned.asObject() as IDMComponent, col.components.slice(d + 1));\r\n      col.components = newComponents;\r\n      this.dmog.addChild(cloned);\r\n      const uiData = DMOS[data.type];\r\n      const res = await this.getDmoDetails(uiData, cloned);\r\n      if (!res) {\r\n        this.dmog.removeChild(cloned.dmoName);\r\n        col.components = newComponents.filter(\r\n          (dmo) => dmo.dmoName !== cloned.dmoName\r\n        );\r\n        return;\r\n      }\r\n      const cloneInfo = { ...info, dmoIndex: info.dmoIndex + 1 };\r\n      this.replaceDmo(cloneInfo, res);\r\n\r\n      const dmoId = await this.saveDmoDetails(res);\r\n      if (dmoId) {\r\n        res.dmoId = +dmoId;\r\n        this.dmApi.reorderChildren(this.dmog).subscribe();\r\n        this.toast.success('Data was saved successfully', 'Success');\r\n      } else {\r\n        this.toast.warning('Data was not saved', 'Warning');\r\n      }\r\n    });\r\n  }\r\n\r\n  public onDmoDelete(data: IDMComponent) {\r\n    const modal = this.msg.showMessage('Warning', {\r\n      header: 'Delete DMO',\r\n      body: `Are you sure you want to delete DMO ${data.dmoName} ?`,\r\n      btnText: 'Delete',\r\n      checkboxText: 'Yes, delete this object',\r\n      isDelete: true,\r\n      isNewDesign:true,\r\n      callback: () => {\r\n        this.dmApi\r\n          .deleteDmo(data.dmoId.toString(), this.dmog.root.BMId.toString())\r\n          .subscribe((success) => success && this.dm.getBM());\r\n      },\r\n    });\r\n  }\r\n\r\n  private async getDmoDetails(uiData: DMOUI, data: Partial<DMComponent> = {}) {\r\n    const newObject = Object.keys(data).length === 0 || data.fromApi === false;\r\n    const modal = this.msg.showComponent(DmoDetailComponent, {\r\n      newObject,\r\n      data: data as IDMComponent,\r\n      uiData,\r\n      parent: this._dmog,\r\n      readonly: this.readonly,\r\n    });\r\n    return (await modal.result) as IDMComponent;\r\n  }\r\n\r\n  private async saveDmoDetails(res: IDMComponent) {\r\n    const originalDmoData = this._dmog.findDmoAndThen(res.dmoName, (info) =>\r\n      this.replaceDmo(info, res)\r\n    );\r\n    try {\r\n      return await this.dmApi.saveObject(res, this.dmog.root).toPromise();\r\n    } catch (error) {\r\n      if (originalDmoData) {\r\n        this._dmog.findDmoAndThen(originalDmoData.dmo.dmoName, (info) =>\r\n          this.replaceDmo(info, originalDmoData.dmo)\r\n        );\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private replaceDmo(\r\n    info: FormDataComponentInfo,\r\n    replaceWith: IDMComponent | null\r\n  ) {\r\n    if (!info) return;\r\n    const { rowIndex: r, columnIndex: c, dmoIndex: d } = info;\r\n    const rows = this.dmog.formData.components;\r\n    let newComponents = rows[r].columns[c].components.slice();\r\n    if (replaceWith === null) {\r\n      newComponents = newComponents.filter(\r\n        (dmo) => dmo.dmoName !== info.dmo.dmoName\r\n      );\r\n      this.dmog.removeChild(info.dmo.dmoName);\r\n    } else {\r\n      newComponents[d] = replaceWith;\r\n      this.dmog.addChild(new DMComponent(replaceWith, this.dmog));\r\n    }\r\n    rows[r].columns[c].components = newComponents;\r\n  }\r\n\r\n  async openConditionPopup(item: IDMComponent) {\r\n    const uiData = this.formsControls.find((c) => c.type === item.type);\r\n    const parent = this._dmog.childrenMap[item.dmoName];\r\n    const modal = this.msg.showComponent(DmoConditionComponent, {\r\n      uiData,\r\n      parent,\r\n      readonly: this.readonly,\r\n    });\r\n    const res = await modal.result;\r\n    if (!res) {\r\n      return;\r\n    }\r\n    const { payload, deletedConditions } = res as {\r\n      payload: any;\r\n      deletedConditions: IConditionBody[];\r\n    };\r\n    this.dmApi.saveDmoCondition(payload).subscribe((success) => {\r\n      if (success) {\r\n        const deleteCondition = (id: string) =>\r\n          this.dmApi.deleteDmoCondition(id).pipe(\r\n            filter((success) => success),\r\n            map((_) => id)\r\n          );\r\n        const actualDeletingConditions = intersectionBy(\r\n          parent.conditions,\r\n          deletedConditions,\r\n          'Id'\r\n        );\r\n\r\n        from(actualDeletingConditions.map((c) => deleteCondition(c.Id)))\r\n          .pipe(\r\n            mergeAll(),\r\n            finalize(\r\n              () =>\r\n                (parent.conditions =\r\n                  payload.dmoCondition[parent.guid].Condition)\r\n            )\r\n          )\r\n          .subscribe();\r\n      }\r\n    });\r\n  }\r\n  checkIsStaticJsonGrid(item):boolean{\r\n     \r\n    if(this.dmog){\r\n      if(this.dmog?.Children?.length > 0 && this.dmog?.Type=='JSONStaticGrid')\r\n        this.IsJsonStaticGridDmo=true;\r\n      else\r\n      this.IsJsonStaticGridDmo=false;\r\n     if(item.type!='jsonstaticgrid'\r\n       && this.dmog.Type=='JSONStaticGrid')\r\n        return true;\r\n      else if(this.dmog?.Type!='JSONStaticGrid' \r\n      && item.type=='jsonstaticgrid')\r\n        return true;\r\n      }  \r\n      return false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.componentActive = false;\r\n  }\r\n}\r\n", "<div class=\"form-view row\">\r\n  <div class=\"col-sm-12\" cdkDropListGroup>\r\n      \r\n    <div class=\"col-sm-3 leftcol\" *ngIf=\"!readonly\">\r\n      <div class=\"leftlayoutdmotyp\">\r\n        <div class=\"leftlayout1\">\r\n          <label class=\"input-label\" for=\"ex2\">Data Model Objects</label>\r\n        </div>\r\n        <div class=\"formcomponents\">\r\n          <div \r\n            class=\"list-group drag-list\" \r\n            id=\"form-controls\"\r\n            cdkDropList\r\n            #controlList=\"cdkDropList\"\r\n            [cdkDropListData]=\"formsControls\"\r\n            >\r\n            <li\r\n              class=\"list-group-item list-group-item-action list-group-item-success drag-list-item\"\r\n              cdkDrag\r\n              [cdkDragDisabled]=\"readonly || checkIsStaticJsonGrid(item)\" \r\n              *ngFor=\"let item of formsControls\"\r\n            >\r\n              <i [class]=\"item.class\" style=\"margin-right: 5px\"></i>{{ item.name }}\r\n            </li>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div \r\n      class=\"dmo-columns\"\r\n      [class]=\"readonly ? 'col-sm-12' : 'col-sm-9'\" \r\n      *ngFor=\"let row of dmog?.formData?.components\"\r\n      (mouseenter)=\"row.display = true\"\r\n      (mouseleave)=\"row.display = false\"\r\n      >\r\n      <ng-container *ngFor=\"let column of row?.columns\">\r\n        <div class=\"drag-container\" *ngIf=\"column?.components as dmos\" [class.span-2]=\"column.width === 100\">\r\n          <div class=\"col-sm-12 list-group drag-list\"\r\n          cdkDropList\r\n          [cdkDropListData]=\"dmos\"\r\n          (cdkDropListDropped)=\"onDrop($event)\">\r\n          <div *ngIf=\"dmos.length === 0\" class=\"alert alert-info\" role=\"alert\">\r\n            Drag and Drop a form component\r\n          </div>\r\n          <div \r\n              *ngFor=\"let dmo of dmos\" \r\n              (mouseenter)=\"dmo.display = true\" \r\n              (mouseleave)=\"dmo.display = false\" \r\n              style=\"position: relative;\">\r\n              <div class=\"item-actions dmo-actions\" [class.active]=\"dmo.display\">\r\n                <ng-container *ngTemplateOutlet=\"itemActions; context: {item: dmo}\"></ng-container>    \r\n              </div>\r\n              <app-dmo\r\n                class=\"drag-list-item\"\r\n                [dmo]=\"dmo\"\r\n                cdkDrag\r\n                [cdkDragDisabled]=\"readonly\"\r\n              ></app-dmo>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n<ng-template #itemActions let-item=\"item\">\r\n  <ng-container *ngIf=\"!readonly\">\r\n    <a\r\n      class=\"item-action\" \r\n      style=\"color: rgb(187, 53, 53);\" \r\n      ngbTooltip=\"Remove\" \r\n      (click)=\"onDmoDelete(item)\">\r\n      <i class=\"fa fa-trash-alt\"></i>\r\n    </a> \r\n    <a\r\n      class=\"item-action\" \r\n      ngbTooltip=\"Clone\" \r\n      (click)=\"onDmoClone(item)\">\r\n      <i class=\"fa fa-copy\"></i>\r\n    </a> \r\n  </ng-container>  \r\n  <a\r\n    class=\"item-action\" \r\n    (click)=\"openConditionPopup(item)\" \r\n    ngbTooltip=\"Conditions\">\r\n    <i class=\"fa fa-cogs\"></i>\r\n  </a>\r\n  <a\r\n    class=\"item-action\" \r\n    (click)=\"onDmoEdit(item)\" \r\n    ngbTooltip=\"Edit\">\r\n    <i class=\"fa fa-wrench\"></i>\r\n  </a>                    \r\n</ng-template>\r\n", "import { ComponentType } from '@angular/cdk/portal';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UtilService } from '@app/shared/services/util.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MessageService } from '@app/core';\r\nimport { FormViewApiService } from '@app/core/services/form-view-api.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TabComponent } from '../Shared/tab/tab.component';\r\nimport { DataModelerApiService } from './services/data-modeler-api.service';\r\nimport * as classes from './classes';\r\nimport * as components from './components';\r\nimport * as models from './models';\r\nimport { ObjectType } from './models';\r\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { catchError, EMPTY, map, Observable, of, retry, switchMap } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { GenerateXmlComponent } from '../wf/wfd/components/generatexml/generatexml.component';\r\nimport { NgIf, NgFor, NgSwitch, NgSwitchCase } from '@angular/common';\r\nimport { DmHeaderComponent } from './components/dm-header/dm-header.component';\r\nimport { DmMenuComponent } from './components/dm-menu/dm-menu.component';\r\nimport { DmBreadcrumbsComponent } from './components/dm-breadcrumbs/dm-breadcrumbs.component';\r\nimport { TabsComponent } from '../Shared/tabs/tabs.component';\r\nimport { DmogFormViewComponent } from './components/dmog-form-view/dmog-form-view.component';\r\n\r\ntype ObjectClass = classes.ObjectClass;\r\n\r\n@Component({\r\n    selector: 'app-data-modeler',\r\n    templateUrl: './data-modeler.component.html',\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        DmHeaderComponent,\r\n        DmMenuComponent,\r\n        DmBreadcrumbsComponent,\r\n        TabsComponent,\r\n        NgFor,\r\n        TabComponent,\r\n        NgSwitch,\r\n        NgSwitchCase,\r\n        DmogFormViewComponent,\r\n    ],\r\n})\r\nexport class DataModelerComponent implements OnInit {\r\n  public bm: classes.BM;\r\n  private readonly encryptedBMId = this.route.snapshot.queryParams.BMID;\r\n\r\n  contactsImageUrl = UtilService.getUrlForImage('/assets/styles/images/contacts-bmo.jpg');\r\n  attachmentsImageUrl = UtilService.getUrlForImage('/assets/styles/images/attachments-bmo.jpg');\r\n  documentsImageUrl = UtilService.getUrlForImage('/assets/styles/images/documents-bmo.jpg');\r\n  subprocessImageUrl = UtilService.getUrlForImage('/assets/styles/images/subprocess-bmo.jpg');\r\n  childprocessImageUrl = UtilService.getUrlForImage('/assets/styles/images/childprocess-bmo.jpg');\r\n  sharedChildProcessImageUrl = UtilService.getUrlForImage('/assets/styles/images/shared-child-process-bmo.jpg');\r\n  backsImageUrl = UtilService.getUrlForImage('/assets/styles/images/back-icon-black.png');\r\n\r\n  get tabActions() {\r\n    return { edit: true, delete: !this.bm.published };\r\n  }\r\n\r\n  get allowNewDMOG() {\r\n    return (\r\n      this.bm?.selectedBMOG?.Children?.length &&\r\n      this.bm?.selectedBMO?.BmoType === 'Forms' &&\r\n      !this.bm.selectedBMO?.shared &&\r\n      !this.bm.published\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly msg: MessageService,\r\n    private readonly toast: ToastrService,\r\n    private readonly dmApi: DataModelerApiService,\r\n    private readonly formViewApi: FormViewApiService\r\n  ) {}\r\n    \r\n  ngOnInit() {  \r\n    this.getBM();\r\n  }\r\n\r\n  public getBM() {\r\n    const { ProcessName, Name, Version } = this.route.snapshot.data?.bm as models.IBM;\r\n    this.dmApi.getData(ProcessName, Name, Version).subscribe((bm) => (this.bm = bm));\r\n  }\r\n\r\n  public onTabClick(tab: TabComponent) {\r\n    if (tab.disabled) {\r\n      this.getObjectDetails(tab.data);\r\n    }\r\n  }\r\n\r\n  public onTabSelect(tab: TabComponent<ObjectClass>) {\r\n    this.bm.updateSelectedObjects(tab.data);\r\n  }\r\n\r\n  public onTabEdit(tab: TabComponent<ObjectClass>) {\r\n    this.openObjectDetails(tab.data);\r\n  }\r\n\r\n  public openObjectDetails(obj: ObjectClass) {\r\n    this.getObjectDetails(obj.parent as ObjectClass, obj);  \r\n  }\r\n\r\n  public onTabRemove(tab: TabComponent<ObjectClass>) {\r\n    const obj = tab.data;\r\n     // Determine the class of the object dynamically\r\n  let className = '';\r\n  if (obj instanceof classes.BM) {\r\n    className = 'BM';\r\n  } else if (obj instanceof classes.BMOG) {\r\n    className = 'View';\r\n  } else if (obj instanceof classes.BMO) {\r\n    className = 'Section';\r\n  } else if (obj instanceof classes.DMOG) {\r\n    className = 'Card';\r\n  }\r\n    const name = (obj as any)?.DisplayName || obj.Name;\r\n    this.msg.showMessage('Warning', {\r\n      header: `Delete ${className}`,\r\n      body: `Are you sure you want to delete ${name}?`,\r\n      btnText: 'Delete',\r\n      checkboxText: 'Yes, delete this object',\r\n      isDelete: true,\r\n      isNewDesign: true,\r\n      callback: () => this.deleteObject(obj),\r\n    });\r\n  }\r\n\r\n  private deleteObject(obj: ObjectClass) {\r\n    const parent = obj.parent;\r\n\r\n    // Store obj index in case optimistic update fails\r\n    const idx = parent.Children.findIndex((id) => id === obj.id);\r\n\r\n    // Optimistic ui update\r\n    parent.removeChild(obj.id);\r\n\r\n    // Rollback optimistic update if something goes wrong\r\n    const rollback = () => parent.addChildAt(obj as any, idx);\r\n\r\n    this.dmApi.deleteObject(obj, this.bm).subscribe({\r\n      next: (success) => (!success ? rollback() : this.getBM()),\r\n      error: (_) => rollback(),\r\n    });\r\n  }\r\n\r\n\r\n  public onNewVersion() {\r\n    this.msg.showMessage('Warning', {\r\n      header: 'New Version',\r\n      body: 'Are you sure you want to create new version?',\r\n      callback: () => {\r\n        this.dmApi.createBMVersion(this.encryptedBMId).subscribe((message) => {\r\n          this.toast.success(message);\r\n        });\r\n      },\r\n      btnText: 'Create New Version',\r\n      isConfirmation: true,\r\n    });\r\n  }\r\n\r\n  dropped(e: {from: number, to: number}, parent: ObjectClass) {\r\n    // if ('BMID' in parent) return;\r\n    moveItemInArray(parent.Children, e.from, e.to);\r\n    this.dmApi.reorderChildren(parent)\r\n      .subscribe({\r\n        next: (_) => this.getBM(),\r\n        error: (_) => moveItemInArray(parent.Children, e.to, e.from),\r\n      });\r\n  }\r\n\r\n  public onGenerateXML() {\r\n    this.formViewApi.generateXML('bm', this.bm.ProcessName, this.bm.Version).subscribe((success) => {\r\n      success && this.msg.showMessage('Success', { body: 'JSON generated successfully.' });\r\n    },\r\n    (error)=>{\r\n    this.showErrorModal()     \r\n  });\r\n  }\r\nprivate showErrorModal(): void {\r\n  // Code to open the modal\r\n  const dialogRef = this.dialog.open(GenerateXmlComponent, {\r\n    width: '656px',\r\n    disableClose: true,\r\n    panelClass: 'custom-dialog-container',\r\n    data: {\r\n      type: 'bm',\r\n      processName: this.bm.ProcessName,\r\n      verNo: this.bm.Version\r\n    }\r\n  });\r\n\r\n  dialogRef.componentInstance.closeModal.subscribe(() => {\r\n    dialogRef.close();\r\n  });\r\n}\r\n\r\n  public changeMode(mode: models.BMMode) {\r\n    if (mode === this.bm.Mode) return;\r\n    this.dmApi.changeMode(this.bm.BMId, mode).subscribe((success) => {\r\n      if (success) {\r\n        this.bm.update({ Mode: mode });\r\n      }\r\n    });\r\n  }\r\n\r\n  private async getObjectDetails(parent: ObjectClass, data: Partial<ObjectClass> = {}) {\r\n    const newObject = Object.keys(data).length === 0;\r\n    const {component} = this.determineClassAndComponent(parent, data);\r\n\r\n    const modal = this.msg.showComponent(component, {data: data as ObjectClass, parent, newObject});\r\n    const res = await modal.result;\r\n    if (!res) return;\r\n\r\n    if (parent === undefined && data instanceof classes.BM) {\r\n      this.saveBMDetails(res);\r\n      return;\r\n    }\r\n    if (parent instanceof classes.BM) {\r\n      const saveSharedDmogs = (id: string) => {\r\n        if (res.shared.bmoIds === '-1' && !newObject) {\r\n          return EMPTY;\r\n        }\r\n        const bmogIdToSend = res.shared.bmogId === \"-1\" ? id : res.shared.bmogId;\r\n        return this.dmApi.saveSharedBmos(bmogIdToSend, res.shared.bmoIds);\r\n      }\r\n      this.saveObjectDetails(parent, data, res.payload, saveSharedDmogs)\r\n    }\r\n   \r\n    else if (parent instanceof classes.BMOG) {\r\n      const saveSharedDmogs = (id: string) => {\r\n        if (res.shared.dmogIds === '-1' && !newObject) {\r\n          return EMPTY;\r\n        }\r\n        \r\n        const bmoIdToSend = res.shared.bmoid === \"-1\" ? id : res.shared.bmoid;\r\n        return this.dmApi.saveSharedDmogs(bmoIdToSend, res.shared.dmogIds);\r\n      }\r\n      this.saveObjectDetails(parent, data, res.payload, saveSharedDmogs)\r\n    }\r\n    else if (parent instanceof classes.BMO) {\r\n      const saveSharedDmos = (id: string) => {\r\n        if (res.shared.leftDMOGuids === '-1' && res.shared.rightDMOGuids === '-1' && !newObject) {\r\n          return EMPTY;\r\n        }\r\n        return this.dmApi.saveSharedDmos(res.shared);\r\n      }\r\n      this.saveObjectDetails(parent, data, res.payload, saveSharedDmos)\r\n    } else {\r\n      this.saveObjectDetails(parent, data, res);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  public routeBack() {\r\n    window.history.back();\r\n  }\r\n\r\n  private saveBMDetails(payload: models.IBM) {\r\n    this.dmApi.saveBM(payload).subscribe((success) => {\r\n      if (success) {\r\n        this.bm.update(payload);\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveObjectDetails(parent: ObjectClass, obj: Partial<ObjectClass> = {}, payload: models.ObjectType, finalize?: (id: string) => Observable<any>) {\r\n    const newObject = Object.keys(obj).length === 0;\r\n    // Store data in case optimistic update fails\r\n    const original = {...obj};\r\n\r\n    // Optimistic ui update\r\n    if (newObject) {\r\n      const {childClass} = this.determineClassAndComponent(parent);\r\n      const child = new childClass(payload, parent);\r\n      parent.addChild(child);\r\n    } else {\r\n      obj.update(payload);\r\n    }\r\n\r\n    // Rollback optimistic update if something goes wrong\r\n    const rollback = () => {\r\n      if (newObject) {\r\n        parent.removeChild(payload.id);\r\n      } else {\r\n        obj.update(original);\r\n      }\r\n    };\r\n\r\n    this.dmApi.saveObject(payload, this.bm)\r\n    .pipe(\r\n      switchMap(id => {\r\n        if (finalize) {\r\n         return finalize(id).pipe(map(() => id)); \r\n        }\r\n        return of(id)\r\n      })\r\n    )\r\n    .subscribe({\r\n      next: (success) => {\r\n        if (!success) rollback();\r\n        else {\r\n          this.bm.cacheObjectId(payload);\r\n          // this.getBM();\r\n        }\r\n      },\r\n      error: (_) => rollback(),\r\n      complete: () => this.getBM(),\r\n    });\r\n  }\r\n\r\n  private determineClassAndComponent(parent: ObjectClass, data: Partial<ObjectClass> = {}) {\r\n    let component: ComponentType<models.ObjectDetail<models.ObjectType, models.ObjectType>>;\r\n    let childClass: any;\r\n    if (parent instanceof classes.BM) {\r\n      component = components.BmogDetailComponent;\r\n      childClass = classes.BMOG;\r\n    } else if (parent instanceof classes.BMOG) {\r\n      component = components.BmoDetailComponent;\r\n      childClass = classes.BMO;\r\n    } else if (parent instanceof classes.BMO) {\r\n      component = components.DmogDetailComponent;\r\n      childClass = classes.DMOG;\r\n    } else if (parent === undefined && data instanceof classes.BM) {\r\n      component = components.BmDetailComponent;\r\n      childClass = undefined;\r\n    }\r\n    return {component, childClass};\r\n  }\r\n\r\n}\r\n", "<ng-container *ngIf=\"bm\">\r\n  <div class=\"breadcrumbs p-1 mb-1\" style=\"background-color: #fff;\">\r\n    <a (click)=\"routeBack()\">\r\n      <img [src]=\"backsImageUrl\" style=\"filter: var(--plx-app-list-icon-filter);\" width=\"20px\">\r\n      <span>Back</span>\r\n    </a> \r\n  </div>\r\n  <app-dm-header></app-dm-header>\r\n  <app-dm-menu \r\n    [mode]=\"bm.Mode\"\r\n    (modeChange)=\"changeMode($event)\"\r\n    (newVersion)=\"onNewVersion()\"\r\n    (generateXml)=\"onGenerateXML()\">\r\n  </app-dm-menu>\r\n  <app-dm-breadcrumbs [bm]=\"bm\" (select)=\"openObjectDetails($event)\"></app-dm-breadcrumbs>\r\n  \r\n  <section >\r\n    <div class=\"col-sm-12\">\r\n      <app-tabs \r\n        (tabSelected)=\"onTabSelect($event)\" \r\n        (tabClicked)=\"onTabClick($event)\"  \r\n        (tabEdit)=\"onTabEdit($event)\"\r\n        (tabRemove)=\"onTabRemove($event)\"\r\n        [actions]=\"tabActions\">\r\n        <ng-container *ngFor=\"let bmogId of bm?.Children\">\r\n          <app-tab\r\n            *ngIf=\"bm.childrenMap[bmogId] as bmog\"\r\n            [title]=\"bmog.Name\"\r\n            [data]=\"bmog\"\r\n            [active]=\"bmog.id === bm.selectedBMOG?.id\"\r\n            [shared]=\"bmog.shared\"\r\n          ></app-tab>\r\n        </ng-container>\r\n        <app-tab title=\"Add BMOG\" [disabled]=\"true\" [data]=\"bm\" *ngIf=\"!bm.published\"></app-tab>\r\n      </app-tabs>\r\n  \r\n      <app-tabs \r\n        (tabSelected)=\"onTabSelect($event)\" \r\n        (tabClicked)=\"onTabClick($event)\"  \r\n        (tabEdit)=\"onTabEdit($event)\"\r\n        (tabRemove)=\"onTabRemove($event)\"\r\n        (dropped)=\"dropped($event, bm?.selectedBMOG)\"\r\n        [actions]=\"tabActions\">\r\n        <ng-container *ngFor=\"let bmoId of bm?.selectedBMOG?.Children\">\r\n          <app-tab\r\n            *ngIf=\"bm.selectedBMOG.childrenMap[bmoId] as bmo\"\r\n            [title]=\"bmo.DisplayName\"\r\n            [data]=\"bmo\"\r\n            [active]=\"bmo.id === bm.selectedBMO?.id\"\r\n            [shared]=\"bmo.shared\"\r\n          ></app-tab>\r\n        </ng-container>\r\n        <app-tab *ngIf=\"bm?.Children.length > 0 && !bm.published\" [disabled]=\"true\" [data]=\"bm.selectedBMOG\" title=\"Add BMO\"></app-tab>\r\n      </app-tabs>\r\n  \r\n      <app-tabs \r\n        (tabSelected)=\"onTabSelect($event)\" \r\n        (tabClicked)=\"onTabClick($event)\"  \r\n        (tabEdit)=\"onTabEdit($event)\"\r\n        (tabRemove)=\"onTabRemove($event)\"\r\n        (dropped)=\"dropped($event, bm?.selectedBMO)\"\r\n        [actions]=\"tabActions\">\r\n        <ng-container *ngFor=\"let dmogId of bm?.selectedBMO?.Children\">\r\n          <app-tab\r\n            *ngIf=\"bm.selectedBMO.childrenMap[dmogId] as dmog\"\r\n            [title]=\"dmog.DisplayName\"\r\n            [data]=\"dmog\"\r\n            [active]=\"dmog.id === bm.selectedDMOG?.id\"\r\n            [shared]=\"bm.selectedBMO.shared || dmog.shared\"\r\n          ></app-tab>\r\n        </ng-container>\r\n        <app-tab *ngIf=\"allowNewDMOG\" [disabled]=\"true\" [data]=\"bm.selectedBMO\" title=\"Add DMOG\"></app-tab>\r\n      </app-tabs>\r\n    </div>\r\n  </section>\r\n  <section aria-label=\"Modal heading text content\" class=\"modal-body\" role=\"document\" [ngSwitch]=\"bm.selectedBMO?.BmoType\">\r\n    <app-dmog-form-view\r\n      *ngSwitchCase=\"'Forms'\"\r\n      [dmog]=\"bm.selectedDMOG\"\r\n      [readonly]=\"bm.published || bm.selectedDMOG?.shared || bm.selectedBMO?.shared\"   \r\n    ></app-dmog-form-view>\r\n    <img \r\n      *ngSwitchCase=\"'Contacts'\"\r\n      width=\"100%\"\r\n      [src]=\"contactsImageUrl\" \r\n      alt=\"Contacts\">\r\n    <img \r\n      *ngSwitchCase=\"'Attachments'\"\r\n      width=\"100%\"\r\n      [src]=\"attachmentsImageUrl\" \r\n      alt=\"Contacts\">\r\n    <img \r\n      *ngSwitchCase=\"'Documents'\"\r\n      width=\"100%\"\r\n      [src]=\"documentsImageUrl\" \r\n      alt=\"Contacts\">\r\n    <img \r\n      *ngSwitchCase=\"'Subprocess'\"\r\n      width=\"100%\"\r\n      [src]=\"subprocessImageUrl\" \r\n      alt=\"Contacts\">\r\n    <img \r\n      *ngSwitchCase=\"'ChildProcess'\"\r\n      width=\"100%\"\r\n      [src]=\"childprocessImageUrl\" \r\n      alt=\"Contacts\">\r\n    <img \r\n      *ngSwitchCase=\"'SharedChildProcess'\"\r\n      width=\"100%\"\r\n      [src]=\"sharedChildProcessImageUrl\" \r\n      alt=\"Contacts\">\r\n\r\n  </section>\r\n\r\n</ng-container>", "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DataModelerComponent } from './data-modeler.component';\r\n\r\nconst routes: Routes = [{ path: '', component: DataModelerComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n  \r\n})\r\nexport class DataModelerRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DataModelerRoutingModule } from './data-modeler-routing.module';\r\nimport { DataModelerComponent } from './data-modeler.component';\r\nimport { SharedModule } from '../Shared/shared.module';\r\n\r\nimport * as fromComponents from './components';\r\nimport * as lib  from '@app/admin/lib';\r\n\r\n@NgModule({\r\n    imports: [\r\n    CommonModule,\r\n    DataModelerRoutingModule,\r\n    SharedModule,\r\n    lib.ObjectControlModule,\r\n    DataModelerComponent,\r\n    fromComponents.BmDetailComponent,\r\n    fromComponents.DmoComponent,\r\n    fromComponents.DmoDetailComponent,\r\n    fromComponents.BmogDetailComponent,\r\n    fromComponents.BmoDetailComponent,\r\n    fromComponents.DmogDetailComponent,\r\n    fromComponents.DmoConditionComponent,\r\n    fromComponents.DmogFormViewComponent,\r\n    fromComponents.DmHeaderComponent,\r\n    fromComponents.DmMenuComponent,\r\n    fromComponents.DmBreadcrumbsComponent,\r\n],\r\n    providers: []\r\n})\r\nexport class DataModelerModule { }\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEI,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,EAAA;;;;;AACtB,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;;;;AAAjB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,UAAA;;;;;AAQnB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAIE,IAAA,qBAAA,WAAA,KAAA;AAFA,IAAA,qBAAA,UAAA,UAAA,EAAkB,cAAA,OAAA,IAAA;;;;;AAHtB,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,gEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAWH,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,qDAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;ADFjB,IAAO,oBAAP,MAAO,2BAA0B,aAA2B;EAblE,cAAA;;AAcE,SAAA,QAAQ;AAIA,SAAA,SAAS,WAAW,MAAM;;EAElC,WAAQ;AACN,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,KAAK,KAAK,IAAI;MACrB,aAAa,CAAC,KAAK,KAAK,aAAa,CAAC,WAAW,QAAQ,CAAC;MAC1D,SAAS,CAAC,KAAK,KAAK,SAAS,CAAC,WAAW,QAAQ,CAAC;MAClD,aAAa,CAAC,KAAK,KAAK,WAAW;MACnC,QAAQ,CAAC,KAAK,OAAO,KAAK,OAAK,EAAE,OAAO,KAAK,KAAK,MAAM,GAAG,CAAC,WAAW,QAAQ,CAAC;MAChF,oBAAoB,CAAC,CAAC,KAAK,KAAK,kBAAkB;MAClD,aAAa,CAAC,KAAK,KAAK,WAAW;KACpC;AAED,SAAK,WAAW;MACd,IAAI,cAAc,EAAC,MAAM,QAAQ,UAAU,MAAM,UAAU,KAAI,CAAC;MAChE,IAAI,cAAc,EAAC,MAAM,eAAe,OAAO,iBAAiB,UAAU,KAAI,CAAC;MAC/E,IAAI,cAAc,EAAC,MAAM,WAAW,UAAU,KAAI,CAAC;MACnD,IAAI,cAAc,EAAC,MAAM,eAAe,OAAO,gBAAgB,UAAU,KAAI,CAAC;MAC9E,IAAI,cAAc;QAChB,MAAM;QAAU,MAAM;QACtB,UAAU;QAAM,SAAS,GAAG,KAAK,MAAM;OACxC;MACD,IAAI,cAAc,EAAC,MAAM,sBAAsB,OAAO,uBAAuB,MAAM,SAAQ,CAAC;MAC5F,IAAI,cAAc,EAAC,MAAM,eAAe,OAAO,oBAAoB,MAAM,QAAQ,OAAO,UAAS,CAAC;;EAEtG;EAEA,WAAQ;AACN,SAAK,YAAY;AACjB,QAAI,KAAK,KAAK,OAAO;AACnB,YAAM,MAAM,KAAK,KAAK;AACtB,YAAM,UAAe,gDAChB,KAAK,KAAK,eAAc,IACxB,MAFgB;QAGnB,QAAQ,IAAI,QAAQ,OAAO,IAAI;QAC/B,oBAAoB,CAAC,IAAI;;AAE3B,WAAK,OAAO,KAAK,OAAc;AAC/B,WAAK,IAAI,MAAM,OAAO;IACxB;EACF;;;;;8HA7CW,kBAAiB,IAAA,qBAAjB,kBAAiB;MAAA;IAAA,GAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,cAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,YAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACtB9B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,QAAA,qBAAA,GAAA,iCAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,iCAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,iBAAS,IAAA,IAAA,MAAA;QAAW,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAEnG,QAAA,oBAAA,GAAA,IAAA;AAEA,QAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,OAAA,CAAA;AAErB,QAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,gBAAA,CAAA;AAQF,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA4B,IAAA,UAAA,CAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,iBAAS,IAAA,SAAA;QAAU,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EAED;;;AA1BA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;AAKD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA;AAYyC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,KAAA,SAAA;;;MDPzE;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;MACA;IAAS,GAAA,eAAA,GAAA,iBAAA,EAAA,CAAA;EAAA;;;6EAGJ,mBAAiB,EAAA,WAAA,qBAAA,UAAA,gFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGpB1B,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,EAAA;;;;;AACtB,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;;;;AAAjB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,UAAA;;;;;AAQnB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAIE,IAAA,qBAAA,WAAA,KAAA;AAFA,IAAA,qBAAA,UAAA,UAAA,EAAkB,cAAA,OAAA,IAAA;;;;;AAHtB,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,iEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;;AAOL,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyC,GAAA,OAAA,EAAA,EACM,GAAA,SAAA,EAAA;AACd,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;AAC5C,IAAA,yBAAA,GAAA,SAAA,EAAA;AAA6B,IAAA,iBAAA,GAAA,gBAAA;AAAc,IAAA,uBAAA,EAAQ;AAGrD,IAAA,yBAAA,GAAA,mBAAA,EAAA;AASE,IAAA,qBAAA,OAAA,SAAA,kEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAO,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,UAAA,SAAA,qEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChB,OAAA,cAAA,MAAA,CAAqB;IAAA,CAAA,EAAC,WAAA,SAAA,sEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACrB,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AAEnC,IAAA,uBAAA,EAAkB;;;;AAZhB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,EAAkB,mBAAA,OAAA,qBAAA,EACuB,eAAA,OAAA,YAAA,EACb,cAAA,OAAA,WAAA,EACF,YAAA,KAAA,EACR,aAAA,OAAA,SAAA;;;;;AAgBpB,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,sDAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;ADhBjB,IAAO,qBAAP,MAAO,4BAA2B,aAA8B;EAiBpE,YACE,KACA,IACQ,KACS,QAAqB;AAEtC,UAAM,KAAK,EAAE;AAHL,SAAA,MAAA;AACS,SAAA,SAAA;AApBnB,SAAA,cAAoB;AACb,SAAA,QAAQ;AAGP,SAAA,cAAc,WAAW,OAAO;AAChC,SAAA,cAAY,WAAW,WAAW;AAClC,SAAA,SAAS,WAAW,MAAM;AAK1B,SAAA,uBAAuB,CAAA;AAC/B,SAAA,WAAW,CAAA;AACX,SAAA,wBAAwB,CAAA;AACxB,SAAA,gBAAgB;AAyPhB,SAAA,eAAe,CAAC,SAAqB,KAAK;AAC1C,SAAA,cAAc,CAAC,SAAqB,KAAK;AAEzC,SAAA,YAAY,CAAC,SACb,KAAK,IAAI,eAAe,KAAK,OAAO,SAAQ,GAAI,KAAK,OAAO,SAAQ,CAAE,EAAE,KACtE,IAAI,CAAC,YAAW;AACd,UAAI,CAAC,SAAS;AACZ,aAAK,OAAO,QAAQ,4BAA4B;MAClD;IACF,CAAC,CAAC;AAcJ,SAAA,iBAAiB,CAAC,UAAuB;AACvC,WAAK,wBAAwB;AAC7B,WAAK,gBAAgB;IACvB;AAEA,SAAA,kBAAkB,MAAK;AACrB,WAAK,SAAS,QAAQ,CAAC,SAAQ;AAC7B,cAAM,aAAa,KAAK,sBAAsB,KAAK,CAAC,SAAS,KAAK,QAAQ,KAAK,GAAG;AAClF,aAAK,WAAW;AAChB,aAAK,WAAW;MAClB,CAAC;AACD,WAAK,WAAW,KAAK;IACvB;AAnRE,SAAK,cAAc;MACjB,EAAC,aAAa,WAAW,SAAS,CAAC,SAAkB,KAAK,gBAAgB,IAAI,EAAC;MAC/E,EAAC,aAAa,kBAAkB,SAAS,CAAC,cAAsB,KAAK,uBAAuB,SAAS,EAAC;;EAE1G;EAEA,iBAAc;AACZ,SAAK,WAAW,KAAK,eAAc;AACnC,SAAK,wBAAwB,KAAK,SAAS,OAAO,UAAQ,KAAK,QAAQ;AAEvE,SAAK,kBAAkB,KAAK,IAAI,kBAAkB,KAAK,OAAO,OAAO,KAAK,SAAQ,CAAE,EACjF,KAAK,KAAK,kBAAkB,cAAc,CAAC;AAC9C,SAAK,oBAAoB,KAAK,IAAI,oBAAoB,KAAK,OAAO,OAAO,KAAK,SAAQ,CAAE,EACrF,KAAK,KAAK,kBAAkB,gBAAgB,CAAC;AAChD,SAAK,qBAAqB,KAAK,IAAI,eAAe,KAAK,OAAO,OAAO,SAAS,EAC3E,KAAK,KAAK,kBAAkB,sBAAsB,CAAC;EACxD;EAEA,WAAQ;AACN,UAAM,aAAa,CAAC,GAAG,eAAe;AACtC,QAAI,KAAK,WAAW;AAClB,YAAM,UAAU,OAAO,OAAO,KAAK,OAAO,KAAK,WAAW,EACvD,QAAQ,UAAQ,OAAO,OAAO,KAAK,WAAW,CAAC;IAEpD;AAAC;AACD,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,KAAK,KAAK,MAAM,EAAC,YAAY,UAAU,OAAM,CAAC;MACrD,aAAa,CAAC,KAAK,KAAK,aAAa,CAAC,WAAW,QAAQ,CAAC;MAC1D,SAAS,CAAC,KAAK,KAAK,WAAW,KAAK,OAAO,SAAS,CAAC,WAAW,QAAQ,CAAC;MACzE,SAAS,CAAC,KAAK,YAAY,KAAK,OAAK,EAAE,QAAQ,KAAK,KAAK,OAAO,GAAG,CAAC,WAAW,QAAQ,CAAC;MACxF,QAAQ,CAAC,KAAK,OAAO,KAAK,OAAK,EAAE,QAAQ,KAAK,KAAK,UAAU,OAAO,OAAO,GAAG,CAAC,WAAW,QAAQ,CAAC;MACnG,WAAW,CAAC,KAAK,KAAK,WAAW,CAAC,WAAW,QAAQ,CAAC;MACtD,UAAU,CAAC,KAAK,KAAK,QAAQ;MAC7B,cAAc,CAAC,KAAK,KAAK,YAAY;MACrC,gBAAgB,CAAC,KAAK,KAAK,cAAc;MACzC,qBAAqB,CAAC,KAAK,KAAK,mBAAmB;MACnD,sBAAsB,CAAC,KAAK,KAAK,oBAAoB;KACtD;AAED,SAAK,WAAW;MACd,IAAI,cAAc,EAAC,MAAM,QAAQ,UAAU,CAAC,KAAK,WAAW,UAAU,KAAI,CAAC;MAC3E,IAAI,cAAc,EAAC,MAAM,eAAe,OAAO,iBAAiB,UAAU,KAAI,CAAC;MAC/E,IAAI,cAAc,EAAC,MAAM,WAAW,UAAU,KAAI,CAAC;MACnD,IAAI,cAAc;QAChB,MAAM;QAAW,OAAO;QAAQ,MAAM;QACtC,UAAU;QAAM,SAAS,GAAG,KAAK,OAAO,eAAa,SAAQ,KAAK,cAAa,KAAK,WAAW;OAChG;MACD,IAAI,cAAc;QAChB,MAAM;QAAU,MAAM;QACtB,UAAU;QAAM,SAAS,GAAG,KAAK,MAAM;OACxC;;;;;MAKD,IAAI,cAAc;QAChB,MAAM;QAAgB,OAAO;QAAmB,MAAM;QAAY,UAAU;QAC5E,SAAS,KAAK;QAAiB,MAAM,KAAK,KAAK,WAAW,QAAQ,UAAU;OAC7E;MACD,IAAI,cAAc;QAChB,MAAM;QAAkB,OAAO;QAAsB,MAAM;QAAY,UAAU;QACjF,SAAS,KAAK;QAAmB,MAAM,KAAK,KAAK,WAAW,QAAQ,YAAY;OACjF;MACD,IAAI,cAAc;QAChB,MAAM;QAAwB,OAAO;QAAuB,MAAM;QAAY,UAAU;QACxF,SAAS,KAAK;QAAoB,MAAM,KAAK,KAAK,WAAW,QAAQ,YAAY;OAClF;MACD,IAAI,cAAc;QAChB,MAAM;QAAuB,OAAO;QAAsB,MAAM;QAAY,UAAU;QACtF,SAAS,GAAG,CAAA,CAAE;QAAG,MAAM,KAAK,KAAK,WAAW,QAAQ,YAAY;OACjE;MACD,IAAI,cAAc,EAAC,MAAM,aAAa,OAAO,qBAAqB,UAAU,KAAI,CAAC;MACjF,IAAI,cAAc,EAAC,MAAM,YAAY,OAAO,oBAAoB,MAAM,QAAQ,OAAO,UAAS,CAAC;;AAGjG,SAAK,IAAI,wBAAwB,KAAK,OAAO,KAAK,aAAa,QAAQ,KAAK,OAAO,KAAK,IAAI,EAAE,UAAU,OAAG;AACzG,WAAK,uBAAsB;AAC3B,YAAM,UAAU,KAAK,WAAU;AAC/B,WAAK,WAAU;IACjB,CAAC;AAGD,SAAK,KAAK,IAAI,MAAM,EAAE,aAAa,UAAU,UAAM;AACjD,UAAG,KAAK,aAAa,QAAQ,KAAK,UAAQ,KAAM,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,WAAW,KACxF,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,SAAS,GAAE;AAC5C,aAAK,IAAI,kBAAkB,OAAM,GAAE,MAAK,KAAK,OAAO,KAAK,SAAQ,KAAK,OAAO,KAAK,WAAW,EAAE,UAAU,aAAS;AAChH,cAAG,SAAQ;AACP,kBAAM,cAAc,KAAK,KAAK,IAAI,MAAM;AACxC,wBAAY,UAAU;cACtB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACF,CAAC;EAGH;EAEQ,iBAAc;AACpB,QAAI,OAAmB,CAAA;AACvB,UAAM,QAAQ,KAAK,KAAK,SAAS,CAAA;AAEjC,WAAO,OAAO,KAAK,OAAO,KAAK,WAAW,EAAE,QAAQ,UAAO;AACzD,aAAO,OAAO,KAAK,WAAW,EAAE,OAAO,SAAO,CAAC,IAAI,MAAM,EAAE,QAAQ,SAAM;AACvE,eAAO,OAAO,IAAI,WAAW,EAC1B,OAAO,UAAQ,CAAC,KAAK,MAAM,EAC3B,QAAQ,UAAO;AACd,gBAAM,WAAW,MAAM,KAAK,CAACA,UAASA,MAAK,UAAU,KAAK,EAAE,KAAK,KAAK,MAAM,UAAU,KAAK,UAAQ,SAAS,KAAK,EAAE;AAGnH,gBAAM,OAAO;YACX,KAAK,KAAK;YACV,QAAQ,KAAK;YACb,OAAO,GAAG,KAAK,WAAW,KAAK,KAAK,IAAI;YACxC,QAAQ,KAAK,OAAO;YACpB,QAAQ,GAAG,KAAK,IAAI,MAAM,IAAI,WAAW;YACzC,UAAU,IAAI;YACd;YAAU,UAAU;;AACtB,eAAK,KAAK,IAAI;QAClB,CAAC;MACH,CAAC;IACH,CAAC;AACD,WAAO;EACT;EAEQ,aAAU;AAChB,QAAI,OAAmB,CAAA;AACvB,UAAM,QAAQ,KAAK,KAAK,SAAS,CAAA;AAEjC,SAAK,qBAAqB,QAAQ,CAAC,MAAM,MAAK;AAC5C,YAAM,QAAQ,MAAM,KAAK,CAACA,UAASA,MAAK,UAAU,KAAK,QAAQ,KAAK,KAAK,MAAM,UAAU,KAAK,UAAQ,SAAS,KAAK,QAAQ;AAC5H,YAAM,OAAO;QACX,KAAK,KAAK;QACV,OAAO,KAAK;QACZ,QAAQ,KAAK;QACb,QAAQ,KAAK,OAAO;QACpB,QAAQ,GAAG,KAAK,OAAO,IAAI,MAAM,KAAK,OAAO,OAAO,aAAa,IAAI;QACrE,UAAU,KAAK,OAAO,OAAO,aAAa;QAC1C,UAAU;QACV,UAAU;;AAGZ,WAAK,KAAK,IAAI;IAChB,CAAC;AAED,WAAO;EACT;EAGA,gBAAa;AAEX,eAAW,MAAK;AACd,YAAM,MAAM,KAAK,YAAY,KAAK,CAAC,EAAC,IAAG,MAAM,QAAQ,KAAK,KAAK,OAAO;AACtE,WAAK,EAAE,QAAQ,WAAW,GAAG;IAC/B,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,YAAY;AACjB,QAAI,KAAK,KAAK,OAAO;AACnB,YAAM,MAAM,KAAK,KAAK;AACtB,YAAM,UAAgB,iCACjB,MADiB;QAEpB,QAAQ,KAAK,OAAO;QACpB,OAAO,KAAK,KAAK;QACjB,SAAS,IAAI,SAAS,OAAO,IAAI;QACjC,QAAQ,IAAI,QAAQ,OAAO,IAAI;QAC/B,UAAU,KAAK,MAAM,YAAY,CAAA;QACjC,IAAI,KAAK,MAAM,MAAM,IAAI;QACzB,MAAM,KAAK,MAAM,QAAQ,IAAI;QAC7B,cAAc,IAAI,cAAc,OAAO,IAAI;QAC3C,gBAAgB,IAAI,gBAAgB,OAAO,IAAI;QAC/C,qBAAqB,IAAI,qBAAqB,OAAO,IAAI;QACzD,sBAAsB,IAAI,sBAAsB,OAAO,IAAI;QAC3D,YAAY,KAAK,OAAO,KAAK;;AAG/B,YAAM,SAAS;QACb,OAAM,KAAK,KAAK;QAChB,SAAS,KAAK,gBAAgB,KAAK,sBAAsB,IAAI,CAAC,EAAE,OAAM,MAAO,MAAM,EAAE,SAAQ,IAAK;;AAGpG,WAAK,OAAO,KAAK,OAAO;AACxB,WAAK,IAAI,MAAM,EAAE,SAAS,OAAM,CAAE;IACpC;EACF;EAEQ,gBAAgB,KAAQ;AAC9B,UAAM,KAAK,OAAO;AAClB,SAAK,cAAY;AACjB,QAAI,QAAQ,QAAQ,YAAY;AAC9B,WAAK,EAAE,aAAa,cAAc,WAAW,QAAQ;AACrD,WAAK,EAAE,eAAe,gBAAe;AACrC,WAAK,EAAE,oBAAoB,gBAAe;AAC1C,WAAK,EAAE,qBAAqB,gBAAe;IAE7C,WAAW,QAAQ,QAAQ,cAAc;AACvC,WAAK,EAAE,aAAa,gBAAe;AACnC,WAAK,EAAE,eAAe,cAAc,WAAW,QAAQ;AACvD,WAAK,EAAE,oBAAoB,cAAc,WAAW,QAAQ;AAC5D,WAAK,EAAE,qBAAqB,cAAc,WAAW,QAAQ;IAG/D;AACA,QAAG,QAAM,QAAQ,MAAK;AACpB,WAAK,cAAY;IACnB;AACA,SAAK,KAAK,uBAAsB;EAClC;EAEQ,uBAAuB,WAAc;AAC3C,gBAAY,WAAW,OAAO;AAC9B,UAAM,UAAU,KAAK,SAAS,KAAK,OAAK,EAAE,SAAS,qBAAqB;AACxE,YAAQ,UAAU,KAAK,IAAI,eAAe,SAAS,EAChD,KAAK,KAAK,kBAAkB,qBAAqB,CAAC;AACrD,SAAK,EAAE,oBAAoB,MAAK;EAClC;EAEQ,kBAAkB,SAAmB;AAC3C,WAAO,CAAC,WAA6B;AACnC,aAAO,OAAO,KACZ,IAAI,UAAQ,YAAY,MAAM,SAAS,OAAO,CAAC,GAC/C,IAAI,UAAO;AACT,cAAM,MAAM,KAAK,KAAK,CAAC,EAAC,IAAG,MAAM,QAAQ,KAAK,KAAK,OAAO,CAAC;AAC3D,aAAK,EAAE,OAAO,EAAE,WAAW,GAAG;MAChC,CAAC,CAAC;IAEN;EACF;EAEQ,KAAK,aAAyB,WAAc;AAClD,WAAO,KAAK,KAAK,IAAI,WAAW,EAAE,aAAa,KAC7C,UAAU,KAAK,KAAK,IAAI,WAAW,EAAE,KAAK,GAC1C,IAAI,OAAK,GAAG,OAAO,CAAC,GACpB,IAAI,OAAK,MAAM,SAAS,CAAC;EAE7B;EAcA,WAAW,MAAgB;AACzB,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,IAAI;AACnE,SAAK,gBAAgB;AACrB,SAAK,gBAAe;EACtB;EACA,cAAc,MAAgB;AAC5B,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,CAAC,SAAS,KAAK,WAAW,KAAK,MAAM;AACpG,SAAK,gBAAgB;AACrB,SAAK,gBAAe;EACtB;;;uCA7RW,qBAAkB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,cAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,YAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,UAAA,GAAA,GAAA,CAAA,OAAA,IAAA,GAAA,QAAA,GAAA,CAAA,WAAA,YAAA,aAAA,YAAA,GAAA,OAAA,UAAA,WAAA,SAAA,mBAAA,eAAA,cAAA,YAAA,WAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AC/B/B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,QAAA,qBAAA,GAAA,kCAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,kCAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,iDAAA;AAAA,iBAAS,IAAA,IAAA,MAAA;QAAW,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAEnG,QAAA,oBAAA,GAAA,IAAA;AAEA,QAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,OAAA,CAAA;AAErB,QAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,gBAAA,CAAA,EAA+C,IAAA,oCAAA,GAAA,GAAA,OAAA,CAAA;AA+BjD,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,iBAAS,IAAA,SAAA;QAAU,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,uCAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EAED;;;AAjDA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;AAKD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA;AASZ,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,WAAA;AA0BqD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,OAAA,KAAA,SAAA;;;MDtBzE;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;MACA;MACA;IAAS,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAGJ,oBAAkB,EAAA,WAAA,sBAAA,UAAA,kFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AG7B3B,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,EAAA;;;;;AACtB,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;;;;AAAjB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,UAAA;;;;;AAQnB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAIE,IAAA,qBAAA,WAAA,KAAA;AAFA,IAAA,qBAAA,cAAA,OAAA,IAAA,EAAmB,UAAA,UAAA;;;;;AAHvB,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,kEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AA+BH,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,uDAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;ADdjB,IAAO,sBAAP,MAAO,6BAA4B,aAA8B;EAYrE,YACE,KACA,IACiB,KACA,QAAqB;AAEtC,UAAM,KAAK,EAAE;AAHI,SAAA,MAAA;AACA,SAAA,SAAA;AAfZ,SAAA,QAAQ;AACR,SAAA,iBAAiB,WAAW,UAAU;AACrC,SAAA,SAAS,WAAW,MAAM;AAE1B,SAAA,iBAAiB,WAAW,cAAc;AAE1C,SAAA,sBAAsB,CAAA;AAC9B,SAAA,UAAU,CAAA;AACV,SAAA,wBAAwB,CAAA;AACxB,SAAA,gBAAgB;AA0LhB,SAAA,eAAe,CAAC,SAAqB,KAAK;AAC1C,SAAA,cAAc,CAAC,SAAqB,KAAK,QAAQ,KAAK;AAEtD,SAAA,YAAY,CAAC,SAAoB;AAC/B,YAAM,MAAM,KAAK,KAAK;AACtB,UAAG,IAAI,YAAY,OAAK,QAAU;AAChC,aAAK,OAAO,QAAQ,yCAAyC;AAC7D,eAAO,GAAG,KAAK;MACjB;AACA,UAAG,IAAI,YAAY,QAAM,UAAU,KAAK,QAAM,SAAQ;AACpD,aAAK,OAAO,QAAQ,4DAA4D;AAChF,eAAO,GAAG,KAAK;MACjB;AAED,aAAO,KAAK,IAAI,eAAe,KAAK,IAAI,SAAQ,IAAK,KAAK,KAAK,UAAU,IAAI,SAAQ,CAAE,EAAE,KACtF,IAAI,CAAC,YAAW;AACd,YAAI,CAAC,SAAS;AACZ,eAAK,OAAO,QAAQ,2BAA2B;QACjD;MACF,CAAC,CAAC;IAEN;AAaA,SAAA,iBAAiB,CAAC,UAAuB;AACvC,WAAK,wBAAwB;AAC7B,WAAK,gBAAgB;AACrB,WAAK,eAAc;IACrB;AAEA,SAAA,iBAAiB,MAAK;AACpB,WAAK,QAAQ,QAAQ,CAAC,SAAQ;AAC5B,cAAM,aAAa,KAAK,sBAAsB,KAAK,CAAC,SAAS,KAAK,SAAS,KAAK,IAAI;AACpF,aAAK,WAAW;AAChB,aAAK,WAAW;MAClB,CAAC;AACD,WAAK,UAAU,KAAK;IACtB;EAhOA;EAEU,iBAAc;AACtB,SAAK,UAAU,KAAK,eAAc,KAAM,CAAA;AACxC,SAAK,wBAAwB,KAAK,QAAQ,OAAO,UAAQ,KAAK,QAAQ;EACxE;EAEA,WAAQ;AACN,UAAM,aAAa,CAAC,GAAG,eAAe;AAItC,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,KAAK,KAAK,MAAM,EAAC,YAAY,UAAU,OAAM,CAAC;MACrD,SAAS,CAAC,KAAK,KAAK,WAAW,KAAK,OAAO,SAAS,CAAC,WAAW,QAAQ,CAAC;MACzE,YAAY,CAAC,KAAK,eAAe,KAAK,OAAK,EAAE,QAAQ,KAAK,KAAK,UAAU,GAAG,CAAC,WAAW,QAAQ,CAAC;MACjG,QAAQ,CAAC,KAAK,OAAO,KAAK,OAAK,EAAE,OAAO,KAAK,KAAK,MAAM,GAAG,CAAC,WAAW,QAAQ,CAAC;MAChF,UAAU,CAAC,KAAK,KAAK,QAAQ;MAC7B,gBAAiB,CAAC,KAAK,gBAAgB,KAAK,OAAI,GAAG,OAAO,KAAK,MAAM,cAAc,GAAG,KAAM,CAAC,WAAW,QAAQ,CAAC;KACnH;AAEA,SAAK,WAAW;MACd,IAAI,cAAc,EAAC,MAAM,QAAQ,OAAO,QAAQ,UAAU,CAAC,KAAK,WAAW,UAAU,KAAI,CAAC;MAC1F,IAAI,cAAc,EAAC,MAAM,WAAW,OAAO,WAAW,UAAU,KAAI,CAAC;MACrE,IAAI,cAAc;QAChB,MAAM;QAAc,OAAO;QAAe,MAAM;QAChD,UAAU;QAAM,SAAS,GAAG,KAAK,cAAc;OAChD;MACD,IAAI,cAAc;QAChB,MAAM;QAAU,OAAO;QAAU,MAAM;QAAY,UAAU;QAC7D,SAAS,GAAG,KAAK,MAAM;OACxB;MACD,IAAI,cAAc,EAAC,MAAM,YAAY,OAAO,oBAAoB,MAAM,QAAQ,OAAO,UAAS,CAAC;MAC/F,IAAI,cAAc;QAAC,MAAK;QAAkB,OAAM;QAA0B,MAAK;QAAS,UAAU;QAClG,SAAS,GAAG,KAAK,cAAc;MAAC,CAAC;;AAGnC,SAAK,IAAI,uBAAuB,KAAK,KAAK,QAAQ,KAAK,OAAO,IAAI,EAAE,UAAU,OAAG;AAC/E,WAAK,sBAAqB;AAC1B,YAAM,SAAS,KAAK,UAAS;AAC7B,WAAK,UAAS;IAChB,CAAC;AAGD,SAAK,KAAK,IAAI,MAAM,EAAE,aAAa,UAAU,UAAM;AACjD,UAAG,KAAK,aAAa,QAAQ,KAAK,UAAQ,KAAM,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,WAAW,KACxF,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,SAAS,GAAE;AAC5C,aAAK,IAAI,kBAAkB,QAAO,GAAE,MAAK,KAAK,OAAO,KAAK,SAAQ,KAAK,OAAO,KAAK,WAAW,EAAE,UAAU,aAAS;AACjH,cAAG,SAAQ;AACP,kBAAM,cAAc,KAAK,KAAK,IAAI,MAAM;AACxC,wBAAY,UAAU;cACtB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACF,CAAC;AAED,SAAK,KAAK,IAAI,YAAY,EAAE,aAAa,UAAU,QAAI;AACrD,UAAG,GAAG,KAAK,EAAE,SAAO,GAAE;AACpB,aAAK,IAAI;UACP;UACA,KAAK,KAAK,UAAU;;UACpB,GAAG,KAAK;UACR,KAAK,OAAO,KAAK;UACjB,KAAK,OAAO,KAAK;QAAW,EAC5B,UAAU,aAAU;AACpB,cAAI,SAAS;AACX,kBAAM,cAAc,KAAK,KAAK,IAAI,YAAY;AAC9C,yBAAa,UAAU;cACrB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACL;AACA,UAAG,IAAI,QAAM,QAAO;AAClB,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AACjD,oBAAY,UAAU,IAAI;AAC1B,oBAAY,SAAS,IAAI;AAC1B,oBAAY,QAAO;MACrB,OAAK;AACH,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AAClD,oBAAY,OAAM;MACpB;IACA,CAAC;AACD,QAAG,KAAK,KAAK,MAAM,cAAa,MAAK;AACnC,UAAG,KAAK,KAAK,MAAM,WAAW,QAAM,QAAO;AAC1C,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AAC/C,oBAAY,UAAU,IAAI;AAC3B,oBAAY,QAAO;MACtB;IACD,OAEA;AACE,YAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AAC/C,kBAAY,UAAU,IAAI;AAC3B,kBAAY,QAAO;IACvB;AACC,SAAK,KAAK,IAAI,YAAY,EAAE,aAAa,UAAU,UAAM;AACxD,UAAG,MAAM,QAAM,QAAO;AACpB,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AACjD,oBAAY,UAAU,IAAI;AAC1B,oBAAY,SAAS,IAAI;AAC1B,oBAAY,QAAO;MACrB,OAAK;AACH,cAAM,cAAc,KAAK,KAAK,IAAI,gBAAgB;AAClD,oBAAY,OAAM;MACpB;IACD,CAAC;EAEL;EAEQ,iBAAc;AACpB,QAAI,OAAmB,CAAA;AACvB,WAAO,OAAO,KAAK,OAAO,WAAW,EAAE,QAAQ,UAAO;AACpD,aAAO,OAAO,KAAK,WAAW,EAAE,OAAO,SAAO,CAAC,IAAI,MAAM,EAAE,QAAQ,SAAM;AACvE,cAAM,WAAW,KAAK,MAAM,OAAO,KAAK,CAACC,UAASA,MAAK,UAAU,IAAI,IAAI,KAAK,KAAK,MAAM,UAAU,KAAK,UAAQ,IAAI,SAAS,IAAI;AAGjI,cAAM,OAAO;UAAC,KAAK,IAAI,MAAM,SAAQ;UAAG;UAAS,UAAU;UAAU,MAAM,IAAI;UAAO,MAAK,IAAI;UAC7F,OAAM,GAAG,IAAI,WAAW,KAAK,IAAI,IAAI;UACrC,QAAQ,KAAK;UAAM,UAAU,KAAK;QAAE;AACtC,aAAK,KAAK,IAAI;MAChB,CAAC;IACH,CAAC;AACD,WAAO;EACT;EAEQ,YAAS;AACf,QAAI,OAAmB,CAAA;AACvB,UAAM,QAAQ,KAAK,KAAK,SAAS,CAAA;AAEjC,SAAK,oBAAoB,QAAQ,CAAC,KAAK,MAAK;AAC1C,YAAM,QAAQ,KAAK,MAAM,OAAO,KAAK,CAACA,UAASA,MAAK,UAAU,IAAI,OAAO,KAAK,KAAK,MAAM,UAAU,KAAK,UAAQ,IAAI,YAAY,IAAI;AACpI,YAAM,OAAO;QACX,KAAK,IAAI;QACT,MAAK,IAAI;QACT,OAAO,IAAI;QACX,QAAQ,KAAK,KAAK;QAClB,UAAU,KAAK,KAAK;QACpB,UAAU;QACV,UAAU;QACV,MAAK,IAAI;;AAGX,WAAK,KAAK,IAAI;IAChB,CAAC;AAED,WAAO;EACT;EAEA,WAAQ;AACN,SAAK,YAAY;AACjB,QAAI,KAAK,KAAK,OAAO;AACnB,YAAM,MAAM,KAAK,KAAK;AACtB,YAAM,UAAiB,iCAClB,MADkB;QAErB,QAAQ,KAAK,OAAO;QACpB,QAAQ,KAAK,KAAK;QAClB,UAAU,KAAK,MAAM,YAAY,CAAA;QACjC,IAAI,KAAK,MAAM,MAAM,IAAI;QACzB,YAAY,IAAI,YAAY,OAAO,IAAI;QACvC,QAAQ,IAAI,QAAQ,OAAO,IAAI;QAC/B,gBAAiB,IAAI,gBAAgB;;AAEvC,YAAM,SAAS;QACb,QAAQ,KAAK,KAAK,UAAU;QAC5B,QAAQ,KAAK,gBAAgB,KAAK,sBAAsB,IAAI,CAAC,EAAE,IAAG,MAAO,GAAG,EAAE,SAAQ,IAAK;;AAE7F,WAAK,OAAO,KAAK,OAAO;AACxB,WAAK,IAAI,MAAM,EAAC,SAAS,OAAM,CAAC;IAClC;EACF;EA0BA,WAAW,MAAgB;AACzB,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,IAAI;AACnE,SAAK,gBAAgB;AACrB,SAAK,eAAc;EACrB;EACA,cAAc,MAAgB;AAC5B,SAAK,wBAAwB,KAAK,sBAAsB,OAAO,CAAC,QAAQ,IAAI,QAAQ,KAAK,IAAI,SAAQ,CAAE;AACvG,SAAK,gBAAgB;AACrB,SAAK,eAAc;EACrB;;;uCApOW,sBAAmB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,UAAA,GAAA,GAAA,CAAA,OAAA,IAAA,GAAA,QAAA,GAAA,CAAA,WAAA,YAAA,aAAA,YAAA,GAAA,OAAA,UAAA,WAAA,SAAA,mBAAA,eAAA,cAAA,YAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,UAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,QAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AC9BhC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,QAAA,qBAAA,GAAA,mCAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,mCAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,iBAAS,IAAA,IAAA,MAAA;QAAW,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAEnG,QAAA,oBAAA,GAAA,IAAA;AAEA,QAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,OAAA,CAAA;AAErB,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA;AAQA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAqB,IAAA,OAAA,CAAA,EAC0B,IAAA,SAAA,EAAA;AACd,QAAA,iBAAA,IAAA,gBAAA;AAAc,QAAA,uBAAA;AAC3C,QAAA,yBAAA,IAAA,SAAA,EAAA;AAA6B,QAAA,iBAAA,IAAA,eAAA;AAAa,QAAA,uBAAA,EAAQ;AAEpD,QAAA,yBAAA,IAAA,mBAAA,EAAA;AASE,QAAA,qBAAA,OAAA,SAAA,6DAAA,QAAA;AAAA,iBAAO,IAAA,WAAA,MAAA;QAAkB,CAAA,EAAC,UAAA,SAAA,gEAAA,QAAA;AAAA,iBAChB,IAAA,cAAA,MAAA;QAAqB,CAAA,EAAC,WAAA,SAAA,iEAAA,QAAA;AAAA,iBACrB,IAAA,eAAA,MAAA;QAAsB,CAAA;AAEnC,QAAA,uBAAA,EAAkB,EACd;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,iBAAS,IAAA,SAAA;QAAU,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EAED;;;AA9CA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;AAKD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA;AAc9B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,OAAA,EAAiB,mBAAA,IAAA,qBAAA,EACwB,eAAA,IAAA,YAAA,EACb,cAAA,IAAA,WAAA,EACF,YAAA,KAAA,EACR,aAAA,IAAA,SAAA;AAcqD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,OAAA,SAAA;;;MDpBzE;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;MACA;MACA;IAAS,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAGJ,qBAAmB,EAAA,WAAA,uBAAA,UAAA,oFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AG3B7B,IAAA,yBAAA,GAAA,MAAA,CAAA;AAAwC,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,KAAA,MAAA,CAAgB;IAAA,CAAA;AAChE,IAAA,yBAAA,GAAA,KAAA,CAAA;AAAgB,IAAA,iBAAA,CAAA;AAA+B,IAAA,uBAAA,EAAI;;;;AAAnC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,OAAA,IAAA;;;;;AAFlB,IAAA,kCAAA,CAAA;AACC,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,MAAA,CAAA;;;;;AAA6B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,MAAA;;;ADO1B,IAAO,yBAAP,MAAO,wBAAsB;EANnC,cAAA;AAOqB,SAAA,SAAS,IAAI,aAAY;;EAC5C,IACI,GAAG,IAAM;AACX,SAAK,MAAM;EACb;EACA,IAAI,KAAE;AACJ,WAAO,KAAK;EACd;;;uCARW,yBAAsB;IAAA;EAAA;;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,QAAA,EAAA,IAAA,KAAA,GAAA,SAAA,EAAA,QAAA,SAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,cAAA,YAAA,GAAA,CAAA,GAAA,cAAA,GAAA,UAAA,KAAA,eAAA,KAAA,kBAAA,KAAA,aAAA,UAAA,OAAA,MAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,UAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACVnC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,MAAA,CAAA;AAE3B,QAAA,qBAAA,GAAA,gDAAA,GAAA,GAAA,gBAAA,CAAA;AAKD,QAAA,uBAAA,EAAK;;;AAL0B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,IAAA,IAAA,IAAA,GAAA,cAAA,IAAA,GAAA,aAAA,IAAA,GAAA,YAAA,CAAA;;sBDMlB,SAAO,IAAI,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAEZ,wBAAsB,EAAA,WAAA,0BAAA,UAAA,0FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEgB7B,IAAO,oBAAP,MAAO,mBAAiB;EAvB9B,cAAA;AAwBW,SAAA,SAAS,YAAY,eAAe,4CAA4C;;;;uCAD9E,oBAAiB;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,OAAA,YAAA,GAAA,UAAA,QAAA,GAAA,KAAA,CAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AApB1B,QAAA,yBAAA,GAAA,QAAA;AACE,QAAA,oBAAA,GAAA,OAAA,CAAA;AACA,QAAA,yBAAA,GAAA,MAAA;AAAM,QAAA,iBAAA,GAAA,cAAA;AAAY,QAAA,uBAAA,EAAO;;;AADpB,QAAA,oBAAA;AAAA,QAAA,qBAAA,OAAA,IAAA,QAAA,uBAAA;;;;;;6EAmBE,mBAAiB,EAAA,WAAA,qBAAA,UAAA,gFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AErB5B,IAAA,oBAAA,GAAA,KAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,KAAA,EAAA;;;;;;AAIA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAA+D,IAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,KAAA,OAAA,CAAqB;IAAA,CAAA;AAC7F,IAAA,iBAAA,CAAA;AACA,IAAA,uBAAA;;;;AADA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,GAAA;;;ADGI,IAAO,kBAAP,MAAO,iBAAe;EAR5B,cAAA;AASqB,SAAA,aAAa,IAAI,aAAY;AAC7B,SAAA,cAAc,IAAI,aAAY;AAC9B,SAAA,aAAa,IAAI,aAAY;;EAEhD,IACI,KAAK,MAAU;AACjB,SAAK,QAAQ;EACf;EACA,IAAI,OAAI;AACN,WAAO,KAAK;EACd;;;uCAXW,kBAAe;IAAA;EAAA;;yEAAf,kBAAe,WAAA,CAAA,CAAA,aAAA,CAAA,GAAA,QAAA,EAAA,MAAA,OAAA,GAAA,SAAA,EAAA,YAAA,cAAA,aAAA,eAAA,YAAA,aAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,cAAA,aAAA,QAAA,MAAA,GAAA,CAAA,GAAA,OAAA,qBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,gBAAA,GAAA,CAAA,GAAA,OAAA,SAAA,GAAA,CAAA,eAAA,IAAA,GAAA,MAAA,GAAA,CAAA,qBAAA,IAAA,GAAA,OAAA,QAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,OAAA,SAAA,GAAA,CAAA,GAAA,OAAA,SAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACd5B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4C,GAAA,UAAA,CAAA;AACE,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,iBAAS,IAAA,WAAA,KAAA;QAAiB,CAAA;AAAE,QAAA,oBAAA,GAAA,KAAA,CAAA;AAAoC,QAAA,iBAAA,GAAA,cAAA;AAAW,QAAA,uBAAA;AACxH,QAAA,yBAAA,GAAA,UAAA,CAAA;AAA6C,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,iBAAS,IAAA,YAAA,KAAA;QAAkB,CAAA;AAAE,QAAA,oBAAA,GAAA,KAAA,CAAA;AAA4B,QAAA,iBAAA,GAAA,gBAAA;AAAa,QAAA,uBAAA;AACnH,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA8B,GAAA,UAAA,CAAA;AAE7B,QAAA,qBAAA,GAAA,8BAAA,GAAA,GAAA,KAAA,CAAA,EAA+C,IAAA,+BAAA,GAAA,GAAA,KAAA,CAAA;AAE/C,QAAA,iBAAA,EAAA;AACD,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,MAAA,CAAA;AACC,QAAA,qBAAA,IAAA,gCAAA,GAAA,GAAA,MAAA,CAAA;AAGD,QAAA,uBAAA,EAAK,EACC;;;AAVqB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,IAAA,SAAA,SAAA,sBAAA,aAAA;AACF,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA,MAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA,WAAA;AACxB,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,GAAA;AAGqC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,GAAAC,IAAA,CAAA;;sBDEzB,aAAa,mBAAmB,MAAM,iBAAiB,SAAO,eAAe,GAAA,QAAA,CAAA,q5BAAA,GAAA,iBAAA,EAAA,CAAA;EAAA;;;6EAE9E,iBAAe,EAAA,WAAA,mBAAA,UAAA,4EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEP5B,oBAAiC;;;;AC6BnB,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,IAAA,CAAkB;IAAA,CAAA;AACrB,IAAA,oBAAA,GAAA,KAAA,EAAA;AACzC,IAAA,uBAAA;;;;;;AAVJ,IAAA,yBAAA,GAAA,IAAA,EAAwD,GAAA,IAAA,EAClD,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA,EAAO;AACnC,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAkD,IAAA,uBAAA,EAAO;AACnE,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA,EAAO;AACxC,IAAA,yBAAA,IAAA,MAAA,EAAA,EAA6D,IAAA,KAAA,EAAA;AAC1B,IAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,YAAA,eAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,YAAA,eAAA,sBAAA,EAAA;AAAS,aAAA,cAAA,YAAA;AAAwB,aAAA,sBAAE,aAAA,KAAA,CAAgB;IAAA,CAAA;AAC3C,IAAA,oBAAA,IAAA,KAAA,EAAA;AACzC,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,KAAA,EAAA;AAGF,IAAA,uBAAA,EAAK;;;;;AAVK,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,IAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,WAAA,MAAA,WAAA,UAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,SAAA;AAKyD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,QAAA;;;;;AAgBrE,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAAoB,IAAA,qBAAA,cAAA,OAAA,IAAA,EAAmB,UAAA,UAAA;;;;;AADzC,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,qEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AAA4D,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAM5D,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,CAAiB;IAAA,CAAA;AAC7E,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,gBAAA,EAAA,EAAgC,GAAA,yDAAA,GAAA,GAAA,gBAAA,EAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;;;;AASrB,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AAAoB,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA;;;ADpC9F,IAAO,wBAAP,MAAO,+BAA8B,aAAyC;EAiBzE;EAOT,YAAY,KAAqB,IAAyC,KAA0B;AAClG,UAAM,KAAK,EAAE;AAD2D,SAAA,MAAA;AAtBjE,SAAA,WAAW;AACb,SAAA,YAAY;AAEZ,SAAA,aAA+B,CAAA;AACrB,SAAA,oBAAsC,CAAA;AAC/C,SAAA,UAAU,CAAA;AACD,SAAA,SAAS,WAAW,MAAM;AAC1B,SAAA,kBAAkB,IAAI,gBAA4C,CAAA,CAAE;AAG7E,SAAA,gBAAkC,CAAA;AAClC,SAAA,oBAAoB,CAAA;AACpB,SAAA,qBAAqB,CAAA;AACrB,SAAA,oBAAoB,CAAA;AAEnB,SAAA,SAA+C;MACtD,EAAE,KAAK,uBAAuB,OAAO,UAAS;MAC9C,EAAE,KAAK,kBAAkB,OAAO,OAAM;MACtC,EAAE,KAAK,mBAAmB,OAAO,oBAAmB;MACpD,EAAE,KAAK,WAAW,OAAO,UAAS;;AAwR5B,SAAA,qBAAqB,CAAC,SAAQ;AACpC,aAAO,KAAK,WAAW,IAAI,CAAC,MAAK;AAC/B,eAAO,iCACF,IADE;UAEL,KAAK,EAAE,KAAK,OAAO,EAAE;UACrB,KAAK,EAAE,KAAK,OAAO,EAAE;UACrB,SAAS,EAAE,SAAS,OAAO,EAAE;UAC7B,OAAO,EAAE,KAAK,SAAS,EAAE;;MAE7B,CAAC;IACH;EA7RA;EAEA,iBAAc;AACZ,SAAK,aAAa,CAAC,GAAG,KAAK,OAAO,UAAU;AAC5C,SAAK,UAAU,KAAK,OAAO,cAAa,EAAG,IAAI,CAAC,SAAU,iCAAI,OAAJ,EAAU,UAAW,KAAK,QAAQ,KAAK,OAAO,KAAK,EAAE;AAC/G,SAAK,uBAAsB;AAC3B,SAAK,2BAA0B;EACjC;EAEA,WAAQ;AACN,UAAM,aAAa,CAAC,GAAG,eAAe;AAItC,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,IAAI,EAAE,YAAY,UAAU,OAAM,CAAE;MAC3C,SAAS,CAAC,KAAK,OAAO,OAAO,SAAS,CAAC,WAAW,QAAQ,CAAC;MAC3D,QAAQ,CAAC,KAAK,OAAO,CAAC,CAAC;MACvB,WAAW,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;MACrC,aAAa,CAAC,IAAI;MAClB,YAAY,YAAY,CAAA,GAAI,EAAE,aAAa,KAAI,CAAE;MACjD,eAAe,KAAK,GAAG,MAAM;QAC3B,KAAK,CAAC,EAAE;QACR,OAAO,CAAC,CAAA,CAAE;OACX;MACD,QAAQ,KAAK,GAAG,MAAM;QACpB,SAAS;QACT,WAAW;QACX,SAAS,CAAA;OACV;KACF;AACD,SAAK,iBAAgB;AAErB,SAAK,WAAW;MACd,IAAI,cAAc,EAAE,MAAM,QAAQ,OAAO,kBAAkB,UAAU,MAAM,UAAU,CAAC,KAAK,UAAS,CAAE;MACtG,IAAI,cAAc,EAAE,MAAM,WAAW,UAAU,MAAM,UAAU,KAAI,CAAE;MACrE,IAAI,cAAc,EAAE,MAAM,UAAU,SAAS,GAAG,KAAK,MAAM,GAAG,MAAM,WAAU,CAAE;MAChF,IAAI,cAAc,EAAE,MAAM,aAAa,OAAO,qBAAqB,UAAU,KAAI,CAAE;MACnF,IAAI,cAAc,EAAE,MAAM,eAAe,OAAO,iBAAiB,MAAM,SAAQ,CAAE;MACjF,IAAI,cAAc,EAAE,MAAM,cAAc,MAAM,QAAQ,QAAQ,KAAK,kBAAkB,OAAO,UAAS,CAAE;MACvG,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,SAAS,GAAG,KAAK,MAAM;OACxB;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,SAAS,KAAK;QACd,UAAU;QACV,gBAAgB;OACjB;MACD,IAAI,cAAmB;QACrB,MAAM;QACN,MAAM;QACN,OAAO;QACP,SAAS,GAAG,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;QAC5D,OAAO,KAAK,EAAE;OACf;MACD,IAAI,cAAmB;QACrB,MAAM;QACN,MAAM;QACN,OAAO;QACP,SAAS,GAAG,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;QAC5D,OAAO,KAAK,EAAE;OACf;MACD,IAAI,cAAmB;QACrB,MAAM;QACN,MAAM;QACN,OAAO;QACP,SAAS,GAAG,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;QAC5D,OAAO,KAAK,EAAE;OACf;;AAGL,SAAK,KAAK,IAAI,MAAM,EAAE,aAAa,UAAU,UAAM;AACjD,UAAI,KAAK,aAAa,QAAQ,KAAK,UAAQ,KAAK,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,WAAW,KACpF,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,SAAS,GAAG;AACjD,aAAK,IAAI,kBAAkB,aAAY,GAAE,MAAK,KAAK,OAAO,OAAO,SAAQ,KAAK,OAAO,OAAO,KAAK,WAAW,EAAE,UAAU,aAAS;AAC/H,cAAG,SAAQ;AACT,kBAAM,cAAc,KAAK,KAAK,IAAI,MAAM;AACxC,wBAAY,UAAU;cACpB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACH,CAAC;EAEA;EACA,gBAAa;AACX,SAAK,EAAE,cAAc,IAAI,KAAK,EAC3B,aAAa,KAAK,UAAU,CAAC,MAAM,KAAK,eAAe,CAAC,EACxD,UAAU,CAAC,QAAQ,KAAK,qBAAqB,GAAG,CAAC;EACtD;EAEO,cAAc,WAAyB;AAC5C,SAAK,kBAAkB;AACvB,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,CAAC,EAAE,WAAW,CAAC,KAAK;IACpC;AAEA,UAAM,YAAY,UAAU,WAAW,KAAK,UAAQ,KAAK,QAAQ,KAAK,OAAO,IAAI;AACjF,UAAM,MAAM,KAAK,QAAQ,KAAK,CAAAC,SAAOA,KAAI,QAAQ,KAAK,OAAO,IAAI;AACjE,QAAI,WAAW;AAEf,UAAM,aAAa,CAAC,GAAG,eAAe;AACtC,SAAK,EAAE,KAAK,gBAAe;AAC3B,SAAK,EAAE,KAAK,cAAc,UAAU;AACpC,SAAK,KAAK,WAAW,iCAChB,YADgB;MAEnB,eAAe,iCACV,UAAU,gBADA;QAEb,OAAO,KAAK,mBAAmB,UAAU,aAAa;;MAExD,QAAQ,KAAK,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,UAAU,MAAM;MACzD,aAAY,UAAU,eAAa,MAAM,QAAQ;MACjD,QAAQ;QACN,SAAS,YAAY,UAAU,OAAO,CAAC,EAAE,SAAS,CAAC;QACnD,WAAW,YAAY,UAAU,OAAO,CAAC,EAAE,SAAS,CAAC;QACrD,SAAS,YAAY,UAAU,OAAO,CAAC,EAAE,SAAS,CAAC;;MAEtD;AACA,SAAK,EAAE,WAAgC,MAAK;AAC7C,cAAU,WACP,IAAI,UAAS,iCAAI,OAAJ,EAAU,KAAK,EAAC,KAAK,KAAK,KAAK,OAAO,KAAK,QAAQ,KAAK,CAAAA,SAAOA,KAAI,QAAQ,KAAK,GAAG,EAAE,MAAK,EAAC,EAAE,EAC1G,IAAI,UAAQ,YAAY,MAAM,EAAC,aAAa,KAAK,IAAI,QAAQ,KAAK,OAAO,MAAM,WAAW,KAAK,IAAI,QAAQ,KAAK,OAAO,KAAI,CAAC,CAAC,EAC7H,QAAQ,WAAU,KAAK,EAAE,WAAgC,KAAK,KAAK,CAAC;AACvE,QAAI,CAAC,WAAW;AACd,WAAK,iBAAgB;IACvB;AAEA,SAAK,KAAK,uBAAsB;EAClC;EAEQ,mBAAgB;AACtB,UAAM,QAA6B;MACjC,KAAK,EAAC,KAAK,KAAK,OAAO,MAAM,OAAO,KAAK,OAAO,OAAO,QAAQ,KAAK,OAAO,OAAO,YAAW;MAC7F,KAAK;MACL,SAAS;MACT,OAAO,KAAK,OAAO;MACnB,OAAO;;AAER,SAAK,EAAE,WAAgC,KAAK,YAAY,OAAO,EAAC,aAAa,OAAO,WAAW,MAAK,CAAC,CAAC;EACzG;EAEO,gBAAgB,GAAS;AAC9B,SAAK,kBAAkB,KAAK,KAAK,WAAW,CAAC,CAAC;AAC9C,SAAK,aAAa,KAAK,WAAW,OAAO,CAAC,GAAG,QAAQ,QAAQ,CAAC;EAChE;EAEO,kBAAe;AACpB,SAAK,YAAY;AACjB,QAAI,KAAK,KAAK,OAAO;AACnB,YAAM,IAAI,KAAK,KAAK;AACpB,YAAM,YAA4B,iCAC7B,IAD6B;QAEhC,QAAQ,OAAO,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,OAAO,IAAI,YAAY,CAAW,EAAE,SAAQ,IAAK,YAAY,GAAE,EAAG;QAC7H,QAAQ,EAAE,QAAQ,OAAO,EAAE,UAAU;QACrC,YAAY,KAAK,EAAE,WAAW,MAAM,IAAI,UAAS,iCAAI,OAAJ,EAAU,KAAK,KAAK,KAAK,OAAO,KAAK,IAAG,EAAE;QAC3F,aAAa,CAAC,EAAE;QAChB,eAAe;UACb,KAAK,EAAE,cAAc,OAAO;UAC5B,OAAO,KAAK,sBAAsB,EAAE,cAAc,SAAS,CAAA,CAAE;;;AAGjE,YAAM,MAAM,KAAK,WAAW,UAAU,CAAC,MAAM,EAAE,SAAS,UAAU,IAAI;AACtE,UAAI,QAAQ;AAAI,aAAK,WAAW,GAAG,IAAI;;AAClC,aAAK,WAAW,KAAK,SAAS;AACnC,WAAK,QAAO;IACd;EACF;EAEQ,6BAA0B;AAChC,UAAM,KAAK,KAAK,OAAO,OAAO;AAC9B,UAAM,EAAE,aAAa,aAAY,IAAK;AACtC,WAAO,OAAO,GAAG,WAAW,EAAE,QAAQ,CAAC,SAAQ;AAC7C,aAAO,OAAO,KAAK,WAAW,EAC3B,OAAO,CAAC,QAAQ,CAAC,IAAI,MAAM,EAC3B,QAAQ,CAAC,QAAO;AACf,YAAI,IAAI,OAAO,YAAY,IAAI;AAC7B,gBAAM,UAAU,EAAE,KAAK,IAAI,IAAI,OAAO,IAAI,aAAa,QAAQ,KAAK,MAAM,UAAU,KAAK,GAAE;AAC3F,eAAK,kBAAkB,KAAK,OAAO;QACrC;AACA,eAAO,OAAO,IAAI,WAAW,EAC1B,OAAO,CAAC,SAAS,CAAC,KAAK,MAAM,EAC7B,QAAQ,CAAC,SAAQ;AAChB,cAAI,KAAK,OAAO,aAAa,IAAI;AAC/B,kBAAM,WAAW,EAAE,KAAK,KAAK,IAAI,OAAO,KAAK,aAAa,QAAQ,GAAG,KAAK,IAAI,MAAM,IAAI,WAAW,IAAI,UAAU,IAAI,GAAE;AACvH,iBAAK,mBAAmB,KAAK,QAAQ;UACvC;AACA,iBAAO,OAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,QAAO;AAC9C,kBAAM,UAAU;cACd,KAAK,IAAI;cACT,OAAO,IAAI;cACX,QAAQ,GAAG,KAAK,IAAI,MAAM,IAAI,WAAW,MAAM,KAAK,WAAW;cAC/D,UAAU,KAAK;;AAEjB,iBAAK,kBAAkB,KAAK,OAAO;AACnC,iBAAK,cAAc,KAAK,GAAG,IAAI,UAAU;UAC3C,CAAC;QACH,CAAC;MACL,CAAC;IACL,CAAC;EACH;EAEQ,qBAAqB,KAAqB;AAChD,QAAI,OAAmC,CAAA;AACvC,SAAK,EAAE,cAAc,IAAI,OAAO,EAAE,MAAM,CAAA,CAAE;AAC1C,QAAI,OAAO,uBAAuB;AAChC,aAAO,KAAK;IACd,WAAW,QAAQ,kBAAkB;AACnC,aAAO,KAAK;IACd,WAAW,QAAQ,mBAAmB;AACpC,aAAO,KAAK;IACd,WAAW,QAAQ,WAAW;AAC5B,UAAI,CAAC,KAAK,wBAAwB;AAChC,aAAK,IAAI,YAAY,KAAK,OAAO,OAAO,KAAK,WAAW,EAAE,UAAU,CAAC,QAAO;AAC1E,eAAK,yBAAyB,YAAY,KAAK,OAAO,OAAO;AAE7D,eAAK,gBAAgB,KAAK,KAAK,sBAAsB;AACrD,eAAK,EAAE,cAAc,IAAI,OAAO,EAAE,WAAW,KAAK,mBAAmB,KAAK,iBAAiB,aAAa,CAAC;QAC3G,CAAC;MACH,OAAO;AACL,aAAK,gBAAgB,KAAK,KAAK,sBAAsB;MACvD;AACA;IACF;AACA,SAAK,gBAAgB,KAAK,IAAI;EAChC;EAEO,UAAO;AACZ,SAAK,KAAK,MAAM,EAAE,SAAS,KAAK,OAAO,OAAO,QAAO,CAAE;AACvD,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,CAAC,EAAE,WAAW;IAC9B;AACC,SAAK,EAAE,WAAgC,MAAK;AAC7C,SAAK,iBAAgB;AACrB,SAAK,YAAY;EACnB;EAEA,WAAQ;AACN,UAAM,KAAK,KAAK,OAAO,OAAO;AAC9B,UAAM,UAAU;MACd,QAAQ,GAAG;MACX,UAAU,GAAG,aAAa;MAC1B,SAAS,GAAG,YAAY;MACxB,UAAU,GAAG,aAAa;MAC1B,YAAY,GAAG,aAAa;MAC5B,aAAa,GAAG;MAChB,SAAS,GAAG;MACZ,KAAK,GAAG,aAAa;MACrB,cAAc;QACZ,CAAC,KAAK,OAAO,IAAI,GAAG;UAClB,WAAW,KAAK,WAAW,IAAI,CAAC,QAAO;AACrC,mBAAO,iCACF,MADE;cAEL,YAAY,KAAK,mBAAmB,GAAG;;UAE3C,CAAC;;;;AAIP,UAAM,MAAM,EAAE,SAAS,mBAAmB,KAAK,kBAAiB;AAChE,SAAK,OAAO,KAAK,GAAU;AAC3B,SAAK,IAAI,MAAM,GAAG;EACpB;EAcQ,sBAAsB,OAAY;AACxC,WAAO,MAAM,IAAI,CAAC,UAAU,EAAE,KAAK,KAAK,UAAU,OAAO,KAAK,IAAG,EAAG;EACtE;EAEQ,mBAAmB,MAAmB;AAC5C,QAAI,CAAC;AAAM,aAAO,CAAA;AAClB,UAAM,eAAe,CAAC,aAAgB,gCAAiB,MAAM,KAAK,OAAO,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK;AACpG,YAAQ,KAAK,KAAK;MAChB,KAAK;AACH,eAAO,aAAa,KAAK,iBAAiB;MAC5C,KAAK;AACH,eAAO,aAAa,KAAK,kBAAkB;MAC7C,KAAK;AACH,eAAO,aAAa,KAAK,iBAAiB;MAC5C,KAAK;AACH,eAAO,aAAa,KAAK,sBAAsB;MACjD;AAAS,eAAO,CAAA;IAClB;EACF;EAEQ,yBAAsB;AAC5B,UAAM,YAAY,CAAC,OAAO,IAAI;AAC9B,UAAM,cAAc,CAAC,SAAS,WAAW;AACzC,SAAK,mBAAmB;MACtB,SAAS;QACP,EAAE,KAAK,OAAO,cAAc,qBAAqB,MAAM,eAAe,UAAU,YAAY,CAAC,WAAW,QAAQ,EAAC;QACjH,EAAE,KAAK,OAAO,cAAc,cAAc,MAAM,eAAe,UAAU,YAAY,CAAC,WAAW,QAAQ,EAAC;QAC1G,EAAE,KAAK,SAAS,cAAc,SAAS,YAAY,CAAC,WAAW,QAAQ,EAAC;QACxE,EAAE,KAAK,WAAW,cAAc,YAAY,MAAM,eAAe,SAAQ;;MAE3E,eAAe;QACb,KAAK,qBAAqB,WAAW;QACrC,SAAS,qBAAqB,SAAS;QACvC,KAAK,KAAK;;MAEZ,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;MAC9C,UAAU;;EAEd;;;uCA/VW,wBAAqB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,CAAA;IAAA;EAAA;;yEAArB,wBAAqB,WAAA,CAAA,CAAA,mBAAA,CAAA,GAAA,QAAA,EAAA,QAAA,UAAA,UAAA,WAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,gBAAA,KAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,cAAA,YAAA,gBAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,SAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,SAAA,MAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,wBAAA,GAAA,CAAA,SAAA,QAAA,GAAA,YAAA,GAAA,SAAA,WAAA,UAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,eAAA,GAAA,CAAA,SAAA,UAAA,SAAA,YAAA,SAAA,kCAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,SAAA,UAAA,GAAA,YAAA,GAAA,SAAA,WAAA,UAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,CAAA,GAAA,cAAA,UAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,QAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,UAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;AChClC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACU,GAAA,IAAA;AACrB,QAAA,oBAAA,GAAA,KAAA,CAAA;AAAyD,QAAA,iBAAA,CAAA;AAA4B,QAAA,uBAAA;AACzF,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,IAAA,MAAA,CAAW;QAAA,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAGnG,QAAA,yBAAA,GAAA,uBAAA,CAAA,EAAwC,GAAA,4BAAA;AAEtC,QAAA,iBAAA,GAAA,cAAA;AACA,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,SAAA,CAAA,EAAkD,IAAA,OAAA,EACxC,IAAA,MAAA,CAAA,EACe,IAAA,IAAA,EACf,IAAA,MAAA;AACI,QAAA,iBAAA,IAAA,WAAA;AAAS,QAAA,uBAAA,EAAO;AAExB,QAAA,yBAAA,IAAA,MAAA,CAAA,EAAyB,IAAA,MAAA;AACjB,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA,EAAO;AAErB,QAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,MAAA;AACI,QAAA,iBAAA,IAAA,kBAAA;AAAgB,QAAA,uBAAA,EAAO;AAE/B,QAAA,yBAAA,IAAA,MAAA,EAAA,EAA6C,IAAA,MAAA;AACrC,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA,EAAO,EACjB,EACF;AAEP,QAAA,yBAAA,IAAA,OAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,IAAA,GAAA,MAAA,EAAA;AAaJ,QAAA,uBAAA,EAAQ,EACF;AAGV,QAAA,yBAAA,IAAA,uBAAA,IAAA,CAAA,EAA0E,IAAA,4BAAA;AAExE,QAAA,iBAAA,EAAA;AACA,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,QAAA,EAAA,EAAyB,IAAA,OAAA,EAAA;AAErB,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,gBAAA,EAAA;AAGF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqB,IAAA,UAAA,EAAA;AACkB,QAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,QAAA,CAAS;QAAA,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC/D,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EAED;AAGT,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,SAAA,CAAU;QAAA,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA;AACF,QAAA,uBAAA,EAAM;;;AAnEG,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,IAAA,OAAA,KAAA;AAAsD,QAAA,oBAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,OAAA,MAAA,aAAA;AAI1C,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,YAAA,KAAA;AAsBa,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,UAAA;AAiBF,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,CAAA,IAAA,WAAA,UAAA,IAAA,QAAA;AAE9B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,WAAA,qBAAA,IAAA,YAAA,qBAAA,oBAAA,GAAA;AAEM,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA;AAMgD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,QAAA;AAWX,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,QAAA;;;MD7CvE;MACA;MACA;MACA;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;IAAS,GAAA,QAAA,CAAA,0+CAAA,EAAA,CAAA;EAAA;;;6EAGJ,uBAAqB,EAAA,WAAA,yBAAA,UAAA,wFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AG7B5B,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAwD,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA;;;;AAA1E,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,KAAA;AAAqD,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,MAAA,EAAA;;;;;AAC9E,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAyD,IAAA,iBAAA,CAAA;AAAyB,IAAA,uBAAA;;;;AAA/E,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,KAAA;AAAsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,MAAA,UAAA;;;;;AAO5E,IAAA,6BAAA,CAAA;;;;;AAGA,IAAA,6BAAA,CAAA;;;;;AADF,IAAA,yBAAA,GAAA,WAAA,EAAA;AACE,IAAA,qBAAA,GAAA,sEAAA,GAAA,GAAA,gBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,iBAAA,EAAkC,2BAAA,0BAAA,GAAAC,MAAA,OAAA,YAAA,CAAA;;;;;AAGjD,IAAA,6BAAA,CAAA;;;;;AADF,IAAA,yBAAA,GAAA,WAAA,EAAA;AACE,IAAA,qBAAA,GAAA,sEAAA,GAAA,GAAA,gBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,iBAAA,EAAkC,2BAAA,0BAAA,GAAAA,MAAA,OAAA,kBAAA,CAAA;;;;;AAOjD,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,qEAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,qEAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;;;;AAzBzB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,IAAA,qBAAA,GAAA,iDAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,iDAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,IAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,IAAA,MAAA,CAAW;IAAA,CAAA;AAAE,IAAA,uBAAA,EAAI,EAAO;AAGnG,IAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,UAAA,EACb,GAAA,WAAA,CAAA;AAEN,IAAA,qBAAA,IAAA,4DAAA,GAAA,GAAA,gBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,WAAA,CAAA,EAA6C,IAAA,uDAAA,GAAA,GAAA,WAAA,EAAA;AAM/C,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AAC9E,IAAA,qBAAA,IAAA,sDAAA,GAAA,GAAA,UAAA,EAAA;AAIF,IAAA,uBAAA,EAAM,EAED;;;;;;AA1BA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;AAID,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,IAAA;AAGe,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,oBAAA,iBAAA,EAAkC,2BAAA,0BAAA,GAAAA,MAAA,OAAA,eAAA,CAAA;AAEzC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA,OAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA,QAAA;AAOiE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,OAAA,KAAA,aAAA,CAAA,OAAA,QAAA;;;;;AAe7E,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAAoB,IAAA,qBAAA,aAAA,OAAA,SAAA,EAAuB,cAAA,OAAA,IAAA,EAAoB,UAAA,UAAA;;;;;AADjE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,+EAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AAAoF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAFxF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,gBAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJgC,IAAA,qBAAA,aAAA,OAAA,IAAA;AACI,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,WAAA;;;AD4BhC,IAAO,qBAAP,MAAO,4BAA2B,aAAgC;EA0EtE,YACE,KACA,IACiB,KACA,QAAqB;AAEtC,UAAM,KAAK,EAAE;AAHI,SAAA,MAAA;AACA,SAAA,SAAA;AA5EV,SAAA,WAAW;AAWH,SAAA,cAAc,WAAW,UAAU;AACnC,SAAA,oBAAoB,WAAW,gBAAgB;AAC/C,SAAA,aAAa,WAAW,SAAS;AACjC,SAAA,mBAAmB,WAAW,eAAe;AAC7C,SAAA,SAAS,WAAW,SAAS;AACtC,SAAA,cAAc,qBAAqB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;AAC1E,SAAA,kBAA0E,CAAA;AAC1E,SAAA,oBACE,CAAA;AAEe,SAAA,iBAAuC;MACtD,SAAS;QACP;UACE,KAAK;UACL,cAAc;UACd,YAAY,CAAC,WAAW,QAAQ;;;MAGpC,UAAU;MACV,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;;AAG/B,SAAA,aAAmC;MAClD,SAAS;QACP;UACE,KAAK;UACL,cAAc;UACd,YAAY,CAAC,WAAW,QAAQ;;QAElC;UACE,KAAK;UACL,cAAc;UACd,YAAY,CAAC,WAAW,QAAQ;;QAElC;UACE,KAAK;UACL,cAAc;UACd,YAAY,CAAC,WAAW,QAAQ;;;MAGpC,UAAU;MACV,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;;AAG/B,SAAA,gBAAwC;MACvD,SAAS;QACP,EAAE,KAAK,QAAQ,cAAc,QAAQ,YAAY,CAAC,WAAW,QAAQ,EAAC;QACtE,EAAE,KAAK,QAAQ,cAAc,QAAQ,YAAY,CAAC,WAAW,QAAQ,EAAC;;MAExE,UAAU;MACV,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;;AAG/B,SAAA,YAAoC;MACnD,SAAS;QACP,EAAE,KAAK,QAAQ,cAAc,QAAQ,YAAY,CAAC,WAAW,QAAQ,EAAC;;MAExE,UAAU;MACV,SAAS,EAAE,KAAK,MAAM,MAAM,MAAM,QAAQ,KAAI;;AAqpBxC,SAAA,kBAAkB,CAAC,WAA6B;AACtD,YAAM,EAAE,gBAAgB,eAAe,kBAAkB,WAAU,IACjE;AACF,aAAO,eAAe,aAAa,KACjC,UAAU,CAAC,MAAM,KAAK,eAAe,GACrC,UAAU,eAAe,KAAK,GAC9B,IAAI,CAAC,QAAO;AACV,YAAI,cAAc,GAAG,GAAG;AACtB,2BAAiB,cAAc,UAAU;QAC3C,OAAO;AACL,2BAAiB,gBAAe;QAClC;AACA,yBAAiB,uBAAsB;MACzC,CAAC,CAAC;IAEN;EA1pBA;EACA,IAAI,SAAM;AACR,WAAO,KAAK,KAAK;EACnB;EACA,iBAAc;AACZ,SAAK,YAAY,IAAI,YAAY,KAAK,MAAM,KAAK,MAAM;AACvD,YAAQ,IAAI,KAAK,MAAM,KAAK,SAAS;AACrC,SAAK,UAAU,OAAO,KAAK,OAAO;AAClC,SAAK,cAAc,KAAK,IACrB,cAAa,EACb,KAAK,IAAI,CAAC,SAAc,YAAY,MAAM,SAAS,OAAO,CAAC,CAAC;AAC/D,UAAM,EAAE,YAAW,IAAK,KAAK,OAAO;AACpC,SAAK,SAAS,KAAK,IAChB,SAAS,WAAW,EACpB,KAAK,IAAI,CAAC,SAAc,YAAY,MAAM,SAAS,OAAO,CAAC,CAAC;AAE/D,SAAK,QAAQ,UAAU,WAAW,CAAC,GAAG,QAAQ,QAAQ,CAAC,QAAO;AAC5D,UAAI,WAAW,QAAQ,CAAC,QAAO;AAC7B,YAAI,IAAI,SAAS,UAAU;AACzB,cAAI,IAAI,QAAQ,KAAK,UAAU;AAC7B,iBAAK,gBAAgB,KAAK;cACxB,KAAK,IAAI;cACT,SAAS,IAAI;cACb,OAAO,IAAI;aACZ;QACL;AACA,YAAI,IAAI,SAAS,mBAAmB;AAClC,cAAI,IAAI,QAAQ,KAAK,UAAU;AAC7B,iBAAK,kBAAkB,KAAK;cAC1B,KAAK,IAAI;cACT,SAAS,IAAI;cACb,OAAO,IAAI;aACZ;QACL;MACF,CAAC;IACH,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,OAAO,KAAK,YAAW;AAC5B,SAAK,qBAAoB;AACzB,SAAK,kBAAkB;MACrB,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;QACN,UAAU,CAAC,KAAK;OACjB;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;;;OAGP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO;QACP,MAAM;QACN,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM,GAAG,KAAK,OAAO,SAAS,mBAAmB;OAClD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM,GAAG,KAAK,OAAO,SAAS,mBAAmB;OAClD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GACP,CAAC,MAAM,MAAM,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,OAAO,IAAG,EAAG,CAAC;QAE9D,MAAM,GAAG,CAAC,YAAY,eAAe,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAClE;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,KAAK,UAAU,cAAc,KAAK,OAAO,IAAI,CAAC;QAC1D,MAAM;QACN,MAAM,GAAG,CAAC,YAAY,eAAe,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAClE;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,aAAa;QACb,MAAM;QACN,MAAM,GAAG,CAAC,YAAY,eAAe,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAClE;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,aAAa;OAC5C;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,KAAK,eAAe;QAChC,MAAM,GAAG,KAAK,OAAO,SAAS,QAAQ;OACvC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,KAAK,iBAAiB;QAClC,MAAM,GAAG,KAAK,OAAO,SAAS,iBAAiB;OAChD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,KAAK,MAAM;OACxB;;AAGH,SAAK,eAAe;MAClB,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,QAAQ,KAAK;QACb,MAAM,GAAG,CAAC,eAAe,OAAO,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAC7D;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,UAAU,KAAK,OAAO,SAAS;QAC/B,MAAM,GAAG,CAAC,gBAAgB,MAAM,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAC7D;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,WAAW,UAAU,CAAC;QAClC,MAAM,GAAG,CAAC,UAAU,aAAa,EAAE,SAAS,KAAK,OAAO,IAAI,CAAC;OAC9D;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,UAAU;QACV,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,QAAQ;UACvD;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,MAAM;UACrD;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,WAAW,gBAAgB,CAAC;QACxC,OAAO,KAAK,EAAE;QACd,UAAU;QACV,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,QAAQ;UACvD;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM;QACN,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,WAAW;UAC1D;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,WAAW;UAC1D;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,OAAO;UACtD;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,KAAK,KAAK,KAAK,MAAM,WAAW,WAAW,OAAO;UACtD;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,UAAU;QACV,SAAS,KAAK;QACd,MAAM,GAAG,KAAK,OAAO,SAAS,aAAa;OAC5C;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM,GAAG,KAAK,OAAO,SAAS,IAAI;OACnC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM,GAAG,KAAK,OAAO,SAAS,IAAI;QAClC,UAAU;OACX;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,IAAI;OACnC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,IAAI;OACnC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,OAAO,KAAK,EAAE;QACd,SAAS,KAAK;QACd,MAAM,GAAG,KAAK,OAAO,SAAS,UAAU;OACzC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,WAAW,SAAS,CAAC;QACjC,MAAM,GACJ,CAAC,YAAY,aAAa,OAAO,UAAU,EAAE,SAC3C,KAAK,OAAO,IAAI,CACjB;OAEJ;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,KAAK,KAAK,KAAK,MAAM,YAAY,UAAU,QAAQ;UACvD;UACA;UACA;UACA;SACD;OACF;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GACJ,CAAC,YAAY,aAAa,OAAO,UAAU,EAAE,SAC3C,KAAK,OAAO,IAAI,CACjB;OAEJ;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GACJ;UACE;UACA;UACA;UACA;UACA;UACA;UACA,SAAS,KAAK,OAAO,IAAI,CAAC;OAE/B;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,MAAM;OACrC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,SAAS,aAAa;OAC5C;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,SAAS,GAAG,KAAK,WAAW;QAC5B,MAAM,GAAG,KAAK,OAAO,SAAS,aAAa;QAC3C,UAAU;OACX;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO,KAAK,EAAE;QACd,MAAM,GACJ;UACE;UACA;UACA;UACA,SAAS,KAAK,OAAO,IAAI,CAAC;QAE9B,MAAM;OACP;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,UAAU;QACV,MAAM,GACJ;UACE;UACA;UACA;UACA,SAAS,KAAK,OAAO,IAAI,CAAC;OAE/B;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,OAAO,KAAK,EAAE;QACd,MAAM,GACJ;UACE;UACA;UACA;UACA,SAAS,KAAK,OAAO,IAAI,CAAC;OAE/B;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,UAAU;QACV,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,QAAQ,KAAK;QACb,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,KAAK,OAAO,SAAS,uBAAuB;OACtD;;AAGH,SAAK,qBAAqB;MACxB,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,QAAQ;OAChC;MAED,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,QAAQ;OAChC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM;QACN,MAAM,GAAG,KAAK,OAAO,UAAU,SAAS;OACzC;MACD,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,OAAO,KAAK,EAAE;QACd,MAAM;QACN,UAAU;QACV,MAAM,GAAG,KAAK,OAAO,UAAU,SAAS;OACzC;;AAID,SAAK,KAAK,IAAI,SAAS,EAAE,aAAa,UAAU,UAAM;AACtD,UAAI,KAAK,aAAa,QAAQ,KAAK,UAAQ,KAAK,CAAC,KAAK,KAAK,IAAI,SAAS,EAAE,SAAS,WAAW,KAC3F,CAAC,KAAK,KAAK,IAAI,SAAS,EAAE,SAAS,SAAS,GAAG;AAChD,aAAK,IAAI,kBAAkB,OAAM,GAAE,MAAK,KAAK,OAAO,KAAK,SAAQ,KAAK,OAAO,KAAK,WAAW,EAAE,UAAU,aAAS;AAChH,cAAG,SAAQ;AACT,kBAAM,cAAc,KAAK,KAAK,IAAI,SAAS;AAC3C,wBAAY,UAAU;cACpB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACA,CAAC;AAEH,QAAI,gBAAgB,KAAK,KAAK,SAAS,UAAU,EAAE,UAAU,EAAE;AAC/D,QAAI,gBAAgB,KAAK,KAAK,SAAS,UAAU,EAAE,UAAU,EAAE;AAE/D,kBAAc,aAAa,UAAU,CAAC,QAAO;AAC3C,UAAI,OAAO,QAAQ,cAAc,SAAS,MAAM;AAC9C,sBAAc,SAAS,KAAK;MAC9B;IACF,CAAC;AAED,kBAAc,aAAa,UAAU,CAAC,QAAO;AAC3C,UAAI,OAAO,QAAQ,cAAc,SAAS,MAAM;AAC9C,sBAAc,SAAS,KAAK;MAC9B;IACF,CAAC;EACH;EAEQ,KACN,OACA,MACA,WACA,MAAyB;AAEzB,WAAO,MAAM,IAAI,IAAI,EAAE,aAAa,KAClC,UAAU,MAAM,IAAI,IAAI,EAAE,KAAK,GAC/B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,GACtB,IAAI,CAAC,MAAK;AACR,YAAM,QAAQ,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,IAAI;AAChD,aAAO,MAAM,aAAa,MAAM,SAAS,KAAK,OAAO,IAAI;IAC3D,CAAC,CAAC;EAEN;EAEQ,cAAW;AACjB,UAAM,QAA8D,CAAA;AACpE,WAAO,QAAQ,KAAK,SAAS,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AACtD,UAAI,QAAQ,WAAW;AACrB,gBAAQ,KAAK,YAAY,KAAK,CAAC,EAAE,KAAAC,KAAG,MAAOA,SAAQ,KAAK;MAC1D,WAAW,QAAQ,YAAY;AAC7B,gBAAQ,KAAK,WAAW,KAAK,CAAC,EAAE,KAAAA,KAAG,MAAOA,SAAQ,KAAK;MACzD,WAAW,QAAQ,iBAAiB;AAClC,gBAAQ,KAAK,iBAAiB,KAAK,CAAC,EAAE,KAAAA,KAAG,MAAOA,SAAQ,KAAK;MAC/D;AACA,YAAM,GAAG,IAAI,KAAK,GAAG,QAAQ,KAAK;IACpC,CAAC;AACD,UAAM,aAAa,CAAC,GAAG,eAAe;AACtC,QAAI,KAAK,WAAW;AAGlB,UAAI,UAAU,OAAO,OAAO,KAAK,OAAO,KAAK,WAAW,EACrD,QAAQ,CAAC,SAAS,OAAO,OAAO,KAAK,WAAW,CAAC,EACjD,QAAQ,CAAC,QAAQ,OAAO,OAAO,IAAI,WAAW,CAAC,EAC/C,QAAQ,CAAC,SAAS,OAAO,OAAO,KAAK,WAAW,CAAC;AACpD,UAAI,CAAC,KAAK,UAAU,SAAS;AAC3B,kBAAU,QAAQ,OAAO,CAAC,QAAQ,IAAI,YAAY,KAAK,KAAK,OAAO;MACrE;IAGF;AACA,UAAM,UAAU,KAAK,GAAG,QAAQ,KAAK,UAAU,SAAS;MACtD;MACA,UAAU;KACX;AACD,UAAM,SAAS,YAAY,KAAK,UAAU,QAAQ,EAAE,aAAa,KAAI,CAAE;AACvE,UAAM,SAAS,KAAK,GAAG,QACrB,KAAK,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,KAAK,UAAU,MAAM,CAAC;AAEzD,QAAI,KAAK,OAAO,SAAS,eAAe;AACtC,YAAM,cAAc,KAAK,GAAG,QAC1B,KAAK,YAAY,KACf,CAAC,UAAU,MAAM,QAAQ,CAAC,KAAK,UAAU,WAAW,KACjD,MACL,CAAC,WAAW,QAAQ,CAAC;IAEzB;AAEA,UAAM,OAAO,CAAA;AACb,WAAO,QAAQ,KAAK,UAAU,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC3D,UACE;QACE;QACA;QACA;QACA;QACA;QACA,SAAS,GAAG,GACd;AACA,aAAK,GAAG,IAAI,KAAK,GAAG,QAAQ,KAAK;AACjC;MACF;AACA,UAAI,QAAQ,UAAU;AACpB,YAAI,KAAK,OAAO,SAAS,YAAY;AACnC,kBAAQ,YAAY,OAAO,SAAS,OAAO;QAC7C,OAAO;AACL,kBAAQ,MAAM,IAAI,CAAC,EAAE,OAAAC,OAAK,OAAQ,EAAE,KAAKA,QAAO,OAAAA,OAAK,EAAG;QAC1D;AACA,YACE,CAAC,gBAAgB,UAAU,QAAQ,aAAa,EAAE,SAChD,KAAK,OAAO,IAAI,GAElB;AACA,eAAK,GAAG,IAAI,YAAY,OAAO,EAAE,aAAa,KAAI,CAAE;AACpD;QACF;MACF,WAAW,QAAQ,QAAQ;AACzB,aAAK,GAAG,IAAI,YAAY,OAAO,EAAE,aAAa,KAAI,CAAE;AACpD;MACF,WAAW,QAAQ,cAAc,KAAK,OAAO,SAAS,UAAU;AAC9D,gBAAQ,KAAK,kBAAkB,KAAK,CAAC,EAAE,KAAAD,KAAG,MAAOA,SAAQ,KAAK;MAChE,WACE,CAAC,kBAAkB,iBAAiB,UAAU,EAAE,SAAS,GAAG,GAC5D;AACA,aAAK,GAAG,IAAI,YAAY,OAAO,EAAE,aAAa,KAAI,CAAE;AACpD;MACF;AAEA,WAAK,GAAG,IAAI,KAAK,GAAG,QAAQ,KAAK;IACnC,CAAC;AACD,UAAM,OAAO,KAAK,GAAG,MAAM,IAAI;AAE/B,UAAM,WAAW,CAAA;AACjB,WAAO,QAAQ,KAAK,UAAU,QAAQ,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC/D,UAAI,QAAQ,eAAe,KAAK,OAAO,UAAU,WAAW;AAC1D,iBAAS,GAAG,IAAI,KAAK,GAAG,QAAQ,OAAO,CAAC,WAAW,QAAQ,CAAC;MAC9D,OAAO;AACL,iBAAS,GAAG,IAAI,KAAK,GAAG,QAAQ,KAAK;MACvC;IACF,CAAC;AACD,UAAM,WAAW,KAAK,GAAG,MAAM,QAAQ;AAEvC,WAAO,KAAK,GAAG,MAAM,KAAK;EAC5B;EAEQ,uBAAoB;AAC1B,QAAI,CAAC,UAAU,QAAQ,aAAa,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AAChE,WAAK,gBAAgB;QACnB,gBAAgB,KAAK,EAAE;QACvB,eAAe,CAAC,SAAS,KAAK,OAAO,SAAS,WAAW;QACzD,kBAAkB,KAAK,EAAE,KAAK,IAAI,QAAQ;QAC1C,YAAY,WAAW;OACxB,EAAE,UAAS;IACd;AACA,QAAI,CAAC,eAAe,OAAO,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AACvD,WAAK,gBAAgB;QACnB,gBAAgB,KAAK,EAAE;QACvB,eAAe,CAAC,SAAS,SAAS,KAAK,OAAO;QAC9C,kBAAkB,KAAK,EAAE;QACzB,YAAY,WAAW;OACxB,EAAE,UAAS;IACd;AACA,QAAI,CAAC,UAAU,aAAa,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AACxD,WAAK,gBAAgB;QACnB,gBAAgB,KAAK,EAAE;QACvB,eAAe,CAAC,SAAS,KAAK,OAAO,SAAS,WAAW;QACzD,kBAAkB,KAAK,EAAE,KAAK,IAAI,UAAU;QAC5C,YAAY,WAAW;OACxB,EAAE,UAAS;IACd;AACA,QAAI,CAAC,uBAAuB,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AACxD,YAAM,qBAAqB,CAAC,YAAY,cAAc,eAAc,WAAW;AAC/E,yBAAmB,QAAQ,CAAC,gBAAe;AAC3C,cAAM,UAAU,KAAK,EAAE,KAAK,IAAI,WAAW;AAC3C,YAAI,SAAS;AACX,eAAK,gBAAgB;YACnB,gBAAgB,KAAK,EAAE;YACvB,eAAe,CAAC,SAAS,SAAS,KAAK,OAAO;YAC9C,kBAAkB;YAClB,YAAY,WAAW;WACxB,EAAE,UAAS;QACd;MACF,CAAC;IACF;EACD;EAmBA,WAAQ;AACN,QACE,KAAK,MAAM,OAAO,QAAQ,SAAS,WAClC,KAAK,OAAO,SAAS,iBAAiB,KAAK,OAAO,SAAS,SAC5D;AACA,WAAK,OAAO,QACV,6EACA,SAAS;AAEX,aAAO;IACT;AACA,SAAK,YAAY;AAEjB,QAAI,KAAK,KAAK,OAAO;AAEnB,YAAyB,UAAK,KAAK,OAA3B,SA7zBd,IA6zB+B,IAAN,cAAM,IAAN,CAAX;AACR,UAAI,aAAa,CAAA;AACjB,UAAI,eAAe;AACnB,UAAI,CAAC,YAAY,aAAa,EAAE,SAAS,KAAK,OAAO,IAAI,GAAG;AAC1D,qBAAa,gBAAgB,EAAE,KAAK,QAAQ,SAAS,OAAO;MAC9D,OAAO;AACL,qBAAa,EAAE,KAAK,OAAO,IAAI,CAAC,EAAE,OAAO,IAAG,OAAQ;UAClD,OAAO;UACP;UACA;AACF,uBAAe,EAAE,KAAK,UAAU,OAAO,EAAE,KAAK,YAAY;MAC5D;AACA,YAAM,YAA0B,iCAC3B,IAD2B;QAE9B,MAAM,KAAK,OAAO;QAClB,eAAe,EAAE;QACjB,QAAQ,EAAE,OAAO,IAAI,CAAC,EAAE,MAAK,OAAQ,EAAE,OAAO,OAAO,MAAK,EAAG;QAC7D,MAAM,iCACD,EAAE,OADD;UAEJ,QAAQ;UACR,UAAU;UACV,MAAM,EAAE,KAAK,MAAM,OAAO,EAAE,KAAK;;QAEnC,SAAS,EAAE,SAAS,OAAO,EAAE;QAC7B,UAAU,EAAE,UAAU,OAAO,EAAE;QAC/B,QAAQ,EAAE,QAAQ,OAAO,EAAE;QAC3B,aAAa,EAAE,aAAa,OAAO,EAAE;QACrC,YAAY,EAAE,WAAW;;AAO3B,WAAK,OAAO,KAAK,SAAS;AAC1B,WAAK,IAAI,MAAM,SAAS;IAC1B;EACF;;;uCAjyBW,qBAAkB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,QAAA,EAAA,QAAA,UAAA,UAAA,WAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,SAAA,SAAA,GAAA,CAAA,GAAA,oBAAA,yBAAA,GAAA,CAAA,SAAA,QAAA,GAAA,MAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,KAAA,GAAA,CAAA,SAAA,MAAA,GAAA,CAAA,SAAA,YAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,iBAAA,QAAA,GAAA,WAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,aAAA,cAAA,UAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,cAAA,QAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACjE/B,QAAA,qBAAA,GAAA,4CAAA,IAAA,IAAA,gBAAA,CAAA,EAAgC,GAAA,2CAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;;;AAAjB,QAAA,qBAAA,QAAA,IAAA,SAAA;;;MDuDP;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;MACA;MACA;MACA;MACA;IAAS,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAGJ,oBAAkB,EAAA,WAAA,sBAAA,UAAA,kFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;AG9D3B,IAAA,yBAAA,GAAA,QAAA,CAAA;AAAuD,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;;;;;AAIxD,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAwC,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;;;;;AAAf,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,IAAA,KAAA;;;;;AAE1C,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,eAAA,OAAA,IAAA,WAAA,EAEJ,aAAA,OAAA,IAAA,UAAA,QAAA,OAAA,IAAA,WAAA,IAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAa7B,IAAA,oBAAA,GAAA,QAAA,EAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmB,IAAA,iBAAA,CAAA;AAAW,IAAA,uBAAA;;;;;;AADE,IAAA,sBAAA,oBAAA,OAAA,SAAA,OAAA,CAAA;AACb,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA;;;;;AAGnB,IAAA,oBAAA,GAAA,QAAA,EAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmB,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;;;;;AADH,IAAA,sBAAA,oBAAA,OAAA,SAAA,OAAA,CAAA;AACb,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,KAAA;;;;;AAdzB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AAOE,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,eAAA,EAAA,EAA4D,GAAA,oDAAA,GAAA,GAAA,eAAA,EAAA;AAQ9D,IAAA,uBAAA;;;;;AAdE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA,EAA2B,cAAA,IAAA,EACR,MAAA,OAAA,IAAA,OAAA,EAED,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAqBlB,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAgE,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAjC,IAAA,qBAAA,SAAA,MAAA,KAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,MAAA,KAAA;;;;;AARpE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AAOE,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAPE,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,eAAA,WAAA,EACQ,MAAA,OAAA,IAAA,OAAA,EACT,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAIQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,cAAA;;;;;AAK1B,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAmE,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAjC,IAAA,qBAAA,SAAA,MAAA,KAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,MAAA,KAAA;;;;;AAFvE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AACE,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,iBAAA,IAAA,EAAuB,MAAA,OAAA,IAAA,OAAA,EAAwC,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AACjE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA;;;;;AAI9B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA,EAAA;;;;;AAAW,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,iBAAA,IAAA,EAAuB,MAAA,OAAA,IAAA,OAAA,EAAwC,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAQ3F,IAAA,yBAAA,GAAA,QAAA;AAA8C,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAd,IAAA,oBAAA;AAAA,IAAA,4BAAA,MAAA,KAAA;;;;;AAFlD,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,GAAA,gDAAA,GAAA,GAAA,UAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAFQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA;;;;;AAG5B,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,oBAAA,GAAA,mBAAA,EAAA;AASF,IAAA,uBAAA;;;;;AARI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,YAAA,IAAA,EAClB,WAAA,IAAA,EACD,SAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,YAAA;;;;;AAOtB,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA,EAAA;;;;;AACE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA,EAA2B,YAAA,OAAA,IAAA,QAAA,EACF,iBAAA,KAAA,EACF,MAAA,OAAA,IAAA,OAAA,EAIL,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;;AAchB,IAAA,yBAAA,GAAA,IAAA,EAAqC,GAAA,QAAA,EAAA;AAC7B,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,YAAA,WAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,QAAA,CAAkB;IAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACvF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,YAAA,WAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AAAiB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgC,IAAA,uBAAA,EAAI;;;;AADzE,IAAA,oBAAA;AAAA,IAAA,gCAAA,SAAA,SAAA,WAAA;AAA+B,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;;;;;AAHxE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAoD,GAAA,IAAA;AAEhD,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,MAAA,EAAA;AAIF,IAAA,uBAAA,EAAK;;;;AAJkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA;;;;;;AAQrB,IAAA,yBAAA,GAAA,IAAA,EAAsC,GAAA,QAAA,EAAA;AAC9B,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,QAAA,CAAkB;IAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACvF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AAAiB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgC,IAAA,uBAAA,EAAI;;;;AADzE,IAAA,oBAAA;AAAA,IAAA,gCAAA,SAAA,SAAA,WAAA;AAA+B,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;;;;;AAHxE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsD,GAAA,IAAA;AAElD,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,MAAA,EAAA;AAIF,IAAA,uBAAA,EAAK;;;;AAJkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;;AAhB3B,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,SAAA,EAAA;AACgC,IAAA,qBAAA,UAAA,SAAA,8DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,OAAA,QAAA,OAAA,IAAA,IAAA,OAAA,IAAA,OAAA,CAAmC;IAAA,CAAA;AAApG,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,SAAA,EAAA,EAAgG,GAAA,SAAA,EAAA;AAElG,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,OAAA,EAAA,EAAoD,GAAA,6CAAA,GAAA,GAAA,OAAA,EAAA;;;;;AAJ/B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AACoB,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AACxB,IAAA,oBAAA;AAAA,IAAA,gCAAA,OAAA,aAAA,OAAA,IAAA,EAAA;AAEV,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,SAAA,CAAA;AAQA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,WAAA,CAAA;;;;;;AAkBrB,IAAA,yBAAA,GAAA,IAAA,EAAkC,GAAA,QAAA,EAAA;AAC1B,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,QAAA,CAAkB;IAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACvF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AAAiB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgC,IAAA,uBAAA,EAAI;;;;AADzE,IAAA,oBAAA;AAAA,IAAA,gCAAA,SAAA,SAAA,WAAA;AAA+B,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;;;;;;AAOpE,IAAA,yBAAA,GAAA,IAAA,EAAsC,GAAA,QAAA,EAAA;AAC9B,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,QAAA,CAAkB;IAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACvF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AAAiB,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAgC,IAAA,uBAAA,EAAI;;;;AADzE,IAAA,oBAAA;AAAA,IAAA,gCAAA,SAAA,SAAA,WAAA;AAA+B,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;;;;;AAHxE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsD,GAAA,IAAA;AAElD,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,MAAA,EAAA;AAIF,IAAA,uBAAA,EAAK;;;;AAJkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;;AAjB3B,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,SAAA,IAAA,CAAA;AAC2C,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,gBAAA,sBAAA,CAAA;AAAA,aAAA,sBAAA,cAAA,QAA2B,IAAI;IAAA,CAAA,EAAC,UAAA,SAAA,8DAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAqC,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA;AAA1J,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,SAAA,EAAA,EAAkG,GAAA,SAAA,EAAA;AAEpG,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwB,GAAA,IAAA;AAEpB,IAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,MAAA,EAAA;AAIF,IAAA,uBAAA,EAAK;AAEP,IAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,OAAA,EAAA;;;;;AAbgC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AACX,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AACJ,IAAA,oBAAA;AAAA,IAAA,gCAAA,OAAA,iBAAA,OAAA,IAAA,EAAA;AAKV,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,QAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,WAAA,CAAA;;;;;AAiBvB,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAgE,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAjC,IAAA,qBAAA,SAAA,OAAA,KAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AARpE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AAOE,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAPE,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,eAAA,WAAA,EACQ,MAAA,OAAA,IAAA,OAAA,EACT,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAIQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,cAAA;;;;;AAK1B,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAmE,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAjC,IAAA,qBAAA,SAAA,OAAA,KAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAFvE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AACE,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,iBAAA,IAAA,EAAuB,MAAA,OAAA,IAAA,OAAA,EAAwC,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AACjE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA;;;;;AAG9B,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,QAAA,EAAA;AAED,IAAA,oBAAA,GAAA,SAAA,EAAA;AAQF,IAAA,uBAAA,EAAO;;;;;AANH,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,SAAA,OAAA,IAAA,aAAA;;;;;AAQ3C,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,0BAAA,GAAA,KAAA,OAAA,IAAA,CAAA,EAA2B,MAAA,OAAA,IAAA,OAAA,EACT,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,SAAA,OAAA,IAAA,aAAA,EAER,aAAA,OAAA,IAAA,UAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAI/B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAGE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,eAAA,OAAA,IAAA,eAAA,QAAA;;;;;AAMtB,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,SAAA,OAAA,IAAA,aAAA,EAER,aAAA,OAAA,IAAA,SAAA,aAAA,OAAA,OAAA,OAAA,IAAA,SAAA,SAAA;;;;;AAI/B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,SAAA,OAAA,IAAA,aAAA,EAER,SAAA,OAAA,IAAA,aAAA,EACA,aAAA,OAAA,IAAA,SAAA,aAAA,OAAA,OAAA,OAAA,IAAA,SAAA,SAAA;;;;;AAI/B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,SAAA,OAAA,IAAA,aAAA,EAER,SAAA,OAAA,IAAA,aAAA,EACA,aAAA,OAAA,IAAA,UAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAI/B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AACE,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,SAAA,OAAA,IAAA,aAAA,EAER,SAAA,OAAA,IAAA,aAAA,EACA,aAAA,OAAA,IAAA,UAAA,QAAA,OAAA,IAAA,WAAA,IAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAI/B,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAAmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,aAAA,OAAA,IAAA,UAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;AAEvC,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA,EAAA;;;;;AACE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,IAAA,QAAA,OAAA,OAAA,OAAA,IAAA,KAAA,MAAA,EAA0B,YAAA,IAAA,EACT,iBAAA,KAAA,EACM,MAAA,OAAA,IAAA,OAAA,EAIL,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAQlB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,SAAA,EAAA;AACG,IAAA,iBAAA,CAAA;AACD,IAAA,oBAAA,GAAA,SAAA,EAAA,EAA8G,GAAA,QAAA,EAAA;AAEhH,IAAA,uBAAA;;;;;;;AAHG,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,WAAA,OAAA,GAAA;AACmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,IAAA,QAAA,EAAyB,SAAA,WAAA,KAAA,EAAuB,MAAA,OAAA,IAAA,KAAA,KAAA,EAAkB,QAAA,OAAA,IAAA,OAAA;AAC7D,IAAA,oBAAA;AAAA,IAAA,sBAAA,oBAAA,OAAA,IAAA,WAAA,YAAA,aAAA;;;;;AANjC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,gBAAA,EAAA;AAOF,IAAA,uBAAA;;;;;AAPmC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;;AAWjC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,SAAA,EAAA,EAAkC,GAAA,SAAA,EAAA;AAO9B,IAAA,qBAAA,UAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAU,OAAA,UAAA,OAAA,GAAA,CAAc;IAAA,CAAA;AAN1B,IAAA,uBAAA;AAQA,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA,EAAO;;;;;;AAP9B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,YAAA,KAAA,EAAuB,WAAA,YAAA,UAAA,OAAA,IAAA,aAAA,EACwB,MAAA,OAAA,IAAA,OAAA,EAC7B,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAIF,IAAA,oBAAA;AAAA,IAAA,sBAAA,qBAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,YAAA,YAAA,aAAA;AACZ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,YAAA,KAAA;;;;;AAbd,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,gBAAA,EAAA;AAcF,IAAA,uBAAA;;;;;AAdoC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAA,MAAA;;;;;;AAgBtC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,OAAA,EAAA,EACoF,GAAA,UAAA,EAAA;AACxD,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,QAAA,sBAAA,CAAA;AAAA,aAAA,sBAAS,MAAA,OAAA,CAAU;IAAA,CAAA;AAClE,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAS;AAEX,IAAA,yBAAA,GAAA,SAAA,IAAA,CAAA;AAUE,IAAA,qBAAA,SAAA,SAAA,6DAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAV5B,IAAA,uBAAA,EAWE;;;;;AAhB+B,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,qBAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,YAAA,YAAA,aAAA;AAQ/B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,WAAA,OAAA,OAAA,EAIhB,WAAA,OAAA,OAAA;;;;;AAOzB,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,0BAAA,GAAA,KAAA,OAAA,UAAA,OAAA,qBAAA,CAAA,EAAqF,MAAA,OAAA,IAAA,OAAA,EAEnE,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;;AAKtB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,OAAA,EAAA,EACoF,GAAA,UAAA,EAAA;AACxD,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,QAAA,sBAAA,CAAA;AAAA,aAAA,sBAAS,MAAA,OAAA,CAAU;IAAA,CAAA;AAChE,IAAA,oBAAA,GAAA,KAAA,EAAA;AACJ,IAAA,uBAAA,EAAS;AAEX,IAAA,oBAAA,GAAA,SAAA,IAAA,CAAA;AAWF,IAAA,uBAAA;;;;;AAhBmC,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,qBAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,YAAA,YAAA,aAAA;AAQ/B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,WAAA,OAAA,OAAA,EAIC,WAAA,OAAA,OAAA,EACA,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;;AAKzB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0F,GAAA,OAAA,EAAA,EACnD,GAAA,OAAA,EAAA,EACwE,GAAA,UAAA,EAAA;AACxD,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,QAAA,sBAAA,CAAA;AAAA,aAAA,sBAAS,MAAA,OAAA,CAAU;IAAA,CAAA;AAClE,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAS;AAEX,IAAA,oBAAA,GAAA,SAAA,IAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,aAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAVK,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAEc,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,qBAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,YAAA,YAAA,aAAA;AAKmB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;AAE3C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,WAAA,EAAqB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAGpC,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAME,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,kBAAA,uBAAA;;;;;AAMJ,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAME,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,kBAAA,uBAAA;;;;;AAMJ,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAME,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,mBAAA,uBAAA;;;;;AAKJ,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;AACF,IAAA,uBAAA;;;;;AADyC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAG7D,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAAmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EAAoC,SAAA,OAAA,IAAA,aAAA;;;;;AAE3E,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;;;;;AAAmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EAAoC,SAAA,OAAA,IAAA,aAAA;;;;;AAE3E,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA,EAOE,GAAA,oBAAA,EAAA;;;;;AALA,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA,EACiB,SAAA,OAAA,IAAA,aAAA;AAKnB,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,WAAA;;;;;AAEpB,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA,EAAA;;;;;AAA4C,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,IAAA,OAAA,EAAkB,YAAA,OAAA,IAAA,YAAA,OAAA,OAAA,OAAA,IAAA,SAAA,QAAA;;;;;AAIlE,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgC,GAAA,iBAAA,EACb,GAAA,oBAAA,EAAA,EACc,GAAA,QAAA,EAAA;AACG,IAAA,iBAAA,GAAA,IAAA;AAAE,IAAA,uBAAA,EAAO;AAEzC,IAAA,yBAAA,GAAA,oBAAA,EAAA,EAA8B,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,GAAA,KAAA;AAAG,IAAA,uBAAA,EAAO,EACvB,EACH;;;;;;AAItB,IAAA,6BAAA,CAAA;;;AD9XE,IAAO,eAAP,MAAO,cAAY;EAOvB,IAAI,cAAW;AACb,QAAI,KAAK,SAAS,qBAAqB,SAAS,GAAG;AACjD,WAAK,SAAS,qBAAqB,QAAQ,CAAC,YAAW;AACrD,YAAI,KAAK,SAAS,SAAS,GAAG;AAC5B,gBAAM,QAAQ,KAAK,SAAS,UAAU,CAAC,MAAM,EAAE,UAAU,MAAM,QAAQ,QAAQ;AAC/E,cAAI,UAAU,IAAI;AAChB,iBAAK,SAAS,OAAO,OAAO,CAAC;UAC/B;QACF,OAAO;AACL,cAAI,KAAK,aAAa,SAAS,KAAK,QAAQ,UAAU,QAAW;AAC/D,kBAAM,QAAQ,KAAK,aAAa,UAAU,CAAC,MAAM,EAAE,UAAU,MAAM,QAAQ,QAAQ;AACnF,gBAAI,UAAU,IAAI;AAChB,mBAAK,aAAa,OAAO,OAAO,CAAC;YACnC;UACF;QACF;MACF,CAAC;IACH;AACA,WAAO,KAAK,SAAS,SAAS,IAAI,KAAK,WAAW,KAAK;EACzD;EASA,YAAmB,OAA2B,UAAyC,wBAA8C;AAAlH,SAAA,QAAA;AAA2B,SAAA,WAAA;AAAyC,SAAA,yBAAA;AAjCvF,SAAA,WAAW,CAAA;AACX,SAAA,mBAAmB,YAAY,eAAe,oCAAoC;AAClF,SAAA,oBAAoB,YAAY,eAAe,qCAAqC;AACpF,SAAA,UAAU,EAAE,MAAM,MAAM,OAAO,IAAI,KAAK,GAAE;AAC1C,SAAA,UAAU,EAAE,MAAM,MAAM,OAAO,GAAG,KAAK,EAAC;AAqBxC,SAAA,eAA8B,CAAA;AAC9B,SAAA,uBAA0C;MACxC,QAAQ;MACR,qBAAqB,YAAY,QAAQ;MACzC,aAAa;MACb,iBAAiB;;AAIjB,SAAK,UAAU,EAAE,MAAM,MAAM,OAAO,IAAI,KAAK,GAAE;AAC/C,SAAK,UAAU,EAAE,MAAM,MAAM,OAAO,GAAG,KAAK,EAAC;EAC/C;EAEA,YAAY,QAAM;AAChB,WAAO,SAAS,OAAO,gBAAgB,OAAO,OAAO,cAAc,MAAM;EAC3E;EAEA,SAAS,OAAwB;AAC/B,WAAO,MAAM,MAAM,YAAW;EAChC;EAEA,KAAK,UAAQ;AACX,QAAI,YAAY,SAAS,QAAQ,QAAQ,EAAE,EAAE,SAAS,IAAI;AACxD,aAAO,CAAC,KAAK,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;IAC1F,WAAW,YAAY,SAAS,QAAQ,QAAQ,EAAE,EAAE,SAAS,IAAI;AAC/D,aAAO,CAAC,KAAK,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;IACpF,OAAO;AACL,aAAO,CAAC,KAAK,SAAS,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,IAAI;IAC3F;EACF;EAEA,OAAO,aAAkB,SAAiB,SAAc,QAAa,QAAW,aAAa,QAAS;AACpG,QAAI,WAAW;AAEf,SAAK,SAAS,QAAQ,KAAK,SAAS,QAAQ;AAC5C,QAAI,YAAY;AACd,iBAAW,WAAW;AACtB,WAAK,SAAS,eAAe,KAAK;QAChC,MAAM,WAAW;QACjB,aAAa,WAAW;QACxB,MAAM;QACN,OAAO,KAAK,SAAS;QACrB;OACD;IACH,OAAO;AACL,iBAAW,YAAY,OAAO,MAAM,CAAC,EAAE;AACvC,UAAI,YAAY,cAAc,OAAO,EAAE,WAAW,GAAG;AACnD;MACF;AACA,UAAI,YAAY,cAAc,OAAO,EAAE,OAAO,KAAK,QAAW;AAC5D,aAAK,SAAS,eAAe,KAAK;UAChC,MAAM,EAAE,MAAM,YAAY,cAAc,OAAO,EAAE,OAAO,EAAE,CAAC,EAAC;UAC5D,aAAa;UACb,MAAM;UACN,OAAO,KAAK,SAAS;UACrB;SACD;MACH,OAAO;AACL,aAAK,SAAS,eAAe,KAAK;UAChC,MAAM,EAAE,MAAM,YAAY,cAAc,OAAO,EAAE,CAAC,EAAC;UACnD,aAAa;UACb,MAAM;UACN,OAAO,KAAK,SAAS;UACrB;SACD;MACH;IACF;AACA,UAAM,MAAM;MACV,UAAU;MACV,UAAU;MACV,aAAa;MACb,WAAW;MACX,WAAW;MACX,UAAU;MACV,cAAc;MACd,aAAa;MACb,IAAI;MACJ,KAAK,KAAK,SAAS;MACnB;;AAEF,SAAK,aAAa,KAAK,GAAG;AAC1B,SAAK,SAAS,KAAK,GAAG;AACtB,QAAI,OAAO;AACT,YAAM,QAAQ,aAAa;IAC7B;EACF;EAEA,YAAY,OAAU;AACpB,QAAI,CAAC,KAAK,IAAI,cAAc,KAAK,SAAS,QAAQ;AAChD;IACF;AACA,UAAM,OAAO,MAAM,OAAO,MAAM,KAAK,CAAC;AACtC,UAAM,MAAM,KAAK,KAAK,MAAM,GAAG,EAAE,IAAG,EAAG,YAAW;AAClD,QAAI,CAAC,CAAC,OAAO,QAAQ,KAAK,EAAE,SAAS,GAAG,GAAG;AACzC;IACF;AACA,SAAK,OAAO,OAAO,KAAK,IAAI,IAAI,KAAK,IAAI,OAAO;EAClD;EAEA,WAAW,SAAY;AACrB,QAAI,QAAQ,KAAK;AACf,UAAI,MAAM,KAAK,aAAa,UAAU,CAAC,MAAM,EAAE,KAAK,MAAM,QAAQ,GAAG;AACrE,UAAI,MAAM,IAAI;AACZ,aAAK,aAAa,OAAO,KAAK,CAAC;MACjC;AACA,YAAM;AACN,YAAM,KAAK,SAAS,QAAQ,OAAO;AACnC,UAAI,MAAM,IAAI;AACZ,aAAK,SAAS,OAAO,KAAK,CAAC;MAC7B;AACA,YAAM;AACN,YAAM,KAAK,SAAS,eAAe,UAAU,CAAC,MAAM,EAAE,OAAO,MAAM,QAAQ,GAAG;AAC9E,UAAI,MAAM,IAAI;AACZ,aAAK,SAAS,eAAe,OAAO,KAAK,CAAC;MAC5C;AACA;IACF;AACA,SAAK,SAAS,qBAAqB,KAAK,iCACnC,UADmC;MAEtC,yBAAyB,YAAY,QAAQ,wBAAwB,SAAQ;MAC9E;AACD,UAAM,QAAQ,KAAK,SAAS,QAAQ,OAAO;AAC3C,UAAM,SAAS,KAAK,aAAa,QAAQ,OAAO;AAChD,QAAI,QAAQ,IAAI;AACd,WAAK,SAAS,OAAO,OAAO,CAAC;AAC7B,WAAK,SAAS,eAAe,OAAO,OAAO,CAAC;IAC9C;AACA,QAAI,SAAS,IAAI;AACf,WAAK,aAAa,OAAO,OAAO,CAAC;IACnC;EACF;;;uCA7JW,eAAY,4BAAA,UAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,sBAAA,CAAA;IAAA;EAAA;;yEAAZ,eAAY,WAAA,CAAA,CAAA,SAAA,CAAA,GAAA,QAAA,EAAA,KAAA,MAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAtBV,CAAC,EAAE,SAAS,wBAAwB,UAAU,yBAAwB,CAAE,CAAC,GAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,KAAA,eAAA,GAAA,CAAA,GAAA,cAAA,GAAA,aAAA,SAAA,SAAA,QAAA,GAAA,IAAA,GAAA,CAAA,GAAA,eAAA,GAAA,MAAA,QAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,KAAA,GAAA,CAAA,GAAA,OAAA,eAAA,QAAA,GAAA,CAAA,QAAA,QAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,eAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,SAAA,cAAA,MAAA,UAAA,GAAA,CAAA,gBAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,cAAA,eAAA,MAAA,UAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,cAAA,iBAAA,MAAA,UAAA,GAAA,CAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,UAAA,QAAA,GAAA,MAAA,UAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,aAAA,QAAA,QAAA,WAAA,GAAA,MAAA,YAAA,YAAA,WAAA,OAAA,GAAA,CAAA,aAAA,SAAA,aAAA,SAAA,eAAA,aAAA,GAAA,gBAAA,GAAA,SAAA,YAAA,iBAAA,MAAA,UAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,QAAA,QAAA,GAAA,qBAAA,GAAA,UAAA,UAAA,GAAA,CAAA,QAAA,UAAA,QAAA,cAAA,GAAA,MAAA,UAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,KAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,SAAA,OAAA,GAAA,CAAA,QAAA,sBAAA,SAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,CAAA,QAAA,QAAA,GAAA,qBAAA,GAAA,SAAA,UAAA,UAAA,GAAA,CAAA,QAAA,QAAA,GAAA,WAAA,QAAA,GAAA,MAAA,UAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,wBAAA,GAAA,MAAA,YAAA,OAAA,GAAA,CAAA,QAAA,OAAA,GAAA,gBAAA,GAAA,YAAA,MAAA,YAAA,SAAA,WAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,UAAA,wBAAA,GAAA,MAAA,aAAA,GAAA,CAAA,QAAA,SAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,SAAA,WAAA,GAAA,CAAA,QAAA,QAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,SAAA,WAAA,GAAA,CAAA,QAAA,QAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,SAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,kBAAA,GAAA,MAAA,YAAA,SAAA,WAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,MAAA,WAAA,GAAA,CAAA,GAAA,UAAA,aAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,QAAA,SAAA,GAAA,YAAA,SAAA,MAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,iBAAA,MAAA,GAAA,CAAA,QAAA,YAAA,GAAA,UAAA,SAAA,WAAA,MAAA,UAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,QAAA,UAAA,YAAA,0BAAA,GAAA,OAAA,UAAA,yBAAA,GAAA,OAAA,GAAA,CAAA,eAAA,QAAA,GAAA,OAAA,iBAAA,GAAA,CAAA,QAAA,QAAA,eAAA,cAAA,iBAAA,IAAA,GAAA,gBAAA,GAAA,SAAA,MAAA,YAAA,WAAA,SAAA,GAAA,CAAA,QAAA,QAAA,WAAA,wBAAA,GAAA,gBAAA,GAAA,YAAA,MAAA,UAAA,GAAA,CAAA,QAAA,QAAA,eAAA,cAAA,iBAAA,IAAA,GAAA,gBAAA,GAAA,MAAA,WAAA,WAAA,UAAA,GAAA,CAAA,GAAA,UAAA,kBAAA,GAAA,MAAA,UAAA,GAAA,CAAA,GAAA,eAAA,aAAA,GAAA,CAAA,QAAA,QAAA,iBAAA,IAAA,GAAA,gBAAA,eAAA,GAAA,UAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,SAAA,UAAA,GAAA,CAAA,QAAA,eAAA,QAAA,OAAA,QAAA,MAAA,MAAA,eAAA,YAAA,QAAA,GAAA,kBAAA,GAAA,UAAA,QAAA,SAAA,QAAA,GAAA,KAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,OAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,MAAA,YAAA,OAAA,GAAA,CAAA,aAAA,QAAA,GAAA,aAAA,GAAA,CAAA,GAAA,gBAAA,eAAA,GAAA,MAAA,UAAA,GAAA,CAAA,SAAA,IAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,SAAA,KAAA,CAAA,GAAA,UAAA,SAAA,sBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACnBxF,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA8F,GAAA,SAAA,CAAA;AAE1F,QAAA,iBAAA,CAAA;AACA,QAAA,qBAAA,GAAA,8BAAA,GAAA,GAAA,QAAA,CAAA;AACF,QAAA,uBAAA;AAEA,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,sCAAA,GAAA,GAAA,gBAAA,CAAA,EAAuC,GAAA,sCAAA,GAAA,GAAA,gBAAA,CAAA,EAGG,GAAA,sCAAA,GAAA,GAAA,gBAAA,CAAA,EAUE,GAAA,sCAAA,GAAA,GAAA,gBAAA,CAAA,EAkBA,GAAA,sCAAA,GAAA,GAAA,gBAAA,CAAA,EAWL,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAMS,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAOV,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAKM,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAaH,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAcJ,IAAA,uCAAA,IAAA,GAAA,gBAAA,CAAA,EAuBO,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAwBA,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAWU,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAKb,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAcG,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAWG,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAUT,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAUI,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAWN,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAWK,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAUN,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAGS,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAcN,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAWM,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAkBE,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAsBV,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAUK,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAoBI,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAaL,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAaO,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAaH,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAYL,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAKG,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAGE,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAGM,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAWG,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA,EAKN,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA;;AAenD,QAAA,uBAAA;;;AAzaK,QAAA,qBAAA,MAAA,aAAA,IAAA,IAAA,OAAA;AACI,QAAA,oBAAA;AAAA,QAAA,qBAAA,MAAA,WAAA,IAAA,IAAA,OAAA,EAA6B,UAAA,0BAAA,IAAAE,IAAA,EAAA,SAAA,IAAA,IAAA,IAAA,CAAA;AAClC,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,IAAA,OAAA,GAAA;AACO,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,IAAA,SAAA,QAAA;AAGK,QAAA,oBAAA;AAAA,QAAA,qBAAA,YAAA,IAAA,IAAA,IAAA;AACG,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,QAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,WAAA;AAUA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAkBA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAWA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,QAAA;AAMA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,iBAAA;AAOA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,MAAA;AAKA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAaA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,UAAA;AAcA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,MAAA;AAuBA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAwBA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAWA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,uBAAA;AAKA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,UAAA;AAcA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAWA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,gBAAA;AAUA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,OAAA;AAUA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,WAAA;AAWA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,KAAA;AAWA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,UAAA;AAUA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,IAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAcA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,OAAA;AAWA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAkBA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,eAAA;AAsBA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,KAAA;AAUA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,UAAA;AAoBA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,cAAA;AAaA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,SAAA;AAaA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,gBAAA;AAaA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAYA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,QAAA;AAKA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,WAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,aAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,mBAAA;AAWA,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,sBAAA;AAKF,QAAA,oBAAA;AAAA,QAAA,qBAAA,gBAAA,kBAAA;;;MDnYT;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAAmB;MAAA;MACnB;MACA;MACA;MACA;MAEA;MACA;IAAc,GAAA,QAAA,CAAA,8+RAAA,EAAA,CAAA;EAAA;;;6EAGT,cAAY,EAAA,WAAA,gBAAA,UAAA,oEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGvCrB,IAAA,yBAAA,GAAA,IAAA;AAAsB,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;;;;AAAf,IAAA,oBAAA;AAAA,IAAA,6BAAA,QAAA,OAAA,OAAA,EAAA;;;;;AACtB,IAAA,yBAAA,GAAA,IAAA;AAAuB,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;;;;AAAnB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,UAAA;;;;;AAQnB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAAwF,IAAA,qBAAA,WAAA,KAAA;AAAvC,IAAA,qBAAA,UAAA,UAAA,EAAkB,cAAA,OAAA,IAAA;;;;;AADrE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,kEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AAAqB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAgDrB,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;;AAAwF,IAAA,qBAAA,WAAA,KAAA;AAAvC,IAAA,qBAAA,UAAA,UAAA,EAAkB,cAAA,OAAA,IAAA;;;;;AADrE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,mEAAA,GAAA,GAAA,sBAAA,EAAA;;;;;;AAAqB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,sBAAA,GAAA,GAAA,WAAA,IAAA,CAAA;;;;;AAQrB,IAAA,kCAAA,CAAA;AAAgC,IAAA,iBAAA,GAAA,QAAA;;;;;;AAChC,IAAA,kCAAA,CAAA;AAAiC,IAAA,iBAAA,GAAA,QAAA;;;;;;;AAFnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACtE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,gBAAA,CAAA,EAAgC,GAAA,uDAAA,GAAA,GAAA,gBAAA,CAAA;AAElC,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;ADpCjB,IAAO,sBAAP,MAAO,6BAA4B,aAA+B;EAgBtE,YAAY,KAAqB,IAAgC,KAA6C,QAAuC,mBAAoC;AACvL,UAAM,KAAK,EAAE;AADkD,SAAA,MAAA;AAA6C,SAAA,SAAA;AAAuC,SAAA,oBAAA;AAf9I,SAAA,QAAQ;AAGP,SAAA,eAAe,WAAW,QAAQ;AAClC,SAAA,SAAS,WAAW,MAAM;AAE1B,SAAA,sBAAsB,CAAA;AAC9B,SAAA,UAAU,CAAA;AAEV,SAAA,0BAA0B,CAAA;AAC1B,SAAA,2BAA2B,CAAA;AAE3B,SAAA,oBAAoB;AACpB,SAAA,qBAAqB;AA+KrB,SAAA,eAAe,CAAC,SAAc,KAAK;AACnC,SAAA,cAAc,CAAC,SAAc,KAAK;AAElC,SAAA,YAAY,CAAC,SACX,KAAK,IAAI,eAAe,KAAK,MAAM,SAAQ,GAAI,KAAK,OAAO,SAAQ,CAAE,EAAE,KACrE,IAAI,CAAC,YAAW;AACd,UAAI,CAAC,SAAS;AACZ,aAAK,OAAO,QAAQ,2BAA2B;MACjD;IACF,CAAC,CAAC;AAyBN,SAAA,qBAAqB,CAAC,UAAuB;AAC3C,WAAK,0BAA0B;AAC/B,WAAK,oBAAoB;IAC3B;AAEA,SAAA,sBAAsB,CAAC,UAAuB;AAC5C,WAAK,2BAA2B;AAChC,WAAK,qBAAqB;IAC5B;AAEA,SAAA,iBAAiB,MAAK;AACpB,WAAK,QAAQ,QAAQ,CAAC,QAAO;AAC3B,cAAM,aAAa,KAAK,yBAAyB,KAAK,CAAC,SAAS,KAAK,QAAQ,IAAI,GAAG;AACpF,cAAM,YAAY,KAAK,wBAAwB,KAAK,CAAC,SAAS,KAAK,QAAQ,IAAI,GAAG;AAClF,YAAI,WAAW,cAAc;AAC7B,YAAI,WAAW,cAAc;MAC/B,CAAC;AACD,WAAK,UAAU,KAAK,QAAQ,MAAK;IACnC;AA/NE,SAAK,cAAc,CAAC,EAAE,aAAa,QAAQ,SAAS,CAAC,SAAmB,KAAK,iBAAiB,IAAI,EAAC,CAAE;EACvG;EACA,qBAAkB;AAChB,SAAK,kBAAkB,cAAa;EACtC;EACA,iBAAc;AACZ,UAAM,EAAE,YAAW,IAAK,KAAK,OAAO;AACpC,SAAK,SAAS,KAAK,IAAI,SAAS,WAAW,EAAE,KAAK,IAAI,CAAC,SAAS,YAAY,MAAM,SAAS,OAAO,CAAC,CAAC;EACtG;EAEA,WAAQ;AACN,UAAM,aAAa,CAAC,GAAG,eAAe;AACtC,QAAI,KAAK,WAAW;AAClB,YAAM,WAAW,OAAO,OAAO,KAAK,OAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,SACpE,OAAO,OAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,QAAQ,OAAO,OAAO,IAAI,WAAW,CAAC,CAAC;IAGpF;AACA,SAAK,OAAO,KAAK,GAAG,MAAM;MACxB,MAAM,CAAC,KAAK,KAAK,MAAM,EAAE,YAAY,UAAU,OAAM,CAAE;MACvD,cAAc,CAAC,CAAC,KAAK,KAAK,gBAAgB,CAAC;MAC3C,aAAa,CAAC,KAAK,KAAK,aAAa,CAAC,WAAW,QAAQ,CAAC;MAC1D,aAAa,CAAC,CAAC,KAAK,KAAK,eAAe,CAAC;MACzC,UAAU,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC;MACnC,UAAU,CAAC,KAAK,KAAK,QAAQ;MAC7B,OAAO,CAAC,YAAY,KAAK,KAAK,OAAO,SAAS,KAAK,CAAC;;MAEpD,QAAQ,CAAC,KAAK,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,KAAK,KAAK,MAAM,GAAG,CAAC,WAAW,QAAQ,CAAC;MAClF,MAAM,CAAC,KAAK,aAAa,KAAK,CAAC,MAAM,EAAE,QAAQ,KAAK,KAAK,IAAI,GAAG,CAAC,WAAW,QAAQ,CAAC;MACrF,SAAS,CAAC,KAAK,KAAK,WAAW,KAAK,OAAO,SAAS,CAAC,WAAW,QAAQ,CAAC;MACzE,UAAU,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC;KACpC;AAED,UAAMC,OAAM,KAAK,eAAc;AAC/B,UAAM,OAAOA,KAAI,IAAI,CAAC,KAAK,CAAA;AAC3B,UAAM,QAAQA,KAAI,IAAI,CAAC,KAAK,CAAA;AAG5B,SAAK,0BAA0B,KAAK,OAAO,CAAC,SAAS,KAAK,QAAQ;AAClE,SAAK,2BAA2B,MAAM,OAAO,CAAC,SAAS,KAAK,QAAQ;AAEpE,SAAK,WAAW;MACd,IAAI,cAAc,EAAE,MAAM,QAAQ,OAAO,QAAQ,UAAU,CAAC,KAAK,WAAW,UAAU,KAAI,CAAE;MAC5F,IAAI,cAAc,EAAE,MAAM,eAAe,OAAO,iBAAiB,UAAU,KAAI,CAAE;MACjF,IAAI,cAAc,EAAE,MAAM,WAAW,OAAO,WAAW,UAAU,KAAI,CAAE;MACvE,IAAI,cAAc,EAAE,MAAM,UAAU,OAAO,UAAU,MAAM,YAAY,UAAU,MAAM,SAAS,GAAG,KAAK,MAAM,EAAC,CAAE;MACjH,IAAI,cAAc,EAAE,MAAM,QAAQ,OAAO,QAAQ,MAAM,YAAY,UAAU,MAAM,SAAS,GAAG,KAAK,YAAY,EAAC,CAAE;MACnH,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,SAAS,KAAK;QACd,MAAM,KAAK,KAAK,QAAQ,SAAS,IAAI;QACrC,UAAU;OACX;MACD,IAAI,cAAc,EAAE,MAAM,YAAY,OAAO,oBAAoB,MAAM,QAAQ,OAAO,UAAS,CAAE;MAEjG,IAAI,cAAc,EAAE,MAAM,YAAY,OAAO,iCAAiC,MAAM,SAAQ,CAAE;MAC9F,IAAI,cAAc,EAAE,MAAM,eAAe,OAAO,kBAAkB,MAAM,SAAQ,CAAE;MAClF,IAAI,cAAc;QAChB,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM,KAAK,KAAK,eAAe,IAAI;OACpC;MACD,IAAI,cAAc,EAAE,MAAM,YAAY,OAAO,aAAa,MAAM,SAAQ,CAAE;;AAG5E,SAAK,IAAI,uBAAuB,KAAK,OAAO,KAAK,aAAa,QAAQ,KAAK,OAAO,KAAK,IAAI,EAAE,UAAU,OAAG;AACxG,WAAK,sBAAqB;AAC1B,YAAM,SAAS,KAAK,WAAU;AAC9B,WAAK,UAAS,OAAO,IAAI,CAAC,KAAI,CAAA;IAChC,CAAC;AAGD,SAAK,KAAK,IAAI,MAAM,EAAE,aAAa,UAAU,UAAM;AACjD,UAAG,KAAK,aAAa,QAAQ,KAAK,UAAQ,KAAK,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,WAAW,KACvF,CAAC,KAAK,KAAK,IAAI,MAAM,EAAE,SAAS,SAAS,GAAE;AAC5C,aAAK,IAAI,kBAAkB,QAAO,GAAE,MAAK,KAAK,OAAO,KAAK,SAAQ,KAAK,OAAO,KAAK,WAAW,EAAE,UAAU,aAAS;AACjH,cAAG,SAAQ;AACP,kBAAM,cAAc,KAAK,KAAK,IAAI,MAAM;AACxC,wBAAY,UAAU;cACtB,YAAY;cACZ,SAAS;aACV;UACH;QACF,CAAC;MACH;IACF,CAAC;EAIH;EAEA,gBAAa;AAEX,UAAM,MAAM,KAAK,aAAa,KAAK,CAAC,EAAE,IAAG,MAAO,KAAK,KAAK,SAAS,GAAG;AACtE,SAAK,EAAE,KAAK,WAAW,GAAG;EAC5B;EAEQ,aAAU;AAChB,UAAM,QAAQ,KAAK,KAAK,SAAS,CAAA;AACjC,UAAM,SAAS,oBAAI,IAAG;AACtB,SAAK,oBAAoB,QAAQ,CAAC,KAAK,MAAK;AAC1C,YAAM,QAAQ,MAAM,KAAK,CAACC,UAASA,MAAK,UAAU,IAAI,OAAO;AAC7D,YAAM,OAAO;QACX,KAAK,IAAI;QACT,OAAO,IAAI;QACX,OAAO,IAAI;QACX,QAAQ,KAAK,OAAO,OAAO;QAC3B,UAAU;QACV,UAAU;;AAIR,UAAI,CAAC,OAAO,IAAI,CAAC;AAAG,eAAO,IAAI,GAAG,CAAA,CAAE;AAClC,YAAM,MAAM,OAAO,IAAI,CAAC;AACxB,UAAI,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE,QAAQ,KAAK,GAAG,GAAG;AACxC,eAAO,IAAI,CAAC,EAAE,KAAK,IAAI;MACzB;IACR,CAAC;AAED,WAAO;EACT;EAEQ,iBAAc;AACpB,UAAM,QAAQ,KAAK,KAAK,SAAS,CAAA;AACjC,UAAM,SAAS,oBAAI,IAAG;AACtB,UAAM,gBAAgB,CAAC,SAAc;AACnC,WAAK,SAAS,WAAW,QAAQ,CAAC,QAAO;AACvC,YAAI,QAAQ,QAAQ,CAAC,KAAK,MACxB,IAAI,WAAW,QAAQ,CAAC,QAAO;AAC7B,gBAAM,MAAM,KAAK,SAAS,IAAI,OAAO;AACrC,gBAAM,QAAQ,MAAM,KAAK,CAACA,UAASA,MAAK,UAAU,IAAI,QAAQA,MAAK,QAAM,KAAK,IAAI;AAClF,gBAAM,OAAO;YACX,KAAK,IAAI;;YAET,OAAO,GAAG,IAAI,KAAK,KAAK,IAAI,OAAO;YACnC,OAAO,IAAI;YACX,QAAQ,KAAK,OAAO,OAAO;YAC3B,UAAU;YACV,UAAU;;AAGZ,cAAI,CAAC,OAAO,IAAI,CAAC;AAAG,mBAAO,IAAI,GAAG,CAAA,CAAE;AACpC,gBAAMC,OAAM,OAAO,IAAI,CAAC;AACxB,cAAI,CAACA,KAAI,KAAK,CAAC,MAAM,EAAE,QAAQ,KAAK,GAAG,GAAG;AACxC,mBAAO,IAAI,CAAC,EAAE,KAAK,IAAI;UACzB;QACF,CAAC,CAAC;MAEN,CAAC;IACH;AACA,QAAI,KAAK,KAAK,UAAU;AACtB,oBAAc,KAAK,IAAY;IACjC;AACA,WAAO,OAAO,KAAK,OAAO,KAAK,WAAW,EACvC,OAAO,CAAC,SAAS,KAAK,WAAW,KAAK,OAAO,OAAO,MAAM,EAC1D,QAAQ,CAAC,SAAQ;AAChB,aAAO,OAAO,KAAK,WAAW,EAC3B,OAAO,CAAC,QAAQ,CAAC,IAAI,UAAU,IAAI,UAAU,KAAK,QAAQ,KAAK,EAC/D,QAAQ,CAAC,QAAO;AACf,eAAO,OAAO,IAAI,WAAW,EAAE,QAAQ,CAAC,SAAQ;AAC9C,wBAAc,IAAI;QACpB,CAAC;MACH,CAAC;IACL,CAAC;AACH,WAAO;EACT;EAcA,eAAe,MAAgB;AAC7B,SAAK,0BAA0B,KAAK,wBAAwB,OAAO,IAAI;AACvE,SAAK,oBAAoB;AACzB,SAAK,eAAc;EACrB;EACA,kBAAkB,MAAgB;AAChC,SAAK,0BAA0B,KAAK,wBAAwB,OAAO,CAAC,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAChG,SAAK,oBAAoB;AACzB,SAAK,eAAc;EACrB;EAEA,gBAAgB,MAAgB;AAC9B,SAAK,2BAA2B,KAAK,yBAAyB,OAAO,IAAI;AACzE,SAAK,qBAAqB;AAC1B,SAAK,eAAc;EACrB;EACA,mBAAmB,MAAgB;AACjC,SAAK,2BAA2B,KAAK,yBAAyB,OAAO,CAAC,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAClG,SAAK,qBAAqB;AAC1B,SAAK,eAAc;EACrB;EAsBA,WAAQ;AACN,SAAK,YAAY;AACjB,QAAI,KAAK,KAAK,OAAO;AACnB,YAAM,MAAM,KAAK,KAAK;AACtB,YAAM,UAAiB,iCAClB,MADkB;QAErB,QAAQ,KAAK,KAAK,UAAU,KAAK,OAAO;QACxC,QAAQ,KAAK,KAAK;QAClB,IAAI,KAAK,KAAK,MAAM,IAAI;QACxB,OAAO,KAAK,KAAK,QAAS,IAAI,MAAiB,QAAQ,KAAK,EAAE;QAC9D,cAAc,KAAK,KAAK;QACxB,MAAM,IAAI,MAAM,OAAO,IAAI;QAC3B,QAAQ,IAAI,QAAQ,OAAO,IAAI;QAC/B,eAAe,CAAC,IAAI,cAAc,SAAQ;QAC1C,cAAc,CAAC,IAAI,aAAa,SAAQ;QACxC,WAAW,CAAC,IAAI,UAAU,SAAQ;QAClC,WAAW,CAAC,IAAI,UAAU,SAAQ;QAClC,OAAO,gBAAgB,IAAI,OAAO,SAAS,KAAK;;AAElD,YAAM,SAAS;QACb,aAAa,KAAK,OAAO,KAAK;QAC9B,QAAQ,KAAK,OAAO,KAAK;QACzB,WAAW,KAAK,OAAO,KAAK;QAC5B,UAAU,IAAI;QACd,cAAc,KAAK,oBAAoB,KAAK,wBAAwB,IAAI,CAAC,EAAE,IAAG,MAAO,GAAG,EAAE,SAAQ,IAAK;QACvG,eAAe,KAAK,qBAAqB,KAAK,yBAAyB,IAAI,CAAC,EAAE,IAAG,MAAO,GAAG,EAAE,SAAQ,IAAK;;AAG5G,WAAK,OAAO,KAAK,OAAO;AACxB,WAAK,IAAI,MAAM,EAAE,SAAS,OAAM,CAAE;IACpC;EACF;EAEQ,iBAAiB,KAAQ;AAC/B,UAAM,KAAK,OAAO;AAClB,QAAI,QAAQ,SAAS,MAAM;AACzB,WAAK,EAAE,MAAM,cAAc,WAAW,QAAQ;IAChD,OAAO;AACL,WAAK,EAAE,MAAM,gBAAe;IAC9B;AACC,SAAK,EAAE,MAAM,uBAAsB;EACtC;EAEQ,KAAK,aAA0B,WAAc;AACnD,WAAO,KAAK,KAAK,IAAI,WAAW,EAAE,aAAa,KAC7C,UAAU,KAAK,KAAK,IAAI,WAAW,EAAE,KAAK,GAC1C,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,GACtB,IAAI,CAAC,MAAM,MAAM,SAAS,CAAC;EAE/B;;;uCApSW,sBAAmB,4BAAA,cAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,iBAAA,CAAA;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,UAAA,GAAA,GAAA,CAAA,OAAA,IAAA,GAAA,QAAA,GAAA,CAAA,WAAA,YAAA,aAAA,YAAA,GAAA,OAAA,UAAA,WAAA,SAAA,mBAAA,eAAA,cAAA,YAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,aAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,0BAAA,QAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,cAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,YAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,UAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AChChC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,QAAA,qBAAA,GAAA,mCAAA,GAAA,GAAA,MAAA,CAAA,EAAsB,GAAA,mCAAA,GAAA,GAAA,MAAA,CAAA;AAEtB,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA2B,GAAA,KAAA,CAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,iBAAS,IAAA,IAAA,MAAA;QAAW,CAAA;AAAE,QAAA,uBAAA,EAAI,EAAO;AAEnG,QAAA,oBAAA,GAAA,IAAA;AAEA,QAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,OAAA,CAAA;AAErB,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,gBAAA,CAAA;;AAKA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAqB,IAAA,OAAA,CAAA,EAC0B,IAAA,SAAA,EAAA;AACd,QAAA,iBAAA,IAAA,gCAAA;AAA8B,QAAA,uBAAA;AAC3D,QAAA,yBAAA,IAAA,SAAA,EAAA;AAA6B,QAAA,iBAAA,IAAA,+BAAA;AAA6B,QAAA,uBAAA,EAAQ;AAGpE,QAAA,yBAAA,IAAA,mBAAA,EAAA;AASE,QAAA,qBAAA,OAAA,SAAA,6DAAA,QAAA;AAAA,iBAAO,IAAA,eAAA,MAAA;QAAsB,CAAA,EAAC,UAAA,SAAA,gEAAA,QAAA;AAAA,iBACpB,IAAA,kBAAA,MAAA;QAAyB,CAAA,EAAC,WAAA,SAAA,iEAAA,QAAA;AAAA,iBACzB,IAAA,mBAAA,MAAA;QAA0B,CAAA;AAEvC,QAAA,uBAAA,EAAkB;AAGpB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAqB,IAAA,OAAA,CAAA,EAC0B,IAAA,SAAA,EAAA;AACd,QAAA,iBAAA,IAAA,iCAAA;AAA+B,QAAA,uBAAA;AAC5D,QAAA,yBAAA,IAAA,SAAA,EAAA;AAA6B,QAAA,iBAAA,IAAA,gCAAA;AAA8B,QAAA,uBAAA,EAAQ;AAErE,QAAA,yBAAA,IAAA,mBAAA,EAAA;AASE,QAAA,qBAAA,OAAA,SAAA,6DAAA,QAAA;AAAA,iBAAO,IAAA,gBAAA,MAAA;QAAuB,CAAA,EAAC,UAAA,SAAA,gEAAA,QAAA;AAAA,iBACrB,IAAA,mBAAA,MAAA;QAA0B,CAAA,EAAC,WAAA,SAAA,iEAAA,QAAA;AAAA,iBAC1B,IAAA,oBAAA,MAAA;QAA2B,CAAA;AAExC,QAAA,uBAAA,EAAkB;AAGpB,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,gBAAA,CAAA;;AAIF,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,iBAAS,IAAA,SAAA;QAAU,CAAA;AAAE,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC9E,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EACD;;;AArEA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;AAKD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,IAAA;AAEgC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,sBAAA,IAAA,IAAA,IAAA,UAAA,GAAA,CAAA,CAAA;AAY9B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,OAAA,EAAiB,mBAAA,IAAA,uBAAA,EAC0B,eAAA,IAAA,YAAA,EACf,cAAA,IAAA,WAAA,EACF,YAAA,KAAA,EACR,aAAA,IAAA,SAAA;AAiBlB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,OAAA,EAAiB,mBAAA,IAAA,wBAAA,EAC2B,eAAA,IAAA,YAAA,EAChB,cAAA,IAAA,WAAA,EACF,YAAA,KAAA,EACR,aAAA,IAAA,SAAA;AAWY,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,sBAAA,IAAA,IAAA,IAAA,UAAA,CAAA,CAAA;AAQyC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,OAAA,KAAA,SAAA;;;MD3CzE;MACA;MAAmB;MAAA;MAAA;MACnB;MACA;MACA;MACA;MACA;IAAS,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAGJ,qBAAmB,EAAA,WAAA,uBAAA,UAAA,oFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AE7BhC,IAAAC,iBAA+B;;;;ACanB,IAAA,yBAAA,GAAA,MAAA,EAAA;AAME,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AACxD,IAAA,uBAAA;;;;;AAJE,IAAA,qBAAA,mBAAA,OAAA,YAAA,OAAA,sBAAA,OAAA,CAAA;AAGG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA;AAAmD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,QAAA,MAAA,GAAA;;;;;AAnBhE,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAgD,GAAA,OAAA,CAAA,EAChB,GAAA,OAAA,CAAA,EACH,GAAA,SAAA,CAAA;AACc,IAAA,iBAAA,GAAA,oBAAA;AAAkB,IAAA,uBAAA,EAAQ;AAEjE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA4B,GAAA,OAAA,IAAA,CAAA;AAQxB,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,MAAA,EAAA;AAQF,IAAA,uBAAA,EAAM,EACF,EACF;;;;AAZA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,mBAAA,OAAA,aAAA;AAMmB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,aAAA;;;;;AAsBrB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,GAAA,kCAAA;AACF,IAAA,uBAAA;;;;;AAOM,IAAA,6BAAA,CAAA;;;;;;AANN,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEI,IAAA,qBAAA,cAAA,SAAA,4FAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,aAAA,sBAAA,OAAA,UAA4B,IAAI;IAAA,CAAA,EAAC,cAAA,SAAA,4FAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,aAAA,sBAAA,OAAA,UACL,KAAK;IAAA,CAAA;AAEjC,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,gFAAA,GAAA,GAAA,gBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,WAAA,EAAA;AAMF,IAAA,uBAAA;;;;;;AATwC,IAAA,oBAAA;AAAA,IAAA,sBAAA,UAAA,OAAA,OAAA;AACrB,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,cAAA,EAA+B,2BAAA,0BAAA,GAAAC,MAAA,MAAA,CAAA;AAI9C,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,MAAA,EAAW,mBAAA,OAAA,QAAA;;;;;;AAlBnB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqG,GAAA,OAAA,EAAA;AAInG,IAAA,qBAAA,sBAAA,SAAA,4FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAsB,OAAA,OAAA,MAAA,CAAc;IAAA,CAAA;AACpC,IAAA,qBAAA,GAAA,iEAAA,GAAA,GAAA,OAAA,EAAA,EAAqE,GAAA,iEAAA,GAAA,GAAA,OAAA,EAAA;AAkBrE,IAAA,uBAAA,EAAM;;;;;AAvBuD,IAAA,sBAAA,UAAA,WAAA,UAAA,GAAA;AAG7D,IAAA,oBAAA;AAAA,IAAA,qBAAA,mBAAA,OAAA;AAEM,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,WAAA,CAAA;AAIc,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA;;;;;AAVxB,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,2DAAA,GAAA,GAAA,OAAA,EAAA;;;;;AAA6B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,cAAA,OAAA,OAAA,WAAA,UAAA;;;;;;AARjC,IAAA,yBAAA,GAAA,OAAA,EAAA;AAIE,IAAA,qBAAA,cAAA,SAAA,iEAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,aAAA,sBAAA,OAAA,UAA4B,IAAI;IAAA,CAAA,EAAC,cAAA,SAAA,iEAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,aAAA,sBAAA,OAAA,UACL,KAAK;IAAA,CAAA;AAEjC,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,gBAAA,EAAA;AA2BF,IAAA,uBAAA;;;;;AAhCE,IAAA,qBAAA,OAAA,WAAA,cAAA,UAAA;AAKiC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,UAAA,OAAA,OAAA,OAAA,OAAA;;;;;;AAiCrC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAIE,IAAA,qBAAA,SAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,QAAA,CAAiB;IAAA,CAAA;AAC1B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,QAAA,CAAgB;IAAA,CAAA;AACzB,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;;;;AAbF,IAAA,qBAAA,GAAA,6DAAA,GAAA,GAAA,gBAAA,EAAA;AAeA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,QAAA,CAAwB;IAAA,CAAA;AAEjC,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,YAAA,WAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,QAAA,CAAe;IAAA,CAAA;AAExB,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;AA1Be,IAAA,qBAAA,QAAA,CAAA,OAAA,QAAA;;;AD1BX,IAAO,wBAAP,MAAO,uBAAqB;EAIhC,IACI,KAAK,MAAU;AACjB,SAAK,QAAQ;EACf;EACA,IAAI,OAAI;AACN,WAAO,KAAK;EACd;EAEA,IACI,SAAS,UAAiB;AAC5B,SAAK,YAAY;EACnB;EACA,IAAI,WAAQ;AACV,WAAO,KAAK;EACd;EAMA,YACU,OACA,KACA,OACA,IAAwB;AAHxB,SAAA,QAAA;AACA,SAAA,MAAA;AACA,SAAA,QAAA;AACA,SAAA,KAAA;AA3BO,SAAA,WAAW,IAAI,QAAO;AAC/B,SAAA,kBAAkB;AAClB,SAAA,sBAA4B;AAgB3B,SAAA,gBAAgB,OAAO,OAAO,IAAI,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,YAAW,EAAG,cAAc,EAAE,KAAK,YAAW,CAAE,CAAC;AAG5G,SAAA,YAAY;EAOjB;EAEH,WAAQ;AACN,SAAK,WAAU;EACjB;EAEQ,aAAU;AAChB,UAAM,UAAU;AAChB,UAAM,QAAQ;AACd,SAAK,SACF,KACC,UAAU,CAAC,MAAM,KAAK,eAAe,GACrC,UAAU,CAAC,MAAK;AACd,UAAI,cAAc,KAAK,MAAM,cAC3B,OACA,SACA,MACA,KAAK;AAEP,UAAI,aAAa;AACf,aAAK,MAAM,OAAO,YAAY,OAAO;MACvC;AACA,oBAAc,KAAK,MAAM,KAAK,SAAS,OAAO;QAC5C,SAAS;QACT,cAAc;OACf;AACD,aAAO,KAAK,MACT,WAAW,KAAK,KAAK,YAAW,GAAI,KAAK,KAAK,MAAM,IAAI,EACxD,KACC,WAAW,CAACC,OAAM,GAAG,KAAK,CAAC,GAC3B,SAAS,MAAM,KAAK,MAAM,OAAO,YAAY,OAAO,CAAC,CAAC;IAE5D,CAAC,CAAC,EAEH,UAAS;EACd;EAEa,OAAO,GAAiD;;AACnE,UAAG,KAAK,qBAAoB;AAC1B,aAAK,MAAM,QAAQ,+CAA+C,SAAS;AAC3E;MACF;AACA,YAAMC,QAAO,EAAE;AACf,YAAM,KAAK,EAAE;AACb,YAAM,UAAU,EAAE;AAClB,YAAM,QAAQ,EAAE;AAChB,UAAIA,MAAK,OAAO,iBAAiB;AAC/B,cAAM,SAASA,MAAK,KAAK,OAAO;AAChC,cAAM,MAAM,MAAM,KAAK,cAAc,MAAM;AAC3C,YAAI,CAAC,KAAK;AACR;QACF;AACA,0BAAkB,CAAC,GAAG,GAAG,GAAG,MAAiC,GAAG,KAAK;AACrE,cAAM,QAAQ,MAAM,KAAK,eAAe,GAAG;AAC3C,YAAI,CAAC,OAAO;AACV,aAAG,OAAO,GAAG,KAAK,OAAO,CAAC,QAAQ,IAAI,YAAY,IAAI,OAAO;QAC/D;AACA,YAAI,QAAQ,CAAC;AACb,aAAK,MAAM,gBAAgB,KAAK,IAAI,EAAE,UAAU,MAAM,KAAK,GAAG,MAAK,CAAE;AACrE;MACF,WAAWA,MAAK,OAAO,GAAG,IAAI;AAC5B,0BAAkBA,MAAK,MAAe,GAAG,MAAM,SAAS,KAAK;MAC/D,OAAO;AACL,YAAIA,MAAK,OAAO,GAAG,MAAM,YAAY;AAAO;AAC5C,wBAAgBA,MAAK,MAAe,SAAS,KAAK;MACpD;AACA,WAAK,MAAM,gBAAgB,KAAK,IAAI,EAAE,UAAS;IAEjD;;EAEa,UAAU,MAAiB;;AACtC,YAAM,SAAS,KAAK,KAAK,IAAI;AAC7B,YAAM,MAAM,MAAM,KAAK,cAAc,QAAQ,IAAI;AACjD,UAAI,KAAK;AACP,cAAM,QAAQ,MAAM,KAAK,eAAe,GAAG;AAC3C,YAAI,OAAO;AACT,cAAI,QAAQ,CAAC;AACb,eAAK,MAAM,gBAAgB,KAAK,IAAI,EAAE,UAAS;AAC/C,eAAK,MAAM,QAAQ,+BAA+B,SAAS;QAC7D,OAAO;AACL,eAAK,MAAM,QAAQ,sBAAsB,SAAS;QACpD;MACF;IACF;;EAEO,WAAW,MAAkB;AAClC,SAAK,KAAK,eAAe,KAAK,SAAS,CAAO,SAAQ;AACpD,UAAI,CAAC;AAAM;AACX,YAAM,EAAE,UAAU,GAAG,aAAa,GAAG,UAAU,EAAC,IAAK;AACrD,YAAM,OAAO,KAAK,KAAK,SAAS;AAChC,YAAM,MAAM,KAAK,CAAC,EAAE,QAAQ,CAAC;AAC7B,YAAM,SAAS,KAAK,KAAK,YAAY,KAAK,OAAO,EAAE,MAAK;AACxD,YAAM,gBAAgB,IAAI,WACvB,MAAM,GAAG,IAAI,CAAC,EACd,OAAO,OAAO,SAAQ,GAAoB,IAAI,WAAW,MAAM,IAAI,CAAC,CAAC;AACxE,UAAI,aAAa;AACjB,WAAK,KAAK,SAAS,MAAM;AACzB,YAAM,SAAS,KAAK,KAAK,IAAI;AAC7B,YAAM,MAAM,MAAM,KAAK,cAAc,QAAQ,MAAM;AACnD,UAAI,CAAC,KAAK;AACR,aAAK,KAAK,YAAY,OAAO,OAAO;AACpC,YAAI,aAAa,cAAc,OAC7B,CAAC,QAAQ,IAAI,YAAY,OAAO,OAAO;AAEzC;MACF;AACA,YAAM,YAAY,iCAAK,OAAL,EAAW,UAAU,KAAK,WAAW,EAAC;AACxD,WAAK,WAAW,WAAW,GAAG;AAE9B,YAAM,QAAQ,MAAM,KAAK,eAAe,GAAG;AAC3C,UAAI,OAAO;AACT,YAAI,QAAQ,CAAC;AACb,aAAK,MAAM,gBAAgB,KAAK,IAAI,EAAE,UAAS;AAC/C,aAAK,MAAM,QAAQ,+BAA+B,SAAS;MAC7D,OAAO;AACL,aAAK,MAAM,QAAQ,sBAAsB,SAAS;MACpD;IACF,EAAC;EACH;EAEO,YAAY,MAAkB;AACnC,UAAM,QAAQ,KAAK,IAAI,YAAY,WAAW;MAC5C,QAAQ;MACR,MAAM,uCAAuC,KAAK,OAAO;MACzD,SAAS;MACT,cAAc;MACd,UAAU;MACV,aAAY;MACZ,UAAU,MAAK;AACb,aAAK,MACF,UAAU,KAAK,MAAM,SAAQ,GAAI,KAAK,KAAK,KAAK,KAAK,SAAQ,CAAE,EAC/D,UAAU,CAAC,YAAY,WAAW,KAAK,GAAG,MAAK,CAAE;MACtD;KACD;EACH;EAEc,cAAc,IAA8C;+CAA9C,QAAe,OAA6B,CAAA,GAAE;AACxE,YAAM,YAAY,OAAO,KAAK,IAAI,EAAE,WAAW,KAAK,KAAK,YAAY;AACrE,YAAM,QAAQ,KAAK,IAAI,cAAc,oBAAoB;QACvD;QACA;QACA;QACA,QAAQ,KAAK;QACb,UAAU,KAAK;OAChB;AACD,aAAQ,MAAM,MAAM;IACtB;;EAEc,eAAe,KAAiB;;AAC5C,YAAM,kBAAkB,KAAK,MAAM,eAAe,IAAI,SAAS,CAAC,SAC9D,KAAK,WAAW,MAAM,GAAG,CAAC;AAE5B,UAAI;AACF,eAAO,MAAM,KAAK,MAAM,WAAW,KAAK,KAAK,KAAK,IAAI,EAAE,UAAS;MACnE,SAAS,OAAO;AACd,YAAI,iBAAiB;AACnB,eAAK,MAAM,eAAe,gBAAgB,IAAI,SAAS,CAAC,SACtD,KAAK,WAAW,MAAM,gBAAgB,GAAG,CAAC;QAE9C;MACF;AACA,aAAO;IACT;;EAEQ,WACN,MACA,aAAgC;AAEhC,QAAI,CAAC;AAAM;AACX,UAAM,EAAE,UAAU,GAAG,aAAa,GAAG,UAAU,EAAC,IAAK;AACrD,UAAM,OAAO,KAAK,KAAK,SAAS;AAChC,QAAI,gBAAgB,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,WAAW,MAAK;AACvD,QAAI,gBAAgB,MAAM;AACxB,sBAAgB,cAAc,OAC5B,CAAC,QAAQ,IAAI,YAAY,KAAK,IAAI,OAAO;AAE3C,WAAK,KAAK,YAAY,KAAK,IAAI,OAAO;IACxC,OAAO;AACL,oBAAc,CAAC,IAAI;AACnB,WAAK,KAAK,SAAS,IAAI,YAAY,aAAa,KAAK,IAAI,CAAC;IAC5D;AACA,SAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa;EAClC;EAEM,mBAAmB,MAAkB;;AACzC,YAAM,SAAS,KAAK,cAAc,KAAK,CAAC,MAAM,EAAE,SAAS,KAAK,IAAI;AAClE,YAAM,SAAS,KAAK,MAAM,YAAY,KAAK,OAAO;AAClD,YAAM,QAAQ,KAAK,IAAI,cAAc,uBAAuB;QAC1D;QACA;QACA,UAAU,KAAK;OAChB;AACD,YAAM,MAAM,MAAM,MAAM;AACxB,UAAI,CAAC,KAAK;AACR;MACF;AACA,YAAM,EAAE,SAAS,kBAAiB,IAAK;AAIvC,WAAK,MAAM,iBAAiB,OAAO,EAAE,UAAU,CAAC,YAAW;AACzD,YAAI,SAAS;AACX,gBAAM,kBAAkB,CAAC,OACvB,KAAK,MAAM,mBAAmB,EAAE,EAAE,KAChC,OAAO,CAACC,aAAYA,QAAO,GAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;AAElB,gBAAM,+BAA2B,+BAC/B,OAAO,YACP,mBACA,IAAI;AAGN,eAAK,yBAAyB,IAAI,CAAC,MAAM,gBAAgB,EAAE,EAAE,CAAC,CAAC,EAC5D,KACC,SAAQ,GACR,SACE,MACG,OAAO,aACN,QAAQ,aAAa,OAAO,IAAI,EAAE,SAAU,CACjD,EAEF,UAAS;QACd;MACF,CAAC;IACH;;EACA,sBAAsB,MAAI;AAExB,QAAG,KAAK,MAAK;AACX,UAAG,KAAK,MAAM,UAAU,SAAS,KAAK,KAAK,MAAM,QAAM;AACrD,aAAK,sBAAoB;;AAE3B,aAAK,sBAAoB;AAC1B,UAAG,KAAK,QAAM,oBACT,KAAK,KAAK,QAAM;AAClB,eAAO;eACD,KAAK,MAAM,QAAM,oBACtB,KAAK,QAAM;AACZ,eAAO;IACT;AACA,WAAO;EACX;EAEA,cAAW;AACT,SAAK,kBAAkB;EACzB;;;uCAlRW,wBAAqB,4BAAA,qBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,oBAAA,CAAA;IAAA;EAAA;;yEAArB,wBAAqB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,QAAA,EAAA,MAAA,QAAA,UAAA,WAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,eAAA,EAAA,GAAA,CAAA,eAAA,aAAA,GAAA,CAAA,GAAA,aAAA,KAAA,GAAA,CAAA,oBAAA,IAAA,GAAA,WAAA,GAAA,CAAA,SAAA,oBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,eAAA,GAAA,SAAA,cAAA,cAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,YAAA,SAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,OAAA,OAAA,GAAA,aAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,MAAA,iBAAA,eAAA,IAAA,GAAA,cAAA,aAAA,GAAA,iBAAA,GAAA,CAAA,SAAA,iFAAA,WAAA,IAAA,GAAA,mBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,WAAA,IAAA,GAAA,mBAAA,0BAAA,2BAAA,kBAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,gBAAA,KAAA,GAAA,CAAA,GAAA,eAAA,GAAA,cAAA,YAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,kBAAA,GAAA,UAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,eAAA,IAAA,GAAA,aAAA,cAAA,aAAA,GAAA,sBAAA,iBAAA,GAAA,CAAA,SAAA,oBAAA,QAAA,SAAA,GAAA,MAAA,GAAA,CAAA,SAAA,uBAAA,GAAA,cAAA,cAAA,GAAA,SAAA,SAAA,GAAA,CAAA,QAAA,SAAA,GAAA,SAAA,YAAA,GAAA,CAAA,GAAA,YAAA,YAAA,GAAA,cAAA,YAAA,GAAA,CAAA,GAAA,gBAAA,aAAA,GAAA,CAAA,GAAA,oBAAA,yBAAA,GAAA,CAAA,WAAA,IAAA,GAAA,kBAAA,GAAA,OAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,cAAA,cAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,SAAA,GAAA,CAAA,cAAA,QAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,WAAA,GAAA,CAAA,cAAA,UAAA,GAAA,eAAA,GAAA,SAAA,oBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,cAAA,GAAA,CAAA,cAAA,SAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,SAAA,CAAA,GAAA,UAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AC3ClC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,OAAA,CAAA;AAGvB,QAAA,qBAAA,GAAA,sCAAA,GAAA,GAAA,OAAA,CAAA,EAAgD,GAAA,sCAAA,GAAA,GAAA,OAAA,CAAA;AA8DlD,QAAA,uBAAA,EAAM;AAGR,QAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;;;AAjEmC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,QAAA;AA6Bb,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,QAAA,OAAA,OAAA,IAAA,KAAA,YAAA,OAAA,OAAA,IAAA,KAAA,SAAA,UAAA;;;MDCd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAU,GAAA,QAAA,CAAA,ugIAAA,EAAA,CAAA;EAAA;;;6EAGL,uBAAqB,EAAA,WAAA,yBAAA,UAAA,0FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGlBxB,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;;AAEE,IAAA,qBAAA,SAAA,QAAA,IAAA,EAAmB,QAAA,OAAA,EACN,UAAA,QAAA,QAAA,OAAA,GAAA,gBAAA,OAAA,OAAA,OAAA,GAAA,aAAA,GAAA,EAC6B,UAAA,QAAA,MAAA;;;;;AAL9C,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,wEAAA,GAAA,GAAA,WAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA,YAAA,SAAA,CAAA;;;;;AAOL,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;AAA0B,IAAA,qBAAA,YAAA,IAAA,EAAiB,QAAA,OAAA,EAAA;;;;;AAWzC,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;;AAEE,IAAA,qBAAA,SAAA,OAAA,WAAA,EAAyB,QAAA,MAAA,EACb,UAAA,OAAA,QAAA,OAAA,GAAA,eAAA,OAAA,OAAA,OAAA,GAAA,YAAA,GAAA,EAC4B,UAAA,OAAA,MAAA;;;;;AAL5C,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,wEAAA,GAAA,GAAA,WAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA,aAAA,YAAA,QAAA,CAAA;;;;;AAOL,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;AAA0D,IAAA,qBAAA,YAAA,IAAA,EAAiB,QAAA,OAAA,GAAA,YAAA;;;;;AAWzE,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;;AAEE,IAAA,qBAAA,SAAA,QAAA,WAAA,EAA0B,QAAA,OAAA,EACb,UAAA,QAAA,QAAA,OAAA,GAAA,gBAAA,OAAA,OAAA,OAAA,GAAA,aAAA,GAAA,EAC6B,UAAA,OAAA,GAAA,YAAA,UAAA,QAAA,MAAA;;;;;AAL9C,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,wEAAA,GAAA,GAAA,WAAA,EAAA;;;;;;AACG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA,YAAA,YAAA,SAAA,CAAA;;;;;AAOL,IAAA,oBAAA,GAAA,WAAA,EAAA;;;;AAA8B,IAAA,qBAAA,YAAA,IAAA,EAAiB,QAAA,OAAA,GAAA,WAAA;;;;;AAKnD,IAAA,oBAAA,GAAA,sBAAA,EAAA;;;;AAEE,IAAA,qBAAA,QAAA,OAAA,GAAA,YAAA,EAAwB,YAAA,OAAA,GAAA,cAAA,OAAA,GAAA,gBAAA,OAAA,OAAA,OAAA,GAAA,aAAA,YAAA,OAAA,GAAA,eAAA,OAAA,OAAA,OAAA,GAAA,YAAA,OAAA;;;;;AAG1B,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,kBAAA,uBAAA;;;;;AAEF,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,qBAAA,uBAAA;;;;;AAEF,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,mBAAA,uBAAA;;;;;AAEF,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,oBAAA,uBAAA;;;;;AAEF,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,sBAAA,uBAAA;;;;;AAEF,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAGE,IAAA,qBAAA,OAAA,OAAA,4BAAA,uBAAA;;;;;;AA7GN,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAkE,GAAA,KAAA,CAAA;AAC7D,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,CAAW;IAAA,CAAA;AACrB,IAAA,oBAAA,GAAA,OAAA,CAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA,EAAO,EACf;AAEN,IAAA,oBAAA,GAAA,eAAA;AACA,IAAA,yBAAA,GAAA,eAAA,CAAA;AAEE,IAAA,qBAAA,cAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAc,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,cAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACnB,OAAA,aAAA,CAAc;IAAA,CAAA,EAAC,eAAA,SAAA,kFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACd,OAAA,cAAA,CAAe;IAAA,CAAA;AAChC,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,sBAAA,CAAA;AAA8B,IAAA,qBAAA,UAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,kBAAA,MAAA,CAAyB;IAAA,CAAA;AAAE,IAAA,uBAAA;AAEnE,IAAA,yBAAA,GAAA,SAAA,EAAU,IAAA,OAAA,CAAA,EACe,IAAA,YAAA,CAAA;AAEnB,IAAA,qBAAA,eAAA,SAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,cAAA,SAAA,6EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACrB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,WAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACtB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,aAAA,SAAA,4EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA;AAEhC,IAAA,qBAAA,IAAA,8DAAA,GAAA,GAAA,gBAAA,CAAA,EAAkD,IAAA,yDAAA,GAAA,GAAA,WAAA,CAAA;AAUpD,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,YAAA,EAAA;AACE,IAAA,qBAAA,eAAA,SAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,cAAA,SAAA,6EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACrB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,WAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACtB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,aAAA,SAAA,4EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,WAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACtB,OAAA,QAAA,QAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,YAAA,CAAiC;IAAA,CAAA;AAE5C,IAAA,qBAAA,IAAA,8DAAA,GAAA,GAAA,gBAAA,CAAA,EAA+D,IAAA,yDAAA,GAAA,GAAA,WAAA,EAAA;AAUjE,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,YAAA,EAAA;AACE,IAAA,qBAAA,eAAA,SAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,cAAA,SAAA,6EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACrB,OAAA,WAAA,MAAA,CAAkB;IAAA,CAAA,EAAC,WAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACtB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA,EAAC,aAAA,SAAA,4EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChB,OAAA,YAAA,MAAA,CAAmB;IAAA,CAAA,EAAC,WAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACtB,OAAA,QAAA,QAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,WAAA,CAAgC;IAAA,CAAA;AAE3C,IAAA,qBAAA,IAAA,8DAAA,GAAA,GAAA,gBAAA,CAAA,EAA+D,IAAA,yDAAA,GAAA,GAAA,WAAA,EAAA;AAUjE,IAAA,uBAAA,EAAW,EACP;AAER,IAAA,yBAAA,IAAA,WAAA,EAAA;AACE,IAAA,qBAAA,IAAA,oEAAA,GAAA,GAAA,sBAAA,EAAA,EAIC,IAAA,qDAAA,GAAA,GAAA,OAAA,EAAA,EAKgB,IAAA,qDAAA,GAAA,GAAA,OAAA,EAAA,EAKA,IAAA,qDAAA,GAAA,GAAA,OAAA,EAAA,EAKA,IAAA,qDAAA,GAAA,GAAA,OAAA,EAAA,EAKA,IAAA,qDAAA,GAAA,GAAA,OAAA,EAAA,EAKA,IAAA,qDAAA,GAAA,GAAA,OAAA,EAAA;AAOnB,IAAA,uBAAA;;;;;AA7GS,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,eAAA,uBAAA;AAMP,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA,IAAA;AAKkB,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,OAAA,EAAA;AASd,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA;AACiC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,QAAA;AASwB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,GAAA,SAAA;AASzD,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA;AACgC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,gBAAA,OAAA,OAAA,OAAA,GAAA,aAAA,QAAA;AAStB,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,SAAA,UAAA,KAAA,CAAA,OAAA,GAAA,SAAA;AASV,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA;AACiC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,MAAA,OAAA,OAAA,OAAA,GAAA,eAAA,OAAA,OAAA,OAAA,GAAA,YAAA,QAAA;AASvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AAIoE,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,GAAA,eAAA,OAAA,OAAA,OAAA,GAAA,YAAA,OAAA;AAE/E,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,UAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,aAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,WAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,YAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,cAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,oBAAA;;;ADhED,IAAO,uBAAP,MAAO,sBAAoB;EAY/B,IAAI,aAAU;AACZ,WAAO,EAAE,MAAM,MAAM,QAAQ,CAAC,KAAK,GAAG,UAAS;EACjD;EAEA,IAAI,eAAY;AACd,WACE,KAAK,IAAI,cAAc,UAAU,UACjC,KAAK,IAAI,aAAa,YAAY,WAClC,CAAC,KAAK,GAAG,aAAa,UACtB,CAAC,KAAK,GAAG;EAEb;EAEA,YACU,QACS,OACA,KACA,OACA,OACA,aAA+B;AALxC,SAAA,SAAA;AACS,SAAA,QAAA;AACA,SAAA,MAAA;AACA,SAAA,QAAA;AACA,SAAA,QAAA;AACA,SAAA,cAAA;AA7BF,SAAA,gBAAgB,KAAK,MAAM,SAAS,YAAY;AAEjE,SAAA,mBAAmB,YAAY,eAAe,wCAAwC;AACtF,SAAA,sBAAsB,YAAY,eAAe,2CAA2C;AAC5F,SAAA,oBAAoB,YAAY,eAAe,yCAAyC;AACxF,SAAA,qBAAqB,YAAY,eAAe,0CAA0C;AAC1F,SAAA,uBAAuB,YAAY,eAAe,4CAA4C;AAC9F,SAAA,6BAA6B,YAAY,eAAe,oDAAoD;AAC5G,SAAA,gBAAgB,YAAY,eAAe,2CAA2C;EAsBnF;EAEH,WAAQ;AACN,SAAK,MAAK;EACZ;EAEO,QAAK;AACV,UAAM,EAAE,aAAa,MAAM,QAAO,IAAK,KAAK,MAAM,SAAS,MAAM;AACjE,SAAK,MAAM,QAAQ,aAAa,MAAM,OAAO,EAAE,UAAU,CAAC,OAAQ,KAAK,KAAK,EAAG;EACjF;EAEO,WAAW,KAAiB;AACjC,QAAI,IAAI,UAAU;AAChB,WAAK,iBAAiB,IAAI,IAAI;IAChC;EACF;EAEO,YAAY,KAA8B;AAC/C,SAAK,GAAG,sBAAsB,IAAI,IAAI;EACxC;EAEO,UAAU,KAA8B;AAC7C,SAAK,kBAAkB,IAAI,IAAI;EACjC;EAEO,kBAAkB,KAAgB;AACvC,SAAK,iBAAiB,IAAI,QAAuB,GAAG;EACtD;EAEO,YAAY,KAA8B;AAC/C,UAAM,MAAM,IAAI;AAElB,QAAI,YAAY;AAChB,QAAI,eAAuB,IAAI;AAC7B,kBAAY;IACd,WAAW,eAAuB,MAAM;AACtC,kBAAY;IACd,WAAW,eAAuB,KAAK;AACrC,kBAAY;IACd,WAAW,eAAuB,MAAM;AACtC,kBAAY;IACd;AACE,UAAM,OAAQ,KAAa,eAAe,IAAI;AAC9C,SAAK,IAAI,YAAY,WAAW;MAC9B,QAAQ,UAAU,SAAS;MAC3B,MAAM,mCAAmC,IAAI;MAC7C,SAAS;MACT,cAAc;MACd,UAAU;MACV,aAAa;MACb,UAAU,MAAM,KAAK,aAAa,GAAG;KACtC;EACH;EAEQ,aAAa,KAAgB;AACnC,UAAM,SAAS,IAAI;AAGnB,UAAM,MAAM,OAAO,SAAS,UAAU,CAAC,OAAO,OAAO,IAAI,EAAE;AAG3D,WAAO,YAAY,IAAI,EAAE;AAGzB,UAAM,WAAW,MAAM,OAAO,WAAW,KAAY,GAAG;AAExD,SAAK,MAAM,aAAa,KAAK,KAAK,EAAE,EAAE,UAAU;MAC9C,MAAM,CAAC,YAAa,CAAC,UAAU,SAAQ,IAAK,KAAK,MAAK;MACtD,OAAO,CAAC,MAAM,SAAQ;KACvB;EACH;EAGO,eAAY;AACjB,SAAK,IAAI,YAAY,WAAW;MAC9B,QAAQ;MACR,MAAM;MACN,UAAU,MAAK;AACb,aAAK,MAAM,gBAAgB,KAAK,aAAa,EAAE,UAAU,CAAC,YAAW;AACnE,eAAK,MAAM,QAAQ,OAAO;QAC5B,CAAC;MACH;MACA,SAAS;MACT,gBAAgB;KACjB;EACH;EAEA,QAAQ,GAA+B,QAAmB;AAExD,oBAAgB,OAAO,UAAU,EAAE,MAAM,EAAE,EAAE;AAC7C,SAAK,MAAM,gBAAgB,MAAM,EAC9B,UAAU;MACT,MAAM,CAAC,MAAM,KAAK,MAAK;MACvB,OAAO,CAAC,MAAM,gBAAgB,OAAO,UAAU,EAAE,IAAI,EAAE,IAAI;KAC5D;EACL;EAEO,gBAAa;AAClB,SAAK,YAAY,YAAY,MAAM,KAAK,GAAG,aAAa,KAAK,GAAG,OAAO,EAAE,UAAU,CAAC,YAAW;AAC7F,iBAAW,KAAK,IAAI,YAAY,WAAW,EAAE,MAAM,+BAA8B,CAAE;IACrF,GACA,CAAC,UAAQ;AACT,WAAK,eAAc;IACrB,CAAC;EACD;EACM,iBAAc;AAEpB,UAAM,YAAY,KAAK,OAAO,KAAK,sBAAsB;MACvD,OAAO;MACP,cAAc;MACd,YAAY;MACZ,MAAM;QACJ,MAAM;QACN,aAAa,KAAK,GAAG;QACrB,OAAO,KAAK,GAAG;;KAElB;AAED,cAAU,kBAAkB,WAAW,UAAU,MAAK;AACpD,gBAAU,MAAK;IACjB,CAAC;EACH;EAES,WAAW,MAAmB;AACnC,QAAI,SAAS,KAAK,GAAG;AAAM;AAC3B,SAAK,MAAM,WAAW,KAAK,GAAG,MAAM,IAAI,EAAE,UAAU,CAAC,YAAW;AAC9D,UAAI,SAAS;AACX,aAAK,GAAG,OAAO,EAAE,MAAM,KAAI,CAAE;MAC/B;IACF,CAAC;EACH;EAEc,iBAAiB,IAAoD;+CAApD,QAAqB,OAA6B,CAAA,GAAE;AACjF,YAAM,YAAY,OAAO,KAAK,IAAI,EAAE,WAAW;AAC/C,YAAM,EAAC,UAAS,IAAI,KAAK,2BAA2B,QAAQ,IAAI;AAEhE,YAAM,QAAQ,KAAK,IAAI,cAAc,WAAW,EAAC,MAA2B,QAAQ,UAAS,CAAC;AAC9F,YAAM,MAAM,MAAM,MAAM;AACxB,UAAI,CAAC;AAAK;AAEV,UAAI,WAAW,UAAa,gBAAwB,IAAI;AACtD,aAAK,cAAc,GAAG;AACtB;MACF;AACA,UAAI,kBAA0B,IAAI;AAChC,cAAM,kBAAkB,CAAC,OAAc;AACrC,cAAI,IAAI,OAAO,WAAW,QAAQ,CAAC,WAAW;AAC5C,mBAAO;UACT;AACA,gBAAM,eAAe,IAAI,OAAO,WAAW,OAAO,KAAK,IAAI,OAAO;AAClE,iBAAO,KAAK,MAAM,eAAe,cAAc,IAAI,OAAO,MAAM;QAClE;AACA,aAAK,kBAAkB,QAAQ,MAAM,IAAI,SAAS,eAAe;MACnE,WAES,kBAA0B,MAAM;AACvC,cAAM,kBAAkB,CAAC,OAAc;AACrC,cAAI,IAAI,OAAO,YAAY,QAAQ,CAAC,WAAW;AAC7C,mBAAO;UACT;AAEA,gBAAM,cAAc,IAAI,OAAO,UAAU,OAAO,KAAK,IAAI,OAAO;AAChE,iBAAO,KAAK,MAAM,gBAAgB,aAAa,IAAI,OAAO,OAAO;QACnE;AACA,aAAK,kBAAkB,QAAQ,MAAM,IAAI,SAAS,eAAe;MACnE,WACS,kBAA0B,KAAK;AACtC,cAAM,iBAAiB,CAAC,OAAc;AACpC,cAAI,IAAI,OAAO,iBAAiB,QAAQ,IAAI,OAAO,kBAAkB,QAAQ,CAAC,WAAW;AACvF,mBAAO;UACT;AACA,iBAAO,KAAK,MAAM,eAAe,IAAI,MAAM;QAC7C;AACA,aAAK,kBAAkB,QAAQ,MAAM,IAAI,SAAS,cAAc;MAClE,OAAO;AACL,aAAK,kBAAkB,QAAQ,MAAM,GAAG;MAC1C;IAGF;;EAEO,YAAS;AACd,WAAO,QAAQ,KAAI;EACrB;EAEQ,cAAc,SAAmB;AACvC,SAAK,MAAM,OAAO,OAAO,EAAE,UAAU,CAAC,YAAW;AAC/C,UAAI,SAAS;AACX,aAAK,GAAG,OAAO,OAAO;MACxB;IACF,CAAC;EACH;EAEO,kBAAkB,QAAqB,MAA4B,CAAA,GAAI,SAA4BC,WAA0C;AAClJ,UAAM,YAAY,OAAO,KAAK,GAAG,EAAE,WAAW;AAE9C,UAAM,WAAW,mBAAI;AAGrB,QAAI,WAAW;AACb,YAAM,EAAC,WAAU,IAAI,KAAK,2BAA2B,MAAM;AAC3D,YAAM,QAAQ,IAAI,WAAW,SAAS,MAAM;AAC5C,aAAO,SAAS,KAAK;IACvB,OAAO;AACL,UAAI,OAAO,OAAO;IACpB;AAGA,UAAM,WAAW,MAAK;AACpB,UAAI,WAAW;AACb,eAAO,YAAY,QAAQ,EAAE;MAC/B,OAAO;AACL,YAAI,OAAO,QAAQ;MACrB;IACF;AAEA,SAAK,MAAM,WAAW,SAAS,KAAK,EAAE,EACrC,KACC,UAAU,QAAK;AACb,UAAIA,WAAU;AACb,eAAOA,UAAS,EAAE,EAAE,KAAK,IAAI,MAAM,EAAE,CAAC;MACvC;AACA,aAAO,GAAG,EAAE;IACd,CAAC,CAAC,EAEH,UAAU;MACT,MAAM,CAAC,YAAW;AAChB,YAAI,CAAC;AAAS,mBAAQ;aACjB;AACH,eAAK,GAAG,cAAc,OAAO;QAE/B;MACF;MACA,OAAO,CAAC,MAAM,SAAQ;MACtB,UAAU,MAAM,KAAK,MAAK;KAC3B;EACH;EAEQ,2BAA2B,QAAqB,OAA6B,CAAA,GAAE;AACrF,QAAI;AACJ,QAAI;AACJ,QAAI,kBAA0B,IAAI;AAChC,kBAAuB;AACvB,mBAAqB;IACvB,WAAW,kBAA0B,MAAM;AACzC,kBAAuB;AACvB,mBAAqB;IACvB,WAAW,kBAA0B,KAAK;AACxC,kBAAuB;AACvB,mBAAqB;IACvB,WAAW,WAAW,UAAa,gBAAwB,IAAI;AAC7D,kBAAuB;AACvB,mBAAa;IACf;AACA,WAAO,EAAC,WAAW,WAAU;EAC/B;;;uCA/RW,uBAAoB,4BAAA,SAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,qBAAA,GAAA,4BAAA,kBAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,OAAA,QAAA,GAAA,oBAAA,MAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,SAAA,QAAA,GAAA,UAAA,mCAAA,GAAA,KAAA,GAAA,CAAA,GAAA,cAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,UAAA,IAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,cAAA,WAAA,aAAA,SAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,YAAA,GAAA,YAAA,QAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,cAAA,WAAA,aAAA,WAAA,SAAA,GAAA,CAAA,SAAA,WAAA,GAAA,YAAA,QAAA,GAAA,MAAA,GAAA,CAAA,SAAA,YAAA,GAAA,YAAA,QAAA,GAAA,MAAA,GAAA,CAAA,cAAA,8BAAA,QAAA,YAAA,GAAA,cAAA,GAAA,UAAA,GAAA,CAAA,GAAA,QAAA,YAAA,GAAA,cAAA,GAAA,CAAA,SAAA,QAAA,OAAA,YAAA,GAAA,OAAA,GAAA,cAAA,GAAA,CAAA,GAAA,SAAA,QAAA,UAAA,UAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,QAAA,UAAA,QAAA,GAAA,CAAA,SAAA,YAAA,GAAA,YAAA,MAAA,GAAA,CAAA,SAAA,WAAA,GAAA,YAAA,MAAA,GAAA,CAAA,SAAA,YAAA,GAAA,YAAA,MAAA,GAAA,CAAA,GAAA,QAAA,UAAA,GAAA,CAAA,SAAA,QAAA,OAAA,YAAA,GAAA,KAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AC3CjC,QAAA,qBAAA,GAAA,8CAAA,IAAA,IAAA,gBAAA,CAAA;;;AAAe,QAAA,qBAAA,QAAA,IAAA,EAAA;;;MD+BP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAqB,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAGhB,sBAAoB,EAAA,WAAA,wBAAA,UAAA,4DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEtCjC,IAAM,SAAiB,CAAC,EAAE,MAAM,IAAI,WAAW,qBAAoB,CAAE;AAO/D,IAAO,2BAAP,MAAO,0BAAwB;;;uCAAxB,2BAAwB;IAAA;EAAA;;wEAAxB,0BAAwB,CAAA;EAAA;;4EAJzB,aAAa,SAAS,MAAM,GAC5B,YAAY,EAAA,CAAA;EAAA;;;;ACsBlB,IAAO,oBAAP,MAAO,mBAAiB;;;uCAAjB,oBAAiB;IAAA;EAAA;;wEAAjB,mBAAiB,CAAA;EAAA;;;MAnB1B;MACA;MACA;MACI;MACJ;MACe;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAqB,EAAA,CAAA;EAAA;;",
  "names": ["item", "item", "_c0", "dmo", "_c0", "key", "value", "_c0", "map", "item", "col", "import_lodash", "_c0", "_", "from", "success", "finalize"]
}
