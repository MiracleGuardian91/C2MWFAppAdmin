{
  "version": 3,
  "sources": ["src/app/admin/BM/components/bm-grid/bm-grid.component.ts", "src/app/admin/BM/components/bm-grid/bm-grid.component.html", "src/app/admin/BM/components/batch-update/batch-update.component.ts", "src/app/admin/BM/components/batch-update/batch-update.component.html", "src/app/admin/BM/components/bulk-trigger/bulk-trigger.component.ts", "src/app/admin/BM/components/bulk-trigger/bulk-trigger.component.html", "src/app/admin/core/services/bm-api.service.ts", "src/app/admin/BM/components/unique-constraint/unique-constraint.component.ts", "src/app/admin/BM/components/unique-constraint/unique-constraint.component.html", "src/app/admin/BM/components/bm-wf-association/bm-wf-association.component.ts", "src/app/admin/BM/components/bm-wf-association/bm-wf-association.component.html", "src/app/admin/BM/components/top-corner-detail/top-corner-detail.component.ts", "src/app/admin/BM/components/top-corner-detail/top-corner-detail.component.html", "src/app/core/services/card-wall-view-configuration.service.ts", "src/app/admin/BM/components/Cardwalls/card-placeholder-dmo-mapping/card-placeholder-dmo-mapping.component.ts", "src/app/admin/BM/components/Cardwalls/card-placeholder-dmo-mapping/card-placeholder-dmo-mapping.component.html", "src/app/admin/BM/components/Cardwalls/card-wall-view-configuration/card-wall-view-configuration.component.ts", "src/app/admin/BM/components/Cardwalls/card-wall-view-configuration/card-wall-view-configuration.component.html", "src/app/admin/BM/components/Cardwalls/card-wall-configuration-selection/card-wall-configuration-selection.component.ts", "src/app/admin/BM/components/Cardwalls/card-wall-configuration-selection/card-wall-configuration-selection.component.html", "src/app/admin/BM/resolvers/bm.resolver.ts", "src/app/admin/BM/bm-routing.module.ts", "src/app/admin/BM/bm.module.ts"],
  "sourcesContent": ["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { UserDetail } from '@app/core/models/user-detail';\r\nimport { IHeaderMap } from '@app/admin/wf/wfd/models/wfGridInterface';\r\nimport { ColumnFilterService } from '@app/admin/core/services/column-filter.service';\r\nimport { BmService } from '@app/admin/core/services/bm.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UntypedFormBuilder, UntypedFormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport { BmEntryComponent } from '../bm-entry/bm-entry.component';\r\nimport { GridExportComponent } from '@app/admin/Shared/grid-export/grid-export.component';\r\nimport { BatchUpdateComponent } from '../batch-update/batch-update.component';\r\nimport { BulkTriggerComponent } from '../bulk-trigger/bulk-trigger.component';\r\nimport { UniqueConstraintComponent } from '../unique-constraint/unique-constraint.component';\r\nimport { BmWfAssociationComponent } from '../bm-wf-association/bm-wf-association.component';\r\nimport { FormViewApiService } from '@app/core/services/form-view-api.service';\r\nimport { CompanyAssociationComponent } from '@app/admin/Shared/company-association/company-association.component';\r\nimport { BMAssociatedCompaniesPayload, ICompanyAssociatedBMObject, MessageService } from '@app/core';\r\nimport { DataModelerApiService } from '@app/admin/data-modeler/services/data-modeler-api.service';\r\nimport { TopCornerDetailComponent } from '../top-corner-detail/top-corner-detail.component';\r\nimport { GridViewMasterConfigurationComponent } from '@app/shared/components/grid-view-master-configuration/grid-view-master-configuration.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { GenerateXmlComponent } from '@app/admin/wf/wfd/components/generatexml/generatexml.component';\r\nimport { catchError, lastValueFrom, of, switchMap, tap } from 'rxjs';\r\nimport { LiveVersionComponent } from '@app/admin/LiveVersion/components/live-version/live-version.component';\r\nimport { NgIf } from '@angular/common';\r\nimport { GenericGridComponent } from '../../../Shared/generic-grid/generic-grid.component';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { CardWallConfigurationSelectionComponent } from '../Cardwalls/card-wall-configuration-selection/card-wall-configuration-selection.component';\r\n\r\n@Component({\r\n    selector: 'app-bm-grid',\r\n    templateUrl: './bm-grid.component.html',\r\n    styleUrls: ['./bm-grid.component.scss'],\r\n    standalone: true,\r\n    imports: [NgIf, ReactiveFormsModule, GenericGridComponent, FormsModule]\r\n})\r\nexport class BmGridComponent implements OnInit {\r\n  \r\n  @ViewChild('jsonFileInput', { static: false }) jsonFileInput!: ElementRef;\r\n\r\n  file: File = null;\r\n  IsValidFile = false;\r\n  fileName = '';\r\n  errorMsg = '';\r\n  isNewDM = '';\r\n  processName: string;\r\n  DisplayName: string;\r\n  dataSource = [];\r\n  Version:any;\r\n  itemsCount: number;\r\n  filters: any = {};\r\n  searchText: string = '';\r\n  BMForm: UntypedFormGroup;\r\n    // Popup menu properties\r\n  showActionsPopup = false;\r\n  popupPosition = { x: 0, y: 0 };\r\n  private boundOutsideClick = this.closeActionsPopupOnOutsideClick.bind(this);\r\n  private boundKeydown = this.handleKeyDown.bind(this);\r\n  BMID: any;\r\n  bodyData = {\r\n    PageSize: 20,\r\n    PageNumber: 1,\r\n    SortColumn: 'CRTDON',\r\n    SortOrder: 'desc',\r\n    TimeZone: '0',\r\n    GridFilters: []\r\n  };\r\n  pageNum = -1;\r\n  filterValue1: string = \"\";\r\n  filterValue2: string = \"\";\r\n  ConditionOpt1: string = \"\";\r\n  ConditionOpt2: string = \"\";\r\n  logicalOpt: string = \"OR\";\r\n  HeaderMap: IHeaderMap = {\r\n    config: {\r\n      header: {\r\n        columns: [\r\n          {\r\n            objectKey: 'nam',\r\n            displayName: 'Business Model Name',\r\n            width: '17%',\r\n            dataType: 'Link',\r\n          },\r\n          {\r\n            objectKey: 'DISPNAME',\r\n            displayName: 'Friendly Name',\r\n            width: '17%',\r\n          }, {\r\n            objectKey: 'Ver',\r\n            displayName: 'Version',\r\n            width: '8%',      \r\n          },\r\n          {\r\n            objectKey: 'Status',\r\n            displayName: 'Mode',\r\n            width: '10%'\r\n          },\r\n          // {\r\n          //   objectKey: 'bmog',\r\n          //   displayName: 'BMOG',\r\n          //   width: '8%'\r\n          // },\r\n          // {\r\n          //   objectKey: 'workflow',\r\n          //   displayName: 'Workflow',\r\n          //   dataType: 'LinkWithSpecialChar',\r\n          //   SpecialChar: 'Click here',\r\n          //   width: '8%'\r\n          // },\r\n          {\r\n            objectKey: 'crtdon',\r\n            displayName: 'Date Created',\r\n            dataType: 'Date',\r\n            format: environment.Setting.dateTimeFormatNoSeconds,\r\n            timeZone: this.userDetail.TimeZone?.toString() || '0',\r\n            width: '16%'\r\n          },\r\n          {\r\n            objectKey: 'modfon',\r\n            displayName: 'Date Modified',\r\n            dataType: 'Date',\r\n            format: environment.Setting.dateTimeFormatNoSeconds,\r\n            timeZone: this.userDetail.TimeZone?.toString() || '0',\r\n            width: '16%'\r\n          },\r\n          // {\r\n          //   objectKey: 'MOD',\r\n          //   displayName: 'Mode',\r\n          //   width: '8%'\r\n          // },\r\n          // {\r\n          //   objectKey: 'DM',\r\n          //   displayName: 'Data Modeler',\r\n          //   dataType: 'LinkWithSpecialChar',\r\n          //   SpecialChar: 'Click here',\r\n          //   width: '8%'\r\n          // }\r\n        ],\r\n        action: {\r\n          moreInfo:true,\r\n          Checkbox: true,\r\n          showGenerateJsonBtn:true,\r\n          WFBM:true\r\n        },\r\n        columnFilter: false,\r\n      },\r\n      paging: true,\r\n    }\r\n  };\r\n \r\n  alertMsgTxt: string[] = [];\r\n isLoading = true;\r\n  selectedRowIndex: number;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    readonly userDetail: UserDetail,\r\n    readonly columnFilter: ColumnFilterService,\r\n    readonly toastr: ToastrService,\r\n    readonly bmService: BmService,\r\n    readonly msg: MessageService,\r\n    readonly modalService: NgbModal,\r\n    readonly fb: UntypedFormBuilder,\r\n    readonly formView: FormViewApiService,\r\n    readonly dmApi: DataModelerApiService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParamMap.subscribe(params => {\r\n      this.processName = params.get('pname');\r\n\r\n      if (this.processName && this.processName.trim() !== '') {\r\n        this.processName = params.get('pname');\r\n        sessionStorage.setItem('AppName', this.processName)\r\n      }\r\n    });\r\n\r\n    this.activatedRoute.queryParams.subscribe(qParams =>{\r\n      this.initialize(qParams);\r\n       \r\n    })\r\n   \r\n  }\r\n\r\n  initialize(queryParams){\r\n    const lowerKeyCase = [];\r\n    Object.keys(queryParams).forEach(param =>{\r\n      const lowerCaseParam = param.toLocaleLowerCase();\r\n      lowerKeyCase.push({ key: lowerCaseParam, value: queryParams[param] });\r\n    })\r\n\r\n    const pName = lowerKeyCase.find(lk => lk.key === 'pname')?.value;\r\n    const dname = lowerKeyCase.find(lk => lk.key === 'dname')?.value;\r\n    if(pName && dname){\r\n      this.processName = pName\r\n      this.DisplayName = dname;\r\n    }else{\r\n      this.processName = sessionStorage.getItem('AppName');\r\n      this.DisplayName = sessionStorage.getItem('DisplayName');\r\n    }\r\n\r\n    this.BMForm = this.fb.group({\r\n      ChangeStatus: ['-1'],\r\n      ChangeMode: ['-1']\r\n    });\r\n    this.LoadData();\r\n  }\r\n  pageChange(event) {\r\n    this.bodyData.PageNumber = event.currentPage;\r\n    this.bodyData.PageSize = event.pageSize;\r\n    this.LoadData();\r\n  }\r\n  actionClick(event) {\r\n    switch (event.action) {\r\n      case 'Publish':\r\n      this.generateXML(event.rowIndex);\r\n        break;\r\n      case 'Excel':\r\n      this.ExportBM(event.rowIndex);\r\n        break;\r\n      case 'Filter_Header':\r\n        this.bindColumnFilterDdl(event);\r\n        break;\r\n      case 'Edit':\r\n        this.CreateNewRecord(event.rowIndex);\r\n        break;\r\n      case 'Link':\r\n\r\n        if (event.ColumnFilterDropdown === 'nam') {\r\n          if (this.dataSource[event.rowIndex].isNewDM == \"1\") {\r\n            if (window.location.href.includes('wfadmin'))\r\n              this.router.navigate(['wfadmin/admin/bm/data-modeler1'], { queryParams: { BMID: this.dataSource[event.rowIndex].BMID, TypeID: this.dataSource[event.rowIndex].TypeID } });\r\n            else {\r\n              this.router.navigate(['admin/bm/data-modeler1'], { queryParams: { BMID: this.dataSource[event.rowIndex].BMID, TypeID: this.dataSource[event.rowIndex].TypeID } });\r\n            }\r\n          } else {\r\n            if (window.location.href.includes('wfadmin'))\r\n              this.router.navigate(['wfadmin/admin/bm/data-modeler'], { queryParams: { BMID: this.dataSource[event.rowIndex].BMID, TypeID: this.dataSource[event.rowIndex].TypeID } });\r\n            else {\r\n              this.router.navigate(['admin/bm/data-modeler'], { queryParams: { BMID: this.dataSource[event.rowIndex].BMID, TypeID: this.dataSource[event.rowIndex].TypeID } });\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case 'Filter_Click':\r\n        if (!this.validate(event)) {\r\n          break;\r\n        }\r\n        this.bodyData.PageNumber = 1;\r\n        let filter: any = {};\r\n        filter = {\r\n          GridConditions: [\r\n          ],\r\n          DataField: event.colData.objectKey,\r\n          LogicalOperator: event.filterData.logicalOpt.Value === 'Select...' ? '' : event.filterData.logicalOpt.Value,\r\n          FilterType: 'Column_Filter'\r\n        };\r\n        if (event.filterData.filterValue1 && event.filterData.filterValue1 !== '') {\r\n          filter.GridConditions.push({\r\n            Condition: event.filterData.ConditionOpt1.Value,\r\n            ConditionValue: event.filterData.filterValue1\r\n          });\r\n        }\r\n        if (event.filterData.filterValue2 && event.filterData.filterValue2 !== '') {\r\n          filter.GridConditions.push({\r\n            Condition: event.filterData.ConditionOpt2.Value,\r\n            ConditionValue: event.filterData.filterValue2\r\n          });\r\n        }\r\n\r\n        if (filter && Object.keys(filter).length !== 0) {\r\n          this.filters['Column_Filter~$~' + event.colData.objectKey] = filter;\r\n        }\r\n        this.generateFilter();\r\n        event.ColumnFilterDropdown.close();\r\n        break;\r\n      case 'Remove Sort':\r\n        this.bodyData.SortColumn = '-1';\r\n        this.bodyData.SortOrder = 'desc';\r\n        sessionStorage.setItem('grid_filter', JSON.stringify(this.bodyData));\r\n        this.LoadData();\r\n        break;\r\n      case 'SpecialCharClick':\r\n        if (event.ColumnFilterDropdown === 'workflow') {\r\n          this.WorkFlowAssociation(event.rowIndex);\r\n        } else if (this.dataSource[event.rowIndex].isNewDM == \"1\"){\r\n          if(window.location.href.includes('wfadmin'))\r\n              this.router.navigate(['wfadmin/admin/bm/data-modeler1'], { queryParams: { BMID: this.dataSource[event.rowIndex].BMID, TypeID: this.dataSource[event.rowIndex].TypeID } });\r\n           else{\r\n              this.router.navigate(['admin/bm/data-modeler1'], { queryParams: { BMID: this.dataSource[event.rowIndex].BMID, TypeID: this.dataSource[event.rowIndex].TypeID } });\r\n           }\r\n        }else{\r\n         if(window.location.href.includes('wfadmin'))\r\n              this.router.navigate(['wfadmin/admin/bm/data-modeler'], { queryParams: { BMID: this.dataSource[event.rowIndex].BMID, TypeID: this.dataSource[event.rowIndex].TypeID } });\r\n           else{\r\n              this.router.navigate(['admin/bm/data-modeler'], { queryParams: { BMID: this.dataSource[event.rowIndex].BMID, TypeID: this.dataSource[event.rowIndex].TypeID } });\r\n           }\r\n        }\r\n        break;\r\n      case 'FilterClear_Click':\r\n        delete this.filters['Column_Filter~$~' + event.colData.objectKey];\r\n        sessionStorage.removeItem('grid_filter');\r\n        this.generateFilter();\r\n        event.ColumnFilterDropdown.close();\r\n        break;\r\n    }\r\n  }\r\n  LoadData() {\r\n    this.isLoading = true;\r\n    this.bmService.getWFGrid(this.processName, this.bodyData).subscribe({\r\n      next: (x) => {\r\n\r\n        this.dataSource = x?.Data || [];\r\n        this.itemsCount = x?.RecordsCount || 0;\r\n          this.isLoading = false;\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n          this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  bindColumnFilterDdl(item) {\r\n    let type = '';\r\n    if (item.colData.dataType === 'Date') {\r\n      type = 'DateEditBox';\r\n    }\r\n    const FilterData = this.columnFilter.GetFilterByDataType(type); // Calling Function to get ColumnFilter Condition data\r\n    if (FilterData.length === 0) { // Check if Array is empty then call API for options data\r\n    } else {\r\n      const key = Object.keys(item.colData)[0];\r\n      this.HeaderMap.config.header.columnFilter['colData_' + item.colIndex] = FilterData;\r\n      this.ConditionOpt1 = item.ConditionOpt1;\r\n      this.ConditionOpt2 = item.ConditionOpt2;\r\n    }\r\n  }\r\n  private generateFilter() {\r\n    sessionStorage.removeItem('grid_filter');\r\n    this.bodyData.GridFilters = [];\r\n    this.bodyData.PageNumber = 1;\r\n    Object.keys(this.filters).forEach(key => {\r\n      this.bodyData.GridFilters.push(this.filters[key]);\r\n    });\r\n    sessionStorage.setItem('grid_filter', JSON.stringify(this.bodyData));\r\n    this.LoadData();\r\n  }\r\n  validate(event): boolean {\r\n\r\n    if (event.filterData.ConditionOpt1 && (event.filterData.ConditionOpt1.Value === '' ||\r\n      event.filterData.ConditionOpt1.Value === 'Select...')) {\r\n      return false;\r\n    } else if (event.filterData.filterValue1 && event.filterData.filterValue1.Value === '') {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  removeFilter(txtGlobal) {\r\n    this.filters = [];\r\n    txtGlobal.value = '';\r\n    this.pageNum = 1;\r\n    this.generateFilter();\r\n  }\r\n\r\n  OnRowClick(event: any) {\r\n  }\r\n  globalSearch(value) {\r\n    this.pageNum = 1;\r\n    let filter: any = {};\r\n    if (value === '') {\r\n      delete this.filters['Global_Search~$~dmoName'];\r\n    } else {\r\n      filter = {\r\n        GridConditions: [{\r\n          Condition: 'CONTAINS',\r\n          ConditionValue: value\r\n        }\r\n        ],\r\n        DataField: 'dmoName',\r\n        LogicalOperator: 'Or',\r\n        FilterType: 'Global_Search'\r\n      };\r\n    }\r\n    if (filter && Object.keys(filter).length !== 0) {\r\n      this.filters['Global_Search~$~dmoName'] = filter;\r\n    }\r\n    this.generateFilter();\r\n  }\r\n  generateXML(rowIndex: number) {\r\n    const selectedItems = this.dataSource[rowIndex];\r\n      this.Version = this.dataSource[rowIndex].Ver;\r\n  \r\n      // Case: new DM -> need two calls, second only if first is clean\r\n      if (this.dataSource[0]?.isNewDM === '1') {\r\n        this.bmService.generateXML1(this.processName, this.Version).pipe(\r\n          tap(response => {\r\n            // build your alerts array\r\n            this.alertMsgTxt = [];\r\n            if (!response) {\r\n              throw new Error('No response from generateXML1');\r\n            }\r\n            if (response.IsBMWFLinked === 0)         this.alertMsgTxt.push(\"BM-WF is not linked.\");\r\n            if (response.IsLive === 0)               this.alertMsgTxt.push(\"BM-WF is not live.\");\r\n            if (response.IsCmpnyGrpExists === 0)     this.alertMsgTxt.push(\"Company Group does not exist.\");\r\n            if (response.IsCmpnyBMObjectLinked === 0)this.alertMsgTxt.push(\"Company-BM Objects are not linked.\");\r\n  \r\n            // if any alerts, bail out to the catchError below\r\n            if (this.alertMsgTxt.length > 0) {\r\n              throw new Error('Validation errors');\r\n            }\r\n          }),\r\n          // only if generateXML1 passed with zero alerts\r\n          switchMap(() => this.bmService.generateXML(this.processName, this.Version)),\r\n          catchError(err => {\r\n            // on ANY error—API failure or thrown above—we show modal\r\n            this.showErrorModal();\r\n            // swallow error so the outer subscribe complete handler doesn't run\r\n            return of(false);\r\n          })\r\n        ).subscribe(success => {\r\n          if (success) {\r\n            this.toastr.success('JSON generated successfully');\r\n            this.LoadData();\r\n          }\r\n        });\r\n  \r\n      // Case: old DM -> single call\r\n      } else {\r\n        this.bmService.generateXML(this.processName, this.Version).pipe(\r\n          catchError(err => {\r\n            this.alertMsgTxt = ['Error generating JSON'];\r\n            this.showErrorModal();\r\n            return of(false);\r\n          })\r\n        ).subscribe(success => {\r\n          if (success) {\r\n            this.toastr.success('JSON generated successfully');\r\n            this.LoadData();\r\n          }\r\n        });\r\n      }\r\n  }\r\n  \r\n  private showErrorModal(): void {\r\n    const dialogRef = this.dialog.open(GenerateXmlComponent, {\r\n      width: '656px',\r\n      disableClose: true,\r\n      panelClass: 'custom-dialog-container',\r\n      data: {\r\n        type: 'bm',\r\n        processName: this.processName,\r\n        verNo: this.Version,\r\n        alertMsgTxt: this.alertMsgTxt\r\n      }\r\n    });\r\n  \r\n    dialogRef.componentInstance.closeModal.subscribe(() => dialogRef.close());\r\n  }\r\n  \r\n  openBulkUpload(bulkUpload) {\r\n    this.file = null;\r\n    this.fileName = '';\r\n    this.modalService.open(bulkUpload, { ariaLabelledBy: 'modal-basic-title', backdrop: 'static', keyboard: false, centered: true  });\r\n  }\r\n  handleFileInput(files: FileList) {\r\n    this.file = files.item(0);\r\n    if (this.file) {\r\n      if (this.file.type === 'application/vnd.ms-excel' ||\r\n        this.file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\r\n        this.IsValidFile = false;\r\n        this.fileName = this.file.name;\r\n      } else {\r\n        this.fileName = '';\r\n        this.errorMsg = 'File not valid';\r\n        this.IsValidFile = true;\r\n      }\r\n    }\r\n\r\n  }\r\n  upload() {\r\n    if (this.file === null) {\r\n      this.IsValidFile = true;\r\n      this.errorMsg = 'Please select file';\r\n      return;\r\n    }\r\n    const fileName = this.file.name.toLowerCase();\r\n    const isExcel = fileName.endsWith('.xls') || fileName.endsWith('.xlsx');\r\n    const isJson = fileName.endsWith('.json');\r\n    if (isExcel) {\r\n      // Excel upload logic\r\n      this.IsValidFile = false;\r\n      this.errorMsg = '';\r\n      const formData = new FormData();\r\n      formData.append('processName', this.processName);\r\n      formData.append('uploadFile', this.file);\r\n      this.bmService.UploadFile(formData, this.processName).subscribe(Result => {\r\n        if (Result.status === 'Success') {\r\n          this.file = null;\r\n          this.fileName = '';\r\n          this.modalService.dismissAll();\r\n          this.msg.showMessage('Success', {\r\n            header: 'File uploaded successfully',\r\n            body: Result.message,\r\n          });\r\n          this.LoadData();\r\n        } else {\r\n          this.errorMsg = Result.message || 'Upload failed.';\r\n          this.IsValidFile = true;\r\n        }\r\n      }, error => { \r\n        this.errorMsg = 'Upload failed.';\r\n        this.IsValidFile = true;\r\n      });\r\n    } else if (isJson) {\r\n      // JSON upload logic\r\n      this.IsValidFile = false;\r\n      this.errorMsg = '';\r\n      var BMID = this.dataSource.filter(x => x.selected === true).map(x => x.BMID);\r\n      if (BMID.length >= 2) {\r\n        this.errorMsg = 'Please select only one Datasource';\r\n        this.IsValidFile = true;\r\n        return;\r\n      }\r\n      const BMIDValue = BMID.length === 1 ? BMID[0] : '';\r\n      this.processName = sessionStorage.getItem('AppName');\r\n      const reader = new FileReader();\r\n      reader.onload = (e: ProgressEvent<FileReader>) => {\r\n        try {\r\n          const result = e?.target?.result as string;\r\n          const parsedData = JSON.parse(result);\r\n          this.bmService.ImportJsonBM(this.processName, BMIDValue, parsedData).subscribe({\r\n            next: (response) => {\r\n              this.toastr.success('BM generated successfully');\r\n              this.file = null;\r\n              this.fileName = '';\r\n              this.modalService.dismissAll();\r\n              this.LoadData();\r\n            },\r\n            error: (err) => {\r\n              this.errorMsg = 'Error generating BM';\r\n              this.IsValidFile = true;\r\n            }\r\n          });\r\n        } catch (error) {\r\n          this.errorMsg = 'Error parsing JSON file.';\r\n          this.IsValidFile = true;\r\n        }\r\n      };\r\n      reader.readAsText(this.file);\r\n    } else {\r\n      this.IsValidFile = true;\r\n      this.errorMsg = 'Only Excel or JSON files can be uploaded here.';\r\n      return;\r\n    }\r\n  }\r\n\r\n  downloadTemplate() {\r\n    this.bmService.DownloadWFTemp(this.processName).subscribe(result => {\r\n      this.SaveUploadLog(result);\r\n    })\r\n  }\r\n  SaveUploadLog(FileData: any) {\r\n    const curDate = new Date();\r\n    const fileName = this.processName.replace(' ', '_') + '_Template' +\r\n      \"_\" + (curDate.getMonth() + 1).toString()\r\n      + \"_\" + curDate.getDate()\r\n      + \"_\" + curDate.getFullYear()\r\n      + \"_\" + curDate.getHours()\r\n      + \"_\" + curDate.getMinutes()\r\n      + \"_\" + curDate.getSeconds();\r\n    saveAs(FileData, fileName);\r\n  }\r\n\r\n  async onTopCornerDetail() {\r\n    const selected = this.dataSource[this.selectedRowIndex];\r\n    const bmId = selected.BMID;\r\n    const modal = this.msg.showComponent(TopCornerDetailComponent, {bmId},{size: 'lg',centered: true});\r\n    const res = await modal.result;\r\n    if (res) {\r\n      this.toastr.success('Data saved successfully');\r\n      this.LoadData();\r\n    }\r\n  }\r\n\r\n  async onCompanyAssociation() {\r\n      const obj = this.dataSource[this.selectedRowIndex];\r\n      const modal = this.msg.showComponent(CompanyAssociationComponent, {\r\n        displayWith: (item: ICompanyAssociatedBMObject) => `${item.BMODISPNAME} > ${item.DMOGDISPNAME} > ${item.DMODISPNAME}`,\r\n        uniqueWith: (item: ICompanyAssociatedBMObject) => `${item.BMOID}${item.DMOGID}${item.DMOID}`,\r\n        getAssociationsWith: (groupId: string) => this.formView.getBMObjectsForCompanyAssociation(groupId, obj.TypeID, obj.BMID), \r\n        checkBy: 'ISDMOSELECTED'\r\n      },{size: 'lg',centered: true});\r\n      const res = await modal.result;\r\n      if (res) {\r\n        const success = await this.updateCompanyAssociatedRecords(obj, res) === 1;\r\n        if (success) {\r\n          this.toastr.success('Success');\r\n          this.LoadData();\r\n        }\r\n      }\r\n  }\r\n\r\n  private updateCompanyAssociatedRecords(bm: any, res: any) {\r\n    const bmoGuids = new Set(), dmogGuids = new Set(), dmoGuids = new Set();\r\n  \r\n    const selectedItems = Array.isArray(res.selectedItems) ? res.selectedItems : [];\r\n  \r\n    selectedItems.forEach((item: ICompanyAssociatedBMObject) => {\r\n      bmoGuids.add(item.BMOGUID);\r\n      dmogGuids.add(item.DMOGGUID);\r\n      dmoGuids.add(item.DMOGUID);\r\n    });\r\n  \r\n    const payload: BMAssociatedCompaniesPayload = {\r\n      BMId: bm.BMID,\r\n      ProcessId: bm.TypeID,\r\n      CompanyId: res.companyId,\r\n      groupName: res.groupName,\r\n      BMOGUIDS: [...bmoGuids].toString(),\r\n      DMOGGUIDS: [...dmogGuids].toString(),\r\n      DMOGUIDS: [...dmoGuids].toString(),\r\n      IsAllComp: res.IsAllComp\r\n    };\r\n  \r\n    return lastValueFrom(this.formView.updatetBMObjectsForCompanyAssociation(payload));\r\n  }\r\n\r\n  CreateNewRecord(index) {\r\n    const modalRef = this.modalService.open(BmEntryComponent, { backdrop: 'static', size: 'lg', keyboard: false });\r\n    const modalInstance: BmEntryComponent = modalRef.componentInstance;\r\n    if (index !== null) {\r\n      const item = this.dataSource[index];\r\n      modalInstance.dataList = item;\r\n      modalInstance.isEdit = true;\r\n      modalInstance.currentMode = item?.MOD;\r\n    } else {\r\n      modalInstance.isEdit = false;\r\n    }\r\n    modalRef.result.then(async (result) => {\r\n      if (result) {\r\n        this.toastr.success('Data saved successfully.');\r\n        this.LoadData();\r\n      }\r\n    }, (reason) => {\r\n    }\r\n    );\r\n  }\r\n\r\n  ChangeStatus(event: any) {\r\n    const selectedStatusbmId = this.dataSource.filter(x => x.selected === true).map(x => x.BMID).join(',');\r\n    if (event.target.value !== \"-1\" && !!selectedStatusbmId) {\r\n      this.bmService.ChangeBMStatus(selectedStatusbmId, event.target.value).subscribe(\r\n        result => {\r\n          if (result) {\r\n            this.LoadData();\r\n            this.BMForm.get('ChangeStatus').patchValue('-1');\r\n            this.toastr.success('Status Changed successfully');\r\n          }\r\n        });\r\n    } else {\r\n      if (event.target.value !== \"-1\" && (selectedStatusbmId === undefined || selectedStatusbmId === '')) {\r\n        this.BMForm.get('ChangeStatus').patchValue('-1');\r\n        this.toastr.warning('Please select at least one record.');\r\n      }\r\n    }\r\n  }\r\n  ChangeMode(event: any) {\r\n    const bmmode = event.target.value;\r\n    const selectedStatusbmids = this.dataSource.filter(x => x.selected === true);\r\n    if (bmmode !== \"-1\" && !!selectedStatusbmids && selectedStatusbmids.length === 1) {\r\n      this.bmService.ChangeBMMode(selectedStatusbmids[0].BMID, bmmode).subscribe(\r\n        result => {\r\n          if (result) {\r\n            this.LoadData();\r\n            this.BMForm.get('ChangeMode').patchValue('-1');\r\n            this.toastr.success('Mode Changed successfully');\r\n          }\r\n        });\r\n    } else {\r\n      if (bmmode !== \"-1\" && (!!selectedStatusbmids && (selectedStatusbmids.length > 1 || selectedStatusbmids.length === 0))) {\r\n        this.BMForm.get('ChangeMode').patchValue('-1');\r\n        this.toastr.warning('Please select one record only.');\r\n      }\r\n    }\r\n  }\r\n\r\n  showDeleteMessage() {\r\n    if (this.selectedRowIndex > -1) {\r\n      this.BMID = this.dataSource[this.selectedRowIndex].BMID;\r\n      this.msg.showMessage('Warning', {\r\n        header: 'Delete Selected Item',\r\n        body: 'Do you want to delete selected item?',\r\n        btnText: 'Delete',\r\n        checkboxText: 'Yes, delete selected item',\r\n        isDelete: true,\r\n        isNewDesign:true,\r\n        callback: this.deleteSelectedConfirmation,\r\n        caller: this,\r\n      })\r\n    } else {\r\n      this.msg.showMessage('Warning', { body: 'At least one record must be selected in order to delete' });\r\n    }\r\n  }\r\n  deleteSelectedConfirmation(modelRef: NgbModalRef, Caller: BmGridComponent) {\r\n    Caller.bmService.DeleteBM(Caller.BMID).subscribe({\r\n      next: (result) => {\r\n        if (result === true) {\r\n          Caller.LoadData();\r\n          modelRef.close();\r\n        } else {\r\n          Caller.toastr.warning('Record(s) Cannot Be Deleted');\r\n        }\r\n      },\r\n      error: (error) => {\r\n        if (!!error.error && error.error === 'Record(s) Cannot Be Deleted') {\r\n          Caller.toastr.warning('Record(s) Cannot Be Deleted');\r\n        }\r\n      }\r\n    });\r\n  }\r\n  CreateNewVersion(index: number) {\r\n    if (index !== -1 && this.dataSource[this.selectedRowIndex]) {\r\n      const bmId = this.dataSource[this.selectedRowIndex].BMID;\r\n      this.msg.showMessage('Warning', {\r\n        header: 'Create New Version',\r\n        body: 'Are you sure you want to create a new version of the selected item?',\r\n        btnText: 'Create',\r\n        checkboxText: 'Yes, create new version',\r\n        isDelete: true,\r\n        isNewDesign: true,\r\n        callback: () => {\r\n          this.bmService.CreateBMVersion(bmId, this.userDetail.TimeZone.toString()).subscribe(\r\n            result => {\r\n              if (result.includes('Version created successfully.')) {\r\n                this.toastr.success('Version created successfully.');\r\n                this.LoadData();\r\n              }\r\n            }\r\n          );\r\n        },\r\n        caller: this,\r\n      });\r\n    }\r\n  }\r\n\r\n  ExportBM(rowIndex:number) {\r\n    const bm = this.dataSource[rowIndex];\r\n    if (bm) {\r\n      const fileName = bm.nam + '_' + bm.Ver + '.xlsx';\r\n      this.bmService.ExportBMData(bm.BMID, this.userDetail.TimeZone.toString()).subscribe(\r\n        data => {\r\n          saveAs(data, fileName);\r\n          this.LoadData();\r\n        });\r\n    }\r\n  }\r\n\r\n  openExportGridConfigurationPopup(poptype: string, viewName: string, ExportType: string) {\r\n    const modalRef = this.modalService.open(GridExportComponent,\r\n      { windowClass: 'grid-config-view-modal', backdrop: 'static', keyboard: false,centered: true}\r\n    );\r\n    const modalInstance: GridExportComponent = modalRef.componentInstance;\r\n    modalInstance.ProcessName = this.processName;\r\n    modalInstance.objBaseGrid = this;\r\n    modalInstance.ExportType = ExportType.toUpperCase();\r\n    modalInstance.ExportUserData.SortColumn = this.bodyData.SortColumn;\r\n    modalInstance.ExportUserData.SortOrder = this.bodyData.SortOrder;\r\n    modalInstance.ExportUserData.ProcessName = this.processName\r\n    modalInstance.ExportUserData.GridFilters = this.bodyData.GridFilters;\r\n    modalInstance.ExportFrom = 'BM';\r\n    modalInstance.BMIds = this.dataSource.filter(x => x.selected === true).map(x => x.BMID).join(',');\r\n  }\r\n\r\n  async BatchUpdate() {\r\n    const selected = this.dataSource[this.selectedRowIndex];\r\n    const bmId = selected.BMID;\r\n    const processId = selected.TypeID;\r\n    try {\r\n      const modal = this.msg.showComponent(BatchUpdateComponent, {bmId, processId},{size: 'lg',centered: true});\r\n      const res = await modal.result;\r\n      if (res) {\r\n        this.toastr.success('Data saved successfully');\r\n        this.LoadData();\r\n      }\r\n    } catch(err) {\r\n      this.toastr.error('Failed to decrypt record id');\r\n    }\r\n  }\r\n\r\n  async BulkTrigger() {\r\n    const selected = this.dataSource[this.selectedRowIndex];\r\n    const bmId = selected.BMID;\r\n    const processId = selected.TypeID;\r\n    try {\r\n      const modal = this.msg.showComponent(BulkTriggerComponent, {bmId, processId},{size: 'lg',centered: true});\r\n      const res = await modal.result;\r\n      if (res) {\r\n        this.toastr.success('Data saved successfully');\r\n        this.LoadData();\r\n      }\r\n    } catch(err) {\r\n      this.toastr.error('Failed to decrypt record id');\r\n    }\r\n  }\r\n  UniqueConstraint() {\r\n    const bm = this.dataSource[this.selectedRowIndex];\r\n    if (bm) {\r\n      const modalRef = this.modalService.open(UniqueConstraintComponent,\r\n        { windowClass: 'grid-config-view-modal', backdrop: 'static', keyboard: false,size: 'lg',centered: true }\r\n      );\r\n      const modalInstance: UniqueConstraintComponent = modalRef.componentInstance;\r\n      modalInstance.bmId = bm.BMID;\r\n      modalRef.result.then(async (result) => {\r\n        if (result) {\r\n          this.toastr.success('Unique Constraint saved successfully.');\r\n          this.LoadData();\r\n        }\r\n      }, (reason) => {\r\n      }\r\n      );\r\n    }\r\n  }\r\n\r\n  WorkFlowAssociation(index: any) {\r\n    const modalRef = this.modalService.open(BmWfAssociationComponent, { backdrop: 'static', size: 'lg', keyboard: false,centered: true });\r\n    const modalInstance: BmWfAssociationComponent = modalRef.componentInstance;\r\n    modalInstance.BMName = this.dataSource[index].nam;\r\n    modalInstance.Version = this.dataSource[index].Ver;\r\n    modalInstance.BMID = this.dataSource[index].BMID;\r\n    if (index !== null) {\r\n      const item = this.dataSource[index];\r\n    }\r\n    modalRef.result.then(async (result) => {\r\n      if (result) {\r\n        this.toastr.success('Workflow BM saved successfully.');\r\n        //this.LoadData();\r\n      }\r\n    }, (reason) => {\r\n    }\r\n    );\r\n  }\r\n\r\n  GridViewMasterConfig(poptype: string, viewName: string) {\r\n    const modalRef = this.modalService.open(GridViewMasterConfigurationComponent,\r\n      { windowClass: 'grid-config-view-modal', backdrop: 'static', keyboard: false,size: 'lg',centered: true }\r\n    );\r\n    const modalInstance: GridViewMasterConfigurationComponent = modalRef.componentInstance;\r\n    modalInstance.gridConfigJson.ViewName = viewName;\r\n    modalInstance.ProcessName = this.processName;\r\n    modalInstance.OldViewName = viewName;\r\n    //modalInstance.objBaseGrid = this;\r\n  }\r\n\r\n  openJsonImportModal(jsonModalTemplate: any): void {\r\n    this.resetFileDetails();\r\n    const modalRef = this.modalService.open(jsonModalTemplate, { \r\n      ariaLabelledBy: 'modal-basic-title', \r\n      backdrop: 'static', \r\n      keyboard: false ,\r\n      centered: true\r\n    });\r\n  }\r\n  \r\n  resetFileDetails(): void {\r\n    this.fileName = '';\r\n    this.errorMsg = '';\r\n    this.IsValidFile = true;\r\n    this.file = null;  \r\n  }\r\n  \r\n  validateJsonFile(event: any): void {\r\n    const input = event?.target as HTMLInputElement;\r\n\r\n    if (input?.files?.length > 0) {\r\n      this.file = input.files[0];\r\n      this.fileName = this.file.name;\r\n      this.errorMsg = '';\r\n      this.IsValidFile = false;\r\n\r\n      // Validate if it's a JSON file\r\n      if (!this.file.name.toLowerCase().endsWith('.json')) {\r\n        this.errorMsg = 'Please select a valid JSON file';\r\n        this.IsValidFile = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ImportJsonBM(): void {\r\n  \r\n    if (!this.file) {\r\n      this.errorMsg = 'No file selected.';\r\n      return;\r\n    }\r\n  \r\n    if (this.file?.type !== 'application/json') {\r\n      this.errorMsg = 'Invalid file type. Please upload a valid JSON file.';\r\n      return;\r\n    }\r\n    var BMID = null;\r\n    BMID = this.dataSource.filter(x => x.selected === true).map(x => x.BMID);\r\n    if (BMID.length >= 2) {\r\n      this.toastr.error('Please select only one Datasource');\r\n      return;\r\n    }\r\n  \r\n    this.processName = sessionStorage.getItem('AppName');\r\n    \r\n    const reader = new FileReader();\r\n  \r\n    reader.onload = (e: ProgressEvent<FileReader>) => {\r\n      try {\r\n        const result = e?.target?.result as string;\r\n        const parsedData = JSON.parse(result); \r\n  \r\n        this.ImportBMJsonToDB(this.processName, BMID, parsedData);\r\n        this.errorMsg = ''; \r\n      } catch (error) {\r\n        this.errorMsg = 'Error parsing JSON file.';\r\n      }\r\n    };\r\n  \r\n    reader.readAsText(this.file);\r\n  }\r\n  \r\n  ImportBMJsonToDB(processName: string, BMID: string, parsedData: any): void {\r\n   \r\n    this.bmService.ImportJsonBM(processName, BMID, parsedData).subscribe({\r\n      next: (response) => {\r\n        this.toastr.success('BM generated successfully');\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('Error generating BM');\r\n      }\r\n    });\r\n  }\r\n  GenerateDMOGPROPS(): void  {\r\n   var BMID = this.dataSource[this.selectedRowIndex]?.BMID;\r\n   \r\n    this.msg.showMessage('Warning', {\r\n      header: 'Migrate to New Model',\r\n      body: 'Are you sure you want to migrate to the new model?',\r\n      btnText: 'Migrate',\r\n      checkboxText: 'Yes, migrate',\r\n      isDelete: true,\r\n      isNewDesign: true,\r\n      callback: () => {\r\n      this.bmService.GenerateDMOGPROPS(BMID).subscribe({\r\n       next: () => {\r\n      this.LoadData();\r\n       this.toastr.success('DMOGPROPS Inserted successfully');\r\n     },\r\n     error: () => {\r\n      this.toastr.error('Error Inserting DMOGPROPS');\r\n    }\r\n  });\r\n      },\r\n      caller: this,\r\n    });\r\n  }\r\n  goToVersionGrid(){\r\n    const modalRef = this.modalService.open(LiveVersionComponent, { backdrop: 'static', size:'lg',keyboard: false ,centered: true});\r\n    modalRef.result.then(async (result) => {      \r\n      if (result) {\r\n        this.toastr.success('Data saved successfully.');      \r\n      }\r\n    }, (reason) => {\r\n    }\r\n    );\r\n  }\r\n\r\n  onSearch() {\r\n    if (this.searchText.trim()) {\r\n      console.log('Searching for:', this.searchText);\r\n      // 👉 Call API or emit event here\r\n      this.bodyData.GridFilters = [\r\n        {\r\n          \"GridConditions\": [\r\n            {\r\n              \"Condition\": \"CONTAINS\",\r\n              \"ConditionValue\": this.searchText\r\n            }\r\n          ],\r\n          \"DataField\": \"dmoName\",\r\n          \"LogicalOperator\": \"Or\",\r\n          \"FilterType\": \"Global_Search\"\r\n        }\r\n      ]\r\n      this.LoadData();\r\n    }\r\n  }\r\n\r\n  onPublishToEnvironment() {\r\n      const item = this.dataSource[this.selectedRowIndex];\r\n\r\n      const sourceData = {\r\n        FriendlyName: item.DISPNAME || '',\r\n        ModifiedOn: item.modfon || '',\r\n        ID: item.BMID || '',\r\n        SourceObject: 'bm'\r\n      };\r\n\r\n      this.router.navigate(['/publish'], {\r\n        state: { dataObject: sourceData },\r\n        queryParams: { publishid: item.BMID }\r\n      });\r\n}\r\n\r\n// Popup menu methods\r\n  openActionsPopup(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const rect = (event.currentTarget as HTMLElement).getBoundingClientRect();\r\n    const popupWidth = 250;\r\n    const popupHeight = 300; // Set your popup height here\r\n\r\n    const spaceBelow = window.innerHeight - rect.bottom;\r\n    const spaceAbove = rect.top;\r\n\r\n    let x = rect.left + window.scrollX;\r\n    let y: number;\r\n    let openAbove = false;\r\n\r\n    // Decide position: open above if not enough space below\r\n    if (spaceBelow < popupHeight && spaceAbove > popupHeight) {\r\n      y = rect.top + window.scrollY - popupHeight;\r\n      openAbove = true;\r\n    } else {\r\n      y = rect.bottom + window.scrollY;\r\n    }\r\n\r\n    // Clamp x if needed\r\n    if (x + popupWidth > window.innerWidth) {\r\n      x = window.innerWidth - popupWidth - 10;\r\n    }\r\n    if (x < 10) x = 10;\r\n    if (y < 10) y = 10;\r\n\r\n    this.popupPosition = { x, y };\r\n    this.showActionsPopup = true;\r\n\r\n    setTimeout(() => {\r\n      document.addEventListener('click', this.boundOutsideClick, true);\r\n      document.addEventListener('keydown', this.boundKeydown, true);\r\n      // window.addEventListener('scroll', this.boundScroll, true); // Add scroll listener\r\n    }, 0);\r\n  }\r\nonActionsMenuOpen(event: {x: number, y: number, rowIndex: number}) {\r\n  this.selectedRowIndex = event.rowIndex;\r\n  this.openActionsPopupAt({x: event.x, y: event.y});\r\n}\r\n  openActionsPopupAt(pos: {x:number,y:number}){\r\n    // approximate popup size and clamp\r\n    const popupWidth = 200;\r\n    const popupHeight = 600;\r\n    let x = pos.x;\r\n    let y = pos.y + 5;\r\n    console.log('Popup position:', { x, y });\r\n    if (x + popupWidth > window.innerWidth) x = pos.x - popupWidth;\r\n    if (y + popupHeight > window.innerHeight) y = pos.y;\r\n    if (x < 10) x = 10;\r\n    if (y < 10) y = 10;\r\n\r\n    this.popupPosition = {x,y};\r\n    this.showActionsPopup = true;\r\n\r\n    setTimeout(() => {\r\n      const popup = document.querySelector('.actions-popup');\r\n      if (popup) {\r\n        popup.classList.remove('arrow-left', 'arrow-right', 'arrow-left-top', 'arrow-right-top');\r\n      }\r\n      document.addEventListener('click', this.boundOutsideClick, true);\r\n      document.addEventListener('keydown', this.boundKeydown, true);\r\n      // window.addEventListener('scroll', this.boundScroll, true); // Add scroll listener\r\n    }, 0);\r\n  }\r\n\r\n  closeActionsPopup(): void {\r\n    this.showActionsPopup = false;\r\n    document.removeEventListener('click', this.boundOutsideClick, true);\r\n    document.removeEventListener('keydown', this.boundKeydown, true);\r\n    // window.removeEventListener('scroll', this.boundScroll, true); // Remove scroll listener\r\n  }\r\n\r\n  private closeActionsPopupOnOutsideClick(event: MouseEvent): void {\r\n    const popup = document.querySelector('.actions-popup');\r\n    if (popup && !popup.contains(event.target as Node)) {\r\n      this.closeActionsPopup();\r\n    }\r\n  }\r\n\r\n  private handleKeyDown(event: KeyboardEvent): void {\r\n    if (event.key === 'Escape') {\r\n      this.closeActionsPopup();\r\n    }\r\n  }\r\n\r\n    CardWallTemplateConfig(poptype: string) {\r\n    const modalRef = this.modalService.open(CardWallConfigurationSelectionComponent,\r\n      { windowClass: 'grid-config-view-modal', backdrop: 'static', keyboard: false }\r\n    );\r\n    const modalInstance: CardWallConfigurationSelectionComponent = modalRef.componentInstance;\r\n    modalInstance.ProcessName = this.processName;\r\n  }\r\n  \r\n\r\n  // private boundScroll = this.handleScroll.bind(this);\r\n\r\n  // private handleScroll(event: Event): void {\r\n  // this.closeActionsPopup();\r\n  // }\r\n\r\n  handleAnyFileInput(event: any, bulkUpload: any, jsonModalTemplate: any) {\r\n    const files = event.target.files;\r\n    if (!files || files.length === 0) return;\r\n    this.file = files[0];\r\n    this.fileName = this.file.name;\r\n    this.errorMsg = '';\r\n    this.IsValidFile = false;\r\n    const fileName = this.file.name.toLowerCase();\r\n    const isExcel = fileName.endsWith('.xls') || fileName.endsWith('.xlsx');\r\n    const isJson = fileName.endsWith('.json');\r\n    if (isExcel) {\r\n      if (\r\n        this.file.type === 'application/vnd.ms-excel' ||\r\n        this.file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||\r\n        fileName.endsWith('.xls') || fileName.endsWith('.xlsx')\r\n      ) {\r\n        this.IsValidFile = false;\r\n        this.fileName = this.file.name;\r\n      } else {\r\n        this.fileName = '';\r\n        this.errorMsg = 'File not valid';\r\n        this.IsValidFile = true;\r\n      }\r\n    } else if (isJson) {\r\n      // Validate JSON extension only, do not close modal\r\n      if (!fileName.endsWith('.json')) {\r\n        this.fileName = '';\r\n        this.errorMsg = 'File not valid';\r\n        this.IsValidFile = true;\r\n      } else {\r\n        this.IsValidFile = false;\r\n        this.fileName = this.file.name;\r\n      }\r\n    } else {\r\n      this.fileName = '';\r\n      this.errorMsg = 'Unsupported file type. Please upload an Excel or JSON file.';\r\n      this.IsValidFile = true;\r\n    }\r\n  }\r\n\r\n  // Directly handle JSON import without opening a modal\r\n  importJsonFileDirectly(file: File): void {\r\n    if (!file) {\r\n      this.toastr.error('No file selected.');\r\n      return;\r\n    }\r\n    if (!file.name.toLowerCase().endsWith('.json')) {\r\n      this.toastr.error('Invalid file type. Please upload a valid JSON file.');\r\n      return;\r\n    }\r\n    var BMID = this.dataSource.filter(x => x.selected === true).map(x => x.BMID);\r\n    if (BMID.length >= 2) {\r\n      this.toastr.error('Please select only one Datasource');\r\n      return;\r\n    }\r\n    const BMIDValue = BMID.length === 1 ? BMID[0] : '';\r\n    this.processName = sessionStorage.getItem('AppName');\r\n    const reader = new FileReader();\r\n    reader.onload = (e: ProgressEvent<FileReader>) => {\r\n      try {\r\n        const result = e?.target?.result as string;\r\n        const parsedData = JSON.parse(result);\r\n        this.ImportBMJsonToDB(this.processName, BMIDValue, parsedData);\r\n        this.errorMsg = '';\r\n      } catch (error) {\r\n        this.toastr.error('Error parsing JSON file.');\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n}\r\n", "<!--Header-->\r\n<div class=\"\">\r\n  <div class=\"d-flex justify-content-between flex-column flex-md-row align-items-center\">\r\n    <div class=\"display-name\">{{DisplayName}}</div>\r\n  </div>\r\n\r\n  <div></div>\r\n\r\n  <div class=\"p-1\"></div>\r\n\r\n  <!-- Hidden button group - will be shown in popup -->\r\n  <div class=\"table-filters-group align-items-start\" style=\"display: none;\">\r\n    <form [formGroup]=\"BMForm\" class=\"m-0 p-0\">\r\n      <div class=\"button-group BMForm-Actions\" style=\"padding: 3px 5px;\">\r\n        <select name='ChangeStatus' formControlName=\"ChangeStatus\" (change)=\"ChangeStatus($event)\"\r\n          class=\"btn btn-primary-special btn-small\">\r\n          <option value=\"-1\">Change Status</option>\r\n          <option value=\"Active\">Active</option>\r\n          <option value=\"Inactive\">Inactive</option>\r\n        </select>\r\n        <!-- <button (click)=\"CreateNewVersion()\" class=\"btn btn-primary-special btn-small\" type=\"button\">New\r\n                Version</button> -->\r\n        <!-- <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"generateXML()\">Generate -->\r\n        <!-- JSON</button> -->\r\n        <!-- <button class=\"btn btn-primary-special btn-small\" type=\"button\"  (click)=\"ExportBM()\">Export BM</button> -->\r\n        <!-- <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"UniqueConstraint()\">Unique Constraint</button>\r\n            <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"BatchUpdate()\">Batch Update</button>\r\n            <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"BulkTrigger()\">Bulk Trigger</button>\r\n            <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"onCompanyAssociation()\">Company Association</button>\r\n            <select name='ChangeMode' formControlName=\"ChangeMode\" (change)=\"ChangeMode($event)\" class=\"btn btn-primary-special btn-small\">\r\n                <option value=\"-1\">Change Mode</option>\r\n                <option value=\"Edit\">Edit</option>\r\n                <option value=\"Published\">Published</option>\r\n            </select>\r\n            <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"onTopCornerDetail()\">Top Corner Detail</button>\r\n            <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"GridViewMasterConfig('','')\">Grid Master Config</button>\r\n            <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"openJsonImportModal(jsonModalTemplate)\">\r\n              Import BM JSON\r\n            </button>\r\n            <input #jsonFileInput type=\"file\" accept=\".json\" style=\"display: none;\" (change)=\"ImportJsonBM()\" />\r\n            <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"GenerateDMOGPROPS()\">Migrate to New Model</button>\r\n            <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"goToVersionGrid()\">Live Version</button>\r\n            <button class=\"btn btn-primary-special btn-small\" type=\"button\" (click)=\"onPublishToEnvironment()\">Publish To Environment</button> -->\r\n\r\n      </div>\r\n    </form>\r\n        <div class=\"export-btns-group mt-1\" style=\"white-space: nowrap;\">\r\n            <button type=\"button\" (click)=\"openBulkUpload(bulkUpload)\" title=\"BM Upload\" class=\"linklike\"><i class=\"fas fa-edit\"></i>BM Upload Excel</button>\r\n            <button type=\"button\" title=\"Excel\" (click)=\"openExportGridConfigurationPopup('GridConfiguration','View1', 'Excel')\" class=\"linklike\"><i\r\n                    class=\"far fa-file-excel\" role=\"img\" aria-label=\"Excel\"></i>Excel</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"Strip\">\r\n     \r\n      <button (click)=\"CreateNewRecord(null)\" *ngIf=\"!isLoading && (!dataSource?.length && (!bodyData?.GridFilters || bodyData.GridFilters.length === 0))\" title=\"Add Data Model\" class=\"icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"18\" viewBox=\"0 0 19 18\" fill=\"none\">\r\n          <path\r\n            d=\"M16.851 7.07143H11.0653V1.28571C11.0653 0.575759 10.4895 0 9.77958 0H8.49386C7.78391 0 7.20815 0.575759 7.20815 1.28571V7.07143H1.42243C0.712478 7.07143 0.136719 7.64719 0.136719 8.35714V9.64286C0.136719 10.3528 0.712478 10.9286 1.42243 10.9286H7.20815V16.7143C7.20815 17.4242 7.78391 18 8.49386 18H9.77958C10.4895 18 11.0653 17.4242 11.0653 16.7143V10.9286H16.851C17.561 10.9286 18.1367 10.3528 18.1367 9.64286V8.35714C18.1367 7.64719 17.561 7.07143 16.851 7.07143Z\"\r\n            fill=\"white\" />\r\n        </svg>\r\n      </button>\r\n      \r\n      <button (click)=\"CardWallTemplateConfig('')\"  title=\"Add Card Designer\" class=\"icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n         <rect x=\"2\" y=\"4\" width=\"20\" height=\"16\" rx=\"3\" ry=\"3\" stroke=\"white\" stroke-width=\"2\" fill=\"none\"/>\r\n         <rect x=\"2\" y=\"7\" width=\"20\" height=\"2.5\" fill=\"white\"/>\r\n         <line x1=\"6\" y1=\"15\" x2=\"12\" y2=\"15\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n       </svg>\r\n       </button>\r\n\r\n      <button (click)=\"openExportGridConfigurationPopup('GridConfiguration','View1', 'Excel')\" title=\"Export this Grid\" class=\"icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"24\" viewBox=\"0 0 19 24\" fill=\"none\">\r\n          <path\r\n            d=\"M10.6367 6.375V0H1.26172C0.638281 0 0.136719 0.501562 0.136719 1.125V22.875C0.136719 23.4984 0.638281 24 1.26172 24H17.0117C17.6352 24 18.1367 23.4984 18.1367 22.875V7.5H11.7617C11.143 7.5 10.6367 6.99375 10.6367 6.375ZM13.4539 11.3672L10.6367 15.75L13.4539 20.1328C13.693 20.5078 13.4258 21 12.9805 21H11.3445C11.1383 21 10.9461 20.8875 10.8477 20.7047C9.92891 19.0078 9.13672 17.4844 9.13672 17.4844C8.83672 18.1781 8.66797 18.4219 7.42109 20.7094C7.32266 20.8922 7.13516 21.0047 6.92891 21.0047H5.29297C4.84766 21.0047 4.58047 20.5125 4.81953 20.1375L7.64609 15.7547L4.81953 11.3719C4.57578 10.9969 4.84766 10.5047 5.29297 10.5047H6.92422C7.13047 10.5047 7.32266 10.6172 7.42109 10.8C8.64453 13.0875 8.35859 12.375 9.13672 14.0109C9.13672 14.0109 9.42266 13.4625 10.8523 10.8C10.9508 10.6172 11.143 10.5047 11.3492 10.5047H12.9805C13.4258 10.5 13.693 10.9922 13.4539 11.3672ZM18.1367 5.71406V6H12.1367V0H12.4227C12.7227 0 13.0086 0.117188 13.2195 0.328125L17.8086 4.92188C18.0195 5.13281 18.1367 5.41875 18.1367 5.71406Z\"\r\n            fill=\"white\" />\r\n        </svg></button>\r\n      <button (click)=\"openJsonImportModal(jsonModalTemplate); closeActionsPopup()\" title=\"Import BM\" class=\"icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"22\" viewBox=\"0 0 19 22\" fill=\"none\">\r\n          <path\r\n            d=\"M0.699219 15.125C0.389844 15.125 0.136719 15.3781 0.136719 15.6875V16.8125C0.136719 17.1219 0.389844 17.375 0.699219 17.375H4.63672V15.125H0.699219ZM17.8906 4.19141L14.4488 0.746094C14.2906 0.587891 14.0762 0.5 13.8512 0.5H13.6367V5H18.1367V4.78555C18.1367 4.56406 18.0488 4.34961 17.8906 4.19141ZM12.5117 5.28125V0.5H5.48047C5.01289 0.5 4.63672 0.876172 4.63672 1.34375V15.125H9.13672V12.8328C9.13672 12.3301 9.74492 12.0805 10.1 12.4355L11.7805 14.1318L13.4609 15.8281C13.693 16.0637 13.693 16.4398 13.4609 16.6719L10.0965 20.0609C9.74141 20.416 9.1332 20.1664 9.1332 19.6637V17.375H4.63672V20.6562C4.63672 21.1238 5.01289 21.5 5.48047 21.5H17.293C17.7605 21.5 18.1367 21.1238 18.1367 20.6562V6.125H13.3555C12.8914 6.125 12.5117 5.74531 12.5117 5.28125Z\"\r\n            fill=\"white\" />\r\n        </svg></button>\r\n      <button (click)=\"goToVersionGrid(); closeActionsPopup()\" title=\"Change Mode\" class=\"icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"16\" viewBox=\"0 0 22 16\" fill=\"none\">\r\n          <g clip-path=\"url(#clip0_11061_81599)\">\r\n            <path\r\n              d=\"M11.9428 9.32366C11.7619 9.50674 11.5552 9.64405 11.3323 9.73559C11.1094 9.82713 10.8736 9.8729 10.6378 9.8729C10.4019 9.8729 10.1661 9.82713 9.94325 9.73559C9.72036 9.64405 9.51362 9.50674 9.33272 9.32366C9.15183 9.14058 9.01616 8.93134 8.92571 8.70576C8.83526 8.48018 8.79004 8.24152 8.79004 8.00286C8.79004 7.7642 8.83526 7.52554 8.92571 7.29996C9.01616 7.07437 9.15183 6.86514 9.33272 6.68206C9.51362 6.49898 9.72036 6.36166 9.94325 6.27012C10.1661 6.17858 10.4019 6.13281 10.6378 6.13281C10.8736 6.13281 11.1094 6.17858 11.3323 6.27012C11.5552 6.36166 11.7619 6.49898 11.9428 6.68206C12.1237 6.86514 12.2594 7.07437 12.3498 7.29996C12.4402 7.52554 12.4855 7.7642 12.4855 8.00286C12.4855 8.24152 12.4402 8.48018 12.3498 8.70576C12.2594 8.93134 12.1237 9.14058 11.9428 9.32366Z\"\r\n              fill=\"white\" />\r\n            <path\r\n              d=\"M12.6862 11.1445C12.6862 10.9778 12.7476 10.8111 12.8735 10.6836C13.2321 10.3207 13.5099 9.89892 13.6973 9.42814C13.8782 8.97371 13.9718 8.49312 13.9718 7.99945C13.9718 7.50579 13.8782 7.0252 13.6973 6.57076C13.5099 6.09998 13.2321 5.67824 12.8735 5.31535C12.6216 5.06034 12.6216 4.64841 12.8735 4.3934C13.1255 4.1384 13.5325 4.1384 13.7845 4.3934C14.2658 4.88053 14.6373 5.44612 14.8925 6.08037C15.138 6.69173 15.2607 7.33578 15.2607 7.99945C15.2607 8.66312 15.138 9.30718 14.8925 9.91854C14.6373 10.5528 14.2658 11.1184 13.7845 11.6055C13.5325 11.8605 13.1255 11.8605 12.8735 11.6055C12.7476 11.478 12.6862 11.3113 12.6862 11.1445Z\"\r\n              fill=\"white\" />\r\n            <path\r\n              d=\"M14.7663 13.2473C14.7663 13.0806 14.8276 12.9138 14.9536 12.7863C15.5932 12.139 16.0874 11.3871 16.4234 10.5468C16.7497 9.73606 16.9144 8.8795 16.9144 8.00005C16.9144 7.12061 16.7497 6.26405 16.4234 5.45326C16.0874 4.61305 15.5932 3.86111 14.9536 3.21379C14.7017 2.95878 14.7017 2.54685 14.9536 2.29184C15.2056 2.03683 15.6126 2.03683 15.8646 2.29184C16.6269 3.0634 17.2148 3.95919 17.6154 4.96287C18.003 5.93058 18.2 6.95061 18.2 8.00005C18.2 9.0495 18.003 10.0695 17.6154 11.0372C17.2148 12.0377 16.6237 12.9367 15.8646 13.7083C15.6126 13.9633 15.2056 13.9633 14.9536 13.7083C14.8276 13.5808 14.7663 13.414 14.7663 13.2473Z\"\r\n              fill=\"white\" />\r\n            <path\r\n              d=\"M16.8434 15.3491C16.8434 15.1824 16.9048 15.0156 17.0308 14.8881C17.9514 13.9564 18.6621 12.8742 19.1466 11.6646C19.615 10.4974 19.8508 9.2649 19.8508 7.99968C19.8508 6.73446 19.615 5.50193 19.1466 4.33479C18.6621 3.12514 17.9514 2.043 17.0308 1.11125C16.7788 0.856241 16.7788 0.444308 17.0308 0.189301C17.2827 -0.0657047 17.6897 -0.0657047 17.9417 0.189301C18.9819 1.24202 19.7894 2.47128 20.3386 3.84439C20.8683 5.16846 21.1364 6.56446 21.1364 7.99968C21.1364 9.43491 20.8683 10.8309 20.3386 12.155C19.7894 13.5248 18.9819 14.7541 17.9417 15.8101C17.6897 16.0651 17.2827 16.0651 17.0308 15.8101C16.9048 15.6826 16.8434 15.5158 16.8434 15.3491Z\"\r\n              fill=\"white\" />\r\n            <path\r\n              d=\"M8.58692 4.85438C8.58692 5.02111 8.52555 5.18785 8.39957 5.31535C8.04101 5.67824 7.7632 6.09998 7.57585 6.57076C7.39495 7.0252 7.30127 7.50579 7.30127 7.99945C7.30127 8.49312 7.39495 8.97371 7.57585 9.42814C7.7632 9.89892 8.04101 10.3207 8.39957 10.6836C8.65153 10.9386 8.65153 11.3505 8.39957 11.6055C8.1476 11.8605 7.74059 11.8605 7.48863 11.6055C7.00732 11.1184 6.63584 10.5528 6.38388 9.91854C6.13838 9.30718 6.01562 8.66312 6.01562 7.99945C6.01562 7.33578 6.13838 6.69173 6.38388 6.08037C6.63584 5.44612 7.01055 4.88053 7.48863 4.3934C7.74059 4.1384 8.1476 4.1384 8.39957 4.3934C8.52555 4.52091 8.58692 4.68764 8.58692 4.85438Z\"\r\n              fill=\"white\" />\r\n            <path\r\n              d=\"M6.50995 2.75281C6.50995 2.91955 6.44858 3.08628 6.3226 3.21379C5.683 3.86111 5.18877 4.61305 4.85282 5.45326C4.52656 6.26405 4.36182 7.12061 4.36182 8.00005C4.36182 8.8795 4.52656 9.73606 4.85282 10.5468C5.18877 11.3871 5.683 12.139 6.3226 12.7863C6.57456 13.0413 6.57456 13.4533 6.3226 13.7083C6.07063 13.9633 5.66362 13.9633 5.41166 13.7083C4.64931 12.9367 4.0614 12.0409 3.66085 11.0372C3.27322 10.0695 3.07617 9.0495 3.07617 8.00005C3.07617 6.95061 3.27322 5.93058 3.66085 4.96287C4.0614 3.96246 4.65254 3.0634 5.41166 2.29184C5.66362 2.03683 6.07063 2.03683 6.3226 2.29184C6.44858 2.41934 6.50995 2.58608 6.50995 2.75281Z\"\r\n              fill=\"white\" />\r\n            <path\r\n              d=\"M4.43268 0.650274C4.43268 0.817009 4.3713 0.983744 4.24532 1.11125C3.3247 2.043 2.61404 3.12514 2.1295 4.33479C1.66111 5.50193 1.4253 6.73446 1.4253 7.99968C1.4253 9.2649 1.66111 10.4974 2.1295 11.6646C2.61404 12.871 3.3247 13.9564 4.24532 14.8881C4.49728 15.1431 4.49728 15.5551 4.24532 15.8101C3.99336 16.0651 3.58635 16.0651 3.33439 15.8101C2.29424 14.7573 1.48667 13.5281 0.937526 12.155C0.407761 10.8309 0.139648 9.43491 0.139648 7.99968C0.139648 6.56445 0.407761 5.16846 0.937526 3.84439C1.48344 2.47455 2.29101 1.24529 3.33116 0.189301C3.58312 -0.0657047 3.99013 -0.0657047 4.24209 0.189301C4.36807 0.316805 4.42945 0.483539 4.42945 0.650274H4.43268Z\"\r\n              fill=\"white\" />\r\n          </g>\r\n          <defs>\r\n            <clipPath id=\"clip0_11061_81599\">\r\n              <rect width=\"21\" height=\"16\" fill=\"white\" transform=\"translate(0.136719)\" />\r\n            </clipPath>\r\n          </defs>\r\n        </svg></button>\r\n    </div>\r\n    <!-- Actions Popup Menu -->\r\n    <div class=\"actions-popup\" *ngIf=\"showActionsPopup\" [style.left.px]=\"popupPosition.x\" [style.top.px]=\"popupPosition.y\">\r\n        <!-- <div class=\"popup-header\">\r\n            <span>Actions</span>\r\n            <button class=\"close-btn\" (click)=\"closeActionsPopup()\">\r\n                <i class=\"fas fa-times\"></i>\r\n            </button>\r\n        </div> -->\r\n\r\n    <form [formGroup]=\"BMForm\" class=\"m-0 p-0\">\r\n      <!-- Version Management Section -->\r\n      <div class=\"popup-section\">\r\n        <div class=\"section-title\">Version Management</div>\r\n        <div class=\"popup-button\" (click)=\"CreateNewVersion(); closeActionsPopup()\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n            <path\r\n              d=\"M16.7143 7.07143H10.9286V1.28571C10.9286 0.575759 10.3528 0 9.64286 0H8.35714C7.64719 0 7.07143 0.575759 7.07143 1.28571V7.07143H1.28571C0.575759 7.07143 0 7.64719 0 8.35714V9.64286C0 10.3528 0.575759 10.9286 1.28571 10.9286H7.07143V16.7143C7.07143 17.4242 7.64719 18 8.35714 18H9.64286C10.3528 18 10.9286 17.4242 10.9286 16.7143V10.9286H16.7143C17.4242 10.9286 18 10.3528 18 9.64286V8.35714C18 7.64719 17.4242 7.07143 16.7143 7.07143Z\"\r\n              fill=\"black\" />\r\n          </svg>\r\n          <span>New Version</span>\r\n        </div>\r\n        <div class=\"popup-button\" (click)=\"onPublishToEnvironment(); closeActionsPopup();\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"10\" viewBox=\"0 0 20 10\" fill=\"none\">\r\n            <path\r\n              d=\"M14.7219 0C12.6562 0 11.0406 1.29063 10 2.45625C8.95938 1.29063 7.34375 0 5.27812 0C2.36875 0 0 2.24375 0 5C0 7.75625 2.36875 10 5.27812 10C7.34375 10 8.95938 8.70937 10 7.54375C11.0406 8.70937 12.6562 10 14.7219 10C17.6313 10 20 7.75625 20 5C20 2.24375 17.6313 0 14.7219 0ZM5.27812 7C4.02187 7 3 6.10313 3 5C3 3.89687 4.02187 3 5.27812 3C6.47187 3 7.57187 4.12813 8.21562 5C7.57812 5.8625 6.46875 7 5.27812 7ZM14.7219 7C13.5281 7 12.4281 5.87187 11.7844 5C12.4219 4.1375 13.5312 3 14.7219 3C15.9781 3 17 3.89687 17 5C17 6.10313 15.9781 7 14.7219 7Z\"\r\n              fill=\"black\" />\r\n          </svg>\r\n          <span>Publish To Environment</span>\r\n        </div>\r\n        <div class=\"popup-button\" (click)=\"GenerateDMOGPROPS(); closeActionsPopup();\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"16\" viewBox=\"0 0 13 16\" fill=\"none\">\r\n            <path\r\n              d=\"M1.3 16L0 14.7556L4.48036 10.4444C4.83631 10.1037 5.10714 9.71852 5.29286 9.28889C5.47857 8.85926 5.57143 8.40741 5.57143 7.93333V3.4L4.08571 4.8L2.78571 3.55556L6.5 0L10.2143 3.55556L8.91429 4.8L7.42857 3.4V7.93333C7.42857 8.40741 7.52143 8.85926 7.70714 9.28889C7.89286 9.71852 8.16369 10.1037 8.51964 10.4444L13 14.7556L11.7 16L6.5 11.0222L1.3 16Z\"\r\n              fill=\"black\" />\r\n          </svg>\r\n          <span>Migrate to New Modeler</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Manage Access Section -->\r\n      <div class=\"popup-section\">\r\n        <div class=\"section-title\">Manage Access</div>\r\n        <div class=\"popup-button\" (click)=\"onCompanyAssociation(); closeActionsPopup();\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\r\n            <path\r\n              d=\"M17.5714 17.875H16.8571V1.84375C16.8571 1.37775 16.4734 1 16 1H4C3.52661 1 3.14286 1.37775 3.14286 1.84375V17.875H2.42857C2.19189 17.875 2 18.0639 2 18.2969V19H18V18.2969C18 18.0639 17.8081 17.875 17.5714 17.875ZM6.57143 3.67188C6.57143 3.43889 6.76332 3.25 7 3.25H8.42857C8.66525 3.25 8.85714 3.43889 8.85714 3.67188V5.07812C8.85714 5.31111 8.66525 5.5 8.42857 5.5H7C6.76332 5.5 6.57143 5.31111 6.57143 5.07812V3.67188ZM6.57143 7.04688C6.57143 6.81389 6.76332 6.625 7 6.625H8.42857C8.66525 6.625 8.85714 6.81389 8.85714 7.04688V8.45312C8.85714 8.68611 8.66525 8.875 8.42857 8.875H7C6.76332 8.875 6.57143 8.68611 6.57143 8.45312V7.04688ZM8.42857 12.25H7C6.76332 12.25 6.57143 12.0611 6.57143 11.8281V10.4219C6.57143 10.1889 6.76332 10 7 10H8.42857C8.66525 10 8.85714 10.1889 8.85714 10.4219V11.8281C8.85714 12.0611 8.66525 12.25 8.42857 12.25ZM11.1429 17.875H8.85714V14.9219C8.85714 14.6889 9.04904 14.5 9.28571 14.5H10.7143C10.951 14.5 11.1429 14.6889 11.1429 14.9219V17.875ZM13.4286 11.8281C13.4286 12.0611 13.2367 12.25 13 12.25H11.5714C11.3348 12.25 11.1429 12.0611 11.1429 11.8281V10.4219C11.1429 10.1889 11.3348 10 11.5714 10H13C13.2367 10 13.4286 10.1889 13.4286 10.4219V11.8281ZM13.4286 8.45312C13.4286 8.68611 13.2367 8.875 13 8.875H11.5714C11.3348 8.875 11.1429 8.68611 11.1429 8.45312V7.04688C11.1429 6.81389 11.3348 6.625 11.5714 6.625H13C13.2367 6.625 13.4286 6.81389 13.4286 7.04688V8.45312ZM13.4286 5.07812C13.4286 5.31111 13.2367 5.5 13 5.5H11.5714C11.3348 5.5 11.1429 5.31111 11.1429 5.07812V3.67188C11.1429 3.43889 11.3348 3.25 11.5714 3.25H13C13.2367 3.25 13.4286 3.43889 13.4286 3.67188V5.07812Z\"\r\n              fill=\"black\" />\r\n          </svg>\r\n          <span>Company Access</span>\r\n        </div>\r\n        <!-- <div class=\"popup-button\" (click)=\"onTopCornerDetail();\">\r\n                <i class=\"fas fa-users\"></i>\r\n                <span>Roles</span>\r\n            </div> -->\r\n      </div>\r\n\r\n      <!-- Bulk Operations Section -->\r\n      <div class=\"popup-section\">\r\n        <div class=\"section-title\">Bulk Operations</div>\r\n        <div class=\"popup-button\" (click)=\"BatchUpdate(); closeActionsPopup();\">\r\n          <svg class=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"\r\n            fill=\"none\">\r\n            <path\r\n              d=\"M8.56 7.35999L7.4 6.22C7.25333 6.07333 7.07013 6 6.8504 6C6.63067 6 6.44053 6.08 6.28 6.24C6.13333 6.38666 6.06 6.57333 6.06 6.8C6.06 7.02666 6.13333 7.21333 6.28 7.35999L8 9.07999C8.16 9.23999 8.34667 9.31999 8.56 9.31999C8.77333 9.31999 8.96 9.23999 9.12 9.07999L12.52 5.68C12.68 5.52 12.7568 5.33333 12.7504 5.12C12.744 4.90666 12.6672 4.72 12.52 4.56C12.36 4.4 12.1701 4.3168 11.9504 4.3104C11.7307 4.304 11.5405 4.38053 11.38 4.54L8.56 7.35999ZM4.8 12.8C4.36 12.8 3.98347 12.6435 3.6704 12.3304C3.35733 12.0173 3.20053 11.6405 3.2 11.2V1.6C3.2 1.16 3.3568 0.783466 3.6704 0.4704C3.984 0.157333 4.36053 0.000533333 4.8 0H14.4C14.84 0 15.2168 0.1568 15.5304 0.4704C15.844 0.784 16.0005 1.16053 16 1.6V11.2C16 11.64 15.8435 12.0168 15.5304 12.3304C15.2173 12.644 14.8405 12.8005 14.4 12.8H4.8ZM1.6 16C1.16 16 0.783467 15.8435 0.4704 15.5304C0.157333 15.2173 0.000533333 14.8405 0 14.4V4C0 3.77333 0.0768001 3.58346 0.2304 3.4304C0.384 3.27733 0.573867 3.20053 0.8 3.2C1.02613 3.19946 1.21627 3.27626 1.3704 3.4304C1.52453 3.58453 1.60107 3.7744 1.6 4V14.4H12C12.2267 14.4 12.4168 14.4768 12.5704 14.6304C12.724 14.784 12.8005 14.9739 12.8 15.2C12.7995 15.4261 12.7227 15.6163 12.5696 15.7704C12.4165 15.9245 12.2267 16.0011 12 16H1.6Z\"\r\n              fill=\"black\" />\r\n          </svg>\r\n          <span>Batch Changes</span>\r\n        </div>\r\n        <div class=\"popup-button\" (click)=\"BulkTrigger(); closeActionsPopup();\">\r\n          <svg class=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"\r\n            fill=\"none\">\r\n            <path\r\n              d=\"M8.44953 10.8517L3.59096 15.6845C3.35664 15.9176 2.97674 15.9176 2.74244 15.6845L2.17574 15.1209C1.94181 14.8882 1.94136 14.5111 2.17474 14.2778L6.02528 10.4297L2.17476 6.58152C1.94139 6.34829 1.94184 5.97117 2.17576 5.73849L2.74244 5.17481C2.97676 4.94173 3.35666 4.94173 3.59096 5.17481L8.44953 10.0077C8.68386 10.2407 8.68386 10.6186 8.44953 10.8517ZM18 15.4032V14.6074C18 14.2778 17.7314 14.0106 17.4 14.0106H9.80001C9.46863 14.0106 9.20001 14.2778 9.20001 14.6074V15.4032C9.20001 15.7328 9.46863 16 9.80001 16H17.4C17.7314 16 18 15.7328 18 15.4032Z\"\r\n              fill=\"black\" />\r\n          </svg>\r\n          <span>Trigger Input on Fields</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Additional Actions Section -->\r\n      <div class=\"popup-section\">\r\n        <div class=\"section-title\">Configuration</div>\r\n        <div class=\"popup-button\" (click)=\"onTopCornerDetail(); closeActionsPopup();\">\r\n          <svg class=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"16\" viewBox=\"0 0 18 16\"\r\n            fill=\"none\">\r\n            <path\r\n              d=\"M16.3125 0H1.6875C0.755859 0 0 0.767857 0 1.71429V14.2857C0 15.2321 0.755859 16 1.6875 16H16.3125C17.2441 16 18 15.2321 18 14.2857V1.71429C18 0.767857 17.2441 0 16.3125 0ZM15.75 5.71429H2.25V2.71429C2.25 2.47857 2.43984 2.28571 2.67188 2.28571H15.3281C15.5602 2.28571 15.75 2.47857 15.75 2.71429V5.71429Z\"\r\n              fill=\"black\" />\r\n          </svg>\r\n          <span>Record Header</span>\r\n        </div>\r\n        <div class=\"popup-button\" (click)=\"GridViewMasterConfig('',''); closeActionsPopup();\">\r\n          <svg class=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"14\" viewBox=\"0 0 18 14\"\r\n            fill=\"none\">\r\n            <path\r\n              d=\"M11.0812 0.00012169H1.51875C0.679957 0.00012169 0 0.671684 0 1.50012V12.5001C0 13.3286 0.679957 14.0001 1.51875 14.0001H11.0812C11.92 14.0001 12.6 13.3286 12.6 12.5001V1.50012C12.6 0.671684 11.92 0.00012169 11.0812 0.00012169ZM5.2875 12.0001H2.025V4.00012H5.2875V12.0001ZM10.575 12.0001H7.3125V4.00012H10.575V12.0001Z\"\r\n              fill=\"black\" />\r\n            <path\r\n              d=\"M16.3687 0H6.80625C5.96746 0 5.2875 0.671563 5.2875 1.5V12.5C5.2875 13.3284 5.96746 14 6.80625 14H16.3687C17.2075 14 17.8875 13.3284 17.8875 12.5V1.5C17.8875 0.671563 17.2075 0 16.3687 0ZM10.575 12.0001H7.3125V4.00012H10.575V12.0001ZM15.8625 12H12.6V4H15.8625V12Z\"\r\n              fill=\"black\" />\r\n          </svg>\r\n          <span>Grid Master Config</span>\r\n        </div>\r\n        <div class=\"popup-button\" (click)=\"UniqueConstraint(); closeActionsPopup();\">\r\n          <svg class=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"\r\n            fill=\"none\">\r\n            <path\r\n              d=\"M11.6071 17.8527L6.14286 16.338V8.74344H7.51429C7.61429 8.74344 7.71429 8.7541 7.81429 8.77541C7.91429 8.79673 8.01429 8.82114 8.11429 8.84863L14.05 11.0155C14.25 11.0856 14.4109 11.2119 14.5326 11.3942C14.6543 11.5765 14.7149 11.7658 14.7143 11.9622C14.7143 12.2567 14.6106 12.4951 14.4031 12.6775C14.1957 12.8598 13.9566 12.951 13.6857 12.951H11.4357C11.3643 12.951 11.3109 12.9476 11.2754 12.9409C11.24 12.9341 11.1934 12.9165 11.1357 12.8879L10.1714 12.5302C10.0571 12.4881 9.94286 12.4951 9.82857 12.5512C9.71429 12.6074 9.64286 12.6845 9.61429 12.7827C9.58571 12.8949 9.59286 13.0001 9.63571 13.0982C9.67857 13.1964 9.75714 13.2665 9.87143 13.3086L11.1357 13.7504C11.1643 13.7644 11.2071 13.7751 11.2643 13.7824C11.3214 13.7897 11.3714 13.793 11.4143 13.7925H17.2857C17.7429 13.7925 18.1429 13.9538 18.4857 14.2763C18.8286 14.5989 19 14.9986 19 15.4755L12.6786 17.8107C12.5357 17.8668 12.3609 17.8985 12.154 17.9058C11.9471 17.913 11.7649 17.8954 11.6071 17.8527ZM1 16.317V10.4264C1 9.96362 1.168 9.56755 1.504 9.23824C1.84 8.90893 2.24343 8.744 2.71429 8.74344C3.18514 8.74288 3.58886 8.90781 3.92543 9.23824C4.262 9.56867 4.42971 9.96474 4.42857 10.4264V16.317C4.42857 16.7798 4.26086 17.1762 3.92543 17.506C3.59 17.8359 3.18629 18.0006 2.71429 18C2.24229 17.9994 1.83886 17.8348 1.504 17.506C1.16914 17.1773 1.00114 16.7809 1 16.317ZM11.2214 6.40826L15.4857 2.24281C15.6429 2.08853 15.8394 2.00775 16.0754 2.00045C16.3114 1.99316 16.5149 2.07394 16.6857 2.24281C16.8429 2.39708 16.9214 2.59343 16.9214 2.83186C16.9214 3.07029 16.8429 3.26664 16.6857 3.42091L11.8214 8.19646C11.65 8.36476 11.45 8.44891 11.2214 8.44891C10.9929 8.44891 10.7929 8.36476 10.6214 8.19646L8.17857 5.79817C8.00714 5.62987 7.92486 5.43352 7.93171 5.20911C7.93857 4.98471 8.028 4.78836 8.2 4.62006C8.37143 4.46578 8.57143 4.385 8.8 4.37771C9.02857 4.37041 9.22857 4.4512 9.4 4.62006L11.2214 6.40826Z\"\r\n              fill=\"black\" />\r\n          </svg>\r\n          <span>Require Unique Value</span>\r\n        </div>\r\n        <!-- <div class=\"popup-button\" (click)=\"openJsonImportModal(jsonModalTemplate);\">\r\n                <i class=\"fas fa-upload\"></i>\r\n                <span>Import BM JSON</span>\r\n            </div>\r\n            <div class=\"popup-button\" (click)=\"goToVersionGrid();\">\r\n                <i class=\"fas fa-eye\"></i>\r\n                <span>Live Version</span>\r\n            </div> -->\r\n      </div>\r\n      <div class=\"popup-section\">\r\n        <div class=\"popup-button\" (click)=\"showDeleteMessage(); closeActionsPopup();\">\r\n          <svg class=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"20\" viewBox=\"0 0 18 20\"\r\n            fill=\"none\">\r\n            <path\r\n              d=\"M1.71429 18.125C1.71429 18.6223 1.90619 19.0992 2.24777 19.4508C2.58935 19.8025 3.05264 20 3.53571 20H14.4643C14.9474 20 15.4106 19.8025 15.7522 19.4508C16.0938 19.0992 16.2857 18.6223 16.2857 18.125V5H1.71429V18.125ZM12.0357 8.125C12.0357 7.95924 12.0997 7.80027 12.2135 7.68306C12.3274 7.56585 12.4818 7.5 12.6429 7.5C12.8039 7.5 12.9583 7.56585 13.0722 7.68306C13.186 7.80027 13.25 7.95924 13.25 8.125V16.875C13.25 17.0408 13.186 17.1997 13.0722 17.3169C12.9583 17.4342 12.8039 17.5 12.6429 17.5C12.4818 17.5 12.3274 17.4342 12.2135 17.3169C12.0997 17.1997 12.0357 17.0408 12.0357 16.875V8.125ZM8.39286 8.125C8.39286 7.95924 8.45682 7.80027 8.57069 7.68306C8.68455 7.56585 8.83898 7.5 9 7.5C9.16103 7.5 9.31545 7.56585 9.42932 7.68306C9.54318 7.80027 9.60714 7.95924 9.60714 8.125V16.875C9.60714 17.0408 9.54318 17.1997 9.42932 17.3169C9.31545 17.4342 9.16103 17.5 9 17.5C8.83898 17.5 8.68455 17.4342 8.57069 17.3169C8.45682 17.1997 8.39286 17.0408 8.39286 16.875V8.125ZM4.75 8.125C4.75 7.95924 4.81397 7.80027 4.92783 7.68306C5.04169 7.56585 5.19612 7.5 5.35714 7.5C5.51817 7.5 5.6726 7.56585 5.78646 7.68306C5.90032 7.80027 5.96429 7.95924 5.96429 8.125V16.875C5.96429 17.0408 5.90032 17.1997 5.78646 17.3169C5.6726 17.4342 5.51817 17.5 5.35714 17.5C5.19612 17.5 5.04169 17.4342 4.92783 17.3169C4.81397 17.1997 4.75 17.0408 4.75 16.875V8.125ZM16.8929 1.25001H12.3393L11.9826 0.519538C11.907 0.363372 11.7906 0.232008 11.6465 0.140225C11.5024 0.0484421 11.3362 -0.00011828 11.1667 6.84872e-06H6.82946C6.66037 -0.000662313 6.49451 0.047717 6.35089 0.139602C6.20726 0.231487 6.09169 0.363161 6.01741 0.519538L5.66071 1.25001H1.10714C0.946119 1.25001 0.791689 1.31585 0.677828 1.43306C0.563967 1.55027 0.5 1.70925 0.5 1.87501L0.5 3.12501C0.5 3.29077 0.563967 3.44974 0.677828 3.56695C0.791689 3.68416 0.946119 3.75001 1.10714 3.75001H16.8929C17.0539 3.75001 17.2083 3.68416 17.3222 3.56695C17.436 3.44974 17.5 3.29077 17.5 3.12501V1.87501C17.5 1.70925 17.436 1.55027 17.3222 1.43306C17.2083 1.31585 17.0539 1.25001 16.8929 1.25001Z\"\r\n              fill=\"#EB583B\" />\r\n          </svg>\r\n          <span style=\"color: #EB583B;\">Delete</span>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n  <div class=\"p-1\"></div>\r\n\r\n\r\n\r\n\r\n  <div class=\"grid\">\r\n    <generic-grid [dataSource]=\"dataSource\" [headerMap]=\"HeaderMap\" [itemsCount]=\"itemsCount\" [sNo]=\"false\"\r\n      [pageNum]=\"pageNum\" (pageChange)=\"pageChange($event)\" (rowClick)=\"OnRowClick($event)\"\r\n      (actionClick)=\"actionClick($event)\" (actionsMenuOpen)=\"onActionsMenuOpen($event)\"\r\n      (actionsMenuOpen)=\"openActionsPopupAt($event)\" #genericgridcomponent>\r\n    </generic-grid>\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <ng-template #bulkUpload let-modal>\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-titlewf\" id=\"modal-basic-title\">Upload BM File</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\" class=\"fas fa-times-circle fa-fw\"></span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <form>\r\n        <div class=\"form-group\">\r\n          <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"form-control\" id=\"fileupload\" (change)=\"handleAnyFileInput($event, bulkUpload, jsonModalTemplate)\"\r\n                accept=\".xlsx,.xls,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel,application/json\">\r\n              </div>\r\n              <div class=\"input-group\">\r\n                <span>{{fileName}}</span>\r\n              </div>\r\n              <div class=\"input-group\">\r\n                <span style=\"color: #dc3545;\" *ngIf=\"IsValidFile\">{{errorMsg}}</span>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" style=\"color:white\" class=\"btn btn-primary btn-sm\" (click)=\"downloadTemplate()\" >Download Excel\r\n            Template</button>\r\n          <button type=\"button\" style=\"color:white\" class=\"btn btn-primary btn-sm\" [disabled]=\"IsValidFile\" (click)=\"upload()\">Upload</button>\r\n        </div>\r\n      </ng-template>\r\n       <ng-template #jsonModalTemplate let-modal>\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-titlewf\" id=\"modal-basic-title\">Upload BMJson File</h4>\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\" class=\"fas fa-times-circle fa-fw\"></span>\r\n          </button>\r\n        </div>\r\n                  <div class=\"accordion\"></div>\r\n        <div class=\"modal-body\">\r\n          <form>\r\n            <div class=\"form-group\">\r\n              <div class=\"custom-file\">\r\n                <input \r\n                  type=\"file\" \r\n                  (change)=\"validateJsonFile($event)\" \r\n                  id=\"fileupload\" \r\n                  class=\"form-control\" \r\n                  accept=\"application/json\">\r\n                <label class=\"custom-file-label\" for=\"fileupload\"></label>\r\n              </div>\r\n              <div class=\"input-group\">\r\n                <span>{{ fileName }}</span>\r\n              </div>\r\n              <div class=\"input-group\">\r\n                <span style=\"color: #dc3545;\" *ngIf=\"IsValidFile\">{{ errorMsg }}</span>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" style=\"color: white;\" class=\"btn btn-primary btn-sm\" [disabled]=\"IsValidFile\" (click)=\"ImportJsonBM()\">Upload</button>\r\n        </div>\r\n      </ng-template>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormViewApiService } from '@app/core/services/form-view-api.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { IBatchUpdateDmo } from '../../models';\r\nimport { NgIf, AsyncPipe } from '@angular/common';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\n\r\n@Component({\r\n    selector: 'app-batch-update',\r\n    templateUrl: './batch-update.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class BatchUpdateComponent implements OnInit {\r\n  bmId: string;\r\n  processId: string;\r\n  associations$: Observable<any[]>;\r\n  selectedItems: IBatchUpdateDmo[];\r\n\r\n  constructor(\r\n    readonly formViewApi: FormViewApiService,\r\n    public ref: NgbActiveModal,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.associations$ = this.getBatchUpdateDmos(this.bmId);\r\n  }\r\n\r\n  getBatchUpdateDmos(bmId: string) {\r\n    return forkJoin([\r\n      this.formViewApi.getDmosByBMId(bmId),\r\n      this.formViewApi.getSelectedDmosForBatchUpdate(bmId).pipe(map(res => res.Table)),\r\n    ])\r\n    .pipe(\r\n      map(([all, selected]) => {\r\n        const updatedSelected = [];\r\n        selected.forEach(item => {\r\n          const found = all.find(rec => +rec.dmoid === item.dmoid);\r\n          if (found) {\r\n            found['selected'] = true;\r\n            updatedSelected.push(found);          \r\n          }\r\n        });\r\n        return [all, updatedSelected]\r\n      }),\r\n    );\r\n  }\r\n\r\n  onSelect = (items: IBatchUpdateDmo[]) => this.selectedItems = items;\r\n  displayWith = (item: IBatchUpdateDmo) => `${item.bmoNameArea} > ${item.dmogNameArea} > ${item.dmoNameArea}`;\r\n  uniqueWith = (item: IBatchUpdateDmo) => item.dmoid;\r\n  onSubmit() {\r\n    const ids = this.selectedItems.map(item => item.dmoid).toString();\r\n    this.formViewApi.saveBatchUpdateDmos(this.bmId, this.processId, ids).subscribe(res => this.ref.close(res));\r\n  }\r\n\r\n}\r\n", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2>Batch Update</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  \r\n  <div class=\"double-column\">\r\n    <app-association\r\n      class=\"span-12\"\r\n      *ngIf=\"associations$ | async as items\" \r\n      [displayWith]=\"displayWith\"\r\n      [uniqueWith]=\"uniqueWith\"\r\n      [items]=\"items[0]\"\r\n      [associatedItems]=\"items[1]\"\r\n      checkBy=\"selected\"\r\n      (select)=\"onSelect($event)\">\r\n    </app-association>\r\n  </div>\r\n  \r\n  <div class=\"popup__actions\">\r\n    <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"ref.close()\">Cancel</button>\r\n    <button [disabled]=\"!selectedItems\" class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\">Save</button>\r\n  </div>\r\n</div>", "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormViewApiService } from '@app/core/services/form-view-api.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { IBatchUpdateDmo } from '../../models';\r\nimport { NgIf, AsyncPipe } from '@angular/common';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\n\r\ntype Item = IBatchUpdateDmo & {selected?: boolean};\r\n\r\n@Component({\r\n    selector: 'app-bulk-trigger',\r\n    templateUrl: './bulk-trigger.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class BulkTriggerComponent implements OnInit {\r\n  bmId: string;\r\n  processId: string;\r\n  associations$: Observable<any[]>;\r\n  selectedItems: Item[];\r\n\r\n  constructor(\r\n    private formViewApi: FormViewApiService,\r\n    public ref: NgbActiveModal,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.associations$ = this.getBatchUpdateDmos(this.bmId);\r\n  }\r\n\r\n  getBatchUpdateDmos(bmId: string) {\r\n    return forkJoin([\r\n      this.formViewApi.getDmosByBMId(bmId),\r\n      this.formViewApi.getSelectedDmosForBulkTrigger(bmId).pipe(map(res => res.Table)),\r\n    ]).pipe(\r\n      map(([all, selected]) => {\r\n        const updatedSelected = [];\r\n        selected.forEach(item => {\r\n          const found = all.find(rec => +rec.dmoid === item.dmoid);\r\n          found['selected'] = true;\r\n          updatedSelected.push(found);          \r\n        });\r\n        return [all, updatedSelected]\r\n      }),\r\n    );\r\n  }\r\n  onSelect = (items: Item[]) => this.selectedItems = items;\r\n  displayWith = (item: Item) => `${item.bmoNameArea} > ${item.dmogNameArea} > ${item.dmoNameArea}`;\r\n  uniqueWith = (item: Item) => item.dmoid;\r\n  \r\n  onSubmit() {\r\n    const ids = this.selectedItems.map(item => item.dmoid).toString();\r\n    this.formViewApi.saveBulkTriggerDmos(this.bmId, this.processId, ids).subscribe(res => this.ref.close(res));\r\n  }\r\n}\r\n", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2>Bulk Trigger</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  \r\n  <div class=\"double-column\">\r\n    <app-association\r\n      class=\"span-12\"\r\n      *ngIf=\"associations$ | async as items\" \r\n      [displayWith]=\"displayWith\" \r\n      [uniqueWith]=\"uniqueWith\"\r\n      [items]=\"items[0]\"\r\n      [associatedItems]=\"items[1]\"\r\n      checkBy=\"selected\"\r\n      (select)=\"onSelect($event)\">\r\n    </app-association>\r\n  </div>\r\n  \r\n  <div class=\"popup__actions\">\r\n    <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"ref.close()\">Cancel</button>\r\n    <button [disabled]=\"!selectedItems\" class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\">Save</button>\r\n  </div>\r\n</div>\r\n", "import { Injectable } from '@angular/core';\r\nimport { UniqueConstraintResponse } from '@app/admin/models';\r\nimport { BaseHttpService } from '@app/core/services/base-http.service';\r\nimport { environment } from '@env/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BmApiService extends BaseHttpService {\r\n  private readonly baseUrl = `${environment.Setting.BaseAPIUrl}/bm`;\r\n   private GatewayAPIUrl = `${environment.Setting.GatewayAPIUrl}/wfapibm/DataModel`;\r\n\r\n  getUniqueDmos(bmId: string) {\r\n    const url = `${this.GatewayAPIUrl}/getBmUniqueDmo`;\r\n    return this.get<UniqueConstraintResponse>(url, {bmId});\r\n  }\r\n\r\n  saveUniqueDmos(bmId: string, dmoGuids: string) {\r\n    const url = `${this.GatewayAPIUrl}/saveUniqueDmo`;\r\n    return this.post<string>(url ,{bmId, dmoGuids});\r\n  }\r\n}\r\n", "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { BmApiService } from '@app/admin/core/services/bm-api.service';\r\nimport { UniqueConstraintDMO } from '@app/admin/models';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgIf, AsyncPipe } from '@angular/common';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\n\r\ntype Item = UniqueConstraintDMO & { selected?: boolean };\r\n@Component({\r\n    selector: 'app-unique-constraint',\r\n    templateUrl: './unique-constraint.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class UniqueConstraintComponent implements OnInit {\r\n  bmId: string;\r\n  selectedItems: Item[];\r\n  associations$: Observable<Item[][]>;\r\n\r\n  constructor(private readonly bmApi: BmApiService, public readonly ref: NgbActiveModal) {}\r\n\r\n  ngOnInit() {\r\n    this.associations$ = this.getUniqueDmos();\r\n  }\r\n\r\n  private getUniqueDmos = () => {\r\n    return this.bmApi.getUniqueDmos(this.bmId).pipe(\r\n      map(({ AvaialableDmo, SelectedDmo }) => {\r\n        const updatedSelected = [];\r\n        SelectedDmo.forEach((dmo) => {\r\n          const found = AvaialableDmo.find((item) => item.DmoId === dmo.DmoId);\r\n          found['selected'] = true;\r\n          updatedSelected.push(found);\r\n        });\r\n        return [AvaialableDmo, updatedSelected];\r\n      })\r\n    );\r\n  }\r\n\r\n  onSelect = (items: Item[]) => (this.selectedItems = items);\r\n  displayWith = (item: Item) => `${item.DisplayName}`;\r\n  uniqueWith = (item: Item) => `${item.DmoId}`;\r\n  onSubmit() {\r\n    const ids = this.selectedItems.map((item) => item.DmoGuid).toString();\r\n    this.bmApi.saveUniqueDmos(this.bmId, ids).subscribe((res) => this.ref.close(res));\r\n  }\r\n}\r\n", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2>Unique Constraint</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  \r\n  <div class=\"double-column\">\r\n    <app-association\r\n      class=\"span-12\"\r\n      *ngIf=\"associations$ | async as items\" \r\n      [displayWith]=\"displayWith\"\r\n      [uniqueWith]=\"uniqueWith\"\r\n      [items]=\"items[0]\"\r\n      [associatedItems]=\"items[1]\"\r\n      checkBy=\"selected\"\r\n      (select)=\"onSelect($event)\">\r\n    </app-association>\r\n  </div>\r\n  \r\n  <div class=\"popup__actions\">\r\n    <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"ref.close()\">Cancel</button>\r\n    <button [disabled]=\"!selectedItems\" class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\">Save</button>\r\n  </div>\r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem, CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\r\nimport { result } from 'lodash';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BmService } from '@app/admin/core/services/bm.service';\r\nimport { NgFor, NgIf } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-bm-wf-association',\r\n    templateUrl: './bm-wf-association.component.html',\r\n    styleUrls: ['./bm-wf-association.component.scss'],\r\n    standalone: true,\r\n    imports: [ReactiveFormsModule, FormsModule, NgFor, NgIf, CdkDropList, CdkDrag]\r\n})\r\nexport class BmWfAssociationComponent implements OnInit {\r\n  BMID:any;\r\n  BMName:any;\r\n  Version:any;\r\n  AvailableBMList = [];\r\n  AssociatedBMList = [];\r\n  GridBMFilter: any = {};\r\n  GridColumnList: any = [];\r\n  errorMsg:any='';\r\n  constructor(private formBuilder: UntypedFormBuilder,\r\n    public activeModal: NgbActiveModal, private bmsrvc: BmService,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.GetBmAssociatedWf();\r\n  }\r\n\r\n\r\n  GetBmAssociatedWf() {        \r\n    this.bmsrvc.GetBmAssociatedWf(this.BMID).subscribe({\r\n      next: (data) => {\r\n        if (!!data) {         \r\n          this.AvailableBMList = data.AvailableWF;\r\n          this.AssociatedBMList = data.AssociatedWF;\r\n          \r\n          if (!!this.AssociatedBMList && this.AssociatedBMList.length > 0) {\r\n            for (let i = 0; i < this.AssociatedBMList.length; i++) {\r\n              this.AvailableBMList.push(this.AssociatedBMList[i]);\r\n              this.GridBMFilter[this.AssociatedBMList[i].WorkFlowId] = '1';\r\n            } \r\n          }\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  AddBMFilter(bm: any) {    \r\n    if (this.GridBMFilter[bm.WorkFlowId] === undefined) {\r\n      this.GridBMFilter[bm.WorkFlowId] = '1';\r\n      this.AssociatedBMList.push(bm);\r\n    }\r\n  }\r\n  DeleteBmFilter(bm) {    \r\n    const txt = this.AssociatedBMList.indexOf(bm);\r\n    if (txt > -1) {\r\n      this.AssociatedBMList.splice(txt, 1);\r\n    }\r\n    delete this.GridBMFilter[bm.WorkFlowId];\r\n  }\r\n\r\n  dropColumn(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.GridColumnList, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  SaveWorkflowBMAssociation(){        \r\n    if(this.AssociatedBMList.length>0){      \r\n      let wfIds = '';\r\n      this.AssociatedBMList.forEach(el => {\r\n        wfIds = wfIds + el.WorkFlowId + ',';\r\n      });\r\n      wfIds = wfIds.substring(0, wfIds.length - 1);\r\n     this.bmsrvc.SaveBMAssociatedWF(wfIds, this.BMID).subscribe({\r\n        next: (result) => {\r\n          if (!!result && result === 'Data saved successfully.') {\r\n            this.activeModal.close(true);\r\n            return true;\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        }\r\n      });\r\n    }else{\r\n      this.toastr.warning('Add at least one Business Model to associate.');\r\n    }  \r\n  }\r\n\r\n}", "<form>\r\n    <div>\r\n        <div class=\"modal-header\">\r\n            <h4 class=\"modal-titlewf\">Business Model & Workflow association ({{BMName}} {{Version}})</h4>\r\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.close(false)\">\r\n                <span aria-hidden=\"true\" class=\"fas fa-times-circle fa-fw\"></span>\r\n            </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <div class=\"contents\">\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <section aria-label=\"Modal heading text content\" class=\"modal-body\" role=\"document\">\r\n                            <div class=\"fWrap sections\">\r\n                              <div class=\"form-row nomar\">\r\n                                <div class=\"drag_grid state-filter-wrap col-sm-12\">\r\n                                  <div class=\"row\">\r\n                                    <div class=\"left_cell\">\r\n                                      <div class=\"scroll_wrap\">\r\n                                        <ul>\r\n                                          <li *ngFor=\"let bm of AvailableBMList\">\r\n                                            <span>{{bm.WorkFlowName}}</span>\r\n                                            <span>\r\n                                              <a *ngIf=\"GridBMFilter[bm.WorkFlowId]==undefined ? 'Add' : 'Added'  as btnbmFilterText\"\r\n                                                (click)=\"AddBMFilter(bm)\" href=\"javascript:void(0)\">\r\n                                                {{btnbmFilterText}}</a></span>\r\n                                          </li>\r\n                                        </ul>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div class=\"right_cell\">\r\n                                      <div class=\"scroll_wrap\">\r\n                                        <ul cdkDropList (cdkDropListDropped)=\"dropColumn($event)\">\r\n                                          <li class=\"pop\" cdkDrag *ngFor=\"let bm of AssociatedBMList; let i = index\">\r\n                                            <span>{{bm.WorkFlowName}}</span>\r\n                                            <span><a (click)=\"DeleteBmFilter(bm)\" href=\"javascript:void(0)\">Remove</a></span>\r\n                                          </li>\r\n                                        </ul>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"activeModal.close(false)\">Cancel</button>\r\n            <button type=\"submit\" class=\"btn btn-primary btn-sm\" (click)=\"SaveWorkflowBMAssociation()\">Submit</button>\r\n        </div>\r\n    </div>\r\n</form>", "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { WorkflowApiService } from '@app/admin/wf/wfd/services/workflow-api.service';\r\nimport { FormViewApiService } from '@app/core/services/form-view-api.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { left } from '@popperjs/core';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ITopCornerDmo } from '../../models';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgFor, NgIf, AsyncPipe } from '@angular/common';\r\nimport { AssociationComponent } from '../../../lib/association/association.component';\r\n\r\ntype Item = ITopCornerDmo & {selected?: boolean}\r\n\r\n@Component({\r\n    selector: 'app-top-corner-detail',\r\n    templateUrl: './top-corner-detail.component.html',\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    standalone: true,\r\n    imports: [\r\n        ReactiveFormsModule,\r\n        NgFor,\r\n        NgIf,\r\n        AssociationComponent,\r\n        AsyncPipe,\r\n    ],\r\n})\r\nexport class TopCornerDetailComponent implements OnInit {\r\n  bmId: string;\r\n  bmogId: string = \"-1\";\r\n  associations$: Observable<any[]>;\r\n  selectedItems: Item[];\r\n  public allBMOGs = [];\r\n  public BMOGInfo = [];\r\n\r\n\r\n  constructor(\r\n    private formViewApi: FormViewApiService,\r\n    public ref: NgbActiveModal,\r\n  ) {}\r\n\r\n  ngOnInit(): void {    \r\n   this.formViewApi.getBMOGS(this.bmId).subscribe(x=>{      \r\n      this.bmogId = x.Data?.[0].BMOGID; \r\n      this.BMOGInfo = x.Data;      \r\n      this.associations$ = this.getBatchUpdateDmos(this.bmId,this.bmogId);\r\n    });\r\n\r\n  }\r\n\r\n  getBatchUpdateDmos(bmId: string, bmogId: string) {\r\n    return forkJoin([\r\n      this.formViewApi.getTopCornerDmos(bmId, bmogId, 'all').pipe(map(res => res.Table)),\r\n      this.formViewApi.getTopCornerDmos(bmId, bmogId, 'selected').pipe(map(res => res.Table)),\r\n    ])\r\n    .pipe(\r\n      map(([all, selected]) => {\r\n        const updatedSelected = [];\r\n        selected.forEach(item => {\r\n          const found = all.find(rec => rec.dmoid === item.dmoid);\r\n          if (found) {\r\n            found['selected'] = true;\r\n            updatedSelected.push(found);\r\n          }\r\n        });\r\n        return [all, updatedSelected];\r\n      }),\r\n    );\r\n  }\r\n\r\n  onSelect = (items: Item[]) => this.selectedItems = items;\r\n  displayWith = (item: Item) => `${item.BMONAME} > ${item.DMOGNAME} > ${item.DMONAME}`;\r\n  uniqueWith = (item: Item) => `${item.bmoid}${item.dmogid}${item.dmoid}`;\r\n  onSubmit() {\r\n    const ids = this.selectedItems.map(item => item.dmoid);\r\n    this.formViewApi.saveTopCornerDmos(this.bmId,this.bmogId, ids).subscribe(res => this.ref.close(res));\r\n  }\r\n\r\n  ReloadDMOS(valBMOGID)\r\n  {\r\n    this.bmogId=valBMOGID;\r\n    this.associations$ = this.getBatchUpdateDmos(this.bmId,this.bmogId);\r\n  }\r\n\r\n}\r\nexport interface BMOGInfo {\r\n  BMOGID:   string;\r\n  BMOGNAME: string;\r\n  NameVer:  string;\r\n}", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2>Top Corner Detail</h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i></span>\r\n  </div>\r\n  <hr>\r\n  <div style=\"position: relative; display: inline-block; width: 200px;\">\r\n    <select class=\"form-control\" (change)=\"ReloadDMOS($event.target.value)\" style=\"width: 100%;\" name=\"ddlBMOG\" #ddlBMOG>\r\n      <option *ngFor=\"let objBmog of BMOGInfo\"\r\n        [value]=\"objBmog.BMOGID\">{{objBmog.BMOGNAME}}</option>\r\n    </select>\r\n    <span style=\"\r\n      position: absolute;\r\n      right: 10px;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      pointer-events: none;\r\n      color: #888;\r\n    \">\r\n      <i class=\"fas fa-chevron-down\"></i>\r\n    </span>\r\n  </div>\r\n  <div class=\"double-column\">\r\n    <app-association\r\n      class=\"span-12\"\r\n      *ngIf=\"associations$ | async as items\" \r\n      [displayWith]=\"displayWith\"\r\n      [uniqueWith]=\"uniqueWith\"\r\n      [items]=\"items[0]\"\r\n      [associatedItems]=\"items[1]\"\r\n      checkBy=\"selected\"\r\n      (select)=\"onSelect($event)\">\r\n    </app-association>\r\n  </div>\r\n  \r\n  <div class=\"popup__actions\">\r\n    <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"ref.close()\">Cancel</button>\r\n    <button [disabled]=\"!selectedItems || this.bmogId=='-1'\" class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\">Save</button>\r\n  </div>\r\n</div>\r\n", "import { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { BaseHttpService } from './base-http.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n  })\r\n  export class CardWallViewConfigurationServices extends BaseHttpService {\r\n    //private readonly baseurl = `${environment.Setting.BaseAPIUrl}/BM`;\r\n    baseurl = environment.Setting.GatewayAPIUrl;\r\n    getCvCard(cardId: number) {\r\n        const url = `${this.baseurl}/wfapibm/compare/GetWfCvCards?ID=${cardId}`;\r\n        return this.get<any>(url); \r\n    }\r\n\r\n    getWfCvCardDmoMapByCardID(cardId: number,processName) {\r\n      const url = `${this.baseurl}/wfapibm/compare/GetWfCvCardsDmoMapByCardId?cardId=${cardId} &processName=${processName}`;\r\n      return this.get<any>(url); \r\n  }\r\n\r\n  getWfCvPrcessCarByProcessName(processName) {\r\n    const url = `${this.baseurl}/wfapibm/compare/GetWfCvProcessCardsByProcessName?processName=${processName}`;\r\n    return this.get<any>(url); \r\n}\r\n\r\n\r\n    AddWfCvCard(CvCard: any) {\r\n      const url = `${this.baseurl}/wfapibm/compare/BulkSaveWfCvCardDmoMap`;\r\n      return this.post<any>(url, CvCard); \r\n  }\r\n\r\n  ActivatetWfCvCardByCardIDAndProcessName(cardId: number,processName) {\r\n    const url = `${this.baseurl}/wfapibm/compare/WfCvActivateProcessCards?cardId=${cardId} &processName=${processName}`;\r\n    return this.get<any>(url); \r\n  }\r\n\r\n  }", "import { Component, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { CardWallViewConfigurationServices } from '@app/core/services/card-wall-view-configuration.service';\r\nimport { forEach } from 'lodash';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { forEachChild } from 'typescript';\r\nimport { Router } from '@angular/router';\r\nimport { CardWallConfigurationAssociatedCompanies } from '@app/core/models/form-view/bm-associated-companies.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-card-placeholder-dmo-mapping',\r\n  templateUrl: './card-placeholder-dmo-mapping.component.html',\r\n  styleUrls: ['./card-placeholder-dmo-mapping.component.scss']\r\n})\r\nexport class CardPlaceholderDmoMappingComponent implements OnInit {\r\n\r\n\r\n\r\n  Toggle = {};\r\n  cardId:number;\r\n  @Input()CardWallConfigurArray?: CardWallConfigurationAssociatedCompanies[];\r\n  @Input() dmoList?: [];\r\n  constructor(\r\n    private  CardWallViewService: CardWallViewConfigurationServices,\r\n    private elRef:ElementRef,\r\n    public activeModal: NgbActiveModal,\r\n    private sanitizer: DomSanitizer,\r\n    private router: Router,\r\n    private toster: ToastrService,\r\n    private route: ActivatedRoute\r\n  ) { \r\n\r\n    // this.route.params.subscribe(params => {\r\n    //   this.cardId = +params['cardId'];\r\n    //   console.log(\"card Id \" + this.cardId)\r\n    // });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  loadData(cardId:number, CardWallConfigurArray:any, dmoList?:[])\r\n  {\r\n    this.cardId = cardId;\r\n    this.CardWallConfigurArray= CardWallConfigurArray;\r\n    this.dmoList = dmoList;\r\n  }\r\n\r\n  DefaultSelected(item,dmog){\r\n    console.log(item,dmog);\r\n    if(item.DmoGuid==dmog){\r\n      return dmog;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n\r\n\r\n   // Toggle Grid & Filters\r\n  clickEvent(SectionKey) {\r\n    if (this.Toggle[SectionKey] === undefined) {\r\n      this.Toggle[SectionKey] = false;\r\n    } else {\r\n\r\n      this.Toggle[SectionKey] = !this.Toggle[SectionKey];\r\n    }\r\n  }\r\n\r\n\r\n  getToggle(SectionKey) {\r\n    if (this.Toggle[SectionKey] === undefined) {\r\n      this.Toggle[SectionKey] = false;\r\n\r\n    }\r\n    return this.Toggle[SectionKey];\r\n  }\r\n\r\n  updadatedmouid(item:CardWallConfigurationAssociatedCompanies,event: Event){\r\n    const value = (event.target as HTMLSelectElement).value;\r\n    if(value){\r\n    for (let index = 0; index < this.CardWallConfigurArray.length; index++) {\r\n      let element = this.CardWallConfigurArray[index];\r\n      if(item){\r\n       if(element.PlaceholderId==item.PlaceholderId){\r\n        element.DmoGuid=value;\r\n      \r\n       }\r\n      \r\n      }\r\n      \r\n    }\r\n  }\r\n  }\r\n\r\n  \r\n\r\nSave()\r\n{\r\n    \r\n    this.CardWallViewService.AddWfCvCard(this.CardWallConfigurArray).subscribe(data => {\r\n      \r\n     \r\n        this.activeModal.close();\r\n        this.toster.success('Configurations added successfully','');\r\n       \r\n        \r\n\r\n  });\r\n     \r\n  }\r\n\r\n\r\n}\r\n", "\r\n\r\n\r\n \r\n        <!---------------------Customize Grid columns Section--------------------->\r\n        <div class=\"fWrap sections\">\r\n          <div class=\"heading FR22\" [ngClass]=\"getToggle('SectionGridColumn') ? 'Hide' : ''\">Add Configurations\r\n            <a href=\"JavaScript:void(0);\" (click)=\"clickEvent('SectionGridColumn')\" title=\"Show Hide\">\r\n              <!-- <i aria-label=\"close/open\" class=\"fa fa-chevron-up\" role=\"img\"></i> -->\r\n            </a>\r\n          </div>\r\n          <div class=\"showHide\">\r\n            <div class=\"custom_wrap\">\r\n              <div class=\"drag_grid\" *ngFor=\"let item of CardWallConfigurArray\">\r\n                <div class=\"row\" >\r\n                 \r\n                  <div class=\"left_cell\">\r\n                    <span>{{item.PlaceholderId}}</span>\r\n\r\n                    <div class=\"text-right paddingTop-xs\">\r\n                      <!-- <a id=\"aAddAllColumns\" href=\"javascript:void(0)\">Add all columns</a> -->\r\n                    </div>\r\n                  </div>\r\n                    <div _ngcontent-ygv-c469=\"\" class=\"right_cell\">\r\n                     <div class=\"\">\r\n\r\n                      <select  class=\"Dropdwon-cstm\" (change)=\"updadatedmouid(item, $event)\">\r\n                        <option  >Select...</option>\r\n                        <option *ngFor=\"let dmo of dmoList\" [value]=\"dmo.GUID\"   >\r\n                          {{dmo?.DataModelObjectGroup?.Name}} >\r\n\r\n                          {{dmo.DisplayName}}\r\n                        </option>\r\n                       \r\n                    </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              \r\n              \r\n            \r\n            </div>\r\n          </div>\r\n  \r\n        </div>\r\n      </div>   \r\n  \r\n      <div class=\"cta-button-group\">\r\n        <button class=\"btn btn-warning btn-sm text-white\" data-dismiss=\"modal\" type=\"button\" (click)=\" Save()\">Save</button>\r\n        <!-- <button class=\"btn btn-clear btn-small\" (click)=\"ResetConfig()\" data-dismiss=\"modal\" type=\"button\">Reset Grid</button> -->\r\n        <button class=\"btn btn-clear btn-small\" (click)=\"activeModal.close(false)\" data-dismiss=\"modal\" type=\"button\">Cancel</button>\r\n      </div>\r\n\r\n\r\n", "import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { CardWallViewConfigurationServices } from '@app/core/services/card-wall-view-configuration.service';\r\nimport { forEach } from 'lodash';\r\nimport { forEachChild } from 'typescript';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CardPlaceholderDmoMappingComponent } from '../card-placeholder-dmo-mapping/card-placeholder-dmo-mapping.component';\r\nimport { CardWallConfigurationAssociatedCompanies } from '@app/core/models/form-view/bm-associated-companies.model';\r\nimport { ListviewService } from '@app/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { Console } from 'console';\r\nimport { UtilService } from '@app/shared/services/util.service';\r\n\r\n@Component({\r\n  selector: 'app-card-wall-view-configuration',\r\n  templateUrl: './card-wall-view-configuration.component.html',\r\n  styleUrls: ['./card-wall-view-configuration.component.scss'],\r\n})\r\nexport class CardWallViewConfigurationComponent\r\n  implements OnInit\r\n{\r\n  selectedCard:any;\r\n  CardName: string;\r\n  CardHtml;\r\n  cardId: number;\r\n  html;\r\n  processName: string; //'WorkOrders';\r\n  cardDmoMapByCard: any = [];\r\n  dmoList: any = [];\r\n  Toggle: {};\r\n  IsCardClicked = false;\r\n  placeHolderForm:FormArray\r\n  placeHolderFormGroup!:FormGroup\r\n  cardWallConfigurationsArray: CardWallConfigurationAssociatedCompanies[] = [];\r\n\r\n  @Output() backToPrevious = new EventEmitter<void>();\r\n\r\n  constructor(\r\n    private CardWallViewService: CardWallViewConfigurationServices,\r\n    private listviewService: ListviewService,\r\n    private elRef: ElementRef,\r\n    private sanitizer: DomSanitizer,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private modalService: NgbModal,\r\n    public activeModal: NgbActiveModal,\r\n    private toster: ToastrService,\r\n    private formBuilder:FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  loadData(ProcessName,selectedCard) {\r\n    this.cardId = selectedCard.cardId;\r\n    this.processName = ProcessName;\r\n    this.selectedCard=selectedCard;\r\n    this.getCardsView(selectedCard);\r\n    this.getWFCardDmoMapByCardId(this.cardId);\r\n    this.getDmoList();\r\n  }\r\n\r\n \r\n  clickEvent(SectionKey) {\r\n    if (this.Toggle[SectionKey] === undefined) {\r\n      this.Toggle[SectionKey] = false;\r\n    } else {\r\n      this.Toggle[SectionKey] = !this.Toggle[SectionKey];\r\n    }\r\n  }\r\n\r\n  getToggle(SectionKey) {\r\n    if (this.Toggle[SectionKey] === undefined) {\r\n      this.Toggle[SectionKey] = false;\r\n    }\r\n    return this.Toggle[SectionKey];\r\n  }\r\n\r\n  getCardsView(data) {\r\n      let processedHtml = UtilService.processImageUrlsForDynamicHtmls(data.cardhtml);\r\n      this.CardHtml = this.sanitizer.bypassSecurityTrustHtml(processedHtml);\r\n      setTimeout(() => {\r\n        this.getWFCardDmoMapByCardId(data.cardId);\r\n        this.nevigateToCardWallDmoMapping();\r\n      }, 100);\r\n    \r\n  }\r\nshowSearch(dmo){\r\n  if(dmo&& dmo!='')\r\n  return ''\r\nelse\r\nreturn 'Select...'\r\n}\r\n  getDmoList() {\r\n    this.listviewService.dmoList(this.processName).subscribe((res) => {\r\n     this.dmoList = res;\r\n    });\r\n  }\r\n   //CreateForm\r\n   SetInitValue(){\r\n    this.placeHolderFormGroup=this.formBuilder.group({\r\n      parentGroup:this.formBuilder.group({\r\n        PlaceholderId:[''],\r\n        DmoGuid:['']\r\n      })\r\n\r\n    })\r\n  }\r\n  BindForm(){\r\n   // this.SetInitValue();\r\n    this.placeHolderForm=this.formBuilder.array([])\r\n    if(this.placeHolderForm){\r\n     //this.placeHolderFormGroup.get('parentGroup') as FormGroup\r\n      this.placeHolderForm.clear();\r\n    }\r\n    \r\n  for (let index = 0; index < this.cardWallConfigurationsArray.length; index++) {\r\n    const element = this.cardWallConfigurationsArray[index];\r\n    let row=this.formBuilder.group({\r\n      PlaceholderId:new FormControl(),//,element.PlaceholderId,\r\n      DmoGuid:new FormControl(),//element.DmoGuid\r\n    })\r\n    this.placeHolderForm.push(row);\r\n  }\r\n  }\r\n  \r\n  loadMappedDmog(){\r\n    this.CardWallViewService.getWfCvCardDmoMapByCardID(this.cardId,this.processName).subscribe(\r\n      (res) => {\r\n        if (res != null) {\r\n          this.cardDmoMapByCard = res;\r\n        }}\r\n      )\r\n  }\r\n  getWFCardDmoMapByCardId(cardId: number) {//update card html if already mapped \r\n    setTimeout(() => {\r\n      this.CardWallViewService.getWfCvCardDmoMapByCardID(this.cardId,this.processName).subscribe(\r\n        (res) => {\r\n          if (res != null) {\r\n            this.cardDmoMapByCard = res;\r\n            this.cardWallConfigurationsArray=[];\r\n            this.nevigateToCardWallDmoMapping();\r\n            //let Placeholders= document.getElementsByClassName('Placeholder');\r\n\r\n            // for (let index = 0; index < res.length; index++) {\r\n            //   let item = res[index];\r\n            //   if (item) {\r\n            //     let placeholderViaId = document.getElementById(\r\n            //       item.PlaceholderId\r\n            //     );\r\n            //     if (placeholderViaId) {\r\n            //       placeholderViaId.innerText = this.DisplayName(item.DmoGuid);\r\n            //     }\r\n            //   }\r\n            // }\r\n          }\r\n        }\r\n      );\r\n    }, 150);\r\n  }\r\n\r\n  getGuidByPlaceholder(PlaceholderId) {\r\n    if (this.cardDmoMapByCard && this.cardDmoMapByCard.length > 0) {\r\n      let guid = this.cardDmoMapByCard.filter(\r\n        (a) => a.PlaceholderId == PlaceholderId\r\n      );\r\n      if (guid.length > 0) {\r\n        return guid[0].DmoGuid;\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  DisplayName(GUID) {\r\n    if (this.dmoList && this.dmoList.length > 0) {\r\n      let exist = this.dmoList.filter((a) => a.GUID == GUID);\r\n      if (exist.length > 0) {\r\n        return exist[0].DisplayName;\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  AddPlaceholder() {\r\n    //let currentPlaceHolder=Placeholder1.target as HTMLElement;\r\n\r\n    let placeholdersArray = [];\r\n    let Placeholders = document.getElementsByClassName('Placeholder');\r\n    if (Placeholders) {\r\n      for (let index = 0; index < Placeholders.length; index++) {\r\n        const doc = Placeholders[index] as HTMLElement;\r\n        this.cardWallConfigurationsArray.push({\r\n          PlaceholderId: doc.id,\r\n          DmoGuid: this.getGuidByPlaceholder(doc.id),\r\n          cardId: this.cardId,\r\n          ProcessName: this.processName\r\n        });\r\n      }\r\n    }\r\n    this. BindForm();\r\n    // this.CardWallplaceholderDmoMapping(cardWallConfigurationsArray);\r\n  }\r\n\r\n  CardWallplaceholderDmoMapping(placeholdersArrays) {\r\n    const modalRef = this.modalService.open(\r\n      CardPlaceholderDmoMappingComponent,\r\n      {\r\n        windowClass: 'grid-config-view-modal',\r\n        backdrop: 'static',\r\n        keyboard: false,\r\n      }\r\n    );\r\n\r\n    const modalInstance: CardPlaceholderDmoMappingComponent =\r\n      modalRef.componentInstance;\r\n    modalInstance.CardWallConfigurArray = placeholdersArrays;\r\n    modalInstance.dmoList = this.dmoList;\r\n\r\n    modalRef.result.then(\r\n      (data) => {\r\n        this.getWFCardDmoMapByCardId(this.cardId);\r\n        this.getDmoList();\r\n      },\r\n      (error) => {\r\n        // on error/dismiss\r\n      }\r\n    );\r\n  }\r\n\r\n  EnableSelectedDmoCard() {\r\n    if (this.IsCardClicked) {\r\n      return {\r\n        display: 'block',\r\n      };\r\n    } else {\r\n      return {\r\n        display: 'none',\r\n      };\r\n    }\r\n  }\r\n\r\n  nevigateToCardWallDmoMapping() {\r\n\r\n    let Placeholders = document.getElementsByClassName('Placeholder');\r\n    if (Placeholders) {\r\n      for (let index = 0; index < Placeholders.length; index++) {\r\n        const doc = Placeholders[index] as HTMLElement;\r\n        this.cardWallConfigurationsArray.push({\r\n          PlaceholderId: doc.id,\r\n          DmoGuid: this.getGuidByPlaceholder(doc.id),\r\n          cardId: this.cardId,\r\n          ProcessName: this.processName\r\n          \r\n        });\r\n      }\r\n      this. BindForm()\r\n    }\r\n  }\r\n\r\n  updadatedmouid(item:CardWallConfigurationAssociatedCompanies,event: Event){\r\n    const value =event// (event.target as HTMLSelectElement).value;\r\n    if(value){\r\n    for (let index = 0; index < this.cardWallConfigurationsArray.length; index++) {\r\n      let element = this.cardWallConfigurationsArray[index];\r\n      if(item){\r\n       if(element.PlaceholderId==item.PlaceholderId){\r\n        element.DmoGuid=value;\r\n      \r\n       }\r\n      \r\n      }\r\n      \r\n    }\r\n  }\r\n  }\r\n  Save() {\r\n    this.CardWallViewService.AddWfCvCard(this.cardWallConfigurationsArray).subscribe(\r\n      (data) => {\r\n        //this.activeModal.close();\r\n        this.getWFCardDmoMapByCardId(this.cardId);\r\n        this.toster.success('Configurations added successfully', '');\r\n        this.activeModal.close();\r\n      }\r\n    );\r\n  }\r\n  loadforUser(PlaceholderId){\r\n    let Placeholder = document.getElementById(PlaceholderId)\r\n    if (Placeholder) {\r\n        if(Placeholder.classList.contains('cardUserImage')){\r\n          return this.dmoList.filter(a=>a.GUID==\"MODFBY\" ||a.GUID==\"CRTDBY\");\r\n\r\n        }\r\n      }\r\n\r\n\r\n    //\r\n   return this.dmoList;\r\n\r\n  }\r\n\r\n  onBack(){\r\n    this.backToPrevious.emit();\r\n  }\r\n}\r\n", "\r\n<div class=\"row card-body\">\r\n  \r\n  <div class=\"col-md-6 card-preview\">\r\n    <div class=\"dmo-val-div\">Card Preview</div>\r\n      <div class=\"card-box card-container\">\r\n          <div  [innerHTML]=\"CardHtml\"></div>\r\n\r\n        \r\n      </div>\r\n    \r\n  </div>\r\n  <div class=\"col-md-6 card-dropdwons\">\r\n    <div class=\"dmo-val-div\">Dmo Mapping</div>\r\n    <div class=\"card-dmos\">\r\n      <div class=\"drag_grid\" *ngFor=\"let item of cardWallConfigurationsArray\">\r\n        <div class=\"\" >\r\n         \r\n          <div class=\"left_cell\">\r\n            <span>{{item.PlaceholderId}}</span>\r\n  \r\n            <div class=\"text-right paddingTop-xs\">\r\n     \r\n            </div>\r\n          </div>\r\n            <div _ngcontent-ygv-c469=\"\" class=\"right_cell\">\r\n             <div class=\"\">\r\n              <!-- <select  class=\"card-dmo-dropdwon\" (change)=\"updadatedmouid(item, $event)\">\r\n                <option  >Select...</option>\r\n                <option *ngFor=\"let dmo of dmoList\" [value]=\"dmo.GUID\" [selected]=\"dmo.GUID==item.DmoGuid==true\">\r\n                \r\n                  {{dmo?.DataModelObjectGroup?.Name}} >\r\n  \r\n                  {{dmo.DisplayName}}\r\n                </option>\r\n            </select> -->\r\n\r\n            <ng-select class=\"card-dmo-dropdwon\"\r\n                [clearable]=\"false\"\r\n                placeholder=\"{{showSearch(item.DmoGuid)}}\"\r\n                [(ngModel)]=\"item.DmoGuid\"\r\n                (change)=\"updadatedmouid(item, $event)\">\r\n              <!-- <ng-option value=\"-1\">Select...</ng-option> -->\r\n              <ng-option *ngFor=\"let dmo of loadforUser(item.PlaceholderId)\" [value]=\"dmo.GUID\">\r\n                {{ dmo?.DataModelObjectGroup?.Name }} > {{ dmo.DisplayName }}\r\n              </ng-option>\r\n            </ng-select>\r\n\r\n\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n      \r\n    \r\n    </div>\r\n    </div>\r\n  \r\n  </div>\r\n \r\n</div>\r\n<div class=\"cta-button-group cstm-btn\">\r\n  <button class=\"btn-sm text-white cstm-btn-save\" data-dismiss=\"modal\" type=\"button\" (click)=\" Save()\">Save</button>\r\n  <button class=\"btn btn-clear btn-small cstm-btn\" (click)=\"activeModal.close(false)\" data-dismiss=\"modal\" type=\"button\">Cancel</button>\r\n  <button class=\"btn btn-clear btn-small cstm-btn\" data-dismiss=\"modal\" type=\"button\" (click)=\" onBack()\">Back</button>\r\n   \r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n", "import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { CardWallViewConfigurationServices } from '@app/core/services/card-wall-view-configuration.service';\r\nimport { forEach } from 'lodash';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { forEachChild } from 'typescript';\r\nimport { Router } from '@angular/router';\r\nimport { CardWallViewConfigurationComponent } from '@app/admin/BM/components/Cardwalls/card-wall-view-configuration/card-wall-view-configuration.component';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CardPlaceholderDmoMappingComponent } from '../card-placeholder-dmo-mapping/card-placeholder-dmo-mapping.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilService } from '@app/shared/services/util.service';\r\nimport {  SafeUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-card-wall-configuration-selection',\r\n  templateUrl: './card-wall-configuration-selection.component.html',\r\n  styleUrls: ['./card-wall-configuration-selection.component.scss']\r\n})\r\nexport class CardWallConfigurationSelectionComponent implements OnInit  {\r\n\r\n  PopupTitle:string= 'Configure Card Wall';\r\n  CardName: string;\r\n  CardHtml;\r\n  html;\r\n  Toggle = {};\r\n  data:any=[];\r\n  processCardid: any; \r\n  selectedCard: number;\r\n  isNextClicked=false;\r\n  IsCardClick=false;\r\n  enableActivate=false;\r\n  ProcessName:string;\r\n  \r\n  \r\n  @ViewChild(CardWallViewConfigurationComponent,{static:false}) cardWallViewConfiguration!:CardWallViewConfigurationComponent;\r\n\r\n  constructor(\r\n    private  CardWallViewService: CardWallViewConfigurationServices,\r\n    private elRef:ElementRef,\r\n    public activeModal: NgbActiveModal,\r\n    private sanitizer: DomSanitizer,\r\n    private router: Router,\r\n    private modalService: NgbModal,\r\n    private toster: ToastrService,\r\n  )\r\n  { \r\n     \r\n  }\r\n  ngOnInit(): void {\r\n    this.getProcessCardbyProcessName();\r\n  }\r\n\r\n\r\n\r\n  getProcessCardbyProcessName()\r\n   {\r\n    setTimeout(() => {\r\n    this.CardWallViewService.getWfCvPrcessCarByProcessName(this.ProcessName).subscribe(data => {\r\n      if(data && data.length>0){\r\n        this.data=data;\r\n      this.processCardid = data[0].processid ; \r\n      const activeCard=data.filter(a=>a.status==1);\r\n      if(activeCard.length>0){\r\n        this.selectedCard=activeCard[0].cardId;\r\n        this.cardWallSelected(activeCard[0]);\r\n      }\r\n    }\r\n    });\r\n  }, 150);\r\n  }\r\n\r\n    ActivateCard()\r\n    {\r\n      setTimeout(() => {\r\n        this.CardWallViewService.ActivatetWfCvCardByCardIDAndProcessName(this.selectedCard, this.ProcessName).subscribe(data => {\r\n          if(data)\r\n          {\r\n            this.getProcessCardbyProcessName();\r\n            this.toster.success('Card  Activated successfully', '');\r\n          }\r\n        });\r\n      }, 150);\r\n    }\r\n\r\n  \r\n\r\n   // Toggle Grid & Filters\r\n  clickEvent(SectionKey) {\r\n    if (this.Toggle[SectionKey] === undefined) {\r\n      this.Toggle[SectionKey] = false;\r\n    } else {\r\n\r\n      this.Toggle[SectionKey] = !this.Toggle[SectionKey];\r\n    }\r\n  }\r\n\r\nbindHtml(item){\r\n    let processedHtml = UtilService.processImageUrlsForDynamicHtmls(item.cardhtml);\r\n    return this.sanitizer.bypassSecurityTrustHtml(processedHtml);\r\n}\r\n\r\n\r\ngetToggle(SectionKey) {\r\n    if (this.Toggle[SectionKey] === undefined) {\r\n      this.Toggle[SectionKey] = false;\r\n\r\n    }\r\n    return this.Toggle[SectionKey];\r\n  }\r\n\r\nAddPlaceholder(data){\r\n\r\n}\r\n\r\nEnableSelect(){\r\n  if(this.isNextClicked){\r\n    return {\r\n      'display':'block'\r\n    }\r\n  }\r\n  else{\r\n    return {\r\n      'display':'none'\r\n    }\r\n  }\r\n}\r\n\r\n\r\n  cardWallSelected(item)\r\n  {\r\n    this.selectedCard = item.cardId;\r\n    const card = this.data.filter(a=>a.cardId ==  item.cardId);\r\n    if(card.length>0 && card[0].AlreadyMapped === \"1\" && card[0].status === \"0\"){\r\n    this.enableActivate = true;\r\n    }else{\r\n      this.enableActivate = false;\r\n    }\r\n\r\n  }\r\ngetSelectedCard(){\r\n let exists= this.data.filter(a=>a.cardId==this.selectedCard);\r\n if(exists){\r\n   return exists[0]\r\n }\r\n return null;\r\n}\r\n  nevigateToCardWall()\r\n  {\r\n    const selectedCardItem=this.getSelectedCard()\r\n    if(selectedCardItem){\r\n    this.isNextClicked=true;\r\n    if(this.cardWallViewConfiguration){\r\n      this.PopupTitle = 'Configure Card Wall';\r\n      this.cardWallViewConfiguration!.loadData( this.ProcessName,selectedCardItem);\r\n    }\r\n  }else{\r\n    this.toster.warning('Please select card first!', '');\r\n  }\r\n\r\n    // this.activeModal.close();\r\n    // this.router.navigate(['admin/bm/card-wall-view-configuration' ,this.selectedCard]);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  CardWallViewPopup() {\r\n    this.nevigateToCardWall();\r\n    return;\r\n    this.activeModal.close();\r\n    const modalRef = this.modalService.open(CardWallViewConfigurationComponent,\r\n      { windowClass: 'grid-config-view-modal', backdrop: 'static', keyboard: false }\r\n    );\r\n    const modalInstance: CardWallViewConfigurationComponent = modalRef.componentInstance;\r\n    modalInstance.cardId = this.selectedCard;\r\n  }\r\n\r\n  onBackFromChild() {\r\n    this.isNextClicked = false; // Switch back to the previous popup\r\n    this.PopupTitle = 'Configure Card Wall'; // Reset title when going back\r\n  }\r\n\r\n}\r\n", "<section class=\"configurePop\">\r\n  <div class=\"pop_box largePop\">\r\n    <section class=\"modal-header\">\r\n      <h3 class=\"FR22 padding-0\">{{ PopupTitle }}</h3>\r\n\r\n      <div class=\"corner-button\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          aria-label=\"Close\"\r\n          (click)=\"activeModal.close(false)\"\r\n        >\r\n          <!-- <span aria-hidden=\"true\" >&times;</span> -->\r\n          <span aria-hidden=\"true\" class=\"popup__close\">\r\n            <i class=\"fas fa-times-circle fa-fw\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </section>\r\n\r\n    <section\r\n      *ngIf=\"!isNextClicked\"\r\n      aria-label=\"Modal heading text content\"\r\n      class=\"modal-body\"\r\n      role=\"document\"\r\n    >\r\n      <!---------------------Customize Grid columns Section--------------------->\r\n      <div class=\"fWrap sections\">\r\n        <div\r\n          class=\"heading FR22\"\r\n          [ngClass]=\"getToggle('SectionGridColumn') ? 'Hide' : ''\"\r\n        >\r\n          Select Template\r\n          <a\r\n            href=\"JavaScript:void(0);\"\r\n            (click)=\"clickEvent('SectionGridColumn')\"\r\n            title=\"Show Hide\"\r\n          >\r\n            <!-- <i aria-label=\"close/open\" class=\"fa fa-chevron-up\" role=\"img\"></i> -->\r\n          </a>\r\n        </div>\r\n        <div class=\"showHide\">\r\n          <div class=\"custom_wrap\">\r\n            <div class=\"drag_grid trans-border\">\r\n              <div class=\"row trans-border d-flex\">\r\n                 <div\r\n                  class=\"col-md-6 pad-10\"\r\n                  *ngFor=\"let item of data\"\r\n                  (click)=\"cardWallSelected(item)\"\r\n                >\r\n                  <div \r\n                      [innerHTML]=\"bindHtml(item)\" \r\n                       \r\n                      [ngClass]=\"selectedCard == item.cardId ? 'selected' : 'card-container'\"\r\n                     \r\n                      >\r\n              \r\n                    </div>\r\n\r\n\r\n\r\n                </div> \r\n\r\n          \r\n               \r\n\r\n\r\n            \r\n\r\n\r\n                \r\n                \r\n                \r\n                \r\n\r\n                \r\n\r\n             \r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"cta-button-group d-flex d-flex-justify\">\r\n       \r\n        <div class=\"right-buttons\">\r\n          <button\r\n          class=\"btn btn-clear btn-small btn-cancel\"\r\n          (click)=\"activeModal.close(false)\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n        class=\"btn btn-warning btn-sm text-white\"\r\n        data-dismiss=\"modal\"\r\n        type=\"button\" \r\n        (click)=\"nevigateToCardWall()\"\r\n      >\r\n        Next\r\n      </button>\r\n      <!-- <button class=\"btn btn-clear btn-small\" (click)=\"ResetConfig()\" data-dismiss=\"modal\" type=\"button\">Reset Grid</button> -->\r\n     \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"left-buttons\">\r\n          <button \r\n          class=\"btn btn-warning btn-sm text-white\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\" \r\n         \r\n          [disabled]=\"!enableActivate\"\r\n          (click)=\"ActivateCard()\"\r\n        >\r\n         Change Template\r\n        </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <div [ngStyle]=\"EnableSelect()\">\r\n      <section\r\n        aria-label=\"Modal heading text content\"\r\n        class=\"modal-body modal-body-cardwall\"\r\n        role=\"document\"\r\n      >\r\n        <!-- <app-card-wall-view-configuration></app-card-wall-view-configuration> -->\r\n          <app-card-wall-view-configuration (backToPrevious)=\"onBackFromChild()\"></app-card-wall-view-configuration>\r\n      </section>\r\n    </div>\r\n  </div>\r\n</section>\r\n", "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\nimport { BmService } from '@app/admin/core/services/bm.service';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { BusinessModel } from '@app/admin/BM/models';\r\n\r\n@Injectable()\r\nexport class BMResolver implements Resolve<BusinessModel> {\r\n\r\n  constructor(private bpService: BmService, private router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<BusinessModel> {\r\n    const params = Object.entries(route.queryParams).reduce((acc, [k, v]) => {\r\n      acc[k.toLowerCase()] = v;\r\n      return acc;\r\n    }, {} as any);\r\n    const id = params.bmid;\r\n  \r\n    if (id) {\r\n      return this.bpService.GetBusinessModel(id).pipe(\r\n        retry(3),\r\n        catchError((e) => {\r\n          this.goBack();\r\n          return throwError(() => new Error(e));\r\n        })\r\n      );\r\n    }\r\n  \r\n    this.goBack();\r\n    return of(null);\r\n  }\r\n\r\n  private goBack() {\r\n    this.router.navigate(['..']);\r\n  }\r\n}\r\n", "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BmGridComponent } from './components/bm-grid/bm-grid.component';\r\nimport { BMResolver } from './resolvers/bm.resolver';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: BmGridComponent },\r\n  { \r\n    path: 'data-modeler', \r\n    // component: DataModelerComponent,\r\n    loadChildren: () => import('../data-modeler/data-modeler.module').then(m => m.DataModelerModule),\r\n    resolve: {bm: BMResolver},\r\n   },\r\n   { \r\n    path: 'data-modeler1', \r\n    loadChildren: () => import('../data-modeler1/data-modeler1.module').then(m => m.DataModeler1Module) ,\r\n    resolve: {bm: BMResolver},\r\n   },\r\n   \r\n\r\n  // {\r\n  //   path: 'bm',\r\n  //   loadChildren: () => import('./bm-routing.module').then((m) => m.BmRoutingModule),\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [BMResolver],\r\n})\r\nexport class BmRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BmRoutingModule } from './bm-routing.module';\r\nimport { BmGridComponent } from './components/bm-grid/bm-grid.component';\r\nimport { SharedModule } from '../Shared/shared.module';\r\nimport { BmEntryComponent } from './components/bm-entry/bm-entry.component';\r\nimport { BatchUpdateComponent } from './components/batch-update/batch-update.component';\r\nimport { BulkTriggerComponent } from './components/bulk-trigger/bulk-trigger.component';\r\nimport { UniqueConstraintComponent } from './components/unique-constraint/unique-constraint.component';\r\nimport { BmWfAssociationComponent } from './components/bm-wf-association/bm-wf-association.component';\r\n\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TopCornerDetailComponent } from './components/top-corner-detail/top-corner-detail.component';\r\nimport { CardWallConfigurationSelectionComponent } from './components/Cardwalls/card-wall-configuration-selection/card-wall-configuration-selection.component';\r\nimport { CardWallViewConfigurationComponent } from './components/Cardwalls/card-wall-view-configuration/card-wall-view-configuration.component';\r\nimport { CardPlaceholderDmoMappingComponent } from './components/Cardwalls/card-placeholder-dmo-mapping/card-placeholder-dmo-mapping.component';\r\n\r\n\r\n\r\n@NgModule({\r\n declarations: [\r\n    CardWallConfigurationSelectionComponent,\r\n    CardWallViewConfigurationComponent,\r\n    CardPlaceholderDmoMappingComponent\r\n  ],\r\n    imports: [\r\n    CommonModule,\r\n    BmRoutingModule,\r\n    SharedModule,\r\n    BmGridComponent,\r\n    BmEntryComponent,\r\n    BatchUpdateComponent,\r\n    BulkTriggerComponent,\r\n    UniqueConstraintComponent,\r\n    BmWfAssociationComponent,\r\n    TopCornerDetailComponent,\r\n]\r\n})\r\nexport class BmModule { }\r\n"],
  "mappings": "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",
  "names": []
}
