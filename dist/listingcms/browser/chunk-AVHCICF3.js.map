{"version":3,"sources":["src/app/core/models/log-header-mapping.ts","src/app/admin/data-modeler1/services1/service-provider.service.ts","src/app/admin/Shared/tab/tab.component.ts","src/app/admin/Shared/tab/tab.component.html","src/app/admin/Shared/tabs/tabs.component.ts","src/app/admin/Shared/tabs/tabs.component.html","src/app/admin/Shared/accordion-item/accordion-item.component.ts","src/app/admin/Shared/accordion-item/accordion-item.component.html","src/app/admin/Shared/accordion/accordion.component.ts","src/app/admin/Shared/accordion/accordion.component.html","node_modules/angular-resizable-element/fesm2020/angular-resizable-element.mjs","src/app/admin/Shared/shared.module.ts"],"sourcesContent":["import { IHeaderMap } from './plasmaGridInterface';\r\nimport { environment } from '@env/environment';\r\nimport { UserDetail } from './user-detail';\r\n\r\nexport class LogHeaderMapping {\r\n    activityHeaderMap: IHeaderMap = {\r\n        config: {\r\n            header: {\r\n                columns: [\r\n                    {\r\n                        objectKey: 'Date_Time',\r\n                        displayName: 'Date & Time',\r\n                        dataType: 'Date',\r\n                        format: environment.Setting.dateTimeFormatNoSeconds,\r\n                        timeZone: new Date().getTimezoneOffset().toString(),\r\n                        width: '15%'\r\n                    }, {\r\n                        objectKey: 'Modified_By',\r\n                        displayName: 'Modified By',\r\n                        width:'15%'\r\n                    }, {\r\n                        objectKey: 'Role',\r\n                        displayName: 'Role',\r\n                        width:'30%'\r\n                    }, {\r\n                        objectKey: 'Previous_Stage',\r\n                        displayName: 'Previous Stage',\r\n                        width:'15%'\r\n                    }, {\r\n                        objectKey: 'Current_Stage',\r\n                        displayName: 'Current Stage',\r\n                        width:'15%'\r\n                    },\r\n                    {\r\n                        objectKey: 'Previous_State',\r\n                        displayName: 'Previous State',\r\n                        width:'15%'\r\n                    }, {\r\n                        objectKey: 'Current_State',\r\n                        displayName: 'Current State',\r\n                        width:'15%'\r\n                    },\r\n                    {\r\n                        objectKey: 'Action',\r\n                        displayName: 'Action',\r\n                        width:'15%'\r\n                    }\r\n                ],\r\n                action: false\r\n            },\r\n            paging: true\r\n        }\r\n    };\r\n\r\n    historyHeaderMap: IHeaderMap = {\r\n        config: {\r\n            header: {\r\n                columns: [\r\n                    // {\r\n                    //     objectKey: 'Date_Time',\r\n                    //     displayName: 'Date & Time',\r\n                    //     dataType: 'Date',\r\n                    //     format: 'MM/dd/yyyy h:mm a',\r\n                    //     timeZone: localStorage.currentUser ? JSON.parse(localStorage.currentUser).TimeZone.toString() : ''\r\n                    // }, {\r\n                    //     objectKey: 'Modified_By',\r\n                    //     displayName: 'Modified By',\r\n                    // }, {\r\n                    //     objectKey: 'IP_Address',\r\n                    //     displayName: 'IP Address',\r\n                    // }, {\r\n                    //     objectKey: 'Field_Modified',\r\n                    //     displayName: 'Field Modified',\r\n                    // }, {\r\n                    //     objectKey: 'Previous_Value',\r\n                    //     displayName: 'Previous Value',\r\n                    // }, {\r\n                    //     objectKey: 'New_Value',\r\n                    //     displayName: 'New Value',\r\n                    // }\r\n                ],\r\n                action: false\r\n            },\r\n            paging: true\r\n        }\r\n    };\r\n\r\n    notificationHeaderMap: IHeaderMap = {\r\n        config: {\r\n            header: {\r\n                columns: [\r\n                    {\r\n                        objectKey: 'Date_Time',\r\n                        displayName: 'Date & Time',\r\n                        dataType: 'Date',\r\n                        format: environment.Setting.dateTimeFormatNoSeconds,\r\n                        timeZone: new Date().getTimezoneOffset().toString()\r\n                    }, {\r\n                        objectKey: 'Mail_To',\r\n                        displayName: 'Mail To',\r\n                    }, {\r\n                        objectKey: 'Mail_CC',\r\n                        displayName: 'Mail CC',\r\n                    }, {\r\n                        objectKey: 'Subject',\r\n                        displayName: 'Subject',\r\n                    }, {\r\n                        objectKey: 'Attachment',\r\n                        displayName: 'Attachment',\r\n                    }, {\r\n                        objectKey: 'Status',\r\n                        displayName: 'Status',\r\n                     }, \r\n                   // {\r\n                    //     objectKey: 'Mail_Body',\r\n                    //     displayName: 'Mail Body',\r\n                    // }, \r\n                    {\r\n                        objectKey: 'Mail_From',\r\n                        displayName: 'Mail From',\r\n                    }, {\r\n                        objectKey: 'Stage',\r\n                        displayName: 'Stage',\r\n                    }, {\r\n                        objectKey: 'State',\r\n                        displayName: 'State',\r\n                    }, {\r\n                        objectKey: 'Trigger_Name',\r\n                        displayName: 'Trigger Name',\r\n                    }\r\n\r\n                ],\r\n                action: {\r\n                    Placement: 'Mail_Body',\r\n                    Link: {\r\n                        Action: {\r\n\r\n                        }\r\n                    },\r\n                    DropDown: false\r\n                }\r\n            },\r\n            paging: true\r\n        }\r\n    };\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceProviderService {\r\n  private BmogSubject=new Subject<any>();\r\n  private BmoSubject=new Subject<any>();\r\n  private NewlyBmogSubject=new Subject<any>();\r\n  private DmoStatesSubject=new Subject<any>();\r\n  private HideContextMenu=new Subject<any>();\r\n  private DeleteDmoSubject=new Subject<any>();\r\n  private MoveDmoSubject=new Subject<any>();\r\n  private reloadParentSubject=new Subject<any>();\r\n  private UpdateDmogSettingSubject=new Subject<any>();\r\n  private UpdateDmogStyleSettingSubject=new Subject<any>();\r\n  private CloseSidebarNav=new Subject<any>();\r\n  private UpdatedContainerWidth = new Subject<any>();\r\n  private UpdatedColumnData = new Subject<any>();\r\n  private OpenSidebarNav=new Subject<any>();\r\n  private readonly IsRowEmpty=new Subject<any>();\r\n  constructor() { }\r\n  setreloadParent(data:any){\r\n    this.reloadParentSubject.next(data);\r\n  }\r\n  getreloadParent():Observable<any>{\r\n    return this.reloadParentSubject.asObservable();\r\n  }\r\n  setBmog(data:any){\r\n    this.BmogSubject.next(data);\r\n  }\r\n  getBmog():Observable<any>{\r\n    return this.BmogSubject.asObservable();\r\n  }\r\n  setBmo(data:any){\r\n    this.BmoSubject.next(data);\r\n  }\r\n  getBmo():Observable<any>{\r\n    return this.BmoSubject.asObservable();\r\n  }\r\n  setNewlyBmog(data:any){\r\n    this.NewlyBmogSubject.next(data);\r\n  }\r\n  getNewlyBmog():Observable<any>{\r\n    return this.NewlyBmogSubject.asObservable();\r\n  }\r\n  setHideContextMenu(data:any){\r\n    this.HideContextMenu.next(data);\r\n  }\r\n  getHideContextMenu(){\r\n  return  this.HideContextMenu.asObservable();\r\n  }\r\n  setDmoStates(data:any){\r\n    this.DmoStatesSubject.next(data);\r\n  }\r\n  getDmoStates(){\r\n  return  this.DmoStatesSubject.asObservable();\r\n  }\r\n  setDeleteDmo(data:any){\r\n    this.DeleteDmoSubject.next(data);\r\n  }\r\n  getDeleteDmo(){\r\n  return  this.DeleteDmoSubject.asObservable();\r\n  }\r\n  \r\n  setMoveDmo(data:any){\r\n    this.MoveDmoSubject.next(data);\r\n  }\r\n  getMoveDmo(){\r\n  return  this.MoveDmoSubject.asObservable();\r\n  }\r\n  setUpdateDmogSettings(data:any){\r\n    this.UpdateDmogSettingSubject.next(data);\r\n  }\r\n  getUpdateDmogSettings(){\r\n  return  this.UpdateDmogSettingSubject.asObservable();\r\n  }\r\n  \r\n\r\n  setUpdateDmogStyleSettings(data:any){\r\n    this.UpdateDmogStyleSettingSubject.next(data);\r\n  }\r\n  getUpdateDmogStyleSettings(){\r\n  return  this.UpdateDmogStyleSettingSubject.asObservable();\r\n  }\r\n  \r\n  setSidebarclose(data:any){\r\n    this.CloseSidebarNav.next(data);\r\n  }\r\n  getSidebarclose(){\r\n    return  this.CloseSidebarNav.asObservable();\r\n  }\r\n  setUpdatedContainerWidth(data:any){\r\n    this.UpdatedContainerWidth.next(data);\r\n  }\r\n  geUpdatedContainerWidth(){\r\n    return  this.UpdatedContainerWidth.asObservable();\r\n  }\r\n  setUpdatedColumnData(data:any){\r\n    this.UpdatedColumnData.next(data);\r\n  }\r\n  geUpdatedColumnData(){\r\n    return  this.UpdatedColumnData.asObservable();\r\n  }\r\n\r\n  setOpenSidebarNav(data:any){\r\n    this.OpenSidebarNav.next(data);\r\n  }\r\n  getOpenSidebarNav(){\r\n    return  this.OpenSidebarNav.asObservable();\r\n  }\r\n\r\n  setIsRowEmpty(data:any){\r\n    this.IsRowEmpty.next(data);\r\n  }\r\n  getIsRowEmpty(){\r\n    return  this.IsRowEmpty.asObservable();\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ElementRef } from '@angular/core';\r\nimport { ServiceProviderService } from '@app/admin/data-modeler1/services1/service-provider.service';\r\n\r\n@Component({\r\n    selector: 'app-tab',\r\n    templateUrl: './tab.component.html',\r\n    styleUrls: ['./tab.component.scss'],\r\n    standalone: true\r\n})\r\nexport class TabComponent<T = any> implements OnInit {\r\n  @Input() data: T;\r\n  @Input() title: string;\r\n  @Input() active = false;\r\n  @Input() hasInvalidForm = false;\r\n  @Input() bmodisplay = true;\r\n  @Input() disabled = false;\r\n  @Input() enableActions = false;\r\n  @Input() shared = false;\r\n  showActions = false;\r\n  @Input() isBMO = false;\r\n\r\n  \r\n  @Input() isNewDesign = false;\r\n  @Input() isView = false;\r\n  @Input() isSection = false;\r\n  @Input() showPlucIcon= false;\r\n   // @Input() trnsctnId: any;\r\n  // @Input() ChildProcessName: string;\r\n  // @Input() ParentDmoValue: any;\r\n  // @Input() ChildDmoGuid: any;\r\n  // @Input() ProcessType: any;\r\n\r\n  constructor(\r\n    public el: ElementRef,\r\n    private dataProvider :ServiceProviderService\r\n  ) { \r\n\r\n\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n     if (this.isBMO && this.active) {\r\n      this.dataProvider.setBmo(this.data)\r\n     }\r\n  }\r\n\r\n}\r\n","<div [hidden]=\"!active\" class=\"pane\">\r\n  <ng-content></ng-content>\r\n</div>\r\n\r\n\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ContentChildren,\r\n  QueryList,\r\n  AfterContentInit,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription, Subject } from 'rxjs';\r\n\r\nimport { ApplicationService } from '@app/core/services/application.service';\r\nimport { LogHeaderMapping } from '@app/core/models/log-header-mapping';\r\nimport { TabComponent } from '../tab/tab.component';\r\nimport { CdkDragDrop, CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\r\nimport { ServiceProviderService } from '@app/admin/data-modeler1/services1/service-provider.service';\r\nimport { NgIf, NgFor } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-tabs',\r\n    templateUrl: './tabs.component.html',\r\n    styleUrls: ['./tabs.component.scss'],\r\n    standalone: true,\r\n    imports: [NgIf, CdkDropList, NgFor, CdkDrag]\r\n})\r\nexport class TabsComponent implements OnInit, AfterContentInit, OnDestroy {\r\n\r\n  @ContentChildren(TabComponent) tabs: QueryList < TabComponent > ;\r\n\r\n  deletable = false;\r\n  editable = false;\r\n  @Input() set actions(actions: {delete: boolean, edit: boolean}) {\r\n    this.deletable = actions.delete;\r\n    this.editable = actions.edit;\r\n  }\r\n  @Input() \r\n  @Input() enableActions = false;\r\n  @Input() confirmSwitchTab = false;\r\n  @Input() isNewDesign = false;\r\n  @Input() isView = false;\r\n  @Input() isSection = false;\r\n\r\n  @Input() confirmed$: Subject < boolean > = new Subject();\r\n  @Output() tabSelected = new EventEmitter<TabComponent>();\r\n  @Output() tabClicked = new EventEmitter<TabComponent>();\r\n  @Output() tabEdit = new EventEmitter<TabComponent>();\r\n  @Output() tabRemove = new EventEmitter<TabComponent>();\r\n  @Output() dropped = new EventEmitter<{from: number, to: number}>()\r\n  showIcon:any = false;\r\n  private logHeaderMapping: LogHeaderMapping = new LogHeaderMapping();\r\n  private unsubscribe: Subscription[] = [];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private applicationService: ApplicationService,\r\n    private el: ElementRef,\r\n    private dataProvider :ServiceProviderService\r\n  ) {}\r\n\r\n  ngOnInit() {    \r\n    const checkValidationSub = this.applicationService.checkValidation.subscribe((isCheck: boolean) => {\r\n      if (isCheck) {\r\n        setTimeout(() => {\r\n          this.makeValidate();\r\n        });\r\n      }\r\n    });\r\n    this.unsubscribe.push(checkValidationSub);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // contentChildren are set\r\n  ngAfterContentInit() {    \r\n    setTimeout(() => {\r\n      // get all active tabs\r\n      const activeTabs = this.tabs.filter(tab => tab.active);\r\n      // if there is no active tab set, activate the first\r\n      if (activeTabs.length === 0) {\r\n        this.selectTab(this.tabs.first);\r\n      }\r\n    });\r\n  }\r\n\r\n  makeValidate() {\r\n    const allTabs = this.el.nativeElement.querySelectorAll('app-tab');\r\n    if (this.tabs) {\r\n      const tabCmp = this.tabs.toArray();\r\n      for (let index = 0; index < allTabs.length; index++) {\r\n        const invalidElement = allTabs[index].querySelector('.invalid-feedback');\r\n        if (invalidElement) {\r\n          tabCmp[index].hasInvalidForm = true;\r\n        } else {\r\n          tabCmp[index].hasInvalidForm = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onDropped(e: CdkDragDrop<any>) {\r\n    this.dropped.emit({from: e.previousIndex, to: e.currentIndex})\r\n  }\r\n\r\n  onTabClick(tab: TabComponent) {\r\n    this.tabClicked.emit(tab);\r\n  }\r\n\r\n  onTabEdit(tab: TabComponent) {\r\n    this.tabEdit.emit(tab);\r\n  }\r\n\r\n  onTabRemove(tab: TabComponent) {\r\n    this.tabRemove.emit(tab);\r\n  }\r\n  \r\n  selectTab(tab: TabComponent) {\r\n    if (tab?.disabled) return;\r\n    if (this.confirmSwitchTab) {\r\n      const confirmSubr = this.confirmed$.subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed) {\r\n          // deactivate all tabs\r\n          this.tabs.toArray().forEach(tabItem => (tabItem.active = false));\r\n          // activate the tab the user has clicked on.\r\n          //this.getLogData(tab.title, tab.trnsctnId, tab.ProcessType, tab.ChildProcessName);\r\n          this.getLogData(tab.title);\r\n          tab.active = true;\r\n        }\r\n      });\r\n      this.unsubscribe.push(confirmSubr);\r\n    } else {\r\n      // deactivate all tabs\r\n      this.tabs.toArray().forEach(tabItem => (tabItem.active = false));\r\n      // activate the tab the user has clicked on.\r\n      if(!!tab && !!tab.title){          \r\n      this.getLogData(tab.title);    \r\n      tab.active = true;\r\n      }\r\n    }\r\n    if(!!tab && !!tab.title){\r\n    this.tabSelected.emit(tab);\r\n    }\r\n  }\r\n\r\n  getLogData(title: string, trnsctnId?: string, ProcessType?: any, ChildProcessName?: any) {\r\n    this.unsubscribe.push(\r\n      this.route.paramMap.subscribe(params => {\r\n        \r\n        if (title) {  \r\n             return;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  OpenAddPopup(bm:any){\r\n    if(bm){\r\n\r\n    }\r\n  }\r\n}\r\n","<div class=\"tabs\"  *ngIf=\"!isNewDesign\">\r\n  <ng-container *ngIf=\"tabs.length > 0\">  \r\n    <ul class=\"nav nav-tabs tab-link\" cdkdra cdkDropList (cdkDropListDropped)=\"onDropped($event)\" cdkDropListOrientation=\"horizontal\">\r\n        <li\r\n          *ngFor=\"let tab of tabs\"\r\n          (mouseenter)=\"tab.showActions = true\"\r\n          (mouseleave)=\"tab.showActions = false\"\r\n          [hidden]=\"!tab.bmodisplay\"\r\n          [class.active]=\"tab.active\"\r\n          [class.form-invalid]=\"tab.hasInvalidForm\"\r\n          style=\"min-width: 50px;\"\r\n          cdkDrag  \r\n        >\r\n          <div class=\"actions\" [class.open]=\"(editable || deletable) && tab.showActions && !tab.disabled\">\r\n            <span class=\"edit\" (click)=\"onTabEdit(tab)\" *ngIf=\"editable\">\r\n              <i class=\"fas fa-pencil-alt\"></i>\r\n            </span>\r\n            <span class=\"remove\" (click)=\"onTabRemove(tab)\" *ngIf=\"deletable\">\r\n              <i class=\"far fa-trash-alt\"></i>\r\n            </span>\r\n          </div>\r\n          <a (click)=\"selectTab(tab); onTabClick(tab)\">\r\n              {{tab?.title}} \r\n            </a>\r\n        </li>       \r\n    </ul>\r\n  </ng-container>\r\n  <ng-content></ng-content>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"isNewDesign && isView\"  class=\"tab-inner\" >\r\n  <div  *ngIf=\"tabs.length > 0\">\r\n    <div cdkdra cdkDropList (cdkDropListDropped)=\"onDropped($event)\" cdkDropListOrientation=\"horizontal\" class=\"center-plex\">\r\n\r\n      <div  class=\"tab active tab-hover\"\r\n        *ngFor=\"let tab of tabs\"\r\n        (mouseenter)=\"tab.showActions = true\"\r\n        (mouseleave)=\"tab.showActions = false\"\r\n        [hidden]=\"!tab.bmodisplay\"\r\n        [class.active]=\"tab.active\"\r\n        [class.form-invalid]=\"tab.hasInvalidForm\"\r\n       \r\n        cdkDrag  \r\n      >\r\n       <div class=\"tab-content\" *ngIf=\"!tab.showPlucIcon\">\r\n          <div class=\"title-head-view\">\r\n            <a (click)=\"selectTab(tab); onTabClick(tab)\">\r\n              <span *ngIf=\"tab.shared\"><i class=\"fas fa-link\"></i></span>\r\n              {{tab?.title}}\r\n            </a>\r\n          </div>\r\n          <div class=\"tab-acction\">\r\n            <div class=\"actions\" [class.open]=\"(editable || deletable) && tab.showActions && !tab.disabled\">\r\n              <span class=\"edit\" (click)=\"onTabEdit(tab)\" *ngIf=\"editable\">\r\n                <i class=\"fas fa-pencil-alt\"></i>\r\n              </span>\r\n              <span class=\"remove\" (click)=\"onTabRemove(tab)\" *ngIf=\"deletable\">\r\n                <i class=\"far fa-trash-alt\"></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n       </div>\r\n       <div  class=\"add-tab-view\" *ngIf=\"tab.showPlucIcon\">\r\n        <div (click)=\"selectTab(tab); onTabClick(tab)\">\r\n           <i class=\"fa fa-plus\"></i>\r\n        </div>\r\n      </div>\r\n       \r\n      \r\n      </div>\r\n   \r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n  <div  *ngIf=\"isNewDesign &&  isSection\" class=\"tab-inner-section\">\r\n  \r\n    <div  *ngIf=\"tabs.length > 0\" >\r\n      <div cdkdra cdkDropList (cdkDropListDropped)=\"onDropped($event)\" cdkDropListOrientation=\"horizontal\" class=\"center-plex\">\r\n      <div class=\"section active\"\r\n      *ngFor=\"let tab of tabs\"\r\n      (mouseenter)=\"tab.showActions = true\"\r\n      (mouseleave)=\"tab.showActions = false\"\r\n      [hidden]=\"!tab.bmodisplay\"\r\n      [class.active]=\"tab.active\"\r\n      [class.form-invalid]=\"tab.hasInvalidForm\"\r\n      style=\"min-width: 50px;\"\r\n      cdkDrag  \r\n      >\r\n        \r\n          <div class=\"tab-content\" *ngIf=\"!tab.showPlucIcon\">\r\n            <div class=\"title-head-sec\">\r\n              <a (click)=\"selectTab(tab); onTabClick(tab)\">\r\n                {{tab?.title}}\r\n              </a>\r\n            </div>\r\n            <div class=\"tab-acction\">\r\n              <div class=\"actions\" [class.open]=\"(editable || deletable) && tab.showActions && !tab.disabled\">\r\n                <span class=\"edit\" (click)=\"onTabEdit(tab)\" *ngIf=\"editable\">\r\n                  <i class=\"fas fa-pencil-alt\"></i>\r\n                </span>\r\n                <span class=\"remove\" (click)=\"onTabRemove(tab)\" *ngIf=\"deletable\">\r\n                  <i class=\"fas fa-unlink\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"add-tab-section\" *ngIf=\"tab.showPlucIcon\">\r\n          <div (click)=\"selectTab(tab); onTabClick(tab)\">\r\n             <i class=\"fa fa-plus\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"tab active\">View Name 1</div> -->\r\n\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"tab-main-section\" *ngIf=\"isNewDesign \">\r\n  <div id=\"viewOnly\" *ngIf=\"isView\">\r\n  <div class=\"tab-container\"  *ngFor=\"let tab of tabs\" >\r\n    <div class=\"tab active\">{{tab?.title}}</div>\r\n</div>\r\n<div class=\"add-tab\"><i class=\"fa fa-plus\"></i></div>\r\n  </div>\r\n\r\n<div class=\"section-container\" *ngIf=\"!isView\">\r\n    <div class=\"section active\">Section One</div>\r\n    <div class=\"section\">Section Two</div>\r\n    <div class=\"section\">Section Three</div>\r\n    <div class=\"add-tab\"><i class=\"fa fa-plus\"></i></div>\r\n</div>\r\n</div> -->","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy, ElementRef } from '@angular/core';\r\nimport { trigger, state, transition, animate, style, group } from '@angular/animations';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ApplicationService } from '@app/core';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-accordion-item',\r\n    templateUrl: './accordion-item.component.html',\r\n    styleUrls: ['./accordion-item.component.scss'],\r\n    animations: [\r\n        trigger('accordionItemContentAnimation', [\r\n            state('isOpen', style({ height: '*', overflow: 'visible' })),\r\n            state('isClose', style({ height: 0, overflow: 'hidden' })),\r\n            transition('isClose => *', [animate('.5s', style({ height: '*', overflow: 'hidden' }))]),\r\n            transition('* => isClose', [animate('0s', style({ height: '*', overflow: 'hidden' })),\r\n                animate('.5s', style({ height: 0, overflow: 'hidden' }))]),\r\n        ]),\r\n    ],\r\n    standalone: true,\r\n    imports: [NgClass]\r\n})\r\nexport class AccordionItemComponent implements OnInit, OnDestroy {\r\n  public state = 'isClose';\r\n  checkValidationSub: Subscription;\r\n  hasInvalidForm = false;\r\n\r\n  isOpened: boolean;\r\n  get isOpen(): boolean {\r\n    return this.isOpened;\r\n  }\r\n\r\n  @Input('isOpen')\r\n  set isOpen(value: boolean) {\r\n    this.isOpened = value;\r\n    this.state = this.isOpened ? 'isOpen' : 'isClose';\r\n  }\r\n\r\n  @Input() title: string;\r\n  @Output() Toggle: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private applicationService: ApplicationService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.checkValidationSub = this.applicationService.checkValidation.subscribe((isCheck: boolean) => {\r\n      if (isCheck) {\r\n        setTimeout(() => {\r\n          this.makeValidate();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkValidationSub.unsubscribe();\r\n  }\r\n\r\n  makeValidate() {\r\n    const invalidElement = this.el.nativeElement.querySelector('.invalid-feedback');\r\n    if (invalidElement) {\r\n      this.hasInvalidForm = true;\r\n    } else {\r\n      this.hasInvalidForm = false;\r\n    }\r\n  }\r\n\r\n\r\n  public onClickHeader() {\r\n    this.isOpen = this.isOpen ? false : true;\r\n    this.Toggle.emit(this.isOpen);\r\n  }\r\n}\r\n","<div class=\"accordion-item\" [ngClass]=\"{\r\n  'accordion-item--isOpen': state == 'isOpen',\r\n  'accordion-item--isClose': state == 'isClose',\r\n  'accordion-item--isInvalidForm': hasInvalidForm === true\r\n}\">\r\n  <div class=\"accordion-item__header\" (click)=\"onClickHeader()\">\r\n    <ng-content select=\".accordion-item-header\"></ng-content>\r\n    {{ title }}\r\n    <i class=\"fa fa-chevron-down\" [ngClass]=\"state == 'isOpen' ? 'up' : 'down'\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"accordion-item__content\" [@accordionItemContentAnimation]=\"state\">\r\n    <ng-content select=\".accordion-item-content\"></ng-content>\r\n  </div>  \r\n</div>","import { Component, ContentChildren, QueryList, AfterContentInit, OnInit } from '@angular/core';\r\nimport { AccordionItemComponent } from '../accordion-item/accordion-item.component';\r\n\r\n@Component({\r\n    selector: 'app-accordion',\r\n    templateUrl: './accordion.component.html',\r\n    styleUrls: ['./accordion.component.scss'],\r\n    standalone: true\r\n})\r\n\r\nexport class AccordionComponent implements  AfterContentInit {\r\n  @ContentChildren(AccordionItemComponent) items: QueryList<AccordionItemComponent>;\r\n  constructor() { }\r\n\r\n\r\n  ngAfterContentInit() {\r\n\r\n    // this.items.toArray()[0].isOpen = true;  // If we need to open item in the start state\r\n\r\n    this.items.toArray().forEach((item) => {\r\n      item.Toggle.subscribe(() => {\r\n        this.itemToggleHandler(item);\r\n      });\r\n    });\r\n  }\r\n\r\n  itemToggleHandler(item: AccordionItemComponent) {\r\n\r\n    // this.items.toArray().forEach(item => item.isOpen = false);  // TODO: if we need close opened items\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"accordion\">\r\n  <ng-content></ng-content>\r\n</div>","import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, Optional, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, merge, Observable, fromEvent } from 'rxjs';\nimport { tap, share, mergeMap, take, map, pairwise, filter, takeUntil } from 'rxjs/operators';\n\n/**\n * @hidden\n */\nconst IS_TOUCH_DEVICE = (() => {\n  // In case we're in Node.js environment.\n  if (typeof window === 'undefined') {\n    return false;\n  } else {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n  }\n})();\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n  const clone = node.cloneNode(true);\n  const descendantsWithId = clone.querySelectorAll('[id]');\n  const nodeName = node.nodeName.toLowerCase();\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\n  clone.removeAttribute('id');\n  descendantsWithId.forEach(descendant => {\n    descendant.removeAttribute('id');\n  });\n  if (nodeName === 'canvas') {\n    transferCanvasData(node, clone);\n  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n    transferInputData(node, clone);\n  }\n  transferData('canvas', node, clone, transferCanvasData);\n  transferData('input, textarea, select', node, clone, transferInputData);\n  return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n  const descendantElements = node.querySelectorAll(selector);\n  if (descendantElements.length) {\n    const cloneElements = clone.querySelectorAll(selector);\n    for (let i = 0; i < descendantElements.length; i++) {\n      callback(descendantElements[i], cloneElements[i]);\n    }\n  }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n  // Browsers throw an error when assigning the value of a file input programmatically.\n  if (clone.type !== 'file') {\n    clone.value = source.value;\n  }\n  // Radio button `name` attributes must be unique for radio button groups\n  // otherwise original radio buttons can lose their checked state\n  // once the clone is inserted in the DOM.\n  if (clone.type === 'radio' && clone.name) {\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n  }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n  const context = clone.getContext('2d');\n  if (context) {\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n    // We can't do much about it so just ignore the error.\n    try {\n      context.drawImage(source, 0, 0);\n    } catch {}\n  }\n}\nfunction getNewBoundingRectangle(startingRect, edges, clientX, clientY) {\n  const newBoundingRect = {\n    top: startingRect.top,\n    bottom: startingRect.bottom,\n    left: startingRect.left,\n    right: startingRect.right\n  };\n  if (edges.top) {\n    newBoundingRect.top += clientY;\n  }\n  if (edges.bottom) {\n    newBoundingRect.bottom += clientY;\n  }\n  if (edges.left) {\n    newBoundingRect.left += clientX;\n  }\n  if (edges.right) {\n    newBoundingRect.right += clientX;\n  }\n  newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n  newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n  return newBoundingRect;\n}\nfunction getElementRect(element, ghostElementPositioning) {\n  let translateX = 0;\n  let translateY = 0;\n  const style = element.nativeElement.style;\n  const transformProperties = ['transform', '-ms-transform', '-moz-transform', '-o-transform'];\n  const transform = transformProperties.map(property => style[property]).find(value => !!value);\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$1');\n    translateY = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$2');\n  }\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom: element.nativeElement.offsetHeight + element.nativeElement.offsetTop - translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right: element.nativeElement.offsetWidth + element.nativeElement.offsetLeft - translateX\n    };\n  } else {\n    const boundingRect = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\nconst DEFAULT_RESIZE_CURSORS = Object.freeze({\n  topLeft: 'nw-resize',\n  topRight: 'ne-resize',\n  bottomLeft: 'sw-resize',\n  bottomRight: 'se-resize',\n  leftOrRight: 'col-resize',\n  topOrBottom: 'row-resize'\n});\nfunction getResizeCursor(edges, cursors) {\n  if (edges.left && edges.top) {\n    return cursors.topLeft;\n  } else if (edges.right && edges.top) {\n    return cursors.topRight;\n  } else if (edges.left && edges.bottom) {\n    return cursors.bottomLeft;\n  } else if (edges.right && edges.bottom) {\n    return cursors.bottomRight;\n  } else if (edges.left || edges.right) {\n    return cursors.leftOrRight;\n  } else if (edges.top || edges.bottom) {\n    return cursors.topOrBottom;\n  } else {\n    return '';\n  }\n}\nfunction getEdgesDiff({\n  edges,\n  initialRectangle,\n  newRectangle\n}) {\n  const edgesDiff = {};\n  Object.keys(edges).forEach(edge => {\n    edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n  });\n  return edgesDiff;\n}\nconst RESIZE_ACTIVE_CLASS = 'resize-active';\nconst RESIZE_GHOST_ELEMENT_CLASS = 'resize-ghost-element';\nconst MOUSE_MOVE_THROTTLE_MS = 50;\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizableDirective {\n  /**\n   * @hidden\n   */\n  constructor(platformId, renderer, elm, zone) {\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.elm = elm;\n    this.zone = zone;\n    /**\n     * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n     */\n    this.enableGhostResize = false;\n    /**\n     * A snap grid that resize events will be locked to.\n     *\n     * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n     */\n    this.resizeSnapGrid = {};\n    /**\n     * The mouse cursors that will be set on the resize edges\n     */\n    this.resizeCursors = DEFAULT_RESIZE_CURSORS;\n    /**\n     * Define the positioning of the ghost element (can be fixed or absolute)\n     */\n    this.ghostElementPositioning = 'fixed';\n    /**\n     * Allow elements to be resized to negative dimensions\n     */\n    this.allowNegativeResizes = false;\n    /**\n     * The mouse move throttle in milliseconds, default: 50 ms\n     */\n    this.mouseMoveThrottleMS = MOUSE_MOVE_THROTTLE_MS;\n    /**\n     * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n     */\n    this.resizeStart = new EventEmitter();\n    /**\n     * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n     */\n    this.resizing = new EventEmitter();\n    /**\n     * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n     */\n    this.resizeEnd = new EventEmitter();\n    /**\n     * @hidden\n     */\n    this.mouseup = new Subject();\n    /**\n     * @hidden\n     */\n    this.mousedown = new Subject();\n    /**\n     * @hidden\n     */\n    this.mousemove = new Subject();\n    this.destroy$ = new Subject();\n    this.pointerEventListeners = PointerEventListeners.getInstance(renderer, zone);\n  }\n  /**\n   * @hidden\n   */\n  ngOnInit() {\n    const mousedown$ = merge(this.pointerEventListeners.pointerDown, this.mousedown);\n    const mousemove$ = merge(this.pointerEventListeners.pointerMove, this.mousemove).pipe(tap(({\n      event\n    }) => {\n      if (currentResize) {\n        try {\n          event.preventDefault();\n        } catch (e) {\n          // just adding try-catch not to see errors in console if there is a passive listener for same event somewhere\n          // browser does nothing except of writing errors to console\n        }\n      }\n    }), share());\n    const mouseup$ = merge(this.pointerEventListeners.pointerUp, this.mouseup);\n    let currentResize;\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(currentResize.clonedNode);\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n    const getResizeCursors = () => {\n      return {\n        ...DEFAULT_RESIZE_CURSORS,\n        ...this.resizeCursors\n      };\n    };\n    const mousedrag = mousedown$.pipe(mergeMap(startCoords => {\n      function getDiff(moveCoords) {\n        return {\n          clientX: moveCoords.clientX - startCoords.clientX,\n          clientY: moveCoords.clientY - startCoords.clientY\n        };\n      }\n      const getSnapGrid = () => {\n        const snapGrid = {\n          x: 1,\n          y: 1\n        };\n        if (currentResize) {\n          if (this.resizeSnapGrid.left && currentResize.edges.left) {\n            snapGrid.x = +this.resizeSnapGrid.left;\n          } else if (this.resizeSnapGrid.right && currentResize.edges.right) {\n            snapGrid.x = +this.resizeSnapGrid.right;\n          }\n          if (this.resizeSnapGrid.top && currentResize.edges.top) {\n            snapGrid.y = +this.resizeSnapGrid.top;\n          } else if (this.resizeSnapGrid.bottom && currentResize.edges.bottom) {\n            snapGrid.y = +this.resizeSnapGrid.bottom;\n          }\n        }\n        return snapGrid;\n      };\n      function getGrid(coords, snapGrid) {\n        return {\n          x: Math.ceil(coords.clientX / snapGrid.x),\n          y: Math.ceil(coords.clientY / snapGrid.y)\n        };\n      }\n      return merge(mousemove$.pipe(take(1)).pipe(map(coords => [, coords])), mousemove$.pipe(pairwise())).pipe(map(([previousCoords, newCoords]) => {\n        return [previousCoords ? getDiff(previousCoords) : previousCoords, getDiff(newCoords)];\n      })).pipe(filter(([previousCoords, newCoords]) => {\n        if (!previousCoords) {\n          return true;\n        }\n        const snapGrid = getSnapGrid();\n        const previousGrid = getGrid(previousCoords, snapGrid);\n        const newGrid = getGrid(newCoords, snapGrid);\n        return previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y;\n      })).pipe(map(([, newCoords]) => {\n        const snapGrid = getSnapGrid();\n        return {\n          clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n          clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n        };\n      })).pipe(takeUntil(merge(mouseup$, mousedown$)));\n    })).pipe(filter(() => !!currentResize));\n    mousedrag.pipe(map(({\n      clientX,\n      clientY\n    }) => {\n      return getNewBoundingRectangle(currentResize.startingRect, currentResize.edges, clientX, clientY);\n    })).pipe(filter(newBoundingRect => {\n      return this.allowNegativeResizes || !!(newBoundingRect.height && newBoundingRect.width && newBoundingRect.height > 0 && newBoundingRect.width > 0);\n    })).pipe(filter(newBoundingRect => {\n      return this.validateResize ? this.validateResize({\n        rectangle: newBoundingRect,\n        edges: getEdgesDiff({\n          edges: currentResize.edges,\n          initialRectangle: currentResize.startingRect,\n          newRectangle: newBoundingRect\n        })\n      }) : true;\n    }), takeUntil(this.destroy$)).subscribe(newBoundingRect => {\n      if (currentResize && currentResize.clonedNode) {\n        this.renderer.setStyle(currentResize.clonedNode, 'height', `${newBoundingRect.height}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'width', `${newBoundingRect.width}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'top', `${newBoundingRect.top}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'left', `${newBoundingRect.left}px`);\n      }\n      if (this.resizing.observers.length > 0) {\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize.edges,\n              initialRectangle: currentResize.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n      }\n      currentResize.currentRect = newBoundingRect;\n    });\n    mousedown$.pipe(map(({\n      edges\n    }) => {\n      return edges || {};\n    }), filter(edges => {\n      return Object.keys(edges).length > 0;\n    }), takeUntil(this.destroy$)).subscribe(edges => {\n      if (currentResize) {\n        removeGhostElement();\n      }\n      const startingRect = getElementRect(this.elm, this.ghostElementPositioning);\n      currentResize = {\n        edges,\n        startingRect,\n        currentRect: startingRect\n      };\n      const resizeCursors = getResizeCursors();\n      const cursor = getResizeCursor(currentResize.edges, resizeCursors);\n      this.renderer.setStyle(document.body, 'cursor', cursor);\n      this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, true);\n      if (this.enableGhostResize) {\n        currentResize.clonedNode = deepCloneNode(this.elm.nativeElement);\n        this.elm.nativeElement.parentElement.appendChild(currentResize.clonedNode);\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'hidden');\n        this.renderer.setStyle(currentResize.clonedNode, 'position', this.ghostElementPositioning);\n        this.renderer.setStyle(currentResize.clonedNode, 'left', `${currentResize.startingRect.left}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'top', `${currentResize.startingRect.top}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'height', `${currentResize.startingRect.height}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'width', `${currentResize.startingRect.width}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'cursor', getResizeCursor(currentResize.edges, resizeCursors));\n        this.renderer.addClass(currentResize.clonedNode, RESIZE_GHOST_ELEMENT_CLASS);\n        currentResize.clonedNode.scrollTop = currentResize.startingRect.scrollTop;\n        currentResize.clonedNode.scrollLeft = currentResize.startingRect.scrollLeft;\n      }\n      if (this.resizeStart.observers.length > 0) {\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      }\n    });\n    mouseup$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        if (this.resizeEnd.observers.length > 0) {\n          this.zone.run(() => {\n            this.resizeEnd.emit({\n              edges: getEdgesDiff({\n                edges: currentResize.edges,\n                initialRectangle: currentResize.startingRect,\n                newRectangle: currentResize.currentRect\n              }),\n              rectangle: currentResize.currentRect\n            });\n          });\n        }\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n  /**\n   * @hidden\n   */\n  ngOnDestroy() {\n    // browser check for angular universal, because it doesn't know what document is\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setStyle(document.body, 'cursor', '');\n    }\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.destroy$.next();\n  }\n  setElementClass(elm, name, add) {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n}\nResizableDirective.ɵfac = function ResizableDirective_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || ResizableDirective)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nResizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ResizableDirective,\n  selectors: [[\"\", \"mwlResizable\", \"\"]],\n  inputs: {\n    validateResize: \"validateResize\",\n    enableGhostResize: \"enableGhostResize\",\n    resizeSnapGrid: \"resizeSnapGrid\",\n    resizeCursors: \"resizeCursors\",\n    ghostElementPositioning: \"ghostElementPositioning\",\n    allowNegativeResizes: \"allowNegativeResizes\",\n    mouseMoveThrottleMS: \"mouseMoveThrottleMS\"\n  },\n  outputs: {\n    resizeStart: \"resizeStart\",\n    resizing: \"resizing\",\n    resizeEnd: \"resizeEnd\"\n  },\n  exportAs: [\"mwlResizable\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlResizable]',\n      exportAs: 'mwlResizable'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    validateResize: [{\n      type: Input\n    }],\n    enableGhostResize: [{\n      type: Input\n    }],\n    resizeSnapGrid: [{\n      type: Input\n    }],\n    resizeCursors: [{\n      type: Input\n    }],\n    ghostElementPositioning: [{\n      type: Input\n    }],\n    allowNegativeResizes: [{\n      type: Input\n    }],\n    mouseMoveThrottleMS: [{\n      type: Input\n    }],\n    resizeStart: [{\n      type: Output\n    }],\n    resizing: [{\n      type: Output\n    }],\n    resizeEnd: [{\n      type: Output\n    }]\n  });\n})();\nclass PointerEventListeners {\n  constructor(renderer, zone) {\n    this.pointerDown = new Observable(observer => {\n      let unsubscribeMouseDown;\n      let unsubscribeTouchStart;\n      zone.runOutsideAngular(() => {\n        unsubscribeMouseDown = renderer.listen('document', 'mousedown', event => {\n          observer.next({\n            clientX: event.clientX,\n            clientY: event.clientY,\n            event\n          });\n        });\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchStart = renderer.listen('document', 'touchstart', event => {\n            observer.next({\n              clientX: event.touches[0].clientX,\n              clientY: event.touches[0].clientY,\n              event\n            });\n          });\n        }\n      });\n      return () => {\n        unsubscribeMouseDown();\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchStart();\n        }\n      };\n    }).pipe(share());\n    this.pointerMove = new Observable(observer => {\n      let unsubscribeMouseMove;\n      let unsubscribeTouchMove;\n      zone.runOutsideAngular(() => {\n        unsubscribeMouseMove = renderer.listen('document', 'mousemove', event => {\n          observer.next({\n            clientX: event.clientX,\n            clientY: event.clientY,\n            event\n          });\n        });\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchMove = renderer.listen('document', 'touchmove', event => {\n            observer.next({\n              clientX: event.targetTouches[0].clientX,\n              clientY: event.targetTouches[0].clientY,\n              event\n            });\n          });\n        }\n      });\n      return () => {\n        unsubscribeMouseMove();\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchMove();\n        }\n      };\n    }).pipe(share());\n    this.pointerUp = new Observable(observer => {\n      let unsubscribeMouseUp;\n      let unsubscribeTouchEnd;\n      let unsubscribeTouchCancel;\n      zone.runOutsideAngular(() => {\n        unsubscribeMouseUp = renderer.listen('document', 'mouseup', event => {\n          observer.next({\n            clientX: event.clientX,\n            clientY: event.clientY,\n            event\n          });\n        });\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchEnd = renderer.listen('document', 'touchend', event => {\n            observer.next({\n              clientX: event.changedTouches[0].clientX,\n              clientY: event.changedTouches[0].clientY,\n              event\n            });\n          });\n          unsubscribeTouchCancel = renderer.listen('document', 'touchcancel', event => {\n            observer.next({\n              clientX: event.changedTouches[0].clientX,\n              clientY: event.changedTouches[0].clientY,\n              event\n            });\n          });\n        }\n      });\n      return () => {\n        unsubscribeMouseUp();\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        }\n      };\n    }).pipe(share());\n  }\n  static getInstance(renderer, zone) {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(renderer, zone);\n    }\n    return PointerEventListeners.instance;\n  }\n}\n\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizeHandleDirective {\n  constructor(renderer, element, zone, resizableDirective) {\n    this.renderer = renderer;\n    this.element = element;\n    this.zone = zone;\n    this.resizableDirective = resizableDirective;\n    /**\n     * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n     */\n    this.resizeEdges = {};\n    this.eventListeners = {};\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.zone.runOutsideAngular(() => {\n      this.listenOnTheHost('mousedown').subscribe(event => {\n        this.onMousedown(event, event.clientX, event.clientY);\n      });\n      this.listenOnTheHost('mouseup').subscribe(event => {\n        this.onMouseup(event.clientX, event.clientY);\n      });\n      if (IS_TOUCH_DEVICE) {\n        this.listenOnTheHost('touchstart').subscribe(event => {\n          this.onMousedown(event, event.touches[0].clientX, event.touches[0].clientY);\n        });\n        merge(this.listenOnTheHost('touchend'), this.listenOnTheHost('touchcancel')).subscribe(event => {\n          this.onMouseup(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n        });\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.unsubscribeEventListeners();\n  }\n  /**\n   * @hidden\n   */\n  onMousedown(event, clientX, clientY) {\n    event.preventDefault();\n    if (!this.eventListeners.touchmove) {\n      this.eventListeners.touchmove = this.renderer.listen(this.element.nativeElement, 'touchmove', touchMoveEvent => {\n        this.onMousemove(touchMoveEvent, touchMoveEvent.targetTouches[0].clientX, touchMoveEvent.targetTouches[0].clientY);\n      });\n    }\n    if (!this.eventListeners.mousemove) {\n      this.eventListeners.mousemove = this.renderer.listen(this.element.nativeElement, 'mousemove', mouseMoveEvent => {\n        this.onMousemove(mouseMoveEvent, mouseMoveEvent.clientX, mouseMoveEvent.clientY);\n      });\n    }\n    this.resizable.mousedown.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges\n    });\n  }\n  /**\n   * @hidden\n   */\n  onMouseup(clientX, clientY) {\n    this.unsubscribeEventListeners();\n    this.resizable.mouseup.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges\n    });\n  }\n  // directive might be passed from DI or as an input\n  get resizable() {\n    return this.resizableDirective || this.resizableContainer;\n  }\n  onMousemove(event, clientX, clientY) {\n    this.resizable.mousemove.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges,\n      event\n    });\n  }\n  unsubscribeEventListeners() {\n    Object.keys(this.eventListeners).forEach(type => {\n      this.eventListeners[type]();\n      delete this.eventListeners[type];\n    });\n  }\n  listenOnTheHost(eventName) {\n    return fromEvent(this.element.nativeElement, eventName).pipe(takeUntil(this.destroy$));\n  }\n}\nResizeHandleDirective.ɵfac = function ResizeHandleDirective_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || ResizeHandleDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ResizableDirective, 8));\n};\nResizeHandleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ResizeHandleDirective,\n  selectors: [[\"\", \"mwlResizeHandle\", \"\"]],\n  inputs: {\n    resizeEdges: \"resizeEdges\",\n    resizableContainer: \"resizableContainer\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizeHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlResizeHandle]'\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: ResizableDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    resizeEdges: [{\n      type: Input\n    }],\n    resizableContainer: [{\n      type: Input\n    }]\n  });\n})();\nclass ResizableModule {}\nResizableModule.ɵfac = function ResizableModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || ResizableModule)();\n};\nResizableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ResizableModule\n});\nResizableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ResizableDirective, ResizeHandleDirective],\n      exports: [ResizableDirective, ResizeHandleDirective]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of angular-resizable-element\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ResizableDirective, ResizableModule, ResizeHandleDirective };\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\r\nimport { MentionModule } from 'angular-mentions';\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\nimport { DpDatePickerModule } from 'ng2-date-picker';\r\n\r\nimport { GenericGridComponent } from './generic-grid/generic-grid.component';\r\nimport { GridExportComponent } from './grid-export/grid-export.component';\r\nimport { SearchColumnPipe } from '../pipe/search-column.pipe';\r\nimport { WorkflowBmAssociationComponent } from './workflow-bm-association/workflow-bm-association.component';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { TabComponent } from './tab/tab.component';\r\nimport { AccordionItemComponent } from './accordion-item/accordion-item.component';\r\nimport { AccordionComponent } from './accordion/accordion.component';\r\n\r\nimport { CompanyAssociationComponent } from './company-association/company-association.component';\r\n\r\nimport * as lib from '@app/admin/lib';\r\nimport { ResizableModule } from 'angular-resizable-element';\r\nimport { QuillModule } from 'ngx-quill';\r\n// components\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    NgbModule,\r\n    ToastrModule.forRoot({\r\n        preventDuplicates: true\r\n    }),\r\n    NgSelectModule,\r\n    AutocompleteLibModule,\r\n    MentionModule,\r\n    ImageCropperModule,\r\n    DpDatePickerModule,\r\n    ResizableModule\r\n    // NgDragDropModule.forRoot()\r\n    ,\r\n    GenericGridComponent,\r\n    GridExportComponent,\r\n    SearchColumnPipe,\r\n    WorkflowBmAssociationComponent,\r\n    TabsComponent,\r\n    TabComponent,\r\n    AccordionItemComponent,\r\n    AccordionComponent,\r\n    CompanyAssociationComponent,\r\n    QuillModule\r\n],\r\n    exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    NgbModule,\r\n    ToastrModule,\r\n    NgSelectModule,\r\n    MentionModule,\r\n    AutocompleteLibModule,\r\n    DpDatePickerModule,\r\n    GenericGridComponent,\r\n    GridExportComponent,\r\n    SearchColumnPipe,\r\n    TabComponent,\r\n    TabsComponent,\r\n    // NgDragDropModule,\r\n    AccordionItemComponent,\r\n    AccordionComponent,\r\n    CompanyAssociationComponent,\r\n    ResizableModule\r\n]\r\n})\r\n  export class SharedModule { }"],"mappings":"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","names":["style"],"x_google_ignoreList":[10]}