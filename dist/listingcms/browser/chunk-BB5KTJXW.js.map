{
  "version": 3,
  "sources": ["src/app/admin/data-modeler/services/data-modeler-api.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { BaseHttpService } from '@app/core/services/base-http.service';\r\nimport { environment } from '@env/environment';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport * as fromModels from '../models';\r\nimport * as classes from '../classes';\r\nimport { EMPTY } from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DataModelerApiService extends BaseHttpService {\r\n  private readonly baseUrl = `${environment.Setting.BaseAPIUrl}/modeler`;\r\n  private readonly GatewayBaseUrl = `${environment.Setting.GatewayAPIUrl}/wfapibm/DataModel`;\r\n\r\n  public getData(processName: string, bmName: string, version: string) {\r\n    const url = `${this.GatewayBaseUrl}/dataModelBM/${processName}/${bmName}`;\r\n    return this.get<fromModels.DataModelerResponse>(url, {version})\r\n      .pipe(map(res => classes.BM.fromResponse(res)))\r\n  }\r\n\r\n  public createBMVersion(encryptedBmId: string, timezone: string | number = '') {\r\n    const url = `${this.baseUrl}/createBMVersion`;\r\n    return this.post<string>(url, null, {bmId: encryptedBmId, timezone: timezone.toString()})\r\n  }\r\n\r\n  public changeMode(bmId: string | number, mode: fromModels.BMMode) {\r\n    const url = `${this.baseUrl}/updateMode/${mode}/${bmId}`;\r\n    return this.post<boolean>(url, null, null);\r\n  }\r\n\r\n  public saveBM(payload: fromModels.IBM, noSpinner?: boolean) {\r\n    const url = `${this.baseUrl}/saveBM`;\r\n    return this.post<boolean>(url, {bm: payload}, null, noSpinner && {noSpinner: 'true'});\r\n  }\r\n\r\n  public saveObject(obj: fromModels.ObjectType, bm: classes.BM, noLoading?: boolean) {\r\n    const {url, payload} = this.generateRequestInfo(obj, bm, 'save');\r\n    const headers: any = {processName: bm.ProcessName};\r\n    if (noLoading) {\r\n      headers.noSpinner = 'noSpinner';\r\n    }\r\n    return this.post<string>(url, payload, null, headers);\r\n  }\r\n\r\n  public reorderChildren(obj: classes.ObjectClass) {\r\n    let payload = null;\r\n    let url = '';\r\n    if ('BMOGID' in obj) {\r\n      url = `${this.GatewayBaseUrl}/setBmoOrder`;\r\n      payload = {\r\n        bmogid: obj.BMOGID,\r\n        bmoid: obj.Children.map(guid => obj.getChild(guid).BMOID),\r\n      };\r\n    } else if ('BMOID' in obj) {\r\n      url = `${this.GatewayBaseUrl}/setDmogOrder`;\r\n      payload = {\r\n        bmoid: obj.BMOID,\r\n        dmogId: obj.Children.map(guid => obj.getChild(guid).DMOGID),\r\n      }\r\n    } else if ('DMOGID' in obj) {\r\n      console.log(obj)\r\n      url = `${this.GatewayBaseUrl}/setDmoOrder`;\r\n      payload = {\r\n        dmogid: obj.DMOGID,\r\n        columns: obj.formData.components.flatMap(row => row.columns.map(col => col.components.map(dmo => dmo.dmoId)))\r\n      }\r\n    }\r\n    if (!url) return EMPTY;\r\n    return this.post<any>(url, payload);\r\n    \r\n  }\r\n\r\n  public saveDmoCondition(payload: any) {\r\n    const url = `${this.GatewayBaseUrl}/saveDmoCondition`;\r\n    return this.post<boolean>(url, payload);\r\n  }\r\n\r\n  public deleteDmoCondition(id: string) {\r\n    const url = `${this.GatewayBaseUrl}/deleteDmoCondition/${id}`;\r\n    return this.post<boolean>(url, null);\r\n  }\r\n\r\n  public deleteObject(obj: classes.ObjectClass, bm: classes.BM) {\r\n    const unreferenced = obj.unreference();\r\n    const {url, payload} = this.generateRequestInfo(unreferenced, bm, 'delete');\r\n    return this.post<boolean>(url, payload, null, {processName: bm.ProcessName});\r\n  }\r\n\r\n  public checkNameValidity(type: fromModels.EntityType, id: number, name: string, version: string, processName: string) {\r\n    const url = `${this.GatewayBaseUrl}/checkName/${type}/${id}/${name}/${version}`;\r\n    return this.get<boolean>(url, null, {processName});\r\n  }\r\n\r\n  public checkDmoInBmog(dmoId: string, bmogId: string) {\r\n    const url = `${this.GatewayBaseUrl}/checkDmoInBmog`;\r\n    return this.post<boolean>(url, null, {dmoId, bmogId})\r\n  }\r\n\r\n  public checkDmogInBmo(dmogId: string, bmogId: string) {\r\n    const url = `${this.GatewayBaseUrl}/CheckDmogInBMO`;\r\n    return this.post<boolean>(url, null, {dmogId, bmogId})\r\n  }\r\n  \r\n  public checkBmoInBmog(bmoId: string, bmogId: string) {\r\n    const url = `${this.baseUrl}/checkBmoInBmog`;\r\n    return this.post<boolean>(url, null, {bmoId, bmogId})\r\n  }\r\n  \r\n  public getSubprocessList(bmId: string) {\r\n    const url = `${this.baseUrl}/getSubprocessList`;\r\n    return this.get<ValueLabel[]>(url, {bmId}, {noSpinner: 'noSpinner'}).pipe(shareReplay(1));\r\n  }\r\n\r\n  public getChildProcessList(bmId: string) {\r\n    const url = `${this.baseUrl}/getChildProcessList`;\r\n    return this.get<ValueLabel[]>(url, {bmId}, {noSpinner: 'noSpinner'}).pipe(shareReplay(1));\r\n  }\r\n\r\n  public getProcessDmos(processId: string) {\r\n    const url = `${this.GatewayBaseUrl}/getProcessDmoListByProcId`;\r\n    return this.get<ValueLabel[]>(url, {processId}, {noSpinner: 'noSpinner'}).pipe(shareReplay(1));\r\n  }\r\n\r\n  public getRoles(processName: string) {\r\n    const url = `${this.baseUrl}/role`;\r\n    return this.get<{value: string, label: string}[]>(url, null, {processName, noSpinner: 'noSpinner'}).pipe(shareReplay(1));\r\n  }\r\n\r\n  public getColorCodes() {\r\n    const url = `${this.baseUrl}/getColorCode`;\r\n    return this.get<fromModels.Value>(url);\r\n  }\r\n\r\n  public getCountriesList() {\r\n    const url = `${this.baseUrl}/getCountry`;\r\n    return this.get<fromModels.Value>(url);\r\n  }\r\n\r\n  public getTriggers(processName: string) {\r\n    const url = `${this.baseUrl}/trigger`;\r\n    return this.get<{Key: string, Value: string}[]>(url, null, {processName});\r\n  }\r\n\r\n  public encode(s: string) {\r\n    const url = `${this.baseUrl}/encode?str=${s}`;\r\n    return this.get<string>(url);\r\n  }\r\n\r\n  public saveSharedDmos(payload: ShareDmoPayload) {\r\n    const url = `${this.GatewayBaseUrl}/saveDMOGColumns`;\r\n    return this.post<boolean>(url, payload);\r\n  }\r\n  \r\n  public deleteDmo(dmoId: string, bmId: string) {\r\n    const url = `${this.GatewayBaseUrl}/deleteDmo`\r\n    return this.post<boolean>(url, null, {dmoId, bmId})\r\n  }\r\n\r\n  public saveSharedDmogs(bmoId: string, dmogIds: string) {    \r\n    const url = `${this.baseUrl}/SaveBmoDmogLinking`;\r\n    return this.post<boolean>(url, null, {bmoId, dmogIds});\r\n  }\r\n\r\n  public saveSharedBmos(bmogId: string, bmoIds: string) {    \r\n    const url = `${this.baseUrl}/SaveBmogBmoLinking`;\r\n    return this.post<boolean>(url, null, {bmogId, bmoIds});\r\n  }\r\n\r\n  public GetAvailableDmoToShare(bmogId: any, bmId: any) { \r\n    const url = `${this.GatewayBaseUrl}/GetAvailableDmoToShare`;\r\n    return this.get<any>(url,{bmogId, bmId})\r\n  }\r\n\r\n  public GetAvailableDmogToShare(bmogId: any, bmId: any) { \r\n    const url = `${this.GatewayBaseUrl}/GetAvailableDmogToShare`;\r\n    return this.get<any>(url,{bmogId, bmId})\r\n  }\r\n\r\n  public GetAvailableBmoToShare(bmogId: any, bmId: any) { \r\n    const url = `${this.GatewayBaseUrl}/GetAvailableBmoToShare`;\r\n    return this.get<any>(url,{bmogId, bmId})\r\n  }\r\n  \r\n  private generateRequestInfo(obj: fromModels.ObjectType, bm: classes.BM, action: 'save' | 'delete') {\r\n    const payload = bm.payload;\r\n    let path = '';\r\n    if ('BMOGID' in obj) {\r\n      path = `${action}BMOG`;\r\n      payload.bmog = obj;\r\n    }\r\n    else if ('BMOID' in obj) {\r\n      path = `${action}BMO`;\r\n      payload.bmo = obj;\r\n    }\r\n    else if ('DMOGID' in obj) {\r\n      path = `${action}DMOG${action === 'save' ? 'All' : ''}`;\r\n      payload.dmog = obj;\r\n    } \r\n    else if ('dmoName' in obj) {\r\n      path = `${action}DMO`;\r\n      payload.currentDmo = obj;\r\n    }\r\n    const url = `${this.GatewayBaseUrl}/${path}`;\r\n    return {payload, url};\r\n  }\r\n  public checkCanvasType(type: fromModels.EntityType, id: number, name: string, version: string, processName: string) {\r\n    const url = `${this.baseUrl}/checkCanvasTy/${type}/${id}/${name}/${version}`;\r\n    return this.get<boolean>(url, null, {processName});\r\n  }\r\n}  \r\n\r\n\r\ntype ValueLabel = {Value: string, Label: string};\r\nexport interface ShareDmoPayload {\r\n  processName:   string;\r\n  bmName:        string;\r\n  bmVersion:     string;\r\n  dmogName:      string;\r\n  leftDMOGuids:  string;\r\n  rightDMOGuids: string;\r\n  groupKey?:     string;\r\n}"],
  "mappings": "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",
  "names": []
}
