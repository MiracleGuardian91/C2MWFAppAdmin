{
  "version": 3,
  "sources": ["src/app/admin/data-modeler/models/dmog.model.ts", "src/app/admin/data-modeler/models/bmo.model.ts", "src/app/admin/data-modeler/models/bmog.model.ts", "src/app/admin/data-modeler/models/formio.model.ts", "src/app/admin/data-modeler/models/object-detail.class.ts", "src/app/admin/data-modeler/models/condition.model.ts", "src/app/admin/data-modeler/models/status.model.ts", "src/app/admin/data-modeler/classes/base-object.class.ts", "src/app/admin/data-modeler/classes/bmo.class.ts", "src/app/admin/data-modeler/classes/bmog.class.ts", "src/app/admin/data-modeler/classes/dm-component.class.ts", "src/app/admin/data-modeler/classes/dmog.class.ts", "src/app/admin/data-modeler/classes/bm.class.ts", "src/app/admin/data-modeler/classes/object-control.class.ts"],
  "sourcesContent": ["import { Share, StatusString } from \"@app/admin/BM/models\";\r\nimport { IBaseObject } from \"./base-object.model\";\r\n\r\nexport interface IDMOG extends IBaseObject {\r\n  GUID:         string;\r\n  DMOGID:       number;\r\n  DisplayName:  string;\r\n  IsCollapsed:  StatusString;\r\n  DefCollapsed: StatusString;\r\n  showHelp:     StatusString;\r\n  LongDesc:     string;\r\n  Parent:       string;\r\n  Type:         DMOGType;\r\n  Share:        Share[];\r\n  LnkBmoDmogID: number;\r\n  IsHidden:     StatusString;\r\n  Children:     string[];\r\n  Roles?:       {Key: string, Value: string}[];\r\n}\r\n\r\nexport enum DMOGType {\r\n  Standard = 'Normal',\r\n  Grid = 'Grid',\r\n  Media = 'Media',\r\n  JSONStaticGrid='JSONStaticGrid',\r\n}", "import { Share } from \"@app/admin/BM/models\";\r\nimport { IBaseObject } from \"./base-object.model\";\r\n\r\nexport interface IBMO extends IBaseObject {\r\n  BMOID:                number;\r\n  DisplayName:          string;\r\n  ShortDesc:            string;\r\n  LongDesc:             string;\r\n  Parent:               string;\r\n  Share:                Share[];\r\n  GUID:                 string;\r\n  BmoType:              BMOType;\r\n  SubProcessId:         string;\r\n  ChildProcessId:       string;\r\n  ParentProcessDmoGuid: string;\r\n  ChildProcessDmoGuid:  string;\r\n  ParentBMId?:          number;\r\n}\r\n\r\nexport enum BMOType {\r\n  Form = 'Forms',\r\n  Contact = 'Contacts',\r\n  Attachment = 'Attachments',\r\n  Document = 'Documents',\r\n  SubProcess = 'Subprocess',\r\n  ChildProcess = 'ChildProcess',\r\n  SharedChildProcess = 'SharedChildProcess',\r\n}\r\nexport enum FormBmoType {\r\n  Form = 'Forms',\r\n}", "import { Share } from \"@app/admin/BM/models\";\r\nimport { IBaseObject } from \"./base-object.model\";\r\n\r\nexport interface IBMOG extends IBaseObject {\r\n  CanvasType: CanvasType;\r\n  LongDesc:   string;\r\n  Parent:     string;\r\n  BMOGID:     number;\r\n  Share:      Share[];\r\n  EnableTLCorner : EnableTLCorner;\r\n}\r\n\r\nexport enum CanvasType {\r\n  Admin = 'AdminView',\r\n  Form = 'Form',\r\n  User = 'UserView',\r\n  View1 = 'View1',\r\n  View2 = 'View2',\r\n  View3 = 'View3',\r\n  View4 = 'View4',\r\n  View5 = 'View5',\r\n  View6 = 'View6',\r\n}\r\n\r\nexport enum EnableTLCorner {\r\n  Yes = '1',\r\n  No = '0',\r\n}\r\nexport const canvasType: Record<string, CanvasType> = {\r\n  'Admin View': CanvasType.Admin,\r\n  'Form View': CanvasType.Form,\r\n  'User View': CanvasType.User,\r\n  'View 1': CanvasType.View1,\r\n  'View 2': CanvasType.View2,\r\n  'View 3': CanvasType.View3,\r\n  'View 4': CanvasType.View4,\r\n  'View 5': CanvasType.View5,\r\n  'View 6': CanvasType.View6,\r\n}", "import { KeyValue } from \"@app/admin/BM/models\";\r\nimport { DMOType, Status } from \".\";\r\n\r\nexport interface IFormio {\r\n  display: string;\r\n  components: IDMComponent[];\r\n  _id: string;\r\n}\r\n\r\nexport interface IDMComponent {\r\n  _protected: boolean;\r\n  action: string;\r\n  allowCalculateOverride: boolean;\r\n  allowInput: boolean;\r\n  authenticate: boolean;\r\n  autoAdjust: boolean;\r\n  autofocus: boolean;\r\n  block: boolean;\r\n  calculateValue: string;\r\n  clearOnHide: boolean;\r\n  clearOnRefresh: boolean;\r\n  conditional: {show: any, when: any, eq: string};\r\n  columns: Column[];\r\n  columns1: Column[];\r\n  comparatorSelect: KeyValue;\r\n  compareOprator: KeyValue;\r\n  components: IDMComponent[];\r\n  conditionNA: boolean;\r\n  customClass: string;\r\n  customDefaultValue: string;\r\n  data: Data;\r\n  dataGridLabel: boolean;\r\n  dbIndex: boolean;\r\n  dataSrc: DataSource;\r\n  datePicker: Datepicker;\r\n  datepickerMode: string;\r\n  default_Value: any;\r\n  defaultDate: string;\r\n  defaultValue: any;\r\n  description: string;\r\n  disabled: boolean;\r\n  disableOnInvalid: boolean;\r\n  displayInTimezone: string;\r\n  dmo_dataType: string;\r\n  dmoName: string;\r\n  enableDate: boolean;\r\n  enableTime: boolean;\r\n  errorLabel: string;\r\n  expression: string;\r\n  expressionMessage: string;\r\n  fieldSet: boolean;\r\n  fileMaxSize: string;\r\n  fileMinSize: string;\r\n  filePattern: string;\r\n  filter: string;\r\n  format: string;\r\n  height: string;\r\n  hidden: boolean;\r\n  hideChild: boolean;\r\n  hideLabel: boolean;\r\n  id: string;\r\n  image: boolean;\r\n  imageSize: string;\r\n  inline: boolean;\r\n  input: boolean;\r\n  inputMask: string;\r\n  inputType: string;\r\n  is24hourformat: boolean;\r\n  isalphanumeric: boolean;\r\n  isautoCrop: boolean;\r\n  isEncrypt: boolean;\r\n  israndom: boolean;\r\n  isUploadEnabled: boolean;\r\n  key: string;\r\n  kickbox: Kickbox;\r\n  label: string;\r\n  labelMargin: number;\r\n  labelPosition: string;\r\n  labelWidth: number;\r\n  leftIcon: string;\r\n  mappings: KeyValue[];\r\n  mask: boolean;\r\n  minlength: string;\r\n  minSearch: number;\r\n  multiple: boolean;\r\n  optionsLabelPosition: string;\r\n  parentDmo: KeyValue;\r\n  persistent: boolean;\r\n  placeholder: string;\r\n  prefix: string;\r\n  protected: boolean;\r\n  RangeCal: string;\r\n  refreshOn: string;\r\n  regxType: RegExType;\r\n  rightIcon: string;\r\n  searchEnabled: boolean;\r\n  searchField: string;\r\n  select: KeyValue[];\r\n  selectFields: string;\r\n  showtooltip: boolean;\r\n  size: string;\r\n  startwith: string;\r\n  status: Status;\r\n  suffix: string;\r\n  tabindex: string;\r\n  tableView: boolean;\r\n  theme: string;\r\n  template: string;\r\n  timePicker: Timepicker;\r\n  timezone: string;\r\n  tooltip: string;\r\n  tree: boolean;\r\n  type: DMOType | 'columns';\r\n  unique: boolean;\r\n  uploadDirectory: string;\r\n  uploadLimit: string;\r\n  uploadOnly: boolean;\r\n  uploadOptions: string;\r\n  uploadStorage: StorageProvider;\r\n  uploadUrl: string;\r\n  useLocaleSettings: boolean;\r\n  validate: Validate;\r\n  validateOn: string;\r\n  valueProperty: string;\r\n  values: Value[];\r\n  widget: Widget;\r\n  dmoId: number;\r\n  guid: string;\r\n  column: number;\r\n}\r\n\r\ninterface Column {\r\n  columnId: number;\r\n  _protected: boolean;\r\n  allowInput: boolean;\r\n  autoAdjust: boolean;\r\n  autofocus: boolean;\r\n  dataGridLabel: boolean;\r\n  disabled: boolean;\r\n  enableDate: boolean;\r\n  enableTime: boolean;\r\n  fieldSet: boolean;\r\n  hidden: boolean;\r\n  image: boolean;\r\n  input: boolean;\r\n  mask: boolean;\r\n  multiple: boolean;\r\n  persistent: boolean;\r\n  searchEnabled: boolean;\r\n  tableView: boolean;\r\n  tree: boolean;\r\n  unique: boolean;\r\n  uploadOnly: boolean;\r\n  useLocaleSettings: boolean;\r\n  components: IDMComponent[];\r\n  condition: Condition[];\r\n  columns: Column[];\r\n  data: Data;\r\n  datePicker: Datepicker;\r\n  labelMargin: number;\r\n  labelWidth: number;\r\n  minSearch: number;\r\n  kickbox: Kickbox;\r\n  select: KeyValue[];\r\n  default_Value: any;\r\n  defaultValue: any;\r\n  customClass: string;\r\n  customDefaultValue: string;\r\n  dataSrc: DataSource;\r\n  datepickerMode: string;\r\n  defaultDate: string;\r\n  description: string;\r\n  displayInTimezone: string;\r\n  dmoName: string;\r\n  errorLabel: string;\r\n  fileMaxSize: string;\r\n  fileMinSize: string;\r\n  filePattern: string;\r\n  filter: string;\r\n  format: string;\r\n  height: string;\r\n  id: string;\r\n  imageSize: string;\r\n  inputMask: string;\r\n  inputType: string;\r\n  key: string;\r\n  label: string;\r\n  labelPosition: string;\r\n  optionsLabelPosition: string;\r\n  placeholder: string;\r\n  prefix: string;\r\n  refreshOn: string;\r\n  suffix: string;\r\n  searchField: string;\r\n  selectFields: string;\r\n  tabindex: string;\r\n  template: string;\r\n  theme: string;\r\n  timezone: string;\r\n  tooltip: string;\r\n  type: string;\r\n  validateOn: string;\r\n  valueProperty: string;\r\n  timePicker: Timepicker;\r\n  values: Value[];\r\n  widget: Widget;\r\n  validate: Validate;\r\n  width: number;\r\n  rowIndex: number;\r\n  offset: number;\r\n  push: number;\r\n  pull: number;\r\n  index: number;\r\n  dmoid: string;\r\n}\r\n\r\ninterface Widget {\r\n  type: string;\r\n  displayInTimezone: string;\r\n  language: string;\r\n  useLocaleSettings: boolean;\r\n  allowInput: boolean;\r\n  mode: string;\r\n  enableTime: boolean;\r\n  noCalendar: boolean;\r\n  format: string;\r\n  defaultDate: string;\r\n  hourIncrement: number;\r\n  minuteIncrement: number;\r\n  time_24hr: boolean;\r\n  minDate: any;\r\n  maxDate: any;\r\n}\r\n\r\nexport interface Validate {\r\n  required: boolean;\r\n  custom: string;\r\n  customPrivate: boolean;\r\n  minLength: string;\r\n  maxLength: string;\r\n  minWords: string;\r\n  maxWords: string;\r\n  pattern: string;\r\n  disabled: boolean;\r\n}\r\n\r\ninterface Kickbox {\r\n  enabled: boolean;\r\n}\r\n\r\nexport interface Data {\r\n  values: Value[];\r\n  json: JsonData[] | string;\r\n  url: string;\r\n  headers: KeyValue[];\r\n  resource: string;\r\n  custom: string;\r\n  apiparams: string;\r\n  apiurl: string;\r\n  fieldparams: string;\r\n  modelbody: string;\r\n  datasource: string;\r\n  mappings: ASBMapping[];\r\n  emitonstart: boolean;\r\n  dependencydmos: ASBMapping[];\r\n  dependentdmos: DependentData[];\r\n}\r\n\r\nexport interface JsonData {\r\n  TextField: string;\r\n  ValueField: string;\r\n  ParentKey: string;\r\n}\r\n\r\ninterface Datepicker {\r\n  showWeeks: boolean;\r\n  startingDay: number;\r\n  initDate: string;\r\n  minMode: string;\r\n  maxMode: string;\r\n  yearRows: number;\r\n  yearColumns: number;\r\n  minDate: any;\r\n  maxDate: any;\r\n}\r\n\r\ninterface Timepicker {\r\n  hourStep: number;\r\n  minuteStep: number;\r\n  showMeridian: boolean;\r\n  readonlyInput: boolean;\r\n  mousewheel: boolean;\r\n  arrowkeys: boolean;\r\n}\r\n\r\nexport interface Value {\r\n  label: string;\r\n  value: string;\r\n  shortcut?: string;\r\n}\r\n\r\n\r\nexport interface DMOConditions {\r\n  condition: Condition[];\r\n}\r\n\r\nexport interface Dmo1 {\r\n  condition: Condition[];\r\n}\r\n\r\nexport interface Condition {\r\n  id: string;\r\n  name: string;\r\n  version: string;\r\n  status: string;\r\n  shortDesc: string;\r\n  conditions: Conditions[];\r\n  executeElse: string;\r\n  action: KeyValue[];\r\n  conditionArea: Conditionarea;\r\n}\r\n\r\nexport enum DataSource {\r\n  Values = 'values',\r\n  JSON = 'json',\r\n  C2MIceApi = 'c2miceapi',\r\n  WFApi = 'wfapigetdata',\r\n  Custom = 'custom',\r\n}\r\n\r\nexport enum CustomDataSource {\r\n  Country = 'wf_GetCountry',\r\n  State = 'wf_GetState',\r\n  City = 'wf_GetCity',\r\n  UserByRole = 'WF_API_ROLECONTROLUSER'\r\n}\r\n\r\nexport enum RegExType {\r\n  Alphabetic = 'alphabates',\r\n  Alphanumeric = 'alphanumeric',\r\n  Integer = 'integer',\r\n  Float = 'float',\r\n  Percent = 'percent',\r\n  Dollar = 'dollar',\r\n  Custom = 'custom',\r\n}\r\n\r\nexport enum StorageProvider {\r\n  Base64 = 'base64',\r\n  Dropbox = 'dropbox',\r\n  S3 = 's3',\r\n  Url = 'url',\r\n  Azure = 'azurefileservices',\r\n}\r\n\r\nexport interface Conditionarea {\r\n  key: string;\r\n  value: KeyValue[];\r\n}\r\n\r\nexport interface Conditions {\r\n  conditionId: string;\r\n  dmo: string;\r\n  exp: string;\r\n  value: string;\r\n  logical: string;\r\n  label: string;\r\n}\r\n\r\nexport interface ParentChildDmoData {\r\n  parentProcessId: string;\r\n  childProcessId: string;\r\n  childProcessName: string;\r\n  parentBMId: string;\r\n  parentProcessDmoGuid: string;\r\n  childProcessDmoGuid: string;\r\n}\r\n\r\n\r\nexport interface ASBMapping {\r\n  Name: string;\r\n  GUID: string;\r\n}\r\n\r\nexport interface DependentData {\r\n  name: string;\r\n}", "import {\r\n  AfterViewInit,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n} from '@angular/forms';\r\nimport { FormAction } from '@app/admin/wf/wfd/models/element-detail.class';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { DataModelerResponse } from '.';\r\n\r\n@Directive()\r\nexport abstract class ObjectDetail<Data, Parent>\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  @Input() title: string;\r\n  @Input() data: Data | undefined;\r\n  @Input() dmr: DataModelerResponse;\r\n  @Input() parent: Parent | undefined;\r\n  @Input() formActions: FormAction[] = [];\r\n  @Output() output = new EventEmitter<Data>();\r\n\r\n  public form: UntypedFormGroup;\r\n\r\n  public submitted = false;\r\n  public newObject = false;\r\n\r\n  protected componentActive = true;\r\n\r\n  get f() {\r\n    return this.form.controls as Record<keyof Data, AbstractControl>;\r\n  }\r\n\r\n  constructor(public ref: NgbActiveModal, protected fb: UntypedFormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.beforeFormInit();\r\n    this.initForm();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initFormActions();\r\n    this.afterFormInit();\r\n  }\r\n  private initFormActions() {\r\n    this.formActions.forEach((action) => {\r\n      this.form\r\n        .get(action.controlName)\r\n        .valueChanges.pipe(takeWhile((_) => this.componentActive))\r\n        .subscribe((val) => action.handler(val));\r\n    });\r\n  }\r\n\r\n  protected beforeFormInit() {\r\n    return;\r\n  }\r\n\r\n  protected initForm() {\r\n    return;\r\n  }\r\n\r\n  protected afterFormInit() {\r\n    return;\r\n  }\r\n\r\n  public onCancel() {\r\n    this.ref.close();\r\n  }\r\n\r\n  public onSubmit() {}\r\n\r\n  ngOnDestroy() {\r\n    this.componentActive = false;\r\n  }\r\n}\r\n", "export interface IConditionBody {\r\n  Id:            string;\r\n  Name:          string;\r\n  Version:       string;\r\n  Status:        string;\r\n  ShortDesc:     string;\r\n  Conditions:    ICondition[];\r\n  ExecuteElse:   string;\r\n  Action:        Action[];\r\n  ConditionArea: ConditionArea;\r\n}\r\n\r\nexport interface Action {\r\n  key:    'Enabled' | 'Visible' | 'Mandatory';\r\n  value?: ActionState;\r\n}\r\n\r\nexport enum ActionState {\r\n  No,\r\n  Yes,\r\n  NA\r\n}\r\n\r\nexport interface ConditionArea {\r\n  key: ConditionAreaKey,\r\n  value: Value[];\r\n}\r\n\r\nexport type ConditionAreaKey =  'BusinessModelObject' | 'DataModelGroup' | 'DataModelObject' | 'Trigger';\r\n\r\ninterface Value {\r\n  Key:   string;\r\n  Value: string;\r\n}\r\n\r\nexport interface ICondition {\r\n  ConditionId: string;\r\n  Dmo:         string;\r\n  Exp:         string;\r\n  Value:       string;\r\n  Logical:     string;\r\n  Label:       string;\r\n}\r\n", "export enum Status {\r\n  Active = '1',\r\n  Inactive = '0',\r\n}\r\n\r\nexport enum DMOStatus {\r\n  Active = '1',\r\n  Inactive = '2',\r\n}\r\n//Manish changes\r\nexport enum NotificationOption {\r\n  None = 0,\r\n  Custom_Notification = 1,  \r\n}", "import { StatusString } from \"@app/admin/BM/models\";\r\nimport { BM } from \"./bm.class\";\r\nimport { ObjectClass } from \"./object-class.type\";\r\n\r\nexport class BaseObject<P, C extends ObjectClass, T = any> {\r\n  public readonly id:                 string;\r\n  public readonly Name:               string;\r\n  public readonly Version:            string;\r\n  public readonly childrenMap?:       Partial<Record<string, C>>;\r\n  public Status:                      StatusString;\r\n  public Children:                    string[];\r\n  public root:                        BM;\r\n\r\n  constructor(obj: any = {}, public parent: P) {\r\n    this.id = obj.id || '';\r\n    this.Name = obj.Name || '';\r\n    this.Version = obj.Version || (parent as any)?.Version || '';\r\n    this.Children = obj.Children || [];\r\n    this.Status = obj.Status || '0';\r\n    this.childrenMap = {};\r\n  }\r\n\r\n  public getChild(guid: string) {\r\n   return this.childrenMap[guid]\r\n  }\r\n\r\n  public addChild(child: C) {\r\n    if (!this.Children.includes(child.id)){\r\n      this.Children.push(child.id);\r\n    }\r\n    this.childrenMap[child.id] = child;\r\n  }\r\n  \r\n  public addChildAt(child: C, index: number) {\r\n    if (!this.Children.includes(child.id)) {\r\n      this.Children = this.Children.slice(0, index).concat(child.id, this.Children.slice(index));\r\n    }\r\n    this.childrenMap[child.id] = child;\r\n  }\r\n\r\n  public removeChild(id: string) {\r\n    this.Children = this.Children.filter(cid => cid !== id);\r\n    delete this.childrenMap[id];\r\n  }\r\n\r\n  public update(obj: Partial<T> = {}) {\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      this[key] = value;\r\n    })\r\n  }\r\n\r\n  public unreference() {\r\n    const {childrenMap, parent, root, ...rest} = this;\r\n    if ('DMOGID' in this) {\r\n      delete rest['formData'];\r\n      delete rest['Children'];\r\n      delete rest['Roles'];\r\n    }\r\n    return rest; \r\n  }\r\n}", "import { Share } from \"@app/admin/BM/models\";\r\nimport { BMOType, IBMO } from \"../models\";\r\nimport { BaseObject } from \"./base-object.class\";\r\nimport { BMOG } from \"./bmog.class\";\r\nimport { DMOG } from \"./dmog.class\";\r\n\r\nexport class BMO extends BaseObject<BMOG, DMOG> {\r\n  BMOID:                number;\r\n  DisplayName:          string;\r\n  ShortDesc:            string;\r\n  LongDesc:             string;\r\n  Parent:               string;\r\n  Share:                Share[];\r\n  GUID:                 string;\r\n  BmoType:              BMOType;\r\n  SubProcessId:         string;\r\n  ChildProcessId:       string;\r\n  ParentProcessDmoGuid: string;\r\n  ChildProcessDmoGuid:  string;\r\n\r\n  constructor(obj: Partial<IBMO>, parent: BMOG) {\r\n    super(obj, parent);\r\n    this.BMOID = obj.BMOID;\r\n    this.DisplayName = obj.DisplayName;       \r\n    this.ShortDesc = obj.ShortDesc;\r\n    this.LongDesc = obj.LongDesc;\r\n    this.Parent = obj.Parent || parent.id;\r\n    this.Share = obj.Share || [];               \r\n    this.GUID = obj.GUID;\r\n    this.BmoType = obj.BmoType;       \r\n    this.SubProcessId = obj.SubProcessId; \r\n    this.ChildProcessId = obj.ChildProcessId;\r\n    this.ParentProcessDmoGuid = obj.ParentProcessDmoGuid;\r\n    this.ChildProcessDmoGuid =  obj.ChildProcessDmoGuid;\r\n    this.root = parent.parent;\r\n  }\r\n\r\n  get shared() {\r\n    return this.parent.Share.some(({value}) => value === this.id);\r\n  }\r\n}", "import { Share } from \"@app/admin/BM/models\";\r\nimport { CanvasType, EnableTLCorner, IBMOG } from \"../models\";\r\nimport { BaseObject } from \"./base-object.class\";\r\nimport { BM } from \"./bm.class\";\r\nimport { BMO } from \"./bmo.class\";\r\n\r\nexport class BMOG extends BaseObject<BM, BMO>  {\r\n  CanvasType: CanvasType;\r\n  LongDesc:   string;\r\n  Parent:     string;\r\n  BMOGID:     number;\r\n  Share:      Share[];\r\n  EnableTLCorner: EnableTLCorner;\r\n\r\n  constructor(obj: Partial<IBMOG>, parent: BM) {\r\n    super(obj, parent);\r\n    this.BMOGID = obj.BMOGID;\r\n    this.CanvasType = obj.CanvasType;\r\n    this.LongDesc = obj.LongDesc;\r\n    this.Parent = obj.Parent || parent.id;\r\n    this.Share = obj.Share || [];\r\n    this.root = parent;\r\n    this.EnableTLCorner = obj.EnableTLCorner;\r\n  }\r\n}", "import { nameToGuid } from '@lib/util';\r\nimport { uniqueId } from 'lodash';\r\nimport {\r\n  DataSource,\r\n  DMOType,\r\n  IConditionBody,\r\n  IDMComponent,\r\n  Status,\r\n} from '../models';\r\nimport { DMOG } from './dmog.class';\r\n\r\nexport class DMComponent implements Partial<IDMComponent> {\r\n  _protected = false;\r\n  parentDmo = null;\r\n  // action = 'submit';\r\n  authenticate = false;\r\n  allowCalculateOverride = false;\r\n  allowInput = false;\r\n  autoAdjust = false;\r\n  autofocus = false;\r\n  // block = false;\r\n  calculateValue = '';\r\n  clearOnHide = false;\r\n  clearOnRefresh = false;\r\n  clonedIndex = 0;\r\n  fromApi = true;\r\n  column = 0;\r\n  comparatorSelect = null;\r\n  compareOprator = null;\r\n  conditional = { show: null, when: null, eq: '' };\r\n  conditionNA = false;\r\n  conditions: IConditionBody[] = [];\r\n  customClass = '';\r\n  customDefaultValue = '';\r\n  dataGridLabel = false;\r\n  dataSrc = DataSource.Values;\r\n  dbIndex = false;\r\n  default_Value = '';\r\n  defaultValue = '';\r\n  description = '';\r\n  // disabled = false;\r\n  // disableOnInvalid = false;\r\n  // dmo_dataType = null;\r\n  dmoName: string = null;\r\n  dmoId: number = null;\r\n  enableDate = false;\r\n  enableTime = false;\r\n  errorLabel = '';\r\n  expression = '';\r\n  expressionMessage = '';\r\n  fieldSet = false;\r\n  // filter = '';\r\n  // hidden = false;\r\n  hideChild = false;\r\n  // hideLabel = false;\r\n  id = uniqueId();\r\n  image = false;\r\n  inline = false;\r\n  input = true;\r\n  inputType = null;\r\n  is24hourformat = false;\r\n  isalphanumeric = false;\r\n  isautoCrop = false;\r\n  isEncrypt = false;\r\n  israndom = false;\r\n  // isUploadEnabled = false;\r\n  key = null;\r\n  label = null;\r\n  labelMargin = 3;\r\n  labelPosition = 'top';\r\n  labelWidth = 30;\r\n  // leftIcon = '';\r\n  mask = false;\r\n  minlength = '';\r\n  minSearch = 0;\r\n  multiple = false;\r\n  persistent = false;\r\n  placeholder = '';\r\n  prefix = '';\r\n  protected = false;\r\n  RangeCal = null;\r\n  regxType = null;\r\n  refreshOn = '';\r\n  // rightIcon = '';\r\n  searchEnabled = false;\r\n  searchField = '';\r\n  selectFields = '';\r\n  showtooltip = false;\r\n  // size = 'md';\r\n  startwith = null;\r\n  status = Status.Active;\r\n  suffix = '';\r\n  tabindex = '';\r\n  tableView = true;\r\n  theme = 'info';\r\n  tooltip = '';\r\n  tree = false;\r\n  type = null;\r\n  unique = false;\r\n  // uploadDirectory = null;\r\n  uploadLimit = null;\r\n  uploadOnly = false;\r\n  // uploadOptions = null;\r\n  // uploadStorage = StorageProvider.Base64;\r\n  // uploadUrl = null;\r\n  useLocaleSettings = false;\r\n  validateOn = 'change';\r\n  values = [];\r\n  widget = null;\r\n  data = {\r\n    values: [],\r\n    json: [],\r\n    url: '',\r\n    headers: [],\r\n    resource: '',\r\n    custom: '',\r\n    apiparams: null,\r\n    apiurl: null,\r\n    fieldparams: null,\r\n    modelbody: null,\r\n    datasource: null,\r\n    mappings: [],\r\n    emitonstart: false,\r\n    dependencydmos: [],\r\n    dependentdmos: [],\r\n  };\r\n  validate = {\r\n    required: false,\r\n    customPrivate: false,\r\n    maxLength: '',\r\n    disabled: false,\r\n    custom: '',\r\n    maxWords: null,\r\n    minLength: '',\r\n    minWords: null,\r\n    pattern: null,\r\n  };\r\n\r\n  guid: string;\r\n\r\n  get shared() {\r\n    return this.parent.Share.some(({ value }) => value === this.guid);\r\n  }\r\n\r\n  constructor(obj: Partial<IDMComponent> = {}, public parent: DMOG) {\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (value && typeof value === 'object' && !Array.isArray(value)) {\r\n        Object.entries(value).forEach(([k, v]) => {\r\n          if (!this[key]) this[key] = {};\r\n          this[key][k] = obj[key] && obj[key][k] ? obj[key][k] : v;\r\n        });\r\n      } else {\r\n        this[key] = obj[key] ?? this[key];\r\n      }\r\n    });\r\n    this.guid = obj.guid;\r\n  }\r\n\r\n  public clone() {\r\n    const cloned = new DMComponent(this, this.parent);\r\n    cloned.label = cloned.label + ` Copy ${this.clonedIndex}`;\r\n    cloned.dmoName = `${cloned.dmoName}_copy_${this.clonedIndex}`;\r\n    cloned.id = `${cloned.id}${this.clonedIndex}`;\r\n    cloned.clonedIndex = 0;\r\n    cloned.fromApi = false;\r\n    cloned.guid = this.guid + `copy${this.clonedIndex}`;\r\n    this.clonedIndex++;\r\n    return cloned;\r\n  }\r\n\r\n  public asObject(): Partial<IDMComponent> {\r\n    const { conditions, parent, clonedIndex, ...rest } = this;\r\n    return rest;\r\n  }\r\n\r\n  public dmoListByType(type?: DMOType) {\r\n    const list: { key: string; value: string; parent: string }[] = [];\r\n    Object.values(this.parent.root.childrenMap)\r\n      .flatMap((bmog) => Object.values(bmog.childrenMap))\r\n      .flatMap((bmo) => Object.values(bmo.childrenMap))\r\n      .flatMap((dmog) => Object.values(dmog.childrenMap))\r\n      .forEach((dmo) => {\r\n        if (type) {\r\n          if (dmo.type === type && dmo.dmoName !== this.dmoName) {\r\n            list.push({\r\n              key: dmo.guid,\r\n              value: dmo.label,\r\n              parent: dmo.parent.DisplayName,\r\n            });\r\n          }\r\n        } else {\r\n          if (!list.some((lst) => lst.key === dmo.guid))\r\n            list.push({\r\n              key: dmo.guid,\r\n              value: dmo.label,\r\n              parent: dmo.parent.DisplayName,\r\n            });\r\n        }\r\n      });\r\n    return list;\r\n  }\r\n\r\n  public addCondition(condition: IConditionBody) {\r\n    this.conditions.push(condition);\r\n  }\r\n}\r\n", "import { Share, StatusString } from \"@app/admin/BM/models\";\r\nimport { DMOGType, IDMComponent, IDMOG, IFormio } from \"../models\";\r\nimport { BaseObject } from \"./base-object.class\";\r\nimport { BMO } from \"./bmo.class\";\r\nimport { DMComponent } from \"./dm-component.class\";\r\n\r\nexport class DMOG extends BaseObject<BMO, any>  {\r\n  GUID:         string;\r\n  DMOGID:       number;\r\n  DisplayName:  string;\r\n  IsCollapsed:  StatusString;\r\n  DefCollapsed: StatusString;\r\n  showHelp:     StatusString;\r\n  LongDesc:     string;\r\n  Parent:       string;\r\n  Type:         DMOGType;\r\n  Share:        Share[];\r\n  LnkBmoDmogID: number;\r\n  IsHidden:     StatusString;\r\n  declare Children:     string[];\r\n  Roles?:       {Key: string, Value: string}[];\r\n  public formData: IFormio;\r\n  public readonly childrenMap: Partial<Record<string, DMComponent>> = {};\r\n\r\n  constructor(obj: Partial<IDMOG>, parent: BMO) {\r\n    super(obj, parent);\r\n    this.GUID = obj.GUID; \r\n    this.DMOGID = obj.DMOGID;\r\n    this.DisplayName = obj.DisplayName;\r\n    this.IsCollapsed = obj.IsCollapsed;\r\n    this.DefCollapsed = obj.DefCollapsed;\r\n    this.showHelp = obj.showHelp;\r\n    this.LongDesc = obj.LongDesc;\r\n    this.Parent = obj.Parent || parent.id;\r\n    this.Type = obj.Type;\r\n    this.Share = obj.Share || [];\r\n    this.LnkBmoDmogID = obj.LnkBmoDmogID;\r\n    this.IsHidden = obj.IsHidden;\r\n    this.Children = obj.Children || [];\r\n    this.Roles = obj.Roles || [];\r\n    this.root = parent.parent.parent;\r\n    this.formData = this.generateFormDataBoilerplate() as any;\r\n  }\r\n\r\n  get shared() {\r\n    // return Object.values(this.root.childrenMap)\r\n    // .flatMap(bmog => Object.values(bmog.childrenMap))\r\n    // .filter(bmo => bmo.id !== this.parent.id)\r\n    // .some(bmo => bmo.childrenMap[this.id])\r\n    return this.parent.Share.some(({value}) => value === this.id);\r\n  }\r\n\r\n  public addFormData(formData: IFormio) {\r\n    if (formData?.components?.length > 0) {\r\n      this.formData = formData;\r\n    }\r\n  }\r\n\r\n  public addChild(child: DMComponent) {\r\n    if (!this.Children.includes(child.dmoName)){\r\n      this.Children.push(child.dmoName);\r\n    }\r\n    this.childrenMap[child.dmoName] = child;\r\n  }\r\n\r\n  public removeChild(name: string): void {\r\n    this.Children = this.Children.filter(c => c !== name);\r\n    delete this.childrenMap[name];\r\n  }\r\n\r\n  getChild(name: string) {\r\n    return this.childrenMap[name];\r\n  }\r\n\r\n  public findDmo(name: string): FormDataComponentInfo | null {\r\n    if (!name) return null;\r\n    const rows = this.formData.components;\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const row = rows[i];\r\n      for (let j = 0; j < row.columns.length; j++) {\r\n        const col = row.columns[j];\r\n        for (let k = 0; k < col.components.length; k++) {\r\n          const dmo = col.components[k];\r\n          if (dmo.dmoName === name) {\r\n            return {\r\n              rowIndex: i, \r\n              columnIndex: j, \r\n              dmoIndex: k,\r\n              dmo,\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public findDmoAndThen(name: string, cb: (info: FormDataComponentInfo | null) => any) {\r\n    const child = this.findDmo(name);\r\n    cb(child || null);\r\n    return child;\r\n  }\r\n\r\n  public update(obj: Partial<IDMOG> = {}): void {\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      this[key] = value;\r\n    });\r\n  }\r\n\r\n  private generateFormDataBoilerplate() {\r\n    return {\r\n      display: 'form',\r\n      // ROWS\r\n      components: [\r\n        {\r\n          input: false,\r\n          key: 'columns',\r\n          label: 'Columns',\r\n          type: 'columns',\r\n          // COLUMNS\r\n          columns: [\r\n            {\r\n              // DMOS\r\n              components: [\r\n              ],\r\n              width: 50,\r\n              offset: 0,\r\n              push: 0,\r\n              pull: 0,\r\n              type: 'column',\r\n              input: true,\r\n              key: 'column1',\r\n              hideOnChildrenHidden: false,\r\n              tableView: true\r\n            },\r\n            {\r\n              components: [],\r\n              width: 50,\r\n              offset: 0,\r\n              push: 0,\r\n              pull: 0,\r\n              type: 'column',\r\n              input: true,\r\n              key: 'column2',\r\n              hideOnChildrenHidden: false,\r\n              tableView: true\r\n            }\r\n          ],\r\n          tableView: false,\r\n          dataSrc: 2,\r\n          columns1: [\r\n            {\r\n              width: 50\r\n            },\r\n            {\r\n              width: 50\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      _id: this.id,\r\n    }\r\n  }\r\n}\r\n\r\nexport interface FormDataComponentInfo {\r\n  rowIndex: number, \r\n  columnIndex: number, \r\n  dmoIndex: number,\r\n  dmo: IDMComponent,\r\n}", "import { Share, StatusString } from '@app/admin/BM/models';\r\nimport { nameToGuid } from '@lib/util';\r\nimport { IBM, ObjectType, DataModelerResponse, BMMode } from '../models';\r\nimport { BaseObject } from './base-object.class';\r\nimport { BMO } from './bmo.class';\r\nimport { BMOG } from './bmog.class';\r\nimport { DMComponent } from './dm-component.class';\r\nimport { DMOG } from './dmog.class';\r\nimport { ObjectClass } from './object-class.type';\r\n\r\nexport class BM extends BaseObject<undefined, BMOG, IBM> {\r\n  DisplayName: string;\r\n  Mode: BMMode;\r\n  IntegrateWorkspace: string;\r\n  Description: string;\r\n  BMId: number;\r\n  Share: Share[];\r\n  ProcessName: string;\r\n  declare Status: StatusString;\r\n  EnableLoad: string;\r\n  ProcessId: string;\r\n  TypeId: string;\r\n  _selectedBMOG?: BMOG;\r\n  _selectedBMO?: BMO;\r\n  _selectedDMOG?: DMOG;\r\n\r\n  get selectedBMOG() {\r\n    return this._selectedBMOG;\r\n  }\r\n  set selectedBMOG(bmog: BMOG) {\r\n    this._selectedBMOG = bmog;\r\n  }\r\n\r\n  get selectedBMO() {\r\n    return this._selectedBMO;\r\n  }\r\n  set selectedBMO(bmo: BMO) {\r\n    this._selectedBMO = bmo;\r\n  }\r\n\r\n  get selectedDMOG() {\r\n    return this._selectedDMOG;\r\n  }\r\n  set selectedDMOG(bmo: DMOG) {\r\n    this._selectedDMOG = bmo;\r\n  }\r\n\r\n  constructor(obj: Partial<IBM>, parent: undefined) {\r\n    super(obj, parent);\r\n    this.DisplayName = obj.DisplayName;\r\n    this.Mode = obj.Mode;\r\n    this.IntegrateWorkspace = obj.IntegrateWorkspace || '0';\r\n    this.Description = obj.Description;\r\n    this.BMId = obj.BMId;\r\n    this.Share = obj.Share || [];\r\n    this.ProcessName = obj.ProcessName;\r\n    this.Status = obj.Status || '0';\r\n    this.EnableLoad = obj.EnableLoad;\r\n    this.ProcessId = obj.ProcessId;\r\n    this.TypeId = obj.TypeId;\r\n    this.root = this;\r\n  }\r\n\r\n  get published() {\r\n    return this.Mode === 'Published';\r\n  }\r\n\r\n  get payload() {\r\n    const { childrenMap, _selectedBMO, _selectedBMOG, _selectedDMOG, root, ...rest } = this;\r\n    const bmog = this.unreferenceChildren(childrenMap);\r\n    const bmo = {}\r\n    const dmog = {};\r\n    const dmo = {};\r\n    Object.values(this.childrenMap).forEach(bmog => {\r\n      Object.entries(bmog.childrenMap).forEach(([id, bmoClass]) => {\r\n        bmo[id] = bmoClass.unreference();\r\n        Object.entries(bmoClass.childrenMap).forEach(([id, dmogClass]) => {\r\n          dmo[id] = dmogClass.formData;\r\n          dmog[id] = dmogClass.unreference();\r\n        });\r\n      });\r\n    });\r\n    if (_selectedDMOG?.formData) {\r\n      dmo[_selectedDMOG.id] = _selectedDMOG.formData;\r\n    }\r\n    const currentDmo = {};\r\n    return {\r\n      bm: {\r\n        ...rest,\r\n        selectedBMOG: _selectedBMOG?.id,\r\n        selectedBMO: _selectedBMO?.id,\r\n        selectedDMOG: _selectedDMOG?.id,\r\n      },\r\n      bmog,\r\n      bmo,\r\n      dmog,\r\n      dmo,\r\n      currentDmo,\r\n      _BmogName: _selectedBMOG?.id,\r\n      _BmoName: _selectedBMO?.id,\r\n      _DmogName: _selectedDMOG?.id,\r\n    };\r\n  }\r\n\r\n  public unreferenceAll() {\r\n    const { childrenMap, _selectedBMO, _selectedBMOG, _selectedDMOG, root, ...rest } = this;\r\n    return rest;\r\n  }\r\n\r\n  private unreferenceChildren(childrenMap: Record<string, ObjectClass>): Record<string, ObjectType> | ObjectType {\r\n    const children = {};\r\n    Object.entries(childrenMap || {}).forEach(([id, obj]) => {\r\n      children[id] = obj.unreference();\r\n    });\r\n    return children;\r\n  }\r\n\r\n  public updateSelectedObjects(obj: ObjectClass) {\r\n    if (!obj) return;\r\n    if ('BMOGID' in obj) {\r\n      this.selectedBMOG = obj;\r\n    }\r\n    if ('BMOID' in obj) {\r\n      this.selectedBMO = obj;\r\n    }\r\n    if ('DMOGID' in obj) {\r\n      this.selectedDMOG = obj;\r\n    }\r\n    if ('dmoName' in obj) {\r\n      return;\r\n    }\r\n    const childId = obj?.Children[0];\r\n    if (childId) {\r\n      const firstChild = obj.childrenMap[childId];\r\n      this.updateSelectedObjects(firstChild as any);\r\n    } else {\r\n      switch (obj.id) {\r\n        case this.selectedBMOG?.id:\r\n          this.selectedBMO = null;\r\n          break;\r\n        case this.selectedBMO?.id:\r\n          this.selectedDMOG = null;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    this.cacheObjectIds();\r\n  }\r\n\r\n  public onRemoveChild(removedObjectId: string) {\r\n    switch (removedObjectId) {\r\n      case this.selectedBMOG?.id:\r\n        this.selectedBMOG = null;break;\r\n      case this.selectedBMO?.id:\r\n        this.selectedBMO = null;break;\r\n      case this.selectedDMOG?.id:\r\n        this.selectedDMOG = null;break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  static fromResponse(res: DataModelerResponse) {\r\n    const bm = new BM(res.Item1, undefined);\r\n    bm.Children.forEach((bmogId) => {\r\n      const bmog = new BMOG(res.Item2[bmogId], bm);\r\n      bm.addChild(bmog);\r\n      bmog.Children.forEach((bmoid) => {\r\n        const bmo = new BMO(res.Item3[bmoid], bmog);\r\n        bmog.addChild(bmo);\r\n        bmo.Children.forEach((dmogid) => {\r\n          const dmog = new DMOG(res.Item4[dmogid], bmo);\r\n          bmo.addChild(dmog);\r\n          res.Item5[dmogid]?.components.forEach((row) => {\r\n            row.columns.forEach((col, i) => {\r\n              col?.components?.forEach((dmoObj) => {\r\n                const guid = nameToGuid(dmoObj.dmoName);\r\n                dmoObj.dmoId = +res?.Item7.dmoIds[guid];\r\n                dmoObj.guid = guid;\r\n                dmoObj.column = i;\r\n                const dmo = new DMComponent(dmoObj, dmog);\r\n                dmog.addChild(dmo);\r\n                res?.Item6[dmo.guid]?.Condition.forEach((cond) => {\r\n                  dmo.addCondition(cond);\r\n                });\r\n              });\r\n            });\r\n          });\r\n          dmog.addFormData(res.Item5[dmogid]);\r\n        });\r\n      });\r\n    });\r\n    bm.setInitialSelectedObjects();\r\n    return bm;\r\n  }\r\n\r\n  private setInitialSelectedObjects() {\r\n    const { selectedBMOG, selectedBMO, selectedDMOG } = localStorage;\r\n    this._setInitialSelectedObject(this, [{selectedDMOG}, {selectedBMO}, {selectedBMOG}]);\r\n  }\r\n\r\n  /** Recursively go through objects children and set them as selected objects\r\n   * \r\n   *  @param parent is of type ObjectClass excluding DMComponent, \r\n   * \r\n   *  namely {@link BMOG} | {@link BMO} | {@link DMOG}\r\n   */\r\n  private _setInitialSelectedObject(parent: any, ids: Record<string, string>[]) {\r\n    if (ids.length === 0) return;\r\n    const [[key, id]] = Object.entries(ids.pop());\r\n    const child = parent.childrenMap[id];\r\n    if (child) {\r\n      this[key] = child;\r\n      this._setInitialSelectedObject(child, ids);\r\n    } else {\r\n      const firstChildId = parent.Children[0];\r\n      firstChildId && this.updateSelectedObjects(parent.childrenMap[firstChildId])\r\n    }\r\n  }\r\n\r\n  /** Invoked when an {@link ObjectClass} excluding {@link DMComponent} is saved or created */\r\n  public cacheObjectId(obj: ObjectType) {\r\n    if ('BMOGID' in obj) {\r\n      localStorage.selectedBMOG = obj.id;\r\n    }\r\n    if ('BMOID' in obj) {\r\n      localStorage.selectedBMO = obj.id;\r\n    }\r\n    if ('DMOGID' in obj) {\r\n      localStorage.selectedDMOG = obj.id;\r\n    }\r\n  }\r\n\r\n  private cacheObjectIds() {\r\n    localStorage.selectedBMOG = this.selectedBMOG?.id;\r\n    localStorage.selectedBMO = this.selectedBMO?.id;\r\n    localStorage.selectedDMOG = this.selectedDMOG?.id;\r\n  }\r\n}\r\n", "import { AbstractControl } from \"@angular/forms\";\r\nimport { ListConfig } from \"@app/admin/lib/list/list-config.model\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { ObjectControlConfig, ObjectControlType } from \"../models\";\r\n\r\nexport class ObjectControl<T> implements ObjectControlConfig<T> {\r\n  name: keyof T;\r\n  label?: string;\r\n  type: ObjectControlType;\r\n  show: Observable<boolean>;\r\n  options?: Observable<any[]>;\r\n  multiple?: boolean;\r\n  hint?: string;\r\n  required?: boolean;\r\n  readonly?: boolean;\r\n  class?: string;\r\n  group?: AbstractControl;\r\n  config?: ListConfig<any>;\r\n  groupOptionsBy?: string;\r\n  placeholder?: string;\r\n  \r\n  constructor(config: ObjectControlConfig<T>) {\r\n    this.name = config.name;\r\n    this.label = config?.label || config.name as string;\r\n    this.type = config.type || 'text';\r\n    this.show = config.show || of(true);\r\n    this.options = config.options;\r\n    this.multiple = config.multiple;\r\n    this.hint = config.hint;\r\n    this.required = config.required;\r\n    this.readonly = config.readonly;\r\n    this.class = config.class;\r\n    this.group = config.group;\r\n    this.config = config.config;\r\n    this.groupOptionsBy = config.groupOptionsBy;\r\n    this.placeholder = config.placeholder || '';\r\n  }\r\n}"],
  "mappings": "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",
  "names": ["DMOGType", "BMOType", "FormBmoType", "CanvasType", "EnableTLCorner", "DataSource", "CustomDataSource", "RegExType", "StorageProvider", "ActionState", "Status", "DMOStatus", "NotificationOption", "bmog", "id"]
}
