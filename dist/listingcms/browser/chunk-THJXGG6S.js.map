{
  "version": 3,
  "sources": ["src/app/admin/wf/wfd/components/stage-detail/stage-detail.component.ts", "src/app/admin/wf/wfd/components/stage-detail/stage-detail.component.html", "src/app/admin/wf/wfd/components/state-detail/state-detail.component.ts", "src/app/admin/wf/wfd/components/state-detail/state-detail.component.html", "src/app/admin/wf/wfd/pipes/filesize.pipe.ts", "src/app/admin/wf/wfd/directives/dropzone.directive.ts", "src/app/admin/wf/wfd/components/file-uploader/file-uploader.component.ts", "src/app/admin/wf/wfd/components/file-uploader/file-uploader.component.html", "src/app/admin/wf/wfd/components/trigger-detail/trigger-detail.component.ts", "src/app/admin/wf/wfd/components/trigger-detail/trigger-detail.component.html", "src/app/admin/wf/wfd/components/timer-detail/timer-detail.component.ts", "src/app/admin/wf/wfd/components/timer-detail/timer-detail.component.html", "src/app/admin/wf/wfd/components/trigger-condition-detail/trigger-condition-detail.component.ts", "src/app/admin/wf/wfd/components/trigger-condition-detail/trigger-condition-detail.component.html", "src/app/admin/wf/wfd/components/diagram/diagram.component.ts", "src/app/admin/wf/wfd/components/diagram/diagram.component.html", "src/app/admin/wf/wfd/services/diagram-storage.service.ts", "src/app/admin/wf/wfd/wfd.component.ts", "src/app/admin/wf/wfd/wfd.component.html", "src/app/admin/wf/wfd/wfd-routing.module.ts", "src/app/admin/wf/wfd/wfd.module.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Status } from '@app/admin/data-modeler/models';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { SaveStagePayload, WFStageDetail } from '../../models';\r\nimport { ElementDetail } from '../../models/element-detail.class';\r\nimport { Stage } from '../../models/wf.model';\r\nimport { WorkflowApiService } from '../../services/workflow-api.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MessageService } from '@app/core';\r\nimport { DetailService } from '../../services/detail.service';\r\nimport { EditorConfigService } from '@app/admin/CommonService/editor-config.service';\r\nimport { NgIf, NgClass } from '@angular/common';\r\nimport { EditorComponent } from '../../../../Shared/editor/editor.component';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\n@Component({\r\n    selector: 'app-stage-detail',\r\n    templateUrl: './stage-detail.component.html',\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgClass,\r\n        EditorComponent,\r\n        QuillModule\r\n    ],\r\n})\r\nexport class StageDetailComponent extends ElementDetail<\r\n  Stage,\r\n  WFStageDetail,\r\n  SaveStagePayload\r\n> {\r\n  processName: any;\r\n  editorConfig: any;\r\n  verNo: any;\r\n  id: any;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    fb: UntypedFormBuilder,\r\n    ref: NgbActiveModal,\r\n    msg: MessageService,\r\n    public wfapi: WorkflowApiService,\r\n    public detailService: DetailService,\r\n    readonly editorConfigService: EditorConfigService,\r\n  ) {\r\n    super(fb, ref, msg);\r\n  }\r\n\r\n \r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.processName = params['processName'];\r\n      this.verNo = params['VerNo'];\r\n      this.id = params['id'];\r\n    });\r\n\r\n    this.form = this.fb.group({\r\n      name: [this.data.StageName, NAME_VALIDATORS],\r\n      friendlyName: [this.data.DisplayName, Validators.required],\r\n      status: [\r\n        this.newElement ? Status.Active : this.data.Status,\r\n        Validators.required,\r\n      ],\r\n      shortDescription: [this.data.ShortDescription, Validators.required],\r\n      longDescription: [this.data.LongDescription],\r\n    });\r\n    this.editorConfig = this.editorConfigService.getToolbarOptions();\r\n   \r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const payload: SaveStagePayload = {\r\n        ...this.form.value,\r\n        accessToken: localStorage.getItem('AccessToken'),\r\n        wfoId: this.data.WfoId || '',\r\n        workFlowId: this.workflow.WFID,\r\n      };\r\n      this.updated.emit(payload);\r\n      this.ref.close(payload);\r\n    }\r\n  }\r\n\r\n  public CheckValidationWF() {\r\n    if (this.newElement === false || !this.form.controls['name'].value) {\r\n      return;\r\n    }\r\n    const processName = this.processName;\r\n    const type = 'stage';\r\n    const wfId = this.id;\r\n    const name = this.form.controls['name'].value;\r\n    const version = this.verNo;\r\n\r\n    this.wfapi.CheckValidationWF(processName, type, wfId, name, version).subscribe({\r\n      next: (isDuplicate: boolean) => {\r\n        this.detailService.handleValidationResult(isDuplicate, this.form.controls['name']);\r\n      },\r\n      error: (error) => {\r\n        this.detailService.handleValidationError(error);\r\n      }\r\n    });\r\n  }\r\n}", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newElement\">New Stage</h2>\r\n    <h2 *ngIf=\"!newElement\">Stage Details</h2>\r\n    <span class=\"popup__close\"\r\n      ><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i\r\n    ></span>\r\n  </div>\r\n  <hr />\r\n\r\n  <form [formGroup]=\"form\" *ngIf=\"form\">\r\n    <div class=\"double-column\">\r\n      <div class=\"form-group span-6\">\r\n        <label>Workflow Stage Name <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"name\"\r\n          [readonly]=\"!newElement\"\r\n          [style.background-color]=\"!newElement ? '#e9ecef' : 'white'\"\r\n          (blur)=\"CheckValidationWF()\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.name.errors) ||\r\n              (f.name.errors && !f.name.errors.required) ||\r\n              f.name.errors?.duplicate\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.name?.errors?.duplicate\" class=\"invalid-feedback\">\r\n          Duplicate name\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Friendly Name <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"friendlyName\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.friendlyName.errors) ||\r\n              (f.friendlyName.errors && !f.friendlyName.errors.required)\r\n          }\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Status <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <select\r\n          class=\"form-control\"\r\n          formControlName=\"status\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.status.errors) ||\r\n              (f.status.errors && !f.status.errors.required)\r\n          }\"\r\n        >\r\n          <option value=\"1\">Active</option>\r\n          <option value=\"0\">Inactive</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Short Description <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"shortDescription\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.shortDescription.errors) ||\r\n              (f.shortDescription.errors && !f.shortDescription.errors.required)\r\n          }\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group span-6 span-12\">\r\n        <label>Long Description</label>\r\n        <br />\r\n        <div class=\"Ql-container\">\r\n          <quill-editor\r\n            [modules]=\"{ toolbar: editorConfig.toolbar }\"\r\n            class=\"Ql-InsideContainer\"\r\n            formControlName=\"longDescription\"\r\n          ></quill-editor>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">\r\n        Cancel\r\n      </button>\r\n      <button\r\n        class=\"btn btn-primary btn-sm\"\r\n        type=\"submit\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"!published\"\r\n      >\r\n        <ng-container *ngIf=\"newElement\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newElement\">Update</ng-container>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n", "import { Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Status } from '@app/admin/data-modeler/models';\r\nimport { ListConfig } from '@app/admin/lib/list/list-config.model';\r\nimport { MessageService } from '@app/core';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SaveStatePayload, StateSpecificationType, TriggerListItem, WFStateDetail } from '../../models';\r\nimport { ElementType, StateShapeType } from '../../models/bpmn';\r\nimport { ElementDetail } from '../../models/element-detail.class';\r\nimport { State } from '../../models/wf.model';\r\nimport { DetailService } from '../../services/detail.service';\r\nimport { arrayToList, KeyValueList, keyValueListToKeyList, objToList, toFormArray } from '../../util/helpers';\r\nimport { WorkflowApiService } from '../../services/workflow-api.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EditorConfigService } from '@app/admin/CommonService/editor-config.service';\r\nimport { NgIf, NgClass, AsyncPipe, KeyValuePipe } from '@angular/common';\r\nimport { EditorComponent } from '../../../../Shared/editor/editor.component';\r\nimport { CustomSelectComponent } from '../../../../lib/custom-select/custom-select.component';\r\nimport { ListComponent } from '../../../../lib/list/list.component';\r\nimport { TreeListComponent } from '../../../../lib/tree-list/tree-list.component';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\n\r\nconst t = ElementType;\r\n\r\n@Component({\r\n    selector: 'app-state-detail',\r\n    templateUrl: './state-detail.component.html',\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgClass,\r\n        EditorComponent,\r\n        CustomSelectComponent,\r\n        ListComponent,\r\n        TreeListComponent,\r\n        AsyncPipe,\r\n        KeyValuePipe,\r\n        QuillModule\r\n    ],\r\n})\r\nexport class StateDetailComponent extends ElementDetail<State, WFStateDetail, SaveStatePayload> {\r\n  endStateList$: Observable<KeyValueList<string, string>>;\r\n  checkList: ListConfig<{Description: string}>;\r\n  declare element: StateShapeType;\r\n  readonly displayTrigger = (t: TriggerListItem) => t.TRGDISPNAME;\r\n  processName: any;\r\n  verNo: any;\r\n  id: any;\r\n  editorConfig: any;\r\n  \r\n  constructor(\r\n    public wfapi: WorkflowApiService,\r\n    private readonly route: ActivatedRoute,\r\n    private detail: DetailService,\r\n    fb: UntypedFormBuilder, \r\n    ref: NgbActiveModal,\r\n    msg: MessageService,\r\n   readonly editorConfigService: EditorConfigService,\r\n  ) { \r\n    super(fb, ref, msg);\r\n  }\r\n\r\n  get isSubProcess() {\r\n    return this.element.type === t.SubProcess;\r\n  }\r\n\r\n  get name() {\r\n    return this.isSubProcess ? 'Subprocess' : 'State';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.processName = params['processName']; \r\n      this.verNo = params['VerNo']; \r\n      this.id=params['id'];\r\n   });\r\n\r\n    this.endStateList$ = of(this.newElement \r\n      ? [] \r\n      : objToList(this.data.SubProcessEndStates.AvailableSubProcessEndState)\r\n    );\r\n\r\n    if (this.isSubProcess) {\r\n      this.formActions = [\r\n        {\r\n          controlName: 'subProcessID', \r\n          handler: (id: {key: string} | string) => this.endStateListHandler(typeof id === 'string' ? id : id.key)\r\n        },\r\n      ];\r\n    }\r\n\r\n    this.checkList = {\r\n      columns: [\r\n        {\r\n          key: 'Description', \r\n          displayValue: 'Description', \r\n          placeholder: 'Enter checklist name', \r\n          validators: [Validators.required]\r\n        }\r\n      ],\r\n      checkbox: true,\r\n      actions: {add: true, delete: true, edit: true},\r\n    }\r\n    this.form = this.fb.group({\r\n      name: [this.newElement ? '' : this.data.Name, NAME_VALIDATORS],\r\n      friendlyName: [this.newElement ? '' : this.data.FriendlyName, Validators.required],\r\n      status: [this.newElement ? Status.Active : this.data.Status, Validators.required],\r\n      shortDescription: [this.newElement ? '' : this.data.ShortDescription, Validators.required],\r\n      longDescription: [this.newElement ? '' : this.data.LongDescription],\r\n      stateRole: [this.newElement ? '' : objToList(this.data.StateRole.SelectedRoles), [Validators.required]],\r\n      stateSpecification: [this._setStateSpec(), [Validators.required]],\r\n      subProcessID: [\r\n        this.isSubProcess ?  objToList(this.data?.SubProcess?.SelectedSubProcess)[0] || '' : '', \r\n        this.isSubProcess ? [Validators.required] : []\r\n      ],\r\n      subProcessEndStateIds: [\r\n        objToList(this.data.SubProcessEndStates?.SelectedSubProcessEndState), \r\n        this.isSubProcess ? [Validators.required] : [],\r\n      ],\r\n      checkList: toFormArray(this.data.CheckList, {addCheckbox: this.checkList.checkbox}),\r\n      \r\n    });\r\n\r\n    this.editorConfig = this.editorConfigService.getToolbarOptions();\r\n  }\r\n\r\n  public CheckValidationWF() {\r\n    if(this.newElement===false || !this.form.controls['name'].value){\r\n      return;\r\n    }\r\n    const processName = this.processName;\r\n    const type = 'state';\r\n    const wfId = this.id; \r\n    const name = this.form.controls['name'].value;\r\n    const version = this.verNo; \r\n  \r\n    this.wfapi.CheckValidationWF(processName, type, wfId, name, version).subscribe({\r\n      next: (isDuplicate: boolean) => {\r\n        this.detail.handleValidationResult(isDuplicate, this.form.controls['name']);\r\n      },\r\n      error: (error) => {\r\n        this.detail.handleValidationError(error);\r\n      }\r\n    });\r\n  }\r\n    \r\n\r\n  private endStateListHandler(processId: string) {\r\n    if (processId) {\r\n      this.endStateList$ = this.detail.getEndStatesByApp(processId)\r\n        .pipe(map(res => arrayToList(res, 'WfoSId', 'StateDisplayName')));\r\n    }\r\n    this.form.get('subProcessEndStateIds').reset();\r\n  }\r\n\r\n  private _setStateSpec() {\r\n    const spec = StateSpecificationType;\r\n    let key: StateSpecificationType;\r\n    switch (this.element.type) {\r\n      case t.StartState: key = spec.Start; break;\r\n      case t.EndState: key = spec.End; break;\r\n      default: key = spec.Task; break;\r\n    }\r\n    return {key, value: this.data.StateSpecification.AvailableStateSpecification[key] || 'State'}\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const v = this.form.value;\r\n      const payload: SaveStatePayload = {\r\n        ...v,\r\n        wfoId: this.element.parent?.props?.WfoId,\r\n        wfosId: this.newElement ? '' : this.element.props.WfosId,\r\n        workFlowId: this.workflow.WFID,\r\n        stateRole: keyValueListToKeyList(v.stateRole).toString(),\r\n        stateSpecification: v.stateSpecification.key ?? v.stateSpecification,\r\n        subProcessID: v.subProcessID.key || v.subProcessID,\r\n        subProcessEndStateIds: keyValueListToKeyList(v.subProcessEndStateIds).toString(),\r\n        checkList: v.checkList.map(check => {\r\n          return {\r\n            ...check,\r\n            ChecklistId: check.ChecklistId ?? 0,\r\n            WfosId: this.newElement ? '' : this.element.props.WfosId,\r\n          }\r\n        }),\r\n        TriggerList: this.data.TriggerList,\r\n      }\r\n      this.updated.emit(payload);\r\n      this.ref.close(payload);\r\n    }\r\n  }\r\n  \r\n}", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newElement\">New State</h2>\r\n    <h2 *ngIf=\"!newElement\">State Details</h2>\r\n    <span class=\"popup__close\"\r\n      ><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i\r\n    ></span>\r\n  </div>\r\n  <hr />\r\n\r\n  <form [formGroup]=\"form\" *ngIf=\"form\">\r\n    <div class=\"double-column\">\r\n      <div class=\"form-group span-6\">\r\n        <label>{{ name }} Name <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"name\"\r\n          [readonly]=\"!newElement\"\r\n          [style.background-color]=\"!newElement ? '#e9ecef' : 'white'\"\r\n          (blur)=\"CheckValidationWF()\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.name.errors) ||\r\n              (f.name.errors && !f.name.errors.required) ||\r\n              f.name.errors?.duplicate\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.name?.errors?.duplicate\" class=\"invalid-feedback\">\r\n          Duplicate name\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Friendly Name <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"friendlyName\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.friendlyName.errors) ||\r\n              (f.friendlyName.errors && !f.friendlyName.errors.required)\r\n          }\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Status <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <select\r\n          class=\"form-control\"\r\n          formControlName=\"status\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.status.errors) ||\r\n              (f.status.errors && !f.status.errors.required)\r\n          }\"\r\n        >\r\n          <option value=\"1\">Active</option>\r\n          <option value=\"0\">Inactive</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Short Description <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"shortDescription\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.shortDescription.errors) ||\r\n              (f.shortDescription.errors && !f.shortDescription.errors.required)\r\n          }\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group span-6 span-12\">\r\n        <label>Long Description</label>\r\n        <br />\r\n        <div class=\"Ql-container\">\r\n          <quill-editor\r\n            [modules]=\"{ toolbar: editorConfig.toolbar }\"\r\n            class=\"Ql-InsideContainer\"\r\n            formControlName=\"longDescription\"\r\n          ></quill-editor>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\" *ngIf=\"!isSubProcess\">\r\n        <label>State Specification</label>\r\n        <br />\r\n        <app-custom-select\r\n          [parentForm]=\"form\"\r\n          controlName=\"stateSpecification\"\r\n          [items]=\"\r\n            data.StateSpecification?.AvailableStateSpecification | keyvalue\r\n          \"\r\n          [readonly]=\"true\"\r\n          [submitted]=\"submitted\"\r\n        ></app-custom-select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Role Available <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <app-custom-select\r\n          [parentForm]=\"form\"\r\n          controlName=\"stateRole\"\r\n          [items]=\"data.StateRole?.AvailableRoles | keyvalue\"\r\n          [multiple]=\"true\"\r\n          [submitted]=\"submitted\"\r\n        ></app-custom-select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Checklist</label>\r\n        <br />\r\n        <app-list\r\n          [parentForm]=\"form\"\r\n          controlName=\"checkList\"\r\n          [config]=\"checkList\"\r\n        ></app-list>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Trigger List</label>\r\n        <br />\r\n        <app-tree-list\r\n          [items]=\"data.TriggerList\"\r\n          [displayWith]=\"displayTrigger\"\r\n          [dragDrop]=\"true\"\r\n          height=\"auto\"\r\n        >\r\n        </app-tree-list>\r\n      </div>\r\n\r\n      <ng-container *ngIf=\"isSubProcess\">\r\n        <div class=\"form-group span-6\">\r\n          <label>Subprocess <span style=\"color: red\">*</span></label>\r\n          <br />\r\n          <app-custom-select\r\n            [parentForm]=\"form\"\r\n            controlName=\"subProcessID\"\r\n            [items]=\"data.SubProcess?.AvailableSubProcess | keyvalue\"\r\n            [submitted]=\"submitted\"\r\n          ></app-custom-select>\r\n        </div>\r\n\r\n        <div class=\"form-group span-6\">\r\n          <label>Subprocess End State <span style=\"color: red\">*</span></label>\r\n          <br />\r\n          <app-custom-select\r\n            [parentForm]=\"form\"\r\n            controlName=\"subProcessEndStateIds\"\r\n            [items]=\"endStateList$ | async\"\r\n            [multiple]=\"true\"\r\n            [submitted]=\"submitted\"\r\n          ></app-custom-select>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">\r\n        Cancel\r\n      </button>\r\n      <button\r\n        class=\"btn btn-primary btn-sm\"\r\n        type=\"submit\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"!published\"\r\n      >\r\n        <ng-container *ngIf=\"newElement\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newElement\">Update</ng-container>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nconst B = 1024;\r\nconst KB = B * B;\r\nconst MB = KB * B;\r\n@Pipe({\n    name: 'filesize',\n    standalone: true\n})\r\nexport class FileSizePipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    const size = +value;\r\n    if (size < B) return `${size} B`;\r\n    if (size < KB) return `${(size / B).toFixed(2)} KB`;\r\n    if (size < MB) return `${(size / KB).toFixed(2)} MB`;\r\n  }\r\n}", "import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appDropzone]',\r\n    standalone: true\r\n})\r\nexport class DropzoneDirective {\r\n  @Output() dropped = new EventEmitter<FileList>();\r\n  @Output() hovered = new EventEmitter<boolean>();\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    this.dropped.emit(event.dataTransfer.files);\r\n    this.hovered.emit(false);\r\n  }\r\n  \r\n  @HostListener('dragover', ['$event'])\r\n  onDragOver(event: DragEvent) {\r\n    event.preventDefault();\r\n    this.hovered.emit(true);\r\n    \r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  onDragLeave(event: DragEvent) {\r\n    event.preventDefault();\r\n    this.hovered.emit(false);\r\n  }\r\n\r\n}\r\n", "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgIf, NgTemplateOutlet } from '@angular/common';\r\nimport { DropzoneDirective } from '../../directives/dropzone.directive';\r\n\r\n@Component({\r\n    selector: 'app-file-uploader',\r\n    templateUrl: './file-uploader.component.html',\r\n    styleUrls: ['./file-uploader.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        DropzoneDirective,\r\n        NgTemplateOutlet,\r\n    ],\r\n})\r\nexport class FileUploaderComponent {\r\n  @Input() set allowedExtensions(extensions: string[]) {\r\n    this.extensions = new Set(extensions);\r\n  }\r\n  @Input() uploading = false;\r\n  @Input() multiple = false;\r\n  @Input() disabled = false;\r\n  @Output() files = new EventEmitter<File[]>();\r\n  @Output() ignored = new EventEmitter<File[]>();\r\n\r\n  private extensions: Set<string>;\r\n\r\n  public isHovering: boolean;\r\n\r\n  public toggleHover(event: boolean) {\r\n    this.isHovering = event;\r\n  }\r\n  \r\n\r\n  public onDrop(fileList: FileList) {\r\n    if (!this.multiple && fileList.length > 1) {\r\n      return;\r\n    }\r\n    const files = [];\r\n    const ignored = [];\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      const file = fileList.item(i);\r\n      const ext = file.name.split('.').pop();\r\n      if (this.extensions && !this.extensions.has(ext)) {\r\n        ignored.push(file);\r\n      } else {\r\n        files.push(file);\r\n      }\r\n    }\r\n    if (files.length) this.files.emit(files);\r\n    if (ignored.length) this.ignored.emit(ignored);\r\n    \r\n  }\r\n\r\n}\r\n", "<div\r\n  *ngIf=\"!uploading\"\r\n  class=\"dropzone\" \r\n  appDropzone \r\n  (hovered)=\"toggleHover($event)\" \r\n  (dropped)=\"!disabled && onDrop($event)\" \r\n  [class.hovering]=\"isHovering && !disabled\">\r\n\r\n  <p>Drag and drop <ng-container *ngTemplateOutlet=\"multipleTemplate\"></ng-container></p>\r\n  <button class=\"btn btn-sm btn-secondary\" (click)=\"filePicker.click()\" [disabled]=\"disabled\">\r\n    or choose <ng-container *ngTemplateOutlet=\"multipleTemplate\"></ng-container>\r\n  </button>\r\n  <input type=\"file\" #filePicker multiple hidden (input)=\"!disabled && onDrop(filePicker.files)\" />\r\n</div>\r\n<div class=\"dropzone\" *ngIf=\"uploading\">\r\n  Uploading...\r\n</div>\r\n\r\n<ng-template #multipleTemplate>\r\n  <ng-container *ngIf=\"multiple\">files</ng-container>\r\n  <ng-container *ngIf=\"!multiple\">a file</ng-container>\r\n</ng-template>\r\n", "import { Component } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Status,NotificationOption } from '@app/admin/data-modeler/models';\r\nimport { ListColumnType, ListConfig } from '@app/admin/lib/list/list-config.model';\r\nimport { MessageService } from '@app/core';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SaveTriggerPayload, TriggerActionType, TriggerType, WFTriggerDetail, WorkflowFile } from '../../models';\r\nimport { ElementType, TriggerConnection, TriggerExtensionShape } from '../../models/bpmn';\r\nimport { ElementDetail } from '../../models/element-detail.class';\r\nimport { State, Trigger } from '../../models/wf.model';\r\nimport { FileSizePipe } from '../../pipes/filesize.pipe';\r\nimport { DetailService } from '../../services/detail.service';\r\nimport { isStateType } from '../../util/bpmn';\r\nimport { getTriggerType } from '../../util/bridge';\r\nimport { keyValueListToKeyList, objToList, toFormArray, toFormGroup } from '../../util/helpers';\r\nimport { WorkflowApiService } from '../../services/workflow-api.service';\r\nimport { EditorConfigService } from '@app/admin/CommonService/editor-config.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgIf, NgClass, KeyValuePipe } from '@angular/common';\r\nimport { CustomSelectComponent } from '../../../../lib/custom-select/custom-select.component';\r\nimport { MatExpansionPanel, MatExpansionPanelHeader } from '@angular/material/expansion';\r\nimport { EditorComponent } from '../../../../Shared/editor/editor.component';\r\nimport { FileUploaderComponent } from '../file-uploader/file-uploader.component';\r\nimport { ListComponent } from '../../../../lib/list/list.component';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n\r\nconst t = ElementType;\r\n\r\n@Component({\r\n    selector: 'app-trigger-detail',\r\n    templateUrl: './trigger-detail.component.html',\r\n    styleUrls: ['./trigger-detail.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgClass,\r\n        CustomSelectComponent,\r\n        MatExpansionPanel,\r\n        MatExpansionPanelHeader,\r\n        EditorComponent,\r\n        FileUploaderComponent,\r\n        ListComponent,\r\n        KeyValuePipe,\r\n        QuillModule\r\n    ],\r\n})\r\nexport class TriggerDetailComponent extends ElementDetail<Trigger, WFTriggerDetail, SaveTriggerPayload> {\r\n\r\n  private readonly fileSizePipe = new FileSizePipe();\r\n  readonly allowedExtensions = ['docx', 'doc', 'csv', 'mp3', 'wmv', 'jpg', 'jpeg', 'pdf', 'xls', 'xlsx', 'sql', 'zip', 'bin', 'mov', 'mp4', 'bmp',  'gif', 'txt', 'png', 'ppt', 'pptx']\r\n  declare element: TriggerConnection | TriggerExtensionShape;\r\n  filesConfig: ListConfig<WorkflowFile>;\r\n  filesUploading = false;\r\n  isTimer = false;\r\n  uploadLocation: string;\r\n  public triggers:any;\r\n  processName: any;\r\n  verNo: any;\r\n  id: any;\r\n  editorConfig: any;\r\n  roleTypsDmo: any;\r\n \r\n\r\n  constructor(\r\n    fb: UntypedFormBuilder, \r\n    ref: NgbActiveModal,\r\n    msg: MessageService,\r\n    private readonly detail: DetailService,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly wfapi: WorkflowApiService,\r\n    readonly editorConfigService: EditorConfigService\r\n  ) { \r\n    super(fb, ref, msg);\r\n    this.formActions = [\r\n      {\r\n        controlName: 'files',\r\n        handler: (files: File[]) => this.fileListHandler(files),\r\n      }\r\n    ]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.processName = params['processName']; \r\n      this.verNo = params['VerNo']; \r\n      this.id=params['id'];\r\n   });\r\n\r\n    this.uploadLocation = this.isTimer \r\n      ? this.element.incoming[0].props.TriggerId // trigger's id\r\n      : this.element.id;\r\n    this.filesConfig = {\r\n      columns: [\r\n        {key: 'FileName', displayValue: 'File Name', type: ListColumnType.File},\r\n        {key: 'FileSize', displayValue: 'Size', type: ListColumnType.File},\r\n      ],\r\n      actions: {delete: true, download: true},\r\n      checkbox: true,\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      name: [this.data.Name, NAME_VALIDATORS],\r\n      friendlyName: [this.data.FriendlyName, Validators.required],\r\n      triggerType: [this.newElement ? '' : objToList(this.data.TriggerType.SelectedTriggerType)[0] || '', [Validators.required]],\r\n      status: [this.newElement ? Status.Active : this.data.Status, [Validators.required]],\r\n      triggerAction: [this.newElement ? '' : objToList(this.data.TriggerAction.SelectedTriggerAction)[0] || '', [Validators.required]],\r\n      triggerConfirmMsg: [this.data.TrigggerConfirmMsg],\r\n      notificationOption: [\r\n        this.newElement\r\n          ? this.getNotificationOption('0')\r\n          : this.getNotificationOption(this.data.NotificationOption),\r\n        Validators.required\r\n      ],\r\n      fileNames: toFormArray(this.data.Files, {\r\n        addCheckbox: this.filesConfig.checkbox,\r\n      }),\r\n      deletedUploadedFiles: [[]],\r\n      files: [[]],\r\n      triggerRoleGuid: [this.newElement ? [] : objToList(this.data.TriggerRole.SelectedTriggerRole), [Validators.required]],\r\n      triggerEmailRoleGuid: [this.newElement ? [] : objToList(this.data.TriggerEmailRole.SelectedTriggerEmailRole)],\r\n      ccEmailTrgrRolelist: [this.newElement ? [] : objToList(this.data.CCTriggerEmailRole.SelectedCCEmailTrgrRole)],\r\n      emailSubject: [this.data.EmailSubject],\r\n      notify: [this.data.Notify],\r\n      sharedTrgList: [this.newElement ? [] : objToList(this.data.SharedTrgList.SelectedSharedStates)],\r\n      periodStart: [this.data.PeriodStart], \r\n      periodFrequency: [this.data.PeriodFrequency], \r\n      periodEnd: [this.data.PeriodEnd],\r\n      freq: [this.data?.Freq || 'One Time'],\r\n      recurrenceStart: [this.data?.RecurrenceStart || 'Hours'],\r\n      recurrenceFrequency: [this.data?.RecurrenceFrequency || 'Hours'],\r\n      NotificationOption: [\r\n        this.newElement\r\n          ? this.getNotificationOption('0')\r\n          : this.getNotificationOption(this.data.NotificationOption),\r\n        Validators.required\r\n      ],\r\n      toAdditionalList : [this.newElement ? [] : objToList(this.data.AdditionalToList?.SelectedAdditionalToRole)],\r\n      ccAdditionalList:[ this.newElement ? []  : objToList(this.data?.AdditionalCcList?.SelectedAdditionalCcRole)]\r\n    });\r\n    if (this.newElement) {\r\n      this.setInitValues(); \r\n    }\r\n    this.editorConfig = this.editorConfigService.getToolbarOptions();\r\n  }\r\n\r\n  notificationOptions = [\r\n    { key: '0', value: 'None' },\r\n    { key: '1', value: 'Custom Notification' }\r\n  ];\r\n\r\n  // helper to find the matching object\r\n  getNotificationOption(key: number | string) {\r\n    return this.notificationOptions.find(opt => opt.key === String(key)) ?? null;\r\n  }\r\n\r\n  public CheckValidationWF() {\r\n    if(this.newElement===false || !this.form.controls['name'].value){\r\n      return;\r\n    }\r\n    const processName = this.processName;\r\n    const type = 'trigger';\r\n    const wfId = this.id; \r\n    const name = this.form.controls['name'].value;\r\n    const version = this.verNo; \r\n  \r\n    this.wfapi.CheckValidationWF(processName, type, wfId, name, version).subscribe({\r\n      next: (isDuplicate: boolean) => {\r\n        this.detail.handleValidationResult(isDuplicate, this.form.controls['name']);\r\n      },\r\n      error: (error) => {\r\n        this.detail.handleValidationError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setInitValues() {\r\n    const el = this.isTimer ? this.element : (this.element as TriggerConnection).target;\r\n    const type = el.type;\r\n    let triggerTypeValue = null;\r\n    if (type === t.TriggerExtension) {\r\n      const triggerType = getTriggerType(el.incoming[0]);\r\n      triggerTypeValue = objToList(this.data.TriggerType.AvailableTriggerType).find(t => +t.key === triggerType);\r\n      \r\n      const triggerAction = objToList(this.data.TriggerAction.AvailableTriggerAction).find(t => +t.key === TriggerActionType.SubmitValidationNA);\r\n      this.form.get('triggerAction').patchValue(triggerAction);\r\n    } else if (isStateType(el) || type === t.Gateway) {\r\n      triggerTypeValue = objToList(this.data.TriggerType.AvailableTriggerType).find(t => +t.key === TriggerType.Action);\r\n    }\r\n    this.form.get('triggerType').patchValue(triggerTypeValue);\r\n  }\r\n\r\n  public onFilesUpload(files: File[]) {\r\n    this.form.get('files').patchValue(files);\r\n  }\r\n\r\n  public fileListHandler(files: File[]) {\r\n    const fileList = this.form.get('fileNames') as UntypedFormArray;\r\n    const unique = [];\r\n    files.forEach(file => {\r\n      if (!fileList.controls.some((group: UntypedFormGroup) => group.get('FileName').value === file.name)) {\r\n        unique.push(file);\r\n      }\r\n    })\r\n    this.filesUploading = true;\r\n    this.detail.uploadFiles(unique, this.workflow.WFID, this.uploadLocation).subscribe(\r\n      file => {\r\n        const wfFile: WorkflowFile = {\r\n          FileName: file.name,\r\n          FileSize: this.fileSizePipe.transform(file.size.toString()),\r\n        }\r\n        fileList.push(toFormGroup(wfFile, {addCheckbox: this.filesConfig.checkbox}));\r\n      },\r\n      () => null,\r\n      () => this.filesUploading = false,\r\n    );\r\n  }\r\n\r\n  onIgnoredFiles(files: File[]) {\r\n    this.msg.showMessage('Warning', {\r\n      body: `The following files are not allowed to be uploaded: \\n\r\n            ${files.map(file => `<br>${file.name}`).join('')}`\r\n    })\r\n  }\r\n\r\n  public onFileDelete(file: WorkflowFile) {\r\n    const control = this.form.get('deletedUploadedFiles');\r\n    const values = control.value as string[];\r\n    values.push(file.FileName);\r\n    control.patchValue(values);\r\n  }\r\n\r\n  public onFileDownload(filename: string) {\r\n    const uploadedAndSaved = (this.data.Files || []).some(f => f.FileName === filename);\r\n    this.detail.downloadFile(\r\n      this.workflow.ProcessName, \r\n      filename, \r\n      this.workflow.WFID, \r\n      this.data.Name || '', \r\n      'trigger', \r\n      uploadedAndSaved ? '' : this.uploadLocation,\r\n    ).subscribe();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    const rawFormValue = this.form.value;\r\n    if (this.form.valid) {\r\n      const el = (this.isTimer ? this.element.incoming[0] : this.element) as TriggerConnection;\r\n      const props = el.props;\r\n      const state = el.source.props as State;\r\n      const payload: SaveTriggerPayload = {\r\n        ...this.form.value,\r\n        triggerAction: this.form.value.triggerAction.key || this.form.value.triggerAction,\r\n        triggerType: this.form.value.triggerType.key || this.form.value.triggerType,\r\n        sharedTrgList: keyValueListToKeyList(this.form.value.sharedTrgList).toString(),\r\n        triggerRoleGuid: keyValueListToKeyList(this.form.value.triggerRoleGuid),\r\n        triggerEmailRoleGuid: keyValueListToKeyList(this.form.value.triggerEmailRoleGuid),\r\n        ccEmailTrgrRolelist: keyValueListToKeyList(this.form.value.ccEmailTrgrRolelist),\r\n        toAdditionalList: keyValueListToKeyList(this.form.value.toAdditionalList || []),\r\n        ccAdditionalList: keyValueListToKeyList(this.form.value.ccAdditionalList || []),\r\n        startWfoid: state.WfoId,\r\n        startWfosid: state.WfosId,\r\n        triggerId: props?.TriggerId,\r\n        triggerGuid: props?.Guid,\r\n        fileNames: this.form.value.fileNames.map(({FileName}) => FileName).toString(), // ????\r\n        deletedUploadedFiles: this.form.value.deletedUploadedFiles.toString(),\r\n        fileUploadLoc: this.uploadLocation,\r\n        workFlowId: this.workflow.WFID,\r\n        processName: this.workflow.ProcessName,\r\n        TrigggerConfirmMsg:this.form.value.triggerConfirmMsg ,\r\n        periodEnd: this.form.get('periodEnd').disabled ? -1 : this.form.get('periodEnd').value,\r\n        freq:this.form.get('freq').value,\r\n        NotificationOption: +rawFormValue.NotificationOption?.key,\r\n        notificationOption:+rawFormValue.NotificationOption?.key\r\n      }\r\n      this.updated.emit(payload);\r\n      this.ref.close(payload);\r\n    }\r\n  }\r\n  \r\n}\r\n", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newElement\">New Trigger</h2>\r\n    <h2 *ngIf=\"!newElement\">Trigger Details</h2>\r\n    <span class=\"popup__close\"\r\n      ><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i\r\n    ></span>\r\n  </div>\r\n  <hr />\r\n\r\n  <form [formGroup]=\"form\" *ngIf=\"form\">\r\n    <div class=\"double-column\">\r\n      <div class=\"form-group span-6\">\r\n        <label>Trigger Name <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"name\"\r\n          [readonly]=\"!newElement\"\r\n          [style.background-color]=\"!newElement ? '#e9ecef' : 'white'\"\r\n          (blur)=\"CheckValidationWF()\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.name.errors) ||\r\n              (f.name.errors && !f.name.errors.required) ||\r\n              f.name.errors?.duplicate\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.name?.errors?.duplicate\" class=\"invalid-feedback\">\r\n          Duplicate name\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Friendly Name <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"friendlyName\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.friendlyName.errors) ||\r\n              (f.friendlyName.errors && !f.friendlyName.errors.required)\r\n          }\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Status <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <select\r\n          class=\"form-control\"\r\n          formControlName=\"status\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.status.errors) ||\r\n              (f.status.errors && !f.status.errors.required)\r\n          }\"\r\n        >\r\n          <option value=\"1\">Active</option>\r\n          <option value=\"0\">Inactive</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Type <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <app-custom-select\r\n          [parentForm]=\"form\"\r\n          controlName=\"triggerType\"\r\n          [items]=\"data.TriggerType?.AvailableTriggerType | keyvalue\"\r\n          [submitted]=\"submitted\"\r\n        ></app-custom-select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Action <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <app-custom-select\r\n          [parentForm]=\"form\"\r\n          controlName=\"triggerAction\"\r\n          [items]=\"data.TriggerAction?.AvailableTriggerAction | keyvalue\"\r\n          [submitted]=\"submitted\"\r\n        ></app-custom-select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Confirmation Message</label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"triggerConfirmMsg\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.triggerConfirmMsg.errors) ||\r\n              (f.triggerConfirmMsg.errors &&\r\n                !f.triggerConfirmMsg.errors.required)\r\n          }\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Trigger Role <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <app-custom-select\r\n          [parentForm]=\"form\"\r\n          controlName=\"triggerRoleGuid\"\r\n          [items]=\"data.TriggerRole?.AvailableTriggerRole | keyvalue\"\r\n          [submitted]=\"submitted\"\r\n          [multiple]=\"true\"\r\n        ></app-custom-select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label for=\"notificationOption\"\r\n          >Notification Option <span style=\"color: red\">*</span></label\r\n        >\r\n        <app-custom-select\r\n          id=\"notificationOption\"\r\n          controlName=\"NotificationOption\"\r\n          [parentForm]=\"form\"\r\n          [items]=\"notificationOptions\"\r\n          [submitted]=\"submitted\"\r\n        ></app-custom-select>\r\n        <div\r\n          *ngIf=\"submitted && f.NotificationOption.errors\"\r\n          class=\"invalid-feedback d-block\"\r\n        >\r\n          Notification option is required.\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Share On States</label>\r\n        <br />\r\n        <app-custom-select\r\n          [parentForm]=\"form\"\r\n          controlName=\"sharedTrgList\"\r\n          [items]=\"data.SharedTrgList?.AvailableSharedStates | keyvalue\"\r\n          [submitted]=\"submitted\"\r\n          [multiple]=\"true\"\r\n        ></app-custom-select>\r\n      </div>\r\n      <div\r\n        class=\"form-group span-6\"\r\n        *ngIf=\"\r\n          ['LegalOnline', 'LegalOffline'].includes(\r\n            form.get('triggerType')?.value?.value\r\n          )\r\n        \"\r\n      >\r\n        <label for=\"legalProcess\"\r\n          >Legal Process <span style=\"color: red\">*</span></label\r\n        >\r\n        <app-custom-select\r\n          id=\"legalProcess\"\r\n          controlName=\"LegalProcess\"\r\n          [parentForm]=\"form\"\r\n          [items]=\"itemProcess$ | async\"\r\n        >\r\n          [submitted]=\"submitted\">\r\n        </app-custom-select>\r\n        <div\r\n          *ngIf=\"submitted && f.LegalProcess.errors\"\r\n          class=\"invalid-feedback d-block\"\r\n        >\r\n          Legal Process is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-expansion-panel [expanded]=\"false\">\r\n      <mat-expansion-panel-header class=\"disable_ripple\">\r\n        Notification Settings\r\n      </mat-expansion-panel-header>\r\n\r\n      <div class=\"double-column mt-2\">\r\n        <div class=\"form-group span-6\">\r\n          <label>Trigger Email Role</label>\r\n          <br />\r\n          <app-custom-select\r\n            [parentForm]=\"form\"\r\n            controlName=\"triggerEmailRoleGuid\"\r\n            [items]=\"\r\n              data.TriggerEmailRole?.AvailableTriggerEmailRole | keyvalue\r\n            \"\r\n            [submitted]=\"submitted\"\r\n            [multiple]=\"true\"\r\n          ></app-custom-select>\r\n        </div>\r\n\r\n        <div class=\"form-group span-6\">\r\n          <label>Trigger CC Email Role</label>\r\n          <br />\r\n          <app-custom-select\r\n            [parentForm]=\"form\"\r\n            controlName=\"ccEmailTrgrRolelist\"\r\n            [items]=\"\r\n              data.CCTriggerEmailRole?.AvailableCCEmailTrgrRole | keyvalue\r\n            \"\r\n            [submitted]=\"submitted\"\r\n            [multiple]=\"true\"\r\n          ></app-custom-select>\r\n        </div>\r\n\r\n        <div class=\"form-group span-6\">\r\n          <label>Additional To List</label>\r\n          <br />\r\n          <app-custom-select\r\n            [parentForm]=\"form\"\r\n            controlName=\"toAdditionalList\"\r\n            [items]=\"\r\n              data.AdditionalToList?.AvailableAdditionalToRole | keyvalue\r\n            \"\r\n            [submitted]=\"submitted\"\r\n            [multiple]=\"true\"\r\n          ></app-custom-select>\r\n        </div>\r\n\r\n        <div class=\"form-group span-6\">\r\n          <label>Additional CC List</label>\r\n          <br />\r\n          <app-custom-select\r\n            [parentForm]=\"form\"\r\n            controlName=\"ccAdditionalList\"\r\n            [items]=\"\r\n              data?.AdditionalCcList?.AvailableAdditionalCcRole\r\n                ? (data.AdditionalCcList.AvailableAdditionalCcRole | keyvalue)\r\n                : []\r\n            \"\r\n            [submitted]=\"submitted\"\r\n            [multiple]=\"true\"\r\n          ></app-custom-select>\r\n        </div>\r\n\r\n        <div class=\"form-group span-6\">\r\n          <label>Email Subject</label>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"emailSubject\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                (submitted && f.emailSubject.errors) ||\r\n                (f.emailSubject.errors && !f.emailSubject.errors.required)\r\n            }\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group span-12\">\r\n          <label>Notify</label>\r\n          <br />\r\n          <div class=\"Ql-container\">\r\n            <quill-editor\r\n              [modules]=\"{ toolbar: editorConfig.toolbar }\"\r\n              class=\"Ql-InsideContainer\"\r\n              formControlName=\"notify\"\r\n            ></quill-editor>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group span-12\">\r\n          <label>Files</label>\r\n          <br />\r\n          <app-file-uploader\r\n            [disabled]=\"published\"\r\n            [uploading]=\"filesUploading\"\r\n            [allowedExtensions]=\"allowedExtensions\"\r\n            [multiple]=\"true\"\r\n            (files)=\"onFilesUpload($event)\"\r\n            (ignored)=\"onIgnoredFiles($event)\"\r\n          >\r\n          </app-file-uploader>\r\n          <app-list\r\n            [parentForm]=\"form\"\r\n            controlName=\"fileNames\"\r\n            [config]=\"filesConfig\"\r\n            [withPrompt]=\"true\"\r\n            (beforeDelete)=\"beforeItemDelete($event)\"\r\n            (itemDeleted)=\"onFileDelete($event)\"\r\n            (fileDownload)=\"onFileDownload($event)\"\r\n          ></app-list>\r\n        </div>\r\n      </div>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel\r\n      [expanded]=\"false\"\r\n      *ngIf=\"\r\n        ['LegalOnline', 'LegalOffline'].includes(\r\n          form.get('triggerType')?.value?.value\r\n        )\r\n      \"\r\n    >\r\n      <mat-expansion-panel-header class=\"disable_ripple\">\r\n        Legal Trigger Settings\r\n      </mat-expansion-panel-header>\r\n\r\n      <div class=\"form-group span-12\">\r\n        <!-- Tab Headers -->\r\n        <div class=\"tab-buttons\">\r\n          <button\r\n            type=\"button\"\r\n            [class.active]=\"activeTab === 'dmo'\"\r\n            (click)=\"setTab('dmo')\"\r\n          >\r\n            DMO Mapping\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            [class.active]=\"activeTab === 'trigger'\"\r\n            (click)=\"setTab('trigger')\"\r\n          >\r\n            Trigger Mapping\r\n          </button>\r\n          <!-- <button type=\"button\" [class.active]=\"activeTab === 'template'\" (click)=\"setTab('template')\">Define Template</button>\r\n        <button type=\"button\" [class.active]=\"activeTab === 'preview'\" (click)=\"setTab('preview')\">Template preview</button> -->\r\n        </div>\r\n\r\n        <!-- Tab Panel: DMO Mapping -->\r\n        <div *ngIf=\"activeTab === 'dmo'\">\r\n          <div class=\"col-lg-12\">\r\n            <table class=\"table table-bordered\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th>{{ LegalProcessName | uppercase }}</th>\r\n                  <th>{{ ParentProcessName | uppercase }}</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <tr *ngFor=\"let item of legalProcessDmos; let i = index\">\r\n                  <td>\r\n                    <span>{{ item.DISPNAME }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <ng-select\r\n                      [searchable]=\"true\"\r\n                      [bindLabel]=\"'DISPNAME'\"\r\n                      [bindValue]=\"'GUID'\"\r\n                      placeholder=\"Select...\"\r\n                      [(ngModel)]=\"item.selectedParent\"\r\n                      [ngModelOptions]=\"{ standalone: true }\"\r\n                    >\r\n                      <ng-option\r\n                        *ngFor=\"let item of parentProcessDmos\"\r\n                        [value]=\"item.GUID\"\r\n                        [disabled]=\"shouldOptionBeDisabled(item.GUID)\"\r\n                      >\r\n                        {{ item.DISPNAME }}\r\n                      </ng-option>\r\n                    </ng-select>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Tab Panel: Trigger Mapping -->\r\n        <div *ngIf=\"activeTab === 'trigger'\">\r\n          <div class=\"col-lg-12\">\r\n            <table class=\"table table-bordered\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th>{{ LegalProcessName | uppercase }}</th>\r\n                  <th>{{ ParentProcessName | uppercase }}</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <tr *ngFor=\"let item of legalProcessTrgrs; let i = index\">\r\n                  <td>\r\n                    <span>{{ item.DISPNAME }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <ng-select\r\n                      [items]=\"parentProcessTrgrs\"\r\n                      [searchable]=\"true\"\r\n                      placeholder=\"Select...\"\r\n                      [bindLabel]=\"'DISPNAME'\"\r\n                      [bindValue]=\"'GUID'\"\r\n                      [(ngModel)]=\"item.selectedParent\"\r\n                      [ngModelOptions]=\"{ standalone: true }\"\r\n                    >\r\n                      <ng-option\r\n                        *ngFor=\"let opt of parentProcessTrgrs\"\r\n                        [value]=\"opt.GUID\"\r\n                      >\r\n                        {{ opt.DISPNAME }}\r\n                      </ng-option>\r\n                    </ng-select>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <!-- Tab Panel: Define Template -->\r\n        <!-- <div *ngIf=\"activeTab === 'template'\">\r\n          <div class=\"d-flex flex-column gap-3 Ql-container\">\r\n            <quill-editor [(ngModel)]=\"htmlContent\" [modules]=\"editorConfig\" [ngModelOptions]=\"{ standalone: true }\"\r\n              (onContentChanged)=\"onContentChanged($event)\" class=\"Ql-InsideContainer\">\r\n            </quill-editor>\r\n        \r\n            <div class=\"d-none\">\r\n              <pre>{{ htmlContent }}</pre>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"drag-drop-container\" *ngIf=\"activeTab === 'preview'\">\r\n          <div class=\"draggable-fields mb-3\">\r\n            <div class=\"field\" *ngFor=\"let field of fields\" draggable=\"true\" (dragstart)=\"onDragStart($event, field)\">\r\n              {{ field }}\r\n            </div>\r\n          </div>\r\n        \r\n          <div class=\"p-2 border preview-content\" contenteditable=\"false\" (drop)=\"onDrop($event)\"\r\n            (dragover)=\"onDragOver($event)\" #preview [innerHTML]=\"previewHtml | sanitizeHtml\">\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </mat-expansion-panel>\r\n    <br />\r\n\r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">\r\n        Cancel\r\n      </button>\r\n      <button\r\n        class=\"btn btn-primary btn-sm\"\r\n        type=\"submit\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"!published\"\r\n      >\r\n        <ng-container *ngIf=\"newElement\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newElement\">Update</ng-container>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n", "import { Component } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormControl, Validators, FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MessageService } from '@app/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { DetailService } from '../../services/detail.service';\r\nimport { TriggerDetailComponent } from '../trigger-detail/trigger-detail.component';\r\nimport { KeyValueList, keyValueListToKeyList, objToList, primitiveArrayToList, toFormArray, toFormGroup } from '../../util/helpers';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { WorkflowApiService } from '../../services/workflow-api.service';\r\nimport { EditorConfigService } from '@app/admin/CommonService/editor-config.service';\r\nimport { NgIf, NgClass } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-timer-detail',\r\n    templateUrl: './timer-detail.component.html',\r\n    styleUrls: ['./timer-detail.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgClass,\r\n    ],\r\n})\r\nexport class TimerDetailComponent extends TriggerDetailComponent {\r\n  //noEndDate = new UntypedFormControl(false);\r\n  isTimer = true;\r\n  isrec = false;\r\n  declare form: FormGroup;\r\n  constructor(\r\n    fb: UntypedFormBuilder,\r\n    ref: NgbActiveModal,\r\n    msg: MessageService,\r\n    detail: DetailService,\r\n    route: ActivatedRoute,\r\n    wfapi: WorkflowApiService,\r\n   readonly editorConfigService: EditorConfigService,\r\n    public toastr: ToastrService,\r\n  ) {\r\n    super(fb, ref, msg, detail, route, wfapi,editorConfigService);\r\n    /*this.noEndDate.valueChanges\r\n      .pipe(takeWhile(_ => this.componentActive))\r\n      .subscribe(checked => {\r\n        const periodEnd = this.form.get('periodEnd');\r\n        checked ? periodEnd.disable() : periodEnd.enable();\r\n      })*/\r\n  }\r\n \r\n afterFormInit() {\r\n\r\n  setTimeout(_ => {\r\n      if(this.form.get('freq').value==='Recurring'){\r\n      this.isrec=true;\r\n    }\r\n    })\r\n  }\r\n  onRadioChange(event: any) {\r\n    if(event.target.value==='One Time'){\r\n      this.isrec=false;\r\n    }\r\n    else{\r\n      this.isrec=true;\r\n    }\r\n  }\r\n}\r\n", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newElement\">New Timer</h2>\r\n    <h2 *ngIf=\"!newElement\">Timer Details</h2>\r\n    <span class=\"popup__close\"\r\n      ><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i\r\n    ></span>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <form [formGroup]=\"form\" *ngIf=\"form\">\r\n    <div class=\"form-group\">\r\n      <div class=\"form-group flex\">\r\n        <input\r\n          class=\"radio-container\"\r\n          formControlName=\"freq\"\r\n          type=\"radio\"\r\n          (change)=\"onRadioChange($event)\"\r\n          value=\"One Time\"\r\n        />\r\n        <i class=\"skin\"></i><label for=\"\">One Time</label>\r\n        <input\r\n          class=\"radio-container\"\r\n          formControlName=\"freq\"\r\n          type=\"radio\"\r\n          (change)=\"onRadioChange($event)\"\r\n          value=\"Recurring\"\r\n        />\r\n        <i class=\"skin\"></i><label for=\"\">Recurring</label>\r\n      </div>\r\n      <br />\r\n    </div>\r\n\r\n    <div *ngIf=\"!isrec\" class=\"form-group\">\r\n      <label for=\"\">Delay</label>\r\n      <br />\r\n      <div class=\"form-group flex\">\r\n        <input\r\n          type=\"number\"\r\n          class=\"form-control\"\r\n          formControlName=\"periodFrequency\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.periodFrequency.errors) ||\r\n              (f.periodFrequency.errors && !f.periodFrequency.errors.required)\r\n          }\"\r\n        />\r\n        <select formControlName=\"recurrenceFrequency\" class=\"form-control\">\r\n          <option value=\"Hours\">Hours</option>\r\n          <option value=\"Days\">Days</option>\r\n          <option value=\"Weeks\">Weeks</option>\r\n          <option value=\"Months\">Months</option>\r\n        </select>\r\n      </div>\r\n      <br />\r\n    </div>\r\n\r\n    <div *ngIf=\"isrec\" class=\"form-group\">\r\n      <label for=\"\">Frequency</label>\r\n      <br />\r\n      <div class=\"form-group flex\">\r\n        <input\r\n          type=\"number\"\r\n          class=\"form-control\"\r\n          formControlName=\"periodStart\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.periodStart.errors) ||\r\n              (f.periodStart.errors && !f.periodStart.errors.required)\r\n          }\"\r\n        />\r\n        <select formControlName=\"recurrenceStart\" class=\"form-control\">\r\n          <option value=\"Hours\">Hours</option>\r\n          <option value=\"Days\">Days</option>\r\n          <option value=\"Weeks\">Weeks</option>\r\n          <option value=\"Months\">Months</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isrec\" class=\"form-group\">\r\n      <label class=\"mt-3\" for=\"\">Period of inactivity (In Days)</label>\r\n      <i\r\n        _ngcontent-ioh-c500=\"\"\r\n        class=\"fa fa-question-circle\"\r\n        title=\"No end date if select zero for period of inactivity\"\r\n      ></i>\r\n      <br />\r\n      <div class=\"form-group flex\">\r\n        <input\r\n          type=\"number\"\r\n          class=\"form-control\"\r\n          formControlName=\"periodEnd\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.periodEnd.errors) ||\r\n              (f.periodEnd.errors && !f.periodEnd.errors.required)\r\n          }\"\r\n        />\r\n\r\n        <!--<div class=\"form-group flex\" style=\"margin-bottom: 0;\">\r\n          \r\n            <input type=\"checkbox\" [formControl]=\"noEndDate\" />\r\n            <i class=\"skin\"></i>          \r\n          <label for=\"\">No End Date</label>\r\n          \r\n        </div>-->\r\n      </div>\r\n    </div>\r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">\r\n        Cancel\r\n      </button>\r\n      <button\r\n        class=\"btn btn-primary btn-sm\"\r\n        type=\"submit\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"!published\"\r\n      >\r\n        <ng-container *ngIf=\"newElement\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newElement\">Update</ng-container>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n", "import { Component } from '@angular/core';\r\nimport {\r\n  UntypedFormArray,\r\n  UntypedFormBuilder,\r\n  UntypedFormControl,\r\n  UntypedFormGroup,\r\n  Validators,\r\n  ReactiveFormsModule,\r\n} from '@angular/forms';\r\nimport { Status } from '@app/admin/data-modeler/models';\r\nimport {\r\n  ListColumnType,\r\n  ListConfig,\r\n} from '@app/admin/lib/list/list-config.model';\r\nimport { MessageService } from '@app/core';\r\nimport { NAME_VALIDATORS } from '@lib/common/const';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  SaveTriggerConditionPayload,\r\n  TriggerConditionFilter,\r\n  WFTriggerConditionDetail,\r\n  WorkflowFile,\r\n} from '../../models';\r\nimport { ElementType, TriggerConditionConnection } from '../../models/bpmn';\r\nimport { ElementDetail } from '../../models/element-detail.class';\r\nimport { TriggerCondition } from '../../models/wf.model';\r\nimport { FileSizePipe } from '../../pipes/filesize.pipe';\r\nimport { DetailService } from '../../services/detail.service';\r\nimport { isStateType } from '../../util/bpmn';\r\nimport {\r\n  KeyValueList,\r\n  keyValueListToKeyList,\r\n  objToList,\r\n  primitiveArrayToList,\r\n  toFormArray,\r\n  toFormGroup,\r\n} from '../../util/helpers';\r\nimport { WorkflowApiService } from '../../services/workflow-api.service';\r\nimport { EditorConfigService } from '@app/admin/CommonService/editor-config.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgIf, NgClass, KeyValuePipe } from '@angular/common';\r\nimport { CustomSelectComponent } from '../../../../lib/custom-select/custom-select.component';\r\nimport { ListComponent } from '../../../../lib/list/list.component';\r\nimport {\r\n  MatExpansionPanel,\r\n  MatExpansionPanelHeader,\r\n} from '@angular/material/expansion';\r\nimport { EditorComponent } from '../../../../Shared/editor/editor.component';\r\nimport { FileUploaderComponent } from '../file-uploader/file-uploader.component';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\n@Component({\r\n  selector: 'app-trigger-condition-detail',\r\n  templateUrl: './trigger-condition-detail.component.html',\r\n  styleUrls: ['./trigger-condition-detail.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgIf,\r\n    ReactiveFormsModule,\r\n    NgClass,\r\n    CustomSelectComponent,\r\n    ListComponent,\r\n    MatExpansionPanel,\r\n    MatExpansionPanelHeader,\r\n    EditorComponent,\r\n    FileUploaderComponent,\r\n    KeyValuePipe,\r\n    QuillModule,\r\n  ],\r\n})\r\nexport class TriggerConditionDetailComponent extends ElementDetail<\r\n  TriggerCondition,\r\n  WFTriggerConditionDetail,\r\n  SaveTriggerConditionPayload\r\n> {\r\n  private readonly fileSizePipe = new FileSizePipe();\r\n  readonly allowedExtensions = [\r\n    'docx',\r\n    'doc',\r\n    'csv',\r\n    'mp3',\r\n    'wmv',\r\n    'jpg',\r\n    'jpeg',\r\n    'pdf',\r\n    'xls',\r\n    'xlsx',\r\n    'sql',\r\n    'zip',\r\n    'bin',\r\n    'mov',\r\n    'mp4',\r\n    'bmp',\r\n    'gif',\r\n    'txt',\r\n    'png',\r\n    'ppt',\r\n    'pptx',\r\n  ];\r\n\r\n  declare element: TriggerConditionConnection;\r\n  filters: ListConfig<TriggerConditionFilter>;\r\n  filesConfig: ListConfig<WorkflowFile>;\r\n  filesUploading = false;\r\n  parentTriggers: KeyValueList<string, string>;\r\n  processName: any;\r\n  verNo: any;\r\n  id: any;\r\n  editorConfig: any;\r\n  constructor(\r\n    fb: UntypedFormBuilder,\r\n    ref: NgbActiveModal,\r\n    msg: MessageService,\r\n    private readonly detail: DetailService,\r\n    public wfapi: WorkflowApiService,\r\n    readonly editorConfigService: EditorConfigService,\r\n    private readonly route: ActivatedRoute\r\n  ) {\r\n    super(fb, ref, msg);\r\n    this.formActions = [\r\n      {\r\n        controlName: 'files',\r\n        handler: (files: File[]) => this.fileListHandler(files),\r\n      },\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.processName = params['processName'];\r\n      this.verNo = params['VerNo'];\r\n      this.id = params['id'];\r\n    });\r\n\r\n    this.filesConfig = {\r\n      columns: [\r\n        {\r\n          key: 'FileName',\r\n          displayValue: 'File Name',\r\n          type: ListColumnType.File,\r\n        },\r\n        { key: 'FileSize', displayValue: 'Size', type: ListColumnType.File },\r\n      ],\r\n      actions: { delete: true, download: true },\r\n      checkbox: true,\r\n    };\r\n    this.configureFilters();\r\n    const stageState = this.getStateStageInformation();\r\n    this.form = this.fb.group({\r\n      conditionName: [\r\n        this.newElement ? '' : this.data.ConditionName,\r\n        NAME_VALIDATORS,\r\n      ],\r\n      conditionDescription: [\r\n        this.newElement ? '' : this.data.ConditionDescription,\r\n        [Validators.required, Validators.maxLength(100)],\r\n      ],\r\n      status: [\r\n        this.newElement ? Status.Active : this.data.Status,\r\n        [Validators.required],\r\n      ],\r\n      endWfoId: [stageState.endStage, [Validators.required]],\r\n      endWfosId: [stageState.endState, [Validators.required]],\r\n      notify: [this.data.Notify],\r\n      roleGuid: [\r\n        this.newElement\r\n          ? []\r\n          : objToList(this.data.EmailRole.SelectedTriggerEmailRole),\r\n      ],\r\n      filter: toFormArray(this.data.Filter, {\r\n        addCheckbox: this.filters.checkbox,\r\n      }),\r\n      fileNames: toFormArray(this.data.Files, {\r\n        addCheckbox: this.filesConfig.checkbox,\r\n      }),\r\n      deletedUploadedFiles: [[]],\r\n      files: [[]],\r\n      emailSubject: [this.newElement ? '' : this.data.EmailSubject],\r\n      ccMAilRoleGuids: [\r\n        this.newElement\r\n          ? []\r\n          : objToList(this.data.CcEmailRole.SelectedCCEmailTrgrRole),\r\n      ],\r\n    });\r\n    if (this.newElement) {\r\n      this.addTriggerControl();\r\n    }\r\n    this.editorConfig = this.editorConfigService.getToolbarOptions();\r\n  }\r\n\r\n  public CheckValidationWF() {\r\n    if (\r\n      this.newElement === false ||\r\n      !this.form.controls['conditionName'].value\r\n    ) {\r\n      return;\r\n    }\r\n    const processName = this.processName;\r\n    const type = 'trgcond';\r\n    const wfId = this.id;\r\n    const name = this.form.controls['conditionName'].value;\r\n    const version = this.verNo;\r\n\r\n    this.wfapi\r\n      .CheckValidationWF(processName, type, wfId, name, version)\r\n      .subscribe({\r\n        next: (isDuplicate: boolean) => {\r\n          this.detail.handleValidationResult(\r\n            isDuplicate,\r\n            this.form.controls['conditionName']\r\n          );\r\n        },\r\n        error: (error) => {\r\n          this.detail.handleValidationError(error);\r\n        },\r\n      });\r\n  }\r\n\r\n  public onFilesUpload(files: File[]) {\r\n    this.form.get('files').patchValue(files);\r\n  }\r\n\r\n  public fileListHandler(files: File[]) {\r\n    const fileList = this.form.get('fileNames') as UntypedFormArray;\r\n    const unique = [];\r\n    files.forEach((file) => {\r\n      if (\r\n        !fileList.controls.some(\r\n          (group: UntypedFormGroup) => group.get('FileName').value === file.name\r\n        )\r\n      ) {\r\n        unique.push(file);\r\n      }\r\n    });\r\n    this.filesUploading = true;\r\n    this.detail\r\n      .uploadFiles(unique, this.workflow.WFID, this.element.id)\r\n      .subscribe(\r\n        (file) => {\r\n          const wfFile: WorkflowFile = {\r\n            FileName: file.name,\r\n            FileSize: this.fileSizePipe.transform(file.size.toString()),\r\n          };\r\n          fileList.push(\r\n            toFormGroup(wfFile, { addCheckbox: this.filesConfig.checkbox })\r\n          );\r\n        },\r\n        () => null,\r\n        () => (this.filesUploading = false)\r\n      );\r\n  }\r\n\r\n  onIgnoredFiles(files: File[]) {\r\n    this.msg.showMessage('Warning', {\r\n      body: `The following files are not allowed to be uploaded: \\n\r\n            ${files.map((file) => `<br>${file.name}`).join('')}`,\r\n    });\r\n  }\r\n\r\n  public onFileDelete(file: WorkflowFile) {\r\n    const control = this.form.get('deletedUploadedFiles');\r\n    const values = control.value as string[];\r\n    values.push(file.FileName);\r\n    control.patchValue(values);\r\n  }\r\n\r\n  public onFileDownload(filename: string) {\r\n    const uploadedAndSaved = (this.data.Files || []).some(\r\n      (f) => f.FileName === filename\r\n    );\r\n    this.detail\r\n      .downloadFile(\r\n        this.workflow.ProcessName,\r\n        filename,\r\n        this.workflow.WFID,\r\n        this.data.ConditionName || '',\r\n        'triggercondition',\r\n        uploadedAndSaved ? '' : this.element.id\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  private configureFilters() {\r\n    const bools = ['AND', 'OR'];\r\n    const operators = [\r\n      'LT',\r\n      'LE',\r\n      'GT',\r\n      'GE',\r\n      'EQ',\r\n      'NOT EQ',\r\n      'LIKE',\r\n      'NOT IN',\r\n      'IN',\r\n    ];\r\n\r\n    // Add null checks to prevent crashes when element is not properly initialized\r\n    const trigger = this.element?.source?.incoming?.[0];\r\n    if (!trigger) {\r\n      // Initialize with empty filters if trigger is not available\r\n      this.filters = {\r\n        columns: [\r\n          {\r\n            key: 'DmoName',\r\n            displayValue: 'Dmo Name',\r\n            type: ListColumnType.Dropdown,\r\n            validators: [Validators.required],\r\n          },\r\n          {\r\n            key: 'Operator',\r\n            displayValue: 'Operator',\r\n            type: ListColumnType.Dropdown,\r\n            validators: [Validators.required],\r\n          },\r\n          {\r\n            key: 'Value',\r\n            displayValue: 'Value',\r\n            validators: [Validators.required],\r\n          },\r\n          {\r\n            key: 'BooleanExpression',\r\n            displayValue: 'Boolean Expression',\r\n            type: ListColumnType.Dropdown,\r\n            validators: [Validators.required],\r\n          },\r\n        ],\r\n        defaultValues: {\r\n          BooleanExpression: primitiveArrayToList(bools),\r\n          Operator: primitiveArrayToList(operators),\r\n          DmoName: [],\r\n        },\r\n        actions: { add: true, delete: true, edit: true },\r\n        checkbox: true,\r\n      };\r\n      return;\r\n    }\r\n\r\n    this.filters = {\r\n      columns: [\r\n        {\r\n          key: 'DmoName',\r\n          displayValue: 'Dmo Name',\r\n          type: ListColumnType.Dropdown,\r\n          validators: [Validators.required],\r\n        },\r\n        {\r\n          key: 'Operator',\r\n          displayValue: 'Operator',\r\n          type: ListColumnType.Dropdown,\r\n          validators: [Validators.required],\r\n        },\r\n        {\r\n          key: 'Value',\r\n          displayValue: 'Value',\r\n          validators: [Validators.required],\r\n        },\r\n        {\r\n          key: 'BooleanExpression',\r\n          displayValue: 'Boolean Expression',\r\n          type: ListColumnType.Dropdown,\r\n          validators: [Validators.required],\r\n        },\r\n      ],\r\n      defaultValues: {\r\n        BooleanExpression: primitiveArrayToList(bools),\r\n        Operator: primitiveArrayToList(operators),\r\n        DmoName: this.detail.getDmos(\r\n          trigger.props.TriggerId,\r\n          this.newElement ? '' : this.element.props.ConditionId\r\n        ),\r\n      },\r\n      actions: { add: true, delete: true, edit: true },\r\n      checkbox: true,\r\n    };\r\n  }\r\n\r\n  private getStateStageInformation() {\r\n    // Add null check to prevent crashes when element is not properly initialized\r\n    if (!this.element?.target) {\r\n      return { endState: null, endStage: null };\r\n    }\r\n\r\n    const { target } = this.element;\r\n    if (isStateType(target)) {\r\n      const endState = {\r\n        key: target.props.WfosId,\r\n        value: target.businessObject.name,\r\n      };\r\n      const parent = target.parent;\r\n      if (parent.type === ElementType.Stage) {\r\n        const endStage = {\r\n          key: parent.props.WfoId,\r\n          value: parent.businessObject.name,\r\n        };\r\n        return { endState, endStage };\r\n      }\r\n    }\r\n    return { endState: null, endStage: null };\r\n  }\r\n\r\n  private addTriggerControl() {\r\n    this.parentTriggers = this._getParentTriggers().map((flow) => {\r\n      return {\r\n        key: flow.props.TriggerId,\r\n        value: flow.businessObject.name,\r\n      };\r\n    });\r\n    const value =\r\n      this.parentTriggers.length === 1 ? this.parentTriggers[0] : [];\r\n    this.form.addControl(\r\n      'triggerId',\r\n      new UntypedFormControl(value, [Validators.required])\r\n    );\r\n    this.form.updateValueAndValidity();\r\n  }\r\n\r\n  private _getParentTriggers() {\r\n    return this.element.source.incoming;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const props = this.element?.props;\r\n      const payload: SaveTriggerConditionPayload = {\r\n        ...this.form.value,\r\n        conditionId: this.newElement ? '' : props.ConditionId,\r\n        triggerId: this.newElement\r\n          ? this.form.value.triggerId.key\r\n          : props.TriggerId,\r\n        roleGuid: keyValueListToKeyList(this.form.value.roleGuid),\r\n        ccMAilRoleGuids: keyValueListToKeyList(this.form.value.ccMAilRoleGuids),\r\n        endWfoId: this.form.value.endWfoId.key,\r\n        endWfosId: this.form.value.endWfosId.key,\r\n        wfId: this.workflow.WFID,\r\n        fileNames: this.form.value.fileNames\r\n          .map(({ FileName }) => FileName)\r\n          .toString(), // ????\r\n        deletedUploadedFiles: this.form.value.deletedUploadedFiles.toString(),\r\n        fileUploadLoc: this.element.id,\r\n        status: this.form.value.status?.toString(),\r\n        filter: this.form.value.filter.map((f) => ({\r\n          ...f,\r\n          FilterId: f.FilterId || null,\r\n          BooleanExpression: f.BooleanExpression.key || f.BooleanExpression,\r\n          DmoName: f.DmoName?.key || f.DmoName,\r\n          Operator: f.Operator?.key || f.Operator,\r\n          Value: f.Value?.key || f.Value,\r\n        })),\r\n      };\r\n      this.updated.emit(payload);\r\n      this.ref.close(payload);\r\n    }\r\n  }\r\n}\r\n", "<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2 *ngIf=\"newElement\">New Trigger Condition</h2>\r\n    <h2 *ngIf=\"!newElement\">Trigger Condition Details</h2>\r\n    <span class=\"popup__close\"\r\n      ><i class=\"fas fa-times-circle fa-fw\" (click)=\"ref.close()\"></i\r\n    ></span>\r\n  </div>\r\n  <hr />\r\n\r\n  <form [formGroup]=\"form\" *ngIf=\"form\">\r\n    <div class=\"double-column\">\r\n      <div class=\"form-group span-6\">\r\n        <label>Name <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"conditionName\"\r\n          [style.background-color]=\"!newElement ? '#e9ecef' : 'white'\"\r\n          [readonly]=\"!newElement\"\r\n          (blur)=\"CheckValidationWF()\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.conditionName.errors) ||\r\n              (f.conditionName.errors && !f.conditionName.errors.required) ||\r\n              f.conditionName.errors?.duplicate\r\n          }\"\r\n        />\r\n        <div\r\n          *ngIf=\"f.conditionName?.errors?.duplicate\"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          Duplicate name\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Description <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"conditionDescription\"\r\n          maxlength=\"100\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.conditionDescription.errors) ||\r\n              (f.conditionDescription.errors &&\r\n                !f.conditionDescription.errors.required)\r\n          }\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>Status <span style=\"color: red\">*</span></label>\r\n        <br />\r\n        <select\r\n          class=\"form-control\"\r\n          formControlName=\"status\"\r\n          [ngClass]=\"{\r\n            'is-invalid':\r\n              (submitted && f.status.errors) ||\r\n              (f.status.errors && !f.status.errors.required)\r\n          }\"\r\n        >\r\n          <option value=\"1\">Active</option>\r\n          <option value=\"0\">Inactive</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>End Stage</label>\r\n        <br />\r\n        <app-custom-select\r\n          [parentForm]=\"form\"\r\n          controlName=\"endWfoId\"\r\n          [items]=\"[]\"\r\n          [submitted]=\"submitted\"\r\n          [readonly]=\"true\"\r\n        ></app-custom-select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-6\">\r\n        <label>End State</label>\r\n        <br />\r\n        <app-custom-select\r\n          [parentForm]=\"form\"\r\n          controlName=\"endWfosId\"\r\n          [items]=\"[]\"\r\n          [submitted]=\"submitted\"\r\n          [readonly]=\"true\"\r\n        ></app-custom-select>\r\n      </div>\r\n\r\n      <div class=\"form-group span-12\">\r\n        <label>Filters</label>\r\n        <br />\r\n        <app-list\r\n          [parentForm]=\"form\"\r\n          controlName=\"filter\"\r\n          [config]=\"filters\"\r\n        ></app-list>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-expansion-panel [expanded]=\"false\">\r\n      <mat-expansion-panel-header class=\"disable_ripple\">\r\n        Notification Settings\r\n      </mat-expansion-panel-header>\r\n      <div class=\"double-column mt-2\">\r\n        <div class=\"form-group span-6\">\r\n          <label>Email Roles</label>\r\n          <br />\r\n          <app-custom-select\r\n            [parentForm]=\"form\"\r\n            controlName=\"roleGuid\"\r\n            [items]=\"data.EmailRole?.AvailableTriggerEmailRole | keyvalue\"\r\n            [multiple]=\"true\"\r\n            [submitted]=\"submitted\"\r\n          ></app-custom-select>\r\n        </div>\r\n\r\n        <div class=\"form-group span-6\">\r\n          <label>CC Email Roles</label>\r\n          <br />\r\n          <app-custom-select\r\n            [parentForm]=\"form\"\r\n            controlName=\"ccMAilRoleGuids\"\r\n            [items]=\"data.CcEmailRole?.AvailableCCEmailTrgrRole | keyvalue\"\r\n            [multiple]=\"true\"\r\n            [submitted]=\"submitted\"\r\n          ></app-custom-select>\r\n        </div>\r\n        <div class=\"form-group span-12\">\r\n          <label>Email Subject</label>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"emailSubject\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                (submitted && f.emailSubject.errors) ||\r\n                (f.emailSubject.errors && !f.emailSubject.errors.required)\r\n            }\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group span-12\">\r\n          <label>Notify</label>\r\n          <br />\r\n          <div class=\"Ql-container\">\r\n            <quill-editor\r\n              [modules]=\"{ toolbar: editorConfig.toolbar }\"\r\n              class=\"Ql-InsideContainer\"\r\n              formControlName=\"notify\"\r\n            ></quill-editor>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group span-12\">\r\n          <label>Files</label>\r\n          <br />\r\n          <app-file-uploader\r\n            [disabled]=\"published\"\r\n            [uploading]=\"filesUploading\"\r\n            [allowedExtensions]=\"allowedExtensions\"\r\n            [multiple]=\"true\"\r\n            (files)=\"onFilesUpload($event)\"\r\n            (ignored)=\"onIgnoredFiles($event)\"\r\n          >\r\n          </app-file-uploader>\r\n          <app-list\r\n            [parentForm]=\"form\"\r\n            controlName=\"fileNames\"\r\n            [config]=\"filesConfig\"\r\n            (itemDeleted)=\"onFileDelete($event)\"\r\n            (fileDownload)=\"onFileDownload($event)\"\r\n          ></app-list>\r\n        </div>\r\n      </div>\r\n    </mat-expansion-panel>\r\n\r\n    <div class=\"popup__actions\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">\r\n        Cancel\r\n      </button>\r\n      <button\r\n        class=\"btn btn-primary btn-sm\"\r\n        type=\"submit\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"!published\"\r\n      >\r\n        <ng-container *ngIf=\"newElement\">Create</ng-container>\r\n        <ng-container *ngIf=\"!newElement\">Update</ng-container>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n", "import {\r\n  AfterContentInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  ICompanyAssociatedBMObject,\r\n  ICompanyAssociatedWFObject,\r\n  MessageService,\r\n  WFAssociatedCompaniesPayload,\r\n} from '@app/core';\r\nimport { FormViewApiService } from '@app/core/services/form-view-api.service';\r\nimport { switchMap, takeUntil } from 'rxjs/operators';\r\nimport { WFTriggerConditionDetail } from '../../models';\r\nimport {\r\n  ConnectionReconnectContext,\r\n  ConnectionShape,\r\n  ConnectionShapeWithProps,\r\n  DiagramEl,\r\n  ElementType,\r\n  EventDef,\r\n  StateShapeType,\r\n  TriggerConditionConnection,\r\n  TriggerConnection,\r\n} from '../../models/bpmn';\r\nimport { DetailConfig } from '../../models/element-detail.class';\r\nimport { ElementsIds } from '../../models/elements-ids.model';\r\nimport {\r\n  Coordinates,\r\n  MetaData,\r\n  Stage,\r\n  State,\r\n  Trigger,\r\n  TriggerCondition,\r\n  Workflow,\r\n} from '../../models/wf.model';\r\nimport { DiagramService } from '../../services/diagram.service';\r\nimport { DiagramStorageService } from '../../services/diagram-storage.service';\r\nimport {\r\n  WFSaveResponse,\r\n  WorkflowApiService,\r\n} from '../../services/workflow-api.service';\r\nimport { getEventDef, isConditionType, isStateType } from '../../util/bpmn';\r\nimport { getTriggerType } from '../../util/bridge';\r\nimport { constructId } from '../../util/helpers';\r\nimport { StageDetailComponent } from '../stage-detail/stage-detail.component';\r\nimport { StateDetailComponent } from '../state-detail/state-detail.component';\r\nimport { TimerDetailComponent } from '../timer-detail/timer-detail.component';\r\nimport { TriggerConditionDetailComponent } from '../trigger-condition-detail/trigger-condition-detail.component';\r\nimport { TriggerDetailComponent } from '../trigger-detail/trigger-detail.component';\r\nimport { WorkflowDetailComponent } from '../workflow-detail/workflow-detail.component';\r\nimport { environment } from '@env/environment';\r\nimport { firstValueFrom, Observable, Subject } from 'rxjs';\r\nimport { BpmnService } from '../../services/bpmn.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { WfdComponent } from '../../wfd.component';\r\nimport { GenerateXmlComponent } from '../generatexml/generatexml.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Guid } from 'guid-typescript';\r\n\r\nimport { CompanyAssociationComponent } from '@app/admin/Shared/company-association/company-association.component';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  NgbDropdown,\r\n  NgbDropdownToggle,\r\n  NgbDropdownMenu,\r\n  NgbDropdownItem,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgIf, NgFor } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nconst t = ElementType;\r\n\r\ninterface WfosIdToWfoIdMap {\r\n  [key: string]: string; // This defines a mapping of string keys to string values\r\n}\r\n\r\n@Component({\r\n  selector: 'app-diagram',\r\n  templateUrl: './diagram.component.html',\r\n  styleUrls: ['./diagram.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgbDropdown,\r\n    NgbDropdownToggle,\r\n    NgIf,\r\n    NgbDropdownMenu,\r\n    NgFor,\r\n    NgbDropdownItem,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class DiagramComponent implements AfterContentInit, OnDestroy {\r\n  @ViewChild('ref', { static: true }) private el: ElementRef;\r\n  @Input() metadata: MetaData;\r\n  @Output() workflowDeleted = new EventEmitter<boolean>();\r\n  private running = true;\r\n  public actionsVisible = true;\r\n  public actionsDisabled = false;\r\n  showWfdOnly = false; // Default state\r\n  metadata$: Observable<MetaData>;\r\n  private destroy$ = new Subject<void>();\r\n  previousLength: number = 0;\r\n  coordinatesChangePoints: Coordinates; // Store the points where the length changes\r\n  previousCords: Coordinates;\r\n  processName: any;\r\n  IsRedoAllowed: boolean;\r\n  IsUndoAllowed: boolean;\r\n  reloadData: boolean = false;\r\n\r\n  EntityId: string = '';\r\n  EntityType: string = '';\r\n  ActionName: string = '';\r\n  ActionGroupId: string = '';\r\n  ActionDetails: string = '';\r\n  clearDetail: boolean = false;\r\n  totalComponentLenth: number;\r\n  keyColorArrayPrevious: [string, string | undefined][] = [];\r\n  alertMsgTxt: string[] = [];\r\n\r\n  // Manual save properties\r\n  public hasUnsavedChanges = false;\r\n  public isSaving = false;\r\n\r\n  // Local undo/redo properties\r\n  public canUndo = false;\r\n  public canRedo = false;\r\n\r\n  // Alignment properties\r\n  public selectedSwimlane: any = null;\r\n  trgConditionDetail: boolean = false;\r\n  undoredoactive = false;\r\n\r\n  // Element properties\r\n  public selectedState: any = null;\r\n  public selectedFontFamily: string = 'Museo Sans';\r\n  public selectedFontSize: string = '14px';\r\n  public selectedFontColor: string = '#000000';\r\n  public selectedFontBold: boolean = false;\r\n  public selectedFontItalic: boolean = false;\r\n  public selectedFontUnderline: boolean = false;\r\n  public selectedFillColor: string = '#ffffff';\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    public service: DiagramService,\r\n    public wfapi: WorkflowApiService,\r\n    private formViewApi: FormViewApiService,\r\n    private msg: MessageService,\r\n    private cdr: ChangeDetectorRef,\r\n    private route: ActivatedRoute,\r\n    private bpmnService: BpmnService,\r\n    private storageService: DiagramStorageService,\r\n    readonly toastr: ToastrService\r\n  ) {\r\n    this.registerEventHandlers();\r\n  }\r\n\r\n  private registerEventHandlers(): void {\r\n    this.service.onUpdateElement\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((el) => this.onUpdateElement(el));\r\n\r\n    this.service.onCreateElement\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((el) => this.onCreateElement(el));\r\n\r\n    this.service.onDeleteElement\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((res) => this.onDeleteElement(res));\r\n\r\n    this.service.onDiagramChange\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((coords) => {\r\n        if (this.ActionName === 'Delete' || !this.ActionName.trim()) {\r\n          this.EntityId = ' ';\r\n          this.EntityType = ' ';\r\n          this.ActionName = ' ';\r\n          this.ActionGroupId = ' ';\r\n        }\r\n\r\n        const currentCordsdetail = Object.keys(coords);\r\n        const previousCordsdetail = this.coordinatesChangePoints\r\n          ? Object.keys(this.coordinatesChangePoints)\r\n          : [];\r\n        const storedEvent = this.getStoredEvent();\r\n        let isUndoRedo = false;\r\n\r\n        if (\r\n          (storedEvent !== 'ElementMoved' &&\r\n            this.totalComponentLenth > currentCordsdetail.length) ||\r\n          this.undoredoactive\r\n        ) {\r\n          if (this.undoredoactive) {\r\n            isUndoRedo = true;\r\n          }\r\n          if (this.ActionName !== 'Edit') {\r\n            this.ActionName = '';\r\n            this.undoredoactive = false;\r\n          }\r\n        } else if (\r\n          !this.ActionName.trim() ||\r\n          this.ActionName === 'FilledColor'\r\n        ) {\r\n          this.ActionName = 'ElementMoved';\r\n        }\r\n\r\n        const newKeyColorArray: [string, string | undefined][] = Object.entries(\r\n          coords\r\n        )\r\n          .map(([key, value]) => [key, (value as any).color])\r\n          .filter(\r\n            (entry): entry is [string, string] =>\r\n              !!entry[1] && entry[1] !== 'none' && entry[1] !== ''\r\n          );\r\n\r\n        const hasColorChanged =\r\n          this.keyColorArrayPrevious.length !== newKeyColorArray.length ||\r\n          newKeyColorArray.some(([key, color]) => {\r\n            const match = this.keyColorArrayPrevious.find(\r\n              ([prevKey]) => prevKey === key\r\n            );\r\n            return !match || match[1] !== color;\r\n          });\r\n\r\n        if (hasColorChanged) {\r\n          this.keyColorArrayPrevious = newKeyColorArray;\r\n          this.ActionName = 'FilledColor';\r\n        }\r\n\r\n        if (isUndoRedo) {\r\n          this.ActionName = '';\r\n        }\r\n        this.totalComponentLenth = currentCordsdetail.length;\r\n        const removedGateway = previousCordsdetail.some(\r\n          (item) =>\r\n            item.includes('bpmn:ExclusiveGateway') &&\r\n            !currentCordsdetail.includes(item)\r\n        );\r\n\r\n        const removedCondition = previousCordsdetail.some(\r\n          (item) => item.includes('Cond_') && !currentCordsdetail.includes(item)\r\n        );\r\n\r\n        if (removedGateway && removedCondition) {\r\n          this.EntityType = 'diamond';\r\n          this.ActionGroupId = Guid.raw();\r\n        } else if (removedGateway) {\r\n          this.EntityType = 'diamond';\r\n          this.ActionGroupId = Guid.raw();\r\n        } else if (removedCondition) {\r\n          this.EntityType = 'TriggerCondition';\r\n          this.ActionGroupId = Guid.raw();\r\n        }\r\n        const currentLength = Object.keys(coords).length;\r\n        // Check if the length has changed\r\n        this.coordinatesChangePoints = coords;\r\n\r\n        // if (this.previousLength > currentLength) {\r\n\r\n        // }\r\n        this.previousLength = currentLength;\r\n\r\n        this.persistWorkflowDataArray();\r\n\r\n        // Store changes locally instead of auto-saving to cloud\r\n        this.storeChangesLocally(coords);\r\n\r\n        if (this.clearDetail) {\r\n          this.EntityId = ' ';\r\n          this.EntityType = ' ';\r\n          this.ActionName = ' ';\r\n          this.ActionGroupId = ' ';\r\n          this.ActionDetails = ' ';\r\n          this.clearDetail = false;\r\n        }\r\n        this.clearStoredEvent();\r\n      });\r\n\r\n    this.service.onReconnect\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((context) => this.onConnectionReconnect(context));\r\n\r\n    this.service.onRestoreElement\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((element) => {\r\n        this.wfapi\r\n          .restoreElement(this.metadata.Workflow.WFID, element)\r\n          .subscribe();\r\n      });\r\n\r\n    // Track selection changes to detect swimlane selection\r\n    this.service.onSelectionChanged\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((event: any) => {\r\n        this.handleSelectionChange(event);\r\n      });\r\n\r\n    // this.bpmnService.eventBus.on('element.changed', (event: any) => {\r\n    //   if (event.element && this.isStateType(event.element)) {\r\n    //     setTimeout(() => {\r\n    //       this.service.restoreFontProperties(event.element);\r\n    //     }, 100);\r\n    //   }\r\n    // });\r\n\r\n    // this.bpmnService.eventBus.on('element.move', (event: any) => {\r\n    //   const element = event.element;\r\n    //   if (element && this.isStateType(element)) {\r\n    //     setTimeout(() => {\r\n    //       this.service.restoreFontProperties(element);\r\n    //     }, 100);\r\n    //   }\r\n    // });\r\n\r\n    // this.bpmnService.eventBus.on('element.render', (event: any) => {\r\n    //   const element = event.element;\r\n    //   if (element && this.isStateType(element)) {\r\n    //     setTimeout(() => {\r\n    //       this.service.restoreFontProperties(element);\r\n    //     }, 50);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  changeUndoRedo(id: string, type: string, Action: string) {\r\n    type = type.replace('bpmn:', '');\r\n    this.EntityId = id;\r\n    this.ActionName = Action;\r\n    this.ActionGroupId = Guid.raw();\r\n\r\n    switch (type) {\r\n      case 'Task':\r\n        this.EntityType = 'State';\r\n        break;\r\n      case 'Participant':\r\n        this.EntityType = 'Pool';\r\n        break;\r\n      case 'Lane':\r\n        this.EntityType = 'Stage';\r\n        break;\r\n      case 'StartEvent':\r\n        this.EntityType = 'StartState';\r\n        break;\r\n      case 'EndEvent':\r\n        this.EntityType = 'EndState';\r\n        break;\r\n      case 'ExclusiveGateway':\r\n        this.EntityType = 'Gateway';\r\n        this.clearDetail = true;\r\n        break;\r\n      case 'SequenceFlow':\r\n        this.EntityType = 'Trigger';\r\n        break;\r\n      case 'IntermediateCatchEvent':\r\n        this.EntityType = 'TriggerExtension';\r\n        this.clearDetail = true;\r\n        break;\r\n      case 'TimerEventDefinition':\r\n        this.EntityType = 'Timer';\r\n        this.clearDetail = true;\r\n        break;\r\n      case 'Association':\r\n        this.EntityType = 'Association';\r\n        break;\r\n      case 'TextAnnotation':\r\n        this.EntityType = 'Annotation';\r\n        this.clearDetail = true;\r\n        break;\r\n      case 'SubProcess':\r\n        this.EntityType = 'SubProcess';\r\n        break;\r\n      case 'label':\r\n        this.EntityType = 'Label';\r\n        break;\r\n      default:\r\n        this.EntityType = '';\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteWfCall(ids: ElementsIds) {\r\n    const deletedIds = {\r\n      workflowIds: ids.workflowIds,\r\n      stageIds: ids.stageIds,\r\n      stateIds: ids.stateIds,\r\n      triggerIds: ids.triggerIds,\r\n      conditionIds: ids.conditionIds,\r\n      PrevStageIds: [],\r\n    };\r\n\r\n    const deletedIdsString = JSON.stringify(deletedIds); // Convert object to string\r\n    this.ActionName = 'Delete';\r\n    this.ActionGroupId =\r\n      this.EntityType !== 'diamond' && this.EntityType !== 'TriggerCondition'\r\n        ? Guid.raw()\r\n        : this.ActionGroupId;\r\n\r\n    // Determine EntityType\r\n    this.EntityType =\r\n      this.EntityType === 'diamond' || this.EntityType === 'TriggerCondition'\r\n        ? this.EntityType\r\n        : ids.stageIds?.[0]\r\n        ? 'Stage'\r\n        : ids.stateIds?.[0]\r\n        ? 'State'\r\n        : ids.triggerIds?.[0]\r\n        ? 'Trigger'\r\n        : '';\r\n    this.persistWorkflowDataArray();\r\n\r\n    this.wfapi\r\n      .saveDiagramCoordinates(\r\n        this.metadata.Workflow.WFID,\r\n        this.coordinatesChangePoints,\r\n        {\r\n          EntityId:\r\n            ids.stageIds[0] ??\r\n            ids.stateIds[0] ??\r\n            ids.triggerIds[0] ??\r\n            ids.conditionIds[0] ??\r\n            '',\r\n          EntityType: this.EntityType,\r\n          ActionName: this.ActionName,\r\n          ActionGroupId: this.ActionGroupId,\r\n          ActionDetails: deletedIdsString,\r\n          SequenceNumber: this.getWorkflowValue(\r\n            this.metadata.Workflow.WFID\r\n          ).toString(),\r\n        }\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          this.IsRedoAllowed = !!response?.Redo && response.Redo > 0;\r\n          this.IsUndoAllowed = !!response?.Undo && response.Undo > 0;\r\n\r\n          this.resetValues();\r\n        },\r\n        error: (error) => {\r\n          this.resetValues();\r\n          console.error('Error saving diagram coordinates:', error);\r\n        },\r\n      });\r\n  }\r\n\r\n  // Helper method to reset values after API call\r\n  private resetValues(): void {\r\n    this.EntityId = '';\r\n    this.EntityType = '';\r\n    this.ActionName = '';\r\n    this.ActionGroupId = '';\r\n    this.ActionDetails = '';\r\n    this.clearDetail = false;\r\n  }\r\n\r\n  private async onCreateElement(el: DiagramEl) {\r\n    this.changeUndoRedo('', el.type, 'Insert');\r\n    try {\r\n      const details = await this.getDetails(el, true);\r\n      if (details) {\r\n        const ref = await this.openDialog({\r\n          element: el,\r\n          newElement: true,\r\n          ...details,\r\n        });\r\n\r\n        if (ref) {\r\n          const props = ref?.payload || ref;\r\n          try {\r\n            const res = await firstValueFrom(this.saveDetails(el, props));\r\n            if (res.statuscode === 200) {\r\n              this.clearDetail = true;\r\n              this.EntityId =\r\n                res.result.ConditionId ??\r\n                res.result.TriggerId ??\r\n                res.result.WfoId ??\r\n                res.result.WfosId;\r\n              //  this.ActionDetails = res.result.TriggerId ? JSON.stringify(Object.keys(res.result.TrgConditions)) : '';\r\n              this.ActionDetails = res.result.TriggerId\r\n                ? JSON.stringify({\r\n                    workflowIds: [],\r\n                    stageIds: [],\r\n                    stateIds: [],\r\n                    PrevStageIds: [],\r\n                    triggerIds: [res.result.TriggerId],\r\n                    conditionIds: Object.keys(\r\n                      res.result.TrgConditions ?? []\r\n                    ).filter((key) => key),\r\n                  })\r\n                : '';\r\n              if (ref.legalDocsPayload && ref.legalDocsPayload != '-1') {\r\n                const Workflow = this.metadata.Workflow;\r\n                const triggerId = res.result?.TriggerId;\r\n                await firstValueFrom(\r\n                  this.wfapi.insertlegaldmotrgmapping(\r\n                    ref.legalDocsPayload,\r\n                    Workflow.TypeID,\r\n                    triggerId\r\n                  )\r\n                );\r\n              }\r\n\r\n              // trg_cond\r\n              this.handleSaveResponse(el, res, props);\r\n            } else {\r\n              if (this.reloadData) {\r\n                this.reloadData = false;\r\n              }\r\n              this.clearDetail = true;\r\n              this.service.deleteElement(el);\r\n            }\r\n          } catch (_) {\r\n            this.clearDetail = true;\r\n            this.service.deleteElement(el);\r\n          }\r\n          this.clearDetail = true;\r\n        } else {\r\n          if (this.reloadData) {\r\n            this.reloadData = false;\r\n          }\r\n          this.service.undo();\r\n          this.clearDetail = true;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.service.undo();\r\n    }\r\n  }\r\n\r\n  public async UndoRedo(functionality: string) {\r\n    try {\r\n      this.undoredoactive = true;\r\n      if (functionality === 'Undo') {\r\n        if (this.metadata.Workflow) {\r\n          this.wfapi\r\n            .UndoWfdWorkflow(this.metadata.Workflow.WFID)\r\n            .pipe(switchMap(() => this.loadWfData()))\r\n            .subscribe((metadata) => {\r\n              this.mappingData(metadata);\r\n              this.refreshXML();\r\n            });\r\n        }\r\n      } else if (functionality === 'Redo') {\r\n        this.wfapi\r\n          .RedoWfdWorkflow(this.metadata.Workflow.WFID)\r\n          .pipe(switchMap(() => this.loadWfData()))\r\n          .subscribe((metadata) => {\r\n            this.mappingData(metadata);\r\n            this.refreshXML();\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error during ${functionality} operation:`, error);\r\n    }\r\n  }\r\n\r\n  private loadWfData() {\r\n    var processName: string;\r\n    var verNo: string;\r\n    this.route.queryParams.subscribe((params) => {\r\n      processName = params['processName'];\r\n      verNo = params['VerNo'];\r\n    });\r\n    this.metadata$ = this.wfapi.getWorkflowDiagram(processName, verNo);\r\n    return this.metadata$;\r\n  }\r\n\r\n  private mappingData(metadata) {\r\n    this.metadata = metadata;\r\n\r\n    this.IsRedoAllowed = !!this.metadata.Workflow.IsRedoAllowed;\r\n    this.IsUndoAllowed = !!this.metadata.Workflow.IsUndoAllowed;\r\n  }\r\n\r\n  private async onUpdateElement(el: DiagramEl) {\r\n    let isExclusiveGateway;\r\n    if (el.type === 'bpmn:SequenceFlow') {\r\n      isExclusiveGateway = el.source.type === 'bpmn:ExclusiveGateway';\r\n    } else {\r\n      isExclusiveGateway = false;\r\n    }\r\n\r\n    this.trgConditionDetail = isExclusiveGateway;\r\n    let friendlyName = isExclusiveGateway\r\n      ? el?.props?.Description ?? ''\r\n      : el.type === 'bpmn:SequenceFlow'\r\n      ? el.friendlyName ?? ''\r\n      : el?.props?.FriendlyName ?? '';\r\n    if (el.type === 'bpmn:IntermediateCatchEvent') {\r\n      friendlyName = '';\r\n    }\r\n\r\n    const newElement = !el.props && el.type !== t.TriggerExtension;\r\n    const details = await this.getDetails(el, newElement);\r\n    if (!details) return;\r\n\r\n    const ref = await this.openDialog({ element: el, newElement, ...details });\r\n    if (!ref) return (this.trgConditionDetail = false);\r\n\r\n    if (ref.legalDocsPayload && ref.legalDocsPayload != '-1') {\r\n      const Workflow = this.metadata.Workflow;\r\n      const triggerId = ref.payload?.triggerId;\r\n      await firstValueFrom(\r\n        this.wfapi.insertlegaldmotrgmapping(\r\n          ref.legalDocsPayload,\r\n          Workflow.TypeID,\r\n          triggerId\r\n        )\r\n      );\r\n    }\r\n\r\n    const props = ref?.payload || ref;\r\n    this.updateElementProperties(el, props, friendlyName);\r\n    await this.saveAndUpdateElement(el, props, newElement);\r\n  }\r\n\r\n  private updateElementProperties(el: DiagramEl, props: any, prev: any): void {\r\n    const stateTypes = [\r\n      'bpmn:Task',\r\n      'bpmn:StartEvent',\r\n      'bpmn:EndEvent',\r\n      'bpmn:SubProcess',\r\n    ];\r\n    if (stateTypes.includes(el.type)) {\r\n      this.changeUndoRedo(el.props.WfosId, el.type, 'Edit');\r\n    } else if (el.type === 'bpmn:Lane') {\r\n      this.changeUndoRedo(el.props.WfoId, el.type, 'Edit');\r\n    } else if (el.type === 'bpmn:SequenceFlow') {\r\n      if (this.trgConditionDetail) {\r\n        this.EntityId = props.conditionId;\r\n        this.ActionName = 'Edit';\r\n        this.ActionGroupId = Guid.raw();\r\n        this.EntityType = 'TriggerCondition';\r\n      } else {\r\n        this.changeUndoRedo(el.props.TriggerId, el.type, 'Edit');\r\n      }\r\n    } else if (el.def === 'bpmn:TimerEventDefinition') {\r\n      this.changeUndoRedo('', el.def, 'Edit');\r\n    } else if (el.type === 'bpmn:Participant') {\r\n      this.changeUndoRedo(props.wfId, el.type, 'Edit');\r\n    } else {\r\n      this.changeUndoRedo(el.id, el.type, 'Edit');\r\n    }\r\n\r\n    const UpdatedData = {\r\n      workflowIds: [],\r\n      stageIds: [],\r\n      stateIds: [],\r\n      PrevStageIds: [],\r\n      triggerIds: [],\r\n      conditionIds: [],\r\n      PrevDispName: prev,\r\n      CurrentDispName: this.trgConditionDetail\r\n        ? props.conditionDescription\r\n        : props.friendlyName,\r\n    };\r\n\r\n    this.ActionDetails = JSON.stringify(UpdatedData);\r\n    this.clearDetail = true;\r\n\r\n    el.props = el.props || {};\r\n    el.props.FriendlyName = props.friendlyName;\r\n\r\n    if (el.type === 'bpmn:SequenceFlow') {\r\n      el.friendlyName = this.trgConditionDetail\r\n        ? props.conditionDescription\r\n        : props.friendlyName;\r\n      this.trgConditionDetail = false;\r\n    }\r\n  }\r\n\r\n  private async saveAndUpdateElement(\r\n    el: DiagramEl,\r\n    props: any,\r\n    newElement: boolean\r\n  ): Promise<void> {\r\n    const saveResponse = await this.saveDetails(el, props).toPromise();\r\n\r\n    if (el.type === 'bpmn:SubProcess') {\r\n      el.props.SubProcessName = saveResponse.result.SubProcessName;\r\n      el.props.SubProcessWFVersionNo =\r\n        saveResponse.result.SubProcessWFVersionNo;\r\n    }\r\n\r\n    if (!newElement) return;\r\n\r\n    if (saveResponse.statuscode === 200) {\r\n      this.handleSaveResponse(el, saveResponse, props);\r\n    } else {\r\n      this.service.deleteElement(el);\r\n    }\r\n  }\r\n\r\n  private async onDeleteElement(ids: ElementsIds) {\r\n    const workflowId = this.metadata.Workflow.WFID;\r\n    this.deleteWfCall(ids);\r\n    try {\r\n      await this.wfapi.deleteElements(ids, workflowId).toPromise();\r\n\r\n      if (ids.workflowIds.length > 0) {\r\n        this.workflowDeleted.emit(true);\r\n      }\r\n    } catch (_) {\r\n      this.service.undo();\r\n    }\r\n  }\r\n\r\n  private async onConnectionReconnect(ctx: ConnectionReconnectContext) {\r\n    const {\r\n      connection,\r\n      hints: { docking },\r\n    } = ctx;\r\n    try {\r\n      let res;\r\n      let flow = connection;\r\n      if (docking === 'source') {\r\n        res = await this.getDetails(connection);\r\n      } else {\r\n        const condition = Object.values(connection.props.TrgConditions)[0];\r\n        (flow as unknown) = {\r\n          type: t.Trigger,\r\n          id: constructId('Cond_', condition.Name),\r\n          props: condition,\r\n          source: { type: t.Gateway },\r\n          target: connection.target,\r\n        } as TriggerConditionConnection;\r\n        res = await this.getDetails(flow);\r\n      }\r\n      if (res) {\r\n        const { data, component } = res;\r\n        const props = await this.openDialog({ element: flow, data, component });\r\n        if (props) {\r\n          await this.saveDetails(flow, props).toPromise();\r\n        } else {\r\n          this.service.undo();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.service.undo();\r\n    }\r\n  }\r\n\r\n  private async onElementsMove(el: DiagramEl) {\r\n    const res = await this.getDetails(el);\r\n    if (res) {\r\n      const props = await this.openDialog({ element: el, ...res });\r\n      if (props) {\r\n        const res = await this.saveDetails(el, props).toPromise();\r\n        if (res.statuscode === 200) {\r\n          this.handleSaveResponse(el, res, props);\r\n        } else {\r\n          this.service.deleteElement(el);\r\n        }\r\n      } else {\r\n        this.service.undo();\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleSaveResponse(el: DiagramEl, res: WFSaveResponse, payload: any) {\r\n    const props = { ...res.result };\r\n    let id = props.Guid;\r\n    if (\r\n      el.type === t.Trigger &&\r\n      (el.source.type === t.Gateway || el.source.type === t.TriggerExtension)\r\n    ) {\r\n      id = constructId('Cond_', payload.conditionName);\r\n    }\r\n    if (res.statuscode === 200) {\r\n      if (el.type === t.Trigger) {\r\n        const flow = el as ConnectionShapeWithProps;\r\n        const { source, target } = flow;\r\n        if (isStateType(source)) {\r\n          // id = props.TriggerId;\r\n          props.WfosId = (source.props as State).WfosId;\r\n        } else if (\r\n          source.type === t.Gateway ||\r\n          source.type === t.TriggerExtension\r\n        ) {\r\n          // id = props.ConditionId;\r\n          props.TriggerId = payload.triggerId;\r\n        }\r\n\r\n        let targetId = null;\r\n        if (target.type === t.TriggerExtension) {\r\n          const triggerType = getTriggerType(flow);\r\n          targetId = constructId(triggerType, props.Guid);\r\n        } else if (target.type === t.Gateway) {\r\n          targetId = constructId(t.Gateway, props.Guid);\r\n        }\r\n        if (targetId) {\r\n          this.service.updateElementProperties(target, { id: targetId });\r\n        }\r\n      } else if (el.type === t.TriggerExtension) {\r\n        return;\r\n      } else if (isStateType(el)) {\r\n        // id = props.WfosId;\r\n        props.WfoId = payload.wfoId;\r\n      } else if (el.type === t.Stage) {\r\n        // id = props.WfoId;\r\n      }\r\n\r\n      if (el.props) {\r\n        (el as any).props = { ...el.props, ...props };\r\n      } else {\r\n        (el as any).props = { ...props, Status: payload.status };\r\n      }\r\n\r\n      const updateId = id !== el.id ? { id } : {};\r\n      this.service.updateElementProperties(el, { ...updateId, props });\r\n    }\r\n  }\r\n\r\n  public toggleActions() {\r\n    this.actionsVisible = !this.actionsVisible;\r\n  }\r\n\r\n  private async openDialog(config: DetailConfig) {\r\n    const ref = this.msg.showComponent(config.component, {\r\n      workflow: this.metadata?.Workflow,\r\n      config,\r\n    });\r\n    return ref.result;\r\n  }\r\n\r\n  private async getDetails(element: DiagramEl, newElement?: boolean) {\r\n    const props = element.props || ({} as any);\r\n    switch (element.type) {\r\n      case t.Pool:\r\n        return this._getWorkflowDetails(props, newElement);\r\n      case t.Stage:\r\n        return this._getStageDetails(props, newElement);\r\n      case t.StartState:\r\n      case t.State:\r\n      case t.EndState:\r\n      case t.SubProcess:\r\n        return this._getStateDetails(element, newElement);\r\n      case t.TriggerExtension: {\r\n        const def = element.businessObject.eventDefinitions[0];\r\n        const flow = element.incoming[0];\r\n        if (flow && def?.$type === EventDef.Timer) {\r\n          return this._getTriggerDetails(flow, true);\r\n        }\r\n        return null;\r\n      }\r\n      case t.Trigger:\r\n        const flow = element as ConnectionShapeWithProps;\r\n        if (\r\n          flow.source.type === t.Gateway ||\r\n          (flow.source.type === t.TriggerExtension &&\r\n            (getEventDef(flow.source) === EventDef.System ||\r\n              getEventDef(flow.source) === EventDef.Timer))\r\n        ) {\r\n          return this._getTriggerConditionDetails(flow, newElement);\r\n        } else {\r\n          if (\r\n            flow.target &&\r\n            (flow.target.type === 'bpmn:IntermediateCatchEvent' ||\r\n              flow.target.type === 'bpmn:ExclusiveGateway')\r\n          ) {\r\n            this.reloadData = true;\r\n          }\r\n          return this._getTriggerDetails(flow);\r\n        }\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  private async _getWorkflowDetails(props: Workflow, newElement?: boolean) {\r\n    const component = WorkflowDetailComponent;\r\n    let data = {};\r\n    if (!newElement) {\r\n      [data] = await this.wfapi.getWorkflowDetails(props.WFID).toPromise();\r\n    }\r\n    return { component, data };\r\n  }\r\n\r\n  private async _getStageDetails(props: Stage, newElement?: boolean) {\r\n    const component = StageDetailComponent;\r\n    let data = {};\r\n    if (!newElement) {\r\n      const { WfoId } = props as Stage;\r\n      [data] = await this.wfapi\r\n        .getStageDetails(WfoId, this.metadata?.Workflow?.WFID)\r\n        .toPromise();\r\n    }\r\n    return { component, data };\r\n  }\r\n\r\n  private async _getStateDetails(\r\n    element: StateShapeType,\r\n    newElement?: boolean\r\n  ) {\r\n    const workflowId = this.metadata?.Workflow?.WFID;\r\n    const component = StateDetailComponent;\r\n    let data = {};\r\n    if (newElement) {\r\n      const { WfoId } = element.parent.props as Stage;\r\n      data = await this.wfapi\r\n        .getStateDetails(null, WfoId, workflowId)\r\n        .toPromise();\r\n    } else {\r\n      const { WfosId, WfoId: stageId } = element.props as State;\r\n      data = await this.wfapi\r\n        .getStateDetails(WfosId, stageId, workflowId)\r\n        .toPromise();\r\n    }\r\n    return { component, data };\r\n  }\r\n\r\n  private async _getTriggerDetails(flow: ConnectionShape, isTimer?: boolean) {\r\n    const component = isTimer ? TimerDetailComponent : TriggerDetailComponent;\r\n    const workflowId = this.metadata?.Workflow?.WFID;\r\n    const state = flow.source.props as State;\r\n\r\n    const data = await this.wfapi\r\n      .getTriggerDetails(\r\n        (flow.props as Trigger)?.TriggerId,\r\n        state.WfosId,\r\n        state.WfoId,\r\n        workflowId\r\n      )\r\n      .toPromise();\r\n    return { component, data };\r\n  }\r\n\r\n  private async _getTriggerConditionDetails(\r\n    flow: ConnectionShape,\r\n    newElement?: boolean\r\n  ) {\r\n    this.EntityType = 'TriggerCondition';\r\n    const workflowId = this.metadata?.Workflow?.WFID;\r\n    let data: Partial<WFTriggerConditionDetail> = {};\r\n    const component = TriggerConditionDetailComponent;\r\n    if (!newElement) {\r\n      const { ConditionId, TriggerId } = flow.props as TriggerCondition;\r\n      data = await this.wfapi\r\n        .getTriggerConditionDetails(ConditionId, TriggerId, workflowId)\r\n        .toPromise();\r\n    } else {\r\n      const { WfoId } = flow.source.parent.props as Stage;\r\n      const stateId = flow.target.props.WfosId;\r\n      const res = await this.wfapi\r\n        .getTriggerDetails(null, stateId, WfoId, workflowId)\r\n        .toPromise();\r\n      data = {\r\n        CcEmailRole: {\r\n          AvailableCCEmailTrgrRole:\r\n            res.CCTriggerEmailRole.AvailableCCEmailTrgrRole,\r\n          SelectedCCEmailTrgrRole: {},\r\n        },\r\n        EmailRole: {\r\n          AvailableTriggerEmailRole:\r\n            res.TriggerEmailRole.AvailableTriggerEmailRole,\r\n          SelectedTriggerEmailRole: {},\r\n        },\r\n      };\r\n    }\r\n    return { component, data };\r\n  }\r\n\r\n  private saveDetails(element: DiagramEl, props: any) {\r\n    if (element.props && props.status) {\r\n      element.props.Status = props.status;\r\n    }\r\n\r\n    if (element.type !== t.Trigger) {\r\n      this.service.updateElementProperties(element, {\r\n        name: props.friendlyName,\r\n      });\r\n    } else {\r\n      this.service.updateElementProperties(element, {});\r\n    }\r\n    const { ProcessName, WFID } = this.metadata.Workflow;\r\n    return this.wfapi.updateElement(element, props, ProcessName, WFID);\r\n  }\r\n\r\n  public changeMode(mode: 'Edit' | 'Published') {\r\n    this.wfapi\r\n      .changeMode(this.metadata.Workflow.WFID, mode)\r\n      .subscribe((success) => {\r\n        if (success && mode !== this.metadata.Workflow.WorkflowMode) {\r\n          location.reload();\r\n        }\r\n      });\r\n  }\r\n\r\n  public refreshXML() {\r\n    this.service.toDiagram(this.metadata, this.el.nativeElement).subscribe();\r\n  }\r\n\r\n  public generateXML() {\r\n    this.formViewApi\r\n      .generateBMWFXMLGateway(\r\n        'wf',\r\n        this.metadata.Workflow.ProcessName,\r\n        this.metadata.Workflow.Ver\r\n      )\r\n      .subscribe({\r\n        next: (success) => {\r\n          this.alertMsgTxt = [];\r\n\r\n          if (success.IsBMWFLinked === 0)\r\n            this.alertMsgTxt.push('BM-WF is not linked.');\r\n\r\n          if (success.IsLive === 0) this.alertMsgTxt.push('BM-WF is not live.');\r\n\r\n          if (success.IsCmpnyGrpExists === 0)\r\n            this.alertMsgTxt.push('Company Group is not exists.');\r\n\r\n          if (success.IsCmpnyWFObjectLinked === 0)\r\n            this.alertMsgTxt.push('Company-WF Objects are not linked.');\r\n\r\n          if (this.alertMsgTxt.length > 0) {\r\n            this.showErrorModal();\r\n          } else {\r\n            this.toastr.success('JSON generated successfully');\r\n          }\r\n        },\r\n        error: () => {\r\n          this.showErrorModal();\r\n        },\r\n      });\r\n  }\r\n\r\n  private showErrorModal(): void {\r\n    const dialogRef = this.dialog.open(GenerateXmlComponent, {\r\n      width: '656px',\r\n      disableClose: true,\r\n      panelClass: 'custom-dialog-container',\r\n      data: {\r\n        type: 'wf',\r\n        processName: this.metadata.Workflow.ProcessName,\r\n        verNo: this.metadata.Workflow.Ver,\r\n        alertMsgTxt: this.alertMsgTxt,\r\n      },\r\n    });\r\n\r\n    dialogRef.componentInstance.closeModal.subscribe(() => {\r\n      dialogRef.close(); // Close the modal when any action is triggered\r\n    });\r\n  }\r\n  wfosIdToWfoIdMap: WfosIdToWfoIdMap = {};\r\n\r\n  createWfosIdToWfoIdMap(data: MetaData): WfosIdToWfoIdMap {\r\n    const stages = data.Workflow.Stages;\r\n\r\n    for (const stageKey in stages) {\r\n      const states = stages[stageKey].States;\r\n      for (const stateKey in states) {\r\n        const state = states[stateKey];\r\n        this.wfosIdToWfoIdMap[state.WfosId] = state.WfoId; // Store WfosId as key and WfoId as value\r\n      }\r\n    }\r\n    sessionStorage.setItem('StateJson', JSON.stringify(this.wfosIdToWfoIdMap));\r\n\r\n    return this.wfosIdToWfoIdMap; // Return the mapping\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.metadata.Workflow) {\r\n      this.previousLength = this.metadata.Coordinates\r\n        ? Object.keys(this.metadata.Coordinates).length\r\n        : 0;\r\n      this.coordinatesChangePoints = this.metadata.Coordinates;\r\n      this.totalComponentLenth = Object.keys(this.metadata.Coordinates).length;\r\n      this.keyColorArrayPrevious = Object.entries(this.metadata.Coordinates)\r\n        .map(([key, value]) => {\r\n          const color = 'color' in value ? value.color : undefined;\r\n          return [key, color];\r\n        })\r\n        .filter(\r\n          (entry): entry is [string, string] =>\r\n            !!entry[1] && entry[1] !== 'none' && entry[1] !== ''\r\n        );\r\n      this.IsRedoAllowed = !!this.metadata.Workflow.IsRedoAllowed;\r\n      this.IsUndoAllowed = !!this.metadata.Workflow.IsUndoAllowed;\r\n      this.actionsVisible = this.metadata.Workflow.WorkflowMode !== 'Published';\r\n      this.actionsDisabled = !this.actionsVisible;\r\n\r\n      // Initialize unsaved changes state\r\n      this.hasUnsavedChanges = this.storageService.hasUnsavedChanges(\r\n        this.metadata.Workflow.WFID\r\n      );\r\n\r\n      // Initialize undo/redo state\r\n      this.updateUndoRedoState();\r\n\r\n      // Add command stack event listeners for undo/redo state updates\r\n      this.addCommandStackListeners();\r\n\r\n      // Add keyboard shortcuts for undo/redo\r\n      this.addKeyboardShortcuts();\r\n\r\n      // Add beforeunload event listener to warn about unsaved changes\r\n      this.addBeforeUnloadListener();\r\n\r\n      this.createWfosIdToWfoIdMap(this.metadata);\r\n      this.service.toDiagram(this.metadata, this.el.nativeElement).subscribe();\r\n    } else {\r\n      this.workflowDeleted.emit(true);\r\n    }\r\n  }\r\n  workflowDataArray: any;\r\n\r\n  persistWorkflowDataArray(): void {\r\n    const storageKey = 'workflowDataArray';\r\n    const stored = sessionStorage.getItem(storageKey);\r\n\r\n    // Load existing data or initialize empty array\r\n    this.workflowDataArray = stored ? JSON.parse(stored) : [];\r\n\r\n    const wfid = this.metadata?.Workflow?.WFID;\r\n    if (!wfid) return;\r\n\r\n    const index = this.workflowDataArray.findIndex(([key]) => key === wfid);\r\n    if (index !== -1) {\r\n      // Update existing\r\n      this.workflowDataArray[index][1] += 1;\r\n    } else {\r\n      // Add new\r\n      this.workflowDataArray.push([wfid, 1]);\r\n    }\r\n\r\n    // Save back to sessionStorage\r\n    sessionStorage.setItem(storageKey, JSON.stringify(this.workflowDataArray));\r\n  }\r\n\r\n  getWorkflowValue(wfid: string): number {\r\n    // Load from sessionStorage\r\n    const stored = sessionStorage.getItem('workflowDataArray');\r\n    const array: [string, number][] = stored ? JSON.parse(stored) : [];\r\n\r\n    // Find entry\r\n    const found = array.find(([key]) => key === wfid);\r\n    return found ? found[1] : 0; // return 0 if not found\r\n  }\r\n\r\n  async onCompanyAssociation() {\r\n    const obj = this.metadata.Workflow;\r\n    const modal = this.msg.showComponent(\r\n      CompanyAssociationComponent,\r\n      {\r\n        displayWith: (item: ICompanyAssociatedWFObject) =>\r\n          `${item.WFDISPNAME} > ${item.WFODISPNAME} > ${item.WFOSDISPNAME} > ${item.TRGDISPNAME}`,\r\n        uniqueWith: (item: ICompanyAssociatedWFObject) =>\r\n          `${item.WFNAM}${item.WFOGUID}${item.WFOSGUID}${item.TRGGUID}`,\r\n        getAssociationsWith: (groupId: string) =>\r\n          this.formViewApi.getWFObjectsForCompanyAssociation(\r\n            groupId,\r\n            obj.TypeID,\r\n            obj.WFID\r\n          ),\r\n        checkBy: 'isAlreadySelected',\r\n      },\r\n      { size: 'lg', centered: true }\r\n    );\r\n    const res = await modal.result;\r\n    if (res) {\r\n      const success =\r\n        (await this.updateCompanyAssociatedRecords(obj, res)) === 1;\r\n      if (success) {\r\n        this.toastr.success('Success');\r\n      }\r\n    }\r\n  }\r\n\r\n  private updateCompanyAssociatedRecords(wf: any, res: any) {\r\n    const stageGuids = new Set(),\r\n      stateGuids = new Set(),\r\n      triggerGuids = new Set();\r\n\r\n    const selectedItems = Array.isArray(res?.selectedItems)\r\n      ? res.selectedItems\r\n      : res?.selectedItems\r\n      ? [res.selectedItems] // convert single item to array\r\n      : [];\r\n\r\n    (selectedItems as ICompanyAssociatedWFObject[]).forEach((item) => {\r\n      stageGuids.add(item.WFOGUID);\r\n      stateGuids.add(item.WFOSGUID);\r\n      triggerGuids.add(item.TRGGUID);\r\n    });\r\n\r\n    const payload: WFAssociatedCompaniesPayload = {\r\n      WFId: wf?.WFID ?? null,\r\n      ProcessId: wf?.TypeID ?? null,\r\n      CompanyId: res?.companyId ?? null,\r\n      groupName: res?.groupName ?? '',\r\n      WFOGUIDS: [...stageGuids].toString(),\r\n      WFOSGUIDS: [...stateGuids].toString(),\r\n      TrigGUIDS: [...triggerGuids].toString(),\r\n      IsAllComp: res?.IsAllComp ?? false,\r\n    };\r\n\r\n    return firstValueFrom(\r\n      this.formViewApi.updateWFObjectsForCompanyAssociation(payload)\r\n    );\r\n  }\r\n\r\n  private clearStoredEvent(): void {\r\n    const key = 'event';\r\n    sessionStorage.removeItem(key);\r\n  }\r\n\r\n  private getStoredEvent(): string | null {\r\n    const key = 'event';\r\n    const storedValue = sessionStorage.getItem(key);\r\n    return storedValue ? JSON.parse(storedValue) : null;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.service.destroy();\r\n    this.removeBeforeUnloadListener();\r\n    this.removeKeyboardShortcuts();\r\n  }\r\n\r\n  private storeChangesLocally(coords: Coordinates): void {\r\n    const change = {\r\n      coordinates: coords,\r\n      entityId: this.EntityId,\r\n      entityType: this.EntityType,\r\n      actionName: this.ActionName,\r\n      actionGroupId: this.ActionGroupId,\r\n      actionDetails: this.ActionDetails,\r\n      sequenceNumber: this.getWorkflowValue(\r\n        this.metadata.Workflow.WFID\r\n      ).toString(),\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    this.storageService.storeChanges(this.metadata.Workflow.WFID, change);\r\n    this.hasUnsavedChanges = true;\r\n    // Update undo/redo state after a short delay to ensure command stack is updated\r\n    setTimeout(() => this.updateUndoRedoState(), 100);\r\n  }\r\n\r\n  public saveDiagram(): void {\r\n    if (this.isSaving) {\r\n      return; // Prevent multiple simultaneous saves\r\n    }\r\n\r\n    const latestChange = this.storageService.getLatestChange(\r\n      this.metadata.Workflow.WFID\r\n    );\r\n    if (!latestChange) {\r\n      this.toastr.info('No changes to save');\r\n      return;\r\n    }\r\n\r\n    this.isSaving = true;\r\n\r\n    // Process any pending stage changes first\r\n    this.processPendingStageChanges()\r\n      .then(() => {\r\n        // Then save the diagram coordinates\r\n        this.wfapi\r\n          .saveDiagramCoordinates(\r\n            this.metadata.Workflow.WFID,\r\n            latestChange.coordinates,\r\n            {\r\n              EntityId: latestChange.entityId,\r\n              EntityType: latestChange.entityType,\r\n              ActionName: latestChange.actionName,\r\n              ActionGroupId: latestChange.actionGroupId,\r\n              ActionDetails: latestChange.actionDetails,\r\n              SequenceNumber: latestChange.sequenceNumber,\r\n            }\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              this.IsRedoAllowed = !!response?.Redo && response.Redo > 0;\r\n              this.IsUndoAllowed = !!response?.Undo && response.Undo > 0;\r\n\r\n              // Clear local storage after successful save\r\n              this.storageService.clearChanges(this.metadata.Workflow.WFID);\r\n              this.hasUnsavedChanges = false;\r\n              this.isSaving = false;\r\n              // Clear command stack after successful save\r\n              if (this.bpmnService && this.bpmnService.commandStack) {\r\n                this.bpmnService.commandStack.clear();\r\n              }\r\n              this.updateUndoRedoState();\r\n\r\n              this.toastr.success('Diagram saved successfully');\r\n\r\n              // Update the coordinates change points to reflect the saved state\r\n              this.coordinatesChangePoints = latestChange.coordinates;\r\n            },\r\n            error: (error) => {\r\n              console.error('Error saving diagram coordinates:', error);\r\n              this.isSaving = false;\r\n              this.toastr.error('Failed to save diagram. Please try again.');\r\n            },\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error processing stage changes:', error);\r\n        this.toastr.error('Failed to process stage changes');\r\n        this.isSaving = false;\r\n      });\r\n  }\r\n\r\n  private async processPendingStageChanges(): Promise<void> {\r\n    const storedChanges = this.getStoredStageChanges();\r\n\r\n    if (storedChanges.length === 0) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    // Filter out invalid stage changes before processing\r\n    const validChanges = storedChanges.filter((change) => {\r\n      const isValid =\r\n        change.stateID &&\r\n        change.stageID &&\r\n        change.ActionGroupId &&\r\n        change.PreviousStage;\r\n      if (!isValid) {\r\n        console.warn('Skipping invalid stage change:', change);\r\n      }\r\n      return isValid;\r\n    });\r\n\r\n    if (validChanges.length === 0) {\r\n      console.log('No valid stage changes to process');\r\n      this.clearStoredStageChanges();\r\n      return Promise.resolve();\r\n    }\r\n\r\n    // Process each valid stage change\r\n    const promises = validChanges.map((change) => {\r\n      return new Promise<void>((resolve, reject) => {\r\n        this.wfapi\r\n          .callApiOnMoveLane(\r\n            change.stateID,\r\n            change.stageID,\r\n            change.ActionGroupId,\r\n            change.PreviousStage\r\n          )\r\n          .subscribe({\r\n            next: (response) => {\r\n              console.log('Stage change API call successful:', response);\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              console.error('Stage change API call error:', error);\r\n              reject(error);\r\n            },\r\n          });\r\n      });\r\n    });\r\n\r\n    try {\r\n      await Promise.all(promises);\r\n      // Clear the stored changes after successful processing\r\n      this.clearStoredStageChanges();\r\n      console.log('All stage changes processed successfully');\r\n    } catch (error) {\r\n      console.error('Error processing stage changes:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private getStoredStageChanges(): any[] {\r\n    try {\r\n      const stored = sessionStorage.getItem('pendingStageChanges');\r\n      return stored ? JSON.parse(stored) : [];\r\n    } catch (error) {\r\n      console.error('Error parsing stored stage changes:', error);\r\n      // Clear invalid data\r\n      sessionStorage.removeItem('pendingStageChanges');\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private clearStoredStageChanges() {\r\n    sessionStorage.removeItem('pendingStageChanges');\r\n  }\r\n\r\n  public checkUnsavedChanges(): boolean {\r\n    return this.storageService.hasUnsavedChanges(this.metadata.Workflow.WFID);\r\n  }\r\n\r\n  public discardChanges(): void {\r\n    this.storageService.clearChanges(this.metadata.Workflow.WFID);\r\n    this.hasUnsavedChanges = false;\r\n    // Clear command stack when discarding changes\r\n    if (this.bpmnService && this.bpmnService.commandStack) {\r\n      this.bpmnService.commandStack.clear();\r\n    }\r\n    // Clear stored stage changes when discarding\r\n    this.clearStoredStageChanges();\r\n    this.updateUndoRedoState();\r\n    this.toastr.info('Changes discarded');\r\n  }\r\n\r\n  public getStorageStats(): void {\r\n    const size = this.storageService.getStorageSize(\r\n      this.metadata.Workflow.WFID\r\n    );\r\n    const changes = this.storageService.getStoredChanges(\r\n      this.metadata.Workflow.WFID\r\n    );\r\n    console.log(\r\n      `Storage size: ${size} bytes, Changes count: ${changes.length}`\r\n    );\r\n  }\r\n\r\n  private updateUndoRedoState(): void {\r\n    if (this.bpmnService && this.bpmnService.commandStack) {\r\n      this.canUndo = this.bpmnService.commandStack.canUndo();\r\n      this.canRedo = this.bpmnService.commandStack.canRedo();\r\n    } else {\r\n      this.canUndo = false;\r\n      this.canRedo = false;\r\n    }\r\n  }\r\n\r\n  public localUndo(): void {\r\n    if (this.canUndo && this.bpmnService) {\r\n      this.bpmnService.undo();\r\n      this.updateUndoRedoState();\r\n      this.updateElementPropertiesFromSelectedElement();\r\n    }\r\n  }\r\n\r\n  public localRedo(): void {\r\n    if (this.canRedo && this.bpmnService) {\r\n      this.bpmnService.redo();\r\n      this.updateUndoRedoState();\r\n      this.updateElementPropertiesFromSelectedElement();\r\n    }\r\n  }\r\n\r\n  private addCommandStackListeners(): void {\r\n    if (this.bpmnService && this.bpmnService.eventBus) {\r\n      // Listen for command stack changes\r\n      this.bpmnService.eventBus.on('commandStack.changed', () => {\r\n        this.updateUndoRedoState();\r\n      });\r\n\r\n      // Listen for command execution\r\n      this.bpmnService.eventBus.on('commandStack.executed', () => {\r\n        this.updateUndoRedoState();\r\n        this.updateElementPropertiesFromSelectedElement();\r\n      });\r\n\r\n      // Listen for command reverted\r\n      this.bpmnService.eventBus.on('commandStack.reverted', () => {\r\n        this.updateUndoRedoState();\r\n        this.updateElementPropertiesFromSelectedElement();\r\n      });\r\n    }\r\n  }\r\n\r\n  private addKeyboardShortcuts(): void {\r\n    document.addEventListener('keydown', (event) => {\r\n      // Check if Ctrl+Z (undo) is pressed\r\n      if (event.ctrlKey && event.key === 'z' && !event.shiftKey) {\r\n        event.preventDefault();\r\n        this.localUndo();\r\n      }\r\n      // Check if Ctrl+Y or Ctrl+Shift+Z (redo) is pressed\r\n      else if (\r\n        (event.ctrlKey && event.key === 'y') ||\r\n        (event.ctrlKey && event.shiftKey && event.key === 'z')\r\n      ) {\r\n        event.preventDefault();\r\n        this.localRedo();\r\n      }\r\n    });\r\n  }\r\n\r\n  private addBeforeUnloadListener(): void {\r\n    window.addEventListener('beforeunload', this.beforeUnloadHandler);\r\n  }\r\n\r\n  private removeBeforeUnloadListener(): void {\r\n    window.removeEventListener('beforeunload', this.beforeUnloadHandler);\r\n  }\r\n\r\n  private removeKeyboardShortcuts(): void {\r\n    // Note: We can't easily remove specific event listeners, but this is called on destroy\r\n    // so the component will be cleaned up anyway\r\n  }\r\n\r\n  private beforeUnloadHandler = (event: BeforeUnloadEvent): string | void => {\r\n    if (this.hasUnsavedChanges) {\r\n      event.preventDefault();\r\n      event.returnValue =\r\n        'You have unsaved changes. Are you sure you want to leave?';\r\n      return 'You have unsaved changes. Are you sure you want to leave?';\r\n    }\r\n  };\r\n\r\n  private handleSelectionChange(event: any): void {\r\n    const selection = event?.newSelection || [];\r\n\r\n    if (selection.length === 1) {\r\n      const selectedElement = selection[0];\r\n\r\n      if (selectedElement.type === 'bpmn:Lane') {\r\n        this.selectedSwimlane = selectedElement;\r\n        this.selectedState = null;\r\n      } else if (\r\n        [\r\n          'bpmn:Task',\r\n          'bpmn:StartEvent',\r\n          'bpmn:EndEvent',\r\n          'bpmn:SubProcess',\r\n        ].includes(selectedElement.type)\r\n      ) {\r\n        this.selectedState = selectedElement;\r\n        this.selectedSwimlane = null;\r\n        this.loadStateFontProperties(selectedElement);\r\n      } else {\r\n        this.selectedSwimlane = null;\r\n        this.selectedState = null;\r\n      }\r\n    } else {\r\n      this.selectedSwimlane = null;\r\n      this.selectedState = null;\r\n    }\r\n  }\r\n\r\n  public alignStatesInSwimlane(alignment: 'top' | 'middle' | 'bottom'): void {\r\n    if (!this.selectedSwimlane) {\r\n      console.warn('No swimlane selected');\r\n      this.toastr.warning('Please select a swimlane first');\r\n      return;\r\n    }\r\n\r\n    console.log(\r\n      'Aligning states in swimlane:',\r\n      this.selectedSwimlane.id,\r\n      'to',\r\n      alignment\r\n    );\r\n\r\n    this.service.alignStatesInSwimlane(this.selectedSwimlane, alignment);\r\n\r\n    const alignmentText =\r\n      alignment.charAt(0).toUpperCase() + alignment.slice(1);\r\n    this.toastr.success(`States aligned to ${alignmentText}`);\r\n  }\r\n\r\n  private loadStateFontProperties(element: any): void {\r\n    const currentFontFamily = this.getCurrentFontFamily(element);\r\n    const currentFontSize = this.getCurrentFontSize(element);\r\n    const currentFontColor = this.getCurrentFontColor(element);\r\n    const currentFontBold = this.getCurrentFontBold(element);\r\n    const currentFontItalic = this.getCurrentFontItalic(element);\r\n    const currentFontUnderline = this.getCurrentFontUnderline(element);\r\n    const currentFillColor = this.getCurrentFillColor(element);\r\n\r\n    const bo = element.businessObject;\r\n    const boFontFamily = bo?.fontFamily;\r\n    const boFontSize = bo?.fontSize;\r\n    const boFontColor = bo?.fontColor;\r\n    const boFontBold = bo?.fontBold;\r\n    const boFontItalic = bo?.fontItalic;\r\n    const boFontUnderline = bo?.fontUnderline;\r\n    const boFillColor = bo?.color;\r\n\r\n    this.selectedFontFamily = this.processFontFamily(\r\n      boFontFamily ||\r\n        element.fontFamily ||\r\n        (element.props && element.props.fontFamily) ||\r\n        currentFontFamily ||\r\n        'Museo Sans'\r\n    );\r\n\r\n    this.selectedFontSize = this.processFontSize(\r\n      boFontSize ||\r\n        element.fontSize ||\r\n        (element.props && element.props.fontSize) ||\r\n        currentFontSize ||\r\n        '13px'\r\n    );\r\n\r\n    this.selectedFontColor = this.processFontColor(\r\n      boFontColor ||\r\n        element.fontColor ||\r\n        (element.props && element.props.fontColor) ||\r\n        currentFontColor ||\r\n        '#000000'\r\n    );\r\n\r\n    this.selectedFontBold =\r\n      boFontBold !== undefined\r\n        ? boFontBold\r\n        : element.fontBold !== undefined\r\n        ? element.fontBold\r\n        : element.props && element.props.fontBold !== undefined\r\n        ? element.props.fontBold\r\n        : currentFontBold || false;\r\n\r\n    this.selectedFontItalic =\r\n      boFontItalic !== undefined\r\n        ? boFontItalic\r\n        : element.fontItalic !== undefined\r\n        ? element.fontItalic\r\n        : element.props && element.props.fontItalic !== undefined\r\n        ? element.props.fontItalic\r\n        : currentFontItalic || false;\r\n\r\n    this.selectedFontUnderline =\r\n      boFontUnderline !== undefined\r\n        ? boFontUnderline\r\n        : element.fontUnderline !== undefined\r\n        ? element.fontUnderline\r\n        : element.props && element.props.fontUnderline !== undefined\r\n        ? element.props.fontUnderline\r\n        : currentFontUnderline || false;\r\n\r\n    this.selectedFillColor = this.processFillColor(\r\n      boFillColor ||\r\n        element.color ||\r\n        (element.props && element.props.color) ||\r\n        currentFillColor ||\r\n        '#ffffff'\r\n    );\r\n\r\n    console.log(\r\n      'Processed values:',\r\n      this.selectedFontFamily,\r\n      this.selectedFontSize,\r\n      this.selectedFontColor,\r\n      this.selectedFontBold,\r\n      this.selectedFontItalic,\r\n      this.selectedFontUnderline\r\n    );\r\n\r\n    if (\r\n      !currentFontFamily &&\r\n      !currentFontSize &&\r\n      !currentFontColor &&\r\n      !boFontFamily &&\r\n      !boFontSize &&\r\n      !boFontColor\r\n    ) {\r\n      setTimeout(() => {\r\n        this.loadStateFontPropertiesDelayed(element);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  private processFontFamily(fontFamily: string): string {\r\n    if (!fontFamily) return 'Museo Sans';\r\n\r\n    // Clean up font family string\r\n    const cleaned = fontFamily.replace(/['\"]/g, '').trim();\r\n\r\n    // Map common font families to dropdown options\r\n    const fontMap: { [key: string]: string } = {\r\n      'Museo Sans': 'Museo Sans',\r\n      Arial: 'Arial',\r\n      Helvetica: 'Helvetica',\r\n      'Times New Roman': 'Times New Roman',\r\n      Georgia: 'Georgia',\r\n      Verdana: 'Verdana',\r\n      'Courier New': 'Courier New',\r\n      'Comic Sans MS': 'Comic Sans MS',\r\n      Impact: 'Impact',\r\n      'Trebuchet MS': 'Trebuchet MS',\r\n    };\r\n\r\n    return fontMap[cleaned] || cleaned || 'Museo Sans';\r\n  }\r\n\r\n  private processFontSize(fontSize: string): string {\r\n    if (!fontSize) return '13px';\r\n\r\n    // Clean up font size string\r\n    const cleaned = fontSize.trim();\r\n\r\n    // Map common font sizes to dropdown options\r\n    const sizeMap: { [key: string]: string } = {\r\n      '8px': '8px',\r\n      '10px': '10px',\r\n      '12px': '12px',\r\n      '13px': '13px',\r\n      '14px': '14px',\r\n      '16px': '16px',\r\n      '18px': '18px',\r\n      '20px': '20px',\r\n      '24px': '24px',\r\n      '28px': '28px',\r\n      '32px': '32px',\r\n    };\r\n\r\n    return sizeMap[cleaned] || cleaned || '13px';\r\n  }\r\n\r\n  private processFontColor(fontColor: string): string {\r\n    if (!fontColor) return '#000000';\r\n\r\n    // Convert color names to hex values\r\n    const colorMap: { [key: string]: string } = {\r\n      white: '#FFFFFF',\r\n      black: '#000000',\r\n      red: '#FF0000',\r\n      green: '#008000',\r\n      blue: '#0000FF',\r\n      yellow: '#FFFF00',\r\n      orange: '#FFA500',\r\n      purple: '#800080',\r\n      pink: '#FFC0CB',\r\n      gray: '#808080',\r\n      grey: '#808080',\r\n    };\r\n\r\n    const lowerColor = fontColor.toLowerCase().trim();\r\n\r\n    // If it's a named color, convert it\r\n    if (colorMap[lowerColor]) {\r\n      return colorMap[lowerColor];\r\n    }\r\n\r\n    // If it's already a hex color, return it\r\n    if (fontColor.startsWith('#')) {\r\n      return fontColor;\r\n    }\r\n\r\n    // If it's an rgb/rgba color, try to convert it\r\n    if (fontColor.startsWith('rgb')) {\r\n      const matches = fontColor.match(/\\d+/g);\r\n      if (matches && matches.length >= 3) {\r\n        const r = parseInt(matches[0]);\r\n        const g = parseInt(matches[1]);\r\n        const b = parseInt(matches[2]);\r\n        return this.rgbToHex(r, g, b);\r\n      }\r\n    }\r\n\r\n    // Default fallback\r\n    return '#000000';\r\n  }\r\n\r\n  private loadStateFontPropertiesDelayed(element: any): void {\r\n    console.log('Loading font properties (delayed) for element:', element);\r\n\r\n    const currentFontFamily = this.getCurrentFontFamily(element);\r\n    const currentFontSize = this.getCurrentFontSize(element);\r\n    const currentFontColor = this.getCurrentFontColor(element);\r\n    const currentFontBold = this.getCurrentFontBold(element);\r\n    const currentFontItalic = this.getCurrentFontItalic(element);\r\n    const currentFontUnderline = this.getCurrentFontUnderline(element);\r\n\r\n    // Update only if we found new values, and process them\r\n    if (currentFontFamily) {\r\n      this.selectedFontFamily = this.processFontFamily(currentFontFamily);\r\n    }\r\n    if (currentFontSize) {\r\n      this.selectedFontSize = this.processFontSize(currentFontSize);\r\n    }\r\n    if (currentFontColor) {\r\n      this.selectedFontColor = this.processFontColor(currentFontColor);\r\n    }\r\n    if (currentFontBold !== undefined) {\r\n      this.selectedFontBold = currentFontBold;\r\n    }\r\n    if (currentFontItalic !== undefined) {\r\n      this.selectedFontItalic = currentFontItalic;\r\n    }\r\n    if (currentFontUnderline !== undefined) {\r\n      this.selectedFontUnderline = currentFontUnderline;\r\n    }\r\n\r\n    console.log(\r\n      'Updated font properties (delayed):',\r\n      this.selectedFontFamily,\r\n      this.selectedFontSize,\r\n      this.selectedFontColor,\r\n      this.selectedFontBold,\r\n      this.selectedFontItalic,\r\n      this.selectedFontUnderline\r\n    );\r\n  }\r\n\r\n  private getCurrentFontFamily(element: any): string | null {\r\n    try {\r\n      const gfx = this.service.getGraphics(element);\r\n      if (gfx) {\r\n        const textElement = gfx.querySelector('text');\r\n        if (textElement) {\r\n          const fontFamily =\r\n            textElement.getAttribute('font-family') ||\r\n            textElement.style.fontFamily ||\r\n            window.getComputedStyle(textElement).fontFamily;\r\n          return fontFamily && fontFamily !== 'inherit' ? fontFamily : null;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error getting font family:', error);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private getCurrentFontSize(element: any): string | null {\r\n    try {\r\n      const gfx = this.service.getGraphics(element);\r\n      if (gfx) {\r\n        const textElement = gfx.querySelector('text');\r\n        if (textElement) {\r\n          // Try multiple ways to get font size\r\n          const fontSize =\r\n            textElement.getAttribute('font-size') ||\r\n            textElement.style.fontSize ||\r\n            window.getComputedStyle(textElement).fontSize;\r\n          return fontSize && fontSize !== 'inherit' ? fontSize : null;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error getting font size:', error);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private getCurrentFontColor(element: any): string | null {\r\n    try {\r\n      const gfx = this.service.getGraphics(element);\r\n      if (gfx) {\r\n        const textElement = gfx.querySelector('text');\r\n        if (textElement) {\r\n          // Try multiple ways to get font color\r\n          const fontColor =\r\n            textElement.getAttribute('fill') ||\r\n            textElement.style.fill ||\r\n            window.getComputedStyle(textElement).fill;\r\n          return fontColor &&\r\n            fontColor !== 'inherit' &&\r\n            fontColor !== 'currentColor'\r\n            ? fontColor\r\n            : null;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error getting font color:', error);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private getCurrentFontBold(element: any): boolean {\r\n    try {\r\n      const gfx = this.service.getGraphics(element);\r\n      if (gfx) {\r\n        const textElement = gfx.querySelector('text');\r\n        if (textElement) {\r\n          const fontWeight =\r\n            textElement.getAttribute('font-weight') ||\r\n            textElement.style.fontWeight ||\r\n            window.getComputedStyle(textElement).fontWeight;\r\n          return (\r\n            fontWeight === 'bold' ||\r\n            fontWeight === '700' ||\r\n            fontWeight === '800' ||\r\n            fontWeight === '900'\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error getting font bold:', error);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private getCurrentFontItalic(element: any): boolean {\r\n    try {\r\n      const gfx = this.service.getGraphics(element);\r\n      if (gfx) {\r\n        const textElement = gfx.querySelector('text');\r\n        if (textElement) {\r\n          const fontStyle =\r\n            textElement.getAttribute('font-style') ||\r\n            textElement.style.fontStyle ||\r\n            window.getComputedStyle(textElement).fontStyle;\r\n          return fontStyle === 'italic' || fontStyle === 'oblique';\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error getting font italic:', error);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private getCurrentFontUnderline(element: any): boolean {\r\n    try {\r\n      const gfx = this.service.getGraphics(element);\r\n      if (gfx) {\r\n        const textElement = gfx.querySelector('text');\r\n        if (textElement) {\r\n          const textDecoration =\r\n            textElement.getAttribute('text-decoration') ||\r\n            textElement.style.textDecoration ||\r\n            window.getComputedStyle(textElement).textDecoration;\r\n          return textDecoration.includes('underline');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error getting font underline:', error);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private getCurrentFillColor(element: any): string | null {\r\n    try {\r\n      const gfx = this.service.getGraphics(element);\r\n      if (gfx) {\r\n        const rectElements = gfx.querySelectorAll('rect');\r\n        for (let i = 0; i < rectElements.length; i++) {\r\n          const rectEl = rectElements[i];\r\n          const fill = rectEl.getAttribute('fill');\r\n          if (fill && fill !== 'none' && fill !== 'transparent') {\r\n            return fill;\r\n          }\r\n        }\r\n\r\n        const pathElements = gfx.querySelectorAll('path');\r\n        for (let i = 0; i < pathElements.length; i++) {\r\n          const pathEl = pathElements[i];\r\n          const fill = pathEl.getAttribute('fill');\r\n          if (fill && fill !== 'none' && fill !== 'transparent') {\r\n            return fill;\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error getting fill color:', error);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private processFillColor(fillColor: string): string {\r\n    if (!fillColor) return '#ffffff';\r\n\r\n    if (fillColor.startsWith('#')) {\r\n      return fillColor;\r\n    }\r\n\r\n    if (fillColor.startsWith('rgb')) {\r\n      const matches = fillColor.match(/\\d+/g);\r\n      if (matches && matches.length >= 3) {\r\n        const r = parseInt(matches[0]);\r\n        const g = parseInt(matches[1]);\r\n        const b = parseInt(matches[2]);\r\n        return this.rgbToHex(r, g, b);\r\n      }\r\n    }\r\n\r\n    return '#ffffff';\r\n  }\r\n\r\n  private rgbToHex(r: number, g: number, b: number): string {\r\n    return (\r\n      '#' +\r\n      [r, g, b]\r\n        .map((x) => {\r\n          const hex = x.toString(16);\r\n          return hex.length === 1 ? '0' + hex : hex;\r\n        })\r\n        .join('')\r\n    );\r\n  }\r\n\r\n  public applyFontFamily(): void {\r\n    if (!this.selectedState) {\r\n      this.toastr.warning('Please select a state first');\r\n      return;\r\n    }\r\n\r\n    this.applyAllElementProperties();\r\n  }\r\n\r\n  public applyFontColor(): void {\r\n    if (!this.selectedState) {\r\n      this.toastr.warning('Please select a state first');\r\n      return;\r\n    }\r\n\r\n    this.applyAllElementProperties();\r\n  }\r\n\r\n  public applyFillColor(): void {\r\n    if (!this.selectedState) {\r\n      this.toastr.warning('Please select a state first');\r\n      return;\r\n    }\r\n\r\n    this.applyAllElementProperties();\r\n  }\r\n\r\n  public applyFontSize(): void {\r\n    if (!this.selectedState) {\r\n      this.toastr.warning('Please select a state first');\r\n      return;\r\n    }\r\n\r\n    this.applyAllElementProperties();\r\n  }\r\n\r\n  public toggleFontBold(): void {\r\n    if (!this.selectedState) {\r\n      this.toastr.warning('Please select a state first');\r\n      return;\r\n    }\r\n\r\n    this.selectedFontBold = !this.selectedFontBold;\r\n    this.applyAllElementProperties();\r\n  }\r\n\r\n  public toggleFontItalic(): void {\r\n    if (!this.selectedState) {\r\n      this.toastr.warning('Please select a state first');\r\n      return;\r\n    }\r\n\r\n    this.selectedFontItalic = !this.selectedFontItalic;\r\n    this.applyAllElementProperties();\r\n  }\r\n\r\n  public toggleFontUnderline(): void {\r\n    if (!this.selectedState) {\r\n      this.toastr.warning('Please select a state first');\r\n      return;\r\n    }\r\n\r\n    this.selectedFontUnderline = !this.selectedFontUnderline;\r\n    this.applyAllElementProperties();\r\n  }\r\n\r\n  private applyAllElementProperties(): void {\r\n    if (!this.selectedState) return;\r\n\r\n    console.log('Applying all element properties:', {\r\n      fontFamily: this.selectedFontFamily,\r\n      fontSize: this.selectedFontSize,\r\n      fontColor: this.selectedFontColor,\r\n      fontBold: this.selectedFontBold,\r\n      fontItalic: this.selectedFontItalic,\r\n      fontUnderline: this.selectedFontUnderline,\r\n      fillColor: this.selectedFillColor,\r\n    });\r\n\r\n    this.service.applyAllElementProperties(\r\n      this.selectedState,\r\n      this.selectedFontFamily,\r\n      this.selectedFontSize,\r\n      this.selectedFontColor,\r\n      this.selectedFontBold,\r\n      this.selectedFontItalic,\r\n      this.selectedFontUnderline,\r\n      this.selectedFillColor\r\n    );\r\n  }\r\n\r\n  // Helper method to check if element is a state type\r\n  private isStateType(element: any): boolean {\r\n    return (\r\n      element &&\r\n      [\r\n        'bpmn:Task',\r\n        'bpmn:StartEvent',\r\n        'bpmn:EndEvent',\r\n        'bpmn:SubProcess',\r\n      ].includes(element.type)\r\n    );\r\n  }\r\n\r\n  private updateElementPropertiesFromSelectedElement(): void {\r\n    if (this.selectedState) {\r\n      const bo = this.selectedState.businessObject;\r\n      if (bo) {\r\n        this.selectedFontFamily =\r\n          bo.fontFamily || this.selectedState.fontFamily || 'Museo Sans';\r\n        this.selectedFontSize =\r\n          bo.fontSize || this.selectedState.fontSize || '13px';\r\n        this.selectedFontColor =\r\n          bo.fontColor || this.selectedState.fontColor || '#000000';\r\n        this.selectedFontBold =\r\n          bo.fontBold || this.selectedState.fontBold || false;\r\n        this.selectedFontItalic =\r\n          bo.fontItalic || this.selectedState.fontItalic || false;\r\n        this.selectedFontUnderline =\r\n          bo.fontUnderline || this.selectedState.fontUnderline || false;\r\n        this.selectedFillColor =\r\n          bo.color || this.selectedState.color || '#ffffff';\r\n      } else {\r\n        this.selectedFontFamily = this.selectedState.fontFamily || 'Museo Sans';\r\n        this.selectedFontSize = this.selectedState.fontSize || '13px';\r\n        this.selectedFontColor = this.selectedState.fontColor || '#000000';\r\n        this.selectedFontBold = this.selectedState.fontBold || false;\r\n        this.selectedFontItalic = this.selectedState.fontItalic || false;\r\n        this.selectedFontUnderline = this.selectedState.fontUnderline || false;\r\n        this.selectedFillColor = this.selectedState.color || '#ffffff';\r\n      }\r\n\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n}\r\n", "<div #ref class=\"diagram-container\" style=\"position: relative\">\r\n  <div class=\"headerStying\">\r\n    <div class=\"header W-100 d-flex\" style=\"height: 50px\">\r\n      <div class=\"headerText\">\r\n        {{ metadata.Workflow.FriendlyName }} ({{ metadata.Workflow.Ver }})\r\n        <span\r\n          *ngIf=\"hasUnsavedChanges\"\r\n          class=\"unsaved-indicator ml-2\"\r\n          title=\"You have unsaved changes\"\r\n        >\r\n          <i class=\"fa fa-circle text-warning\"></i>\r\n        </span>\r\n      </div>\r\n      <div\r\n        class=\"d-flex justify-content-between w-100\"\r\n        style=\"padding-right: 15px\"\r\n      >\r\n        <div class=\"d-flex\">\r\n          <div class=\"d-none\">\r\n            <button\r\n              style=\"\r\n                border-left: 1px solid #e0e0e0;\r\n                border-right: 1px solid #e0e0e0;\r\n              \"\r\n            >\r\n              <svg\r\n                width=\"20\"\r\n                height=\"35\"\r\n                viewBox=\"0 0 20 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M18 7.54383V3.81576C18 2.58039 17.0486 1.57892 15.875 1.57892H12.3334M18 7.54383H12.3334M18 7.54383V13.5088M12.3334 1.57892V7.54383M12.3334 1.57892H6.66666M12.3334 7.54383H6.66666M12.3334 7.54383V13.5088M18 13.5088V17.2368C18 18.4722 17.0486 19.4737 15.875 19.4737H12.3334M18 13.5088H12.3334M1 7.54383V3.81576C1 2.58039 1.95139 1.57892 3.125 1.57892H6.66666M1 7.54383H6.66666M1 7.54383V13.5088M6.66666 1.57892V7.54383M6.66666 7.54383V13.5088M1 13.5088V17.2368C1 18.4722 1.95139 19.4737 3.125 19.4737H6.66666M1 13.5088H6.66666M12.3334 13.5088H6.66666M12.3334 13.5088V19.4737M6.66666 13.5088V19.4737M12.3334 19.4737H6.66666\"\r\n                  stroke=\"#555555\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center; padding-bottom: 5px\"\r\n          >\r\n            <button\r\n              style=\"border-left: 1px solid #e0e0e0; cursor: pointer\"\r\n              (click)=\"canUndo ? localUndo() : null\"\r\n              [disabled]=\"!canUndo\"\r\n              [title]=\"canUndo ? 'Undo local changes' : 'No changes to undo'\"\r\n            >\r\n              <svg\r\n                width=\"20\"\r\n                height=\"14\"\r\n                viewBox=\"0 0 20 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M1 5.18422H13.375C16.4816 5.18422 19 7.83516 19 11.1053C19 14.3754 16.4816 17.0263 13.375 17.0263H5.50001M1 5.18422L4.375 1.63159M1 5.18422L4.375 8.73686\"\r\n                  stroke=\"#555555\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                />\r\n              </svg>\r\n              <span class=\"newBtnDesin\">Undo</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center; padding-bottom: 5px\"\r\n          >\r\n            <button\r\n              style=\"border-right: 1px solid #e0e0e0; cursor: pointer\"\r\n              (click)=\"canRedo ? localRedo() : null\"\r\n              [disabled]=\"!canRedo\"\r\n              [title]=\"canRedo ? 'Redo local changes' : 'No changes to redo'\"\r\n            >\r\n              <svg\r\n                width=\"20\"\r\n                height=\"14\"\r\n                viewBox=\"0 0 20 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M19 5.18422H6.625C3.51843 5.18422 1 7.83516 1 11.1053C1 14.3754 3.51843 17.0263 6.625 17.0263H14.5M19 5.18422L15.625 1.63159M19 5.18422L15.625 8.73686\"\r\n                  stroke=\"#555555\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                />\r\n              </svg>\r\n              <span class=\"newBtnDesin\">Redo</span>\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Alignment Buttons -->\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center; padding-bottom: 5px\"\r\n          >\r\n            <button\r\n              [disabled]=\"!selectedSwimlane\"\r\n              style=\"border-left: 1px solid #e0e0e0; cursor: pointer\"\r\n              (click)=\"alignStatesInSwimlane('top')\"\r\n              title=\"Align states to top\"\r\n            >\r\n              <svg\r\n                width=\"20\"\r\n                height=\"14\"\r\n                viewBox=\"0 0 20 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M1 2H19M1 6H19M1 10H19M1 14H19\"\r\n                  stroke=\"#555555\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke-linecap=\"round\"\r\n                />\r\n                <path d=\"M8 2L12 2L12 6L8 6L8 2Z\" fill=\"#555555\" />\r\n              </svg>\r\n              <span class=\"newBtnDesin\">Top</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center; padding-bottom: 5px\"\r\n          >\r\n            <button\r\n              [disabled]=\"!selectedSwimlane\"\r\n              style=\"border-left: 1px solid #e0e0e0; cursor: pointer\"\r\n              (click)=\"alignStatesInSwimlane('middle')\"\r\n              title=\"Align states to middle\"\r\n            >\r\n              <svg\r\n                width=\"20\"\r\n                height=\"14\"\r\n                viewBox=\"0 0 20 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M1 2H19M1 6H19M1 10H19M1 14H19\"\r\n                  stroke=\"#555555\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke-linecap=\"round\"\r\n                />\r\n                <path d=\"M8 6L12 6L12 10L8 10L8 6Z\" fill=\"#555555\" />\r\n              </svg>\r\n              <span class=\"newBtnDesin\">Middle</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center; padding-bottom: 5px\"\r\n          >\r\n            <button\r\n              [disabled]=\"!selectedSwimlane\"\r\n              style=\"border-right: 1px solid #e0e0e0; cursor: pointer\"\r\n              (click)=\"alignStatesInSwimlane('bottom')\"\r\n              title=\"Align states to bottom\"\r\n            >\r\n              <svg\r\n                width=\"20\"\r\n                height=\"14\"\r\n                viewBox=\"0 0 20 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M1 2H19M1 6H19M1 10H19M1 14H19\"\r\n                  stroke=\"#555555\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke-linecap=\"round\"\r\n                />\r\n                <path d=\"M8 10L12 10L12 14L8 14L8 10Z\" fill=\"#555555\" />\r\n              </svg>\r\n              <span class=\"newBtnDesin\">Bottom</span>\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Font Family Dropdown -->\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center\"\r\n          >\r\n            <div class=\"font-control-group\">\r\n              <label class=\"font-control-label\">Font Family:</label>\r\n              <select\r\n                class=\"font-control-select\"\r\n                [disabled]=\"!selectedState\"\r\n                [(ngModel)]=\"selectedFontFamily\"\r\n                (change)=\"applyFontFamily()\"\r\n                title=\"Select font family\"\r\n              >\r\n                <option value=\"Arial\">Arial</option>\r\n                <option value=\"Museo Sans\">Museo Sans</option>\r\n                <option value=\"Helvetica\">Helvetica</option>\r\n                <option value=\"Times New Roman\">Times New Roman</option>\r\n                <option value=\"Georgia\">Georgia</option>\r\n                <option value=\"Verdana\">Verdana</option>\r\n                <option value=\"Courier New\">Courier New</option>\r\n                <option value=\"Comic Sans MS\">Comic Sans MS</option>\r\n                <option value=\"Impact\">Impact</option>\r\n                <option value=\"Trebuchet MS\">Trebuchet MS</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Font Size Dropdown -->\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center\"\r\n          >\r\n            <div class=\"font-control-group\">\r\n              <label class=\"font-control-label\">Font Size:</label>\r\n              <select\r\n                class=\"font-control-select\"\r\n                [disabled]=\"!selectedState\"\r\n                [(ngModel)]=\"selectedFontSize\"\r\n                (change)=\"applyFontSize()\"\r\n                title=\"Select font size\"\r\n              >\r\n                <option value=\"8px\">8px</option>\r\n                <option value=\"10px\">10px</option>\r\n                <option value=\"12px\">12px</option>\r\n                <option value=\"13px\">13px</option>\r\n                <option value=\"14px\">14px</option>\r\n                <option value=\"16px\">16px</option>\r\n                <option value=\"18px\">18px</option>\r\n                <option value=\"20px\">20px</option>\r\n                <option value=\"24px\">24px</option>\r\n                <option value=\"28px\">28px</option>\r\n                <option value=\"32px\">32px</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Font Color Picker -->\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center\"\r\n          >\r\n            <div class=\"font-control-group\">\r\n              <label class=\"font-control-label\">Font Color:</label>\r\n              <input\r\n                type=\"color\"\r\n                class=\"font-control-color\"\r\n                [disabled]=\"!selectedState\"\r\n                [(ngModel)]=\"selectedFontColor\"\r\n                (input)=\"applyFontColor()\"\r\n                title=\"Select font color\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Fill Color Picker -->\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center\"\r\n          >\r\n            <div class=\"font-control-group\">\r\n              <label class=\"font-control-label\">Fill Color:</label>\r\n              <input\r\n                type=\"color\"\r\n                class=\"font-control-color\"\r\n                [disabled]=\"!selectedState\"\r\n                [(ngModel)]=\"selectedFillColor\"\r\n                (input)=\"applyFillColor()\"\r\n                title=\"Select fill color\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Font Style Buttons -->\r\n          <div\r\n            *ngIf=\"service.paletteIsOpen\"\r\n            style=\"display: flex; align-items: center\"\r\n          >\r\n            <div class=\"font-control-group\">\r\n              <div class=\"font-style-buttons\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"font-style-btn\"\r\n                  [class.active]=\"selectedFontBold\"\r\n                  [disabled]=\"!selectedState\"\r\n                  (click)=\"toggleFontBold()\"\r\n                  title=\"Toggle Bold\"\r\n                >\r\n                  <strong>B</strong>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"font-style-btn\"\r\n                  [class.active]=\"selectedFontItalic\"\r\n                  [disabled]=\"!selectedState\"\r\n                  (click)=\"toggleFontItalic()\"\r\n                  title=\"Toggle Italic\"\r\n                >\r\n                  <em>I</em>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"font-style-btn\"\r\n                  [class.active]=\"selectedFontUnderline\"\r\n                  [disabled]=\"!selectedState\"\r\n                  (click)=\"toggleFontUnderline()\"\r\n                  title=\"Toggle Underline\"\r\n                >\r\n                  <u>U</u>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- <div class=\"d-none\">\r\n            <button>\r\n              <svg\r\n                width=\"20\"\r\n                height=\"38\"\r\n                viewBox=\"0 0 21 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <line\r\n                  y1=\"0.881592\"\r\n                  x2=\"16\"\r\n                  y2=\"0.881592\"\r\n                  stroke=\"#555555\"\r\n                  stroke-width=\"1.5\"\r\n                />\r\n                <path\r\n                  d=\"M8.53033 2.99602C8.23744 2.70312 7.76256 2.70312 7.46967 2.99602L2.6967 7.76899C2.40381 8.06188 2.40381 8.53675 2.6967 8.82965C2.98959 9.12254 3.46447 9.12254 3.75736 8.82965L8 4.58701L12.2426 8.82965C12.5355 9.12254 13.0104 9.12254 13.3033 8.82965C13.5962 8.53675 13.5962 8.06188 13.3033 7.76899L8.53033 2.99602ZM8.75 20.579L8.75 3.52635L7.25 3.52635L7.25 20.579L8.75 20.579Z\"\r\n                  fill=\"#555555\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div class=\"d-none\">\r\n            <button>\r\n              <svg\r\n                width=\"20\"\r\n                height=\"38\"\r\n                viewBox=\"0 0 21 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <line\r\n                  y1=\"-0.75\"\r\n                  x2=\"14\"\r\n                  y2=\"-0.75\"\r\n                  transform=\"matrix(1 0 0 -1 0 11.1659)\"\r\n                  stroke=\"#555555\"\r\n                  stroke-width=\"1.5\"\r\n                />\r\n                <path\r\n                  d=\"M6.46967 9.2935C6.76256 9.58639 7.23744 9.58639 7.53033 9.2935L12.3033 4.52053C12.5962 4.22763 12.5962 3.75276 12.3033 3.45987C12.0104 3.16697 11.5355 3.16697 11.2426 3.45987L7 7.70251L2.75736 3.45987C2.46447 3.16697 1.98959 3.16697 1.6967 3.45987C1.40381 3.75276 1.40381 4.22763 1.6967 4.52053L6.46967 9.2935ZM6.25 0.473694L6.25 8.76317L7.75 8.76317L7.75 0.473694L6.25 0.473694Z\"\r\n                  fill=\"#555555\"\r\n                />\r\n                <path\r\n                  d=\"M7.53033 14.6802C7.23744 14.3873 6.76256 14.3873 6.46967 14.6802L1.6967 19.4532C1.40381 19.7461 1.40381 20.2209 1.6967 20.5138C1.98959 20.8067 2.46447 20.8067 2.75736 20.5138L7 16.2712L11.2426 20.5138C11.5355 20.8067 12.0104 20.8067 12.3033 20.5138C12.5962 20.2209 12.5962 19.7461 12.3033 19.4532L7.53033 14.6802ZM7.75 23.5L7.75 15.2105L6.25 15.2105L6.25 23.5L7.75 23.5Z\"\r\n                  fill=\"#555555\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div class=\"d-none\">\r\n            <button style=\"border-right: 1px solid #e0e0e0\">\r\n              <svg\r\n                width=\"20\"\r\n                height=\"38\"\r\n                viewBox=\"0 0 21 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <line\r\n                  y1=\"-0.75\"\r\n                  x2=\"16\"\r\n                  y2=\"-0.75\"\r\n                  transform=\"matrix(1 0 0 -1 0 19.4737)\"\r\n                  stroke=\"#555555\"\r\n                  stroke-width=\"1.5\"\r\n                />\r\n                <path\r\n                  d=\"M8.53033 18.1093C8.23744 18.4022 7.76256 18.4022 7.46967 18.1093L2.6967 13.3363C2.40381 13.0434 2.40381 12.5685 2.6967 12.2756C2.98959 11.9827 3.46447 11.9827 3.75736 12.2756L8 16.5183L12.2426 12.2756C12.5355 11.9827 13.0104 11.9827 13.3033 12.2756C13.5962 12.5685 13.5962 13.0434 13.3033 13.3363L8.53033 18.1093ZM8.75 0.526306L8.75 17.5789L7.25 17.5789L7.25 0.526306L8.75 0.526306Z\"\r\n                  fill=\"#555555\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div> -->\r\n        </div>\r\n\r\n        <div class=\"d-flex\">\r\n          <div class=\"d-flex gap-2 row mr-1\">\r\n            <!-- Generate JSON Button -->\r\n            <button\r\n              class=\"btn btn-light\"\r\n              (click)=\"generateXML()\"\r\n              title=\"Generate JSON\"\r\n              style=\"display: flex; align-items: center; gap: 5px\"\r\n            >\r\n              <svg\r\n                class=\"svgDesign\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"20\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 20 18\"\r\n                fill=\"none\"\r\n              >\r\n                <path\r\n                  d=\"M10.8497 0.358643L12.77 0.742704L9.14066 17.6414L7.22036 17.2573L10.8497 0.358643ZM17.2828 9.00002L13.8358 5.55307V2.83584L20 9.00002L13.8358 15.1546V12.4374L17.2828 9.00002ZM0 9.00002L6.15458 2.83584V5.55307L2.70763 9.00002L6.15458 12.4374V15.1546L0 9.00002Z\"\r\n                  fill=\"white\"\r\n                />\r\n              </svg>\r\n              <span> Generate JSON</span>\r\n            </button>\r\n\r\n            <!-- Company Association Button -->\r\n            <button\r\n              class=\"btn btn-primary-special btn-small\"\r\n              type=\"button\"\r\n              (click)=\"onCompanyAssociation()\"\r\n              style=\"\r\n                display: flex;\r\n                align-items: center;\r\n                gap: 5px;\r\n                padding-left: 10px !important;\r\n                padding-right: 10px !important;\r\n              \"\r\n            >\r\n              <i class=\"fa fa-link\"></i>\r\n              <span>Company Association</span>\r\n            </button>\r\n\r\n            <!-- Save Button -->\r\n            <button\r\n              class=\"btn btn-success btn-small\"\r\n              type=\"button\"\r\n              (click)=\"saveDiagram()\"\r\n              [disabled]=\"isSaving || !hasUnsavedChanges\"\r\n              [title]=\"\r\n                hasUnsavedChanges\r\n                  ? 'Save changes to cloud'\r\n                  : 'No changes to save'\r\n              \"\r\n              style=\"display: flex; align-items: center; gap: 5px\"\r\n            >\r\n              <i class=\"fa fa-save\" *ngIf=\"!isSaving\"></i>\r\n              <i class=\"fa fa-spinner fa-spin\" *ngIf=\"isSaving\"></i>\r\n              <span *ngIf=\"!isSaving\">Save</span>\r\n              <span *ngIf=\"isSaving\">Saving...</span>\r\n            </button>\r\n\r\n            <div class=\"mode\" ngbDropdown class=\"d-none\">\r\n              <button class=\"btn btn-light textStyle\" ngbDropdownToggle>\r\n                <i *ngIf=\"!actionsDisabled\">\r\n                  <svg\r\n                    class=\"svgDesign\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"20\"\r\n                    height=\"18\"\r\n                    viewBox=\"0 0 20 18\"\r\n                    fill=\"none\"\r\n                  >\r\n                    <g clip-path=\"url(#clip0_1401_16850)\">\r\n                      <path\r\n                        d=\"M13.9688 11.9816L15.0799 10.8699C15.2535 10.6962 15.5556 10.8178 15.5556 11.0679V16.1191C15.5556 17.0396 14.809 17.7865 13.8889 17.7865H1.66667C0.746528 17.7865 0 17.0396 0 16.1191V3.89079C0 2.9702 0.746528 2.2233 1.66667 2.2233H11.1632C11.4097 2.2233 11.5347 2.52206 11.3611 2.69923L10.25 3.81089C10.1979 3.863 10.1285 3.89079 10.0521 3.89079H1.66667V16.1191H13.8889V12.1761C13.8889 12.1032 13.9167 12.0337 13.9688 11.9816ZM19.4063 4.97119L10.2882 14.0937L7.14931 14.4411C6.23958 14.5419 5.46528 13.7741 5.56597 12.857L5.91319 9.71659L15.0313 0.594024C15.8264 -0.201507 17.1111 -0.201507 17.9028 0.594024L19.4028 2.09477C20.1979 2.8903 20.1979 4.17913 19.4063 4.97119ZM15.9757 6.04463L13.9583 4.02627L7.50694 10.4843L7.25347 12.7528L9.52083 12.4992L15.9757 6.04463ZM18.2257 3.2759L16.7257 1.77516C16.5833 1.63273 16.3507 1.63273 16.2118 1.77516L15.1389 2.84861L17.1563 4.86697L18.2292 3.79352C18.3681 3.64762 18.3681 3.41834 18.2257 3.2759Z\"\r\n                        fill=\"white\"\r\n                      />\r\n                    </g>\r\n                    <defs>\r\n                      <clipPath id=\"clip0_1401_16850\">\r\n                        <rect width=\"20\" height=\"17.7866\" fill=\"white\" />\r\n                      </clipPath>\r\n                    </defs>\r\n                  </svg>\r\n                </i>\r\n                <i class=\"fas fa-lock\" *ngIf=\"actionsDisabled\"></i>\r\n                {{ metadata.Workflow.WorkflowMode }}\r\n              </button>\r\n              <ul ngbDropdownMenu>\r\n                <li\r\n                  ngbDropdownItem\r\n                  *ngFor=\"let mode of ['Edit', 'Published']\"\r\n                  (click)=\"changeMode(mode)\"\r\n                >\r\n                  {{ mode }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"enableDisable\">\r\n      <div style=\" padding: 8px 7px;\" (click)=\"service.togglePalette()\">\r\n      <div *ngIf=\"service.paletteIsOpen\">\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"24\" viewBox=\"0 0 26 24\" fill=\"none\">\r\n          <rect x=\"0.75\" y=\"0.75\" width=\"22.3095\" height=\"16.3571\" fill=\"#005996\" stroke=\"white\" stroke-width=\"1.5\"/>\r\n          <circle cx=\"17.5\" cy=\"15.5\" r=\"7.75\" fill=\"#005996\" stroke=\"white\" stroke-width=\"1.5\" />\r\n        </svg>\r\n        </div>\r\n        <div *ngIf=\"!service.paletteIsOpen\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"24\" viewBox=\"0 0 26 24\" fill=\"none\">\r\n          <rect x=\"0.75\" y=\"0.75\" width=\"22.3095\" height=\"16.3571\" stroke=\"black\" stroke-width=\"1.5\"/>\r\n          <circle cx=\"17.5\" cy=\"15.5\" r=\"7.75\" fill=\"white\" stroke=\"black\" stroke-width=\"1.5\"/>\r\n          </svg>\r\n          </div>\r\n      </div>\r\n    \r\n    </div> -->\r\n  </div>\r\n\r\n  <!-- <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\r\n   -->\r\n</div>\r\n\r\n<ng-template #actions>\r\n  <div class=\"actions\">\r\n    <div class=\"mode\" ngbDropdown>\r\n      <button class=\"btn btn-light\" ngbDropdownToggle>\r\n        <i class=\"fas fa-edit\" *ngIf=\"!actionsDisabled\"></i>\r\n        <i class=\"fas fa-lock\" *ngIf=\"actionsDisabled\"></i>\r\n        {{ metadata.Workflow.WorkflowMode }}\r\n      </button>\r\n      <ul ngbDropdownMenu>\r\n        <li\r\n          ngbDropdownItem\r\n          *ngFor=\"let mode of ['Edit', 'Published']\"\r\n          (click)=\"changeMode(mode)\"\r\n        >\r\n          {{ mode }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <ng-container *ngIf=\"!actionsDisabled\">\r\n      <ng-container *ngIf=\"actionsVisible\">\r\n        <button class=\"btn btn-light\" (click)=\"service.togglePalette()\">\r\n          <i\r\n            class=\"fas fa-toggle-on\"\r\n            title=\"Hide palette\"\r\n            *ngIf=\"service.paletteIsOpen\"\r\n          ></i>\r\n          <i\r\n            class=\"fas fa-toggle-off\"\r\n            title=\"Show palette\"\r\n            *ngIf=\"!service.paletteIsOpen\"\r\n          ></i>\r\n        </button>\r\n        <button\r\n          class=\"btn btn-light\"\r\n          (click)=\"generateXML()\"\r\n          title=\"Generate JSON\"\r\n        >\r\n          <i class=\"fas fa-code\"></i>\r\n        </button>\r\n        <button\r\n          class=\"btn btn-light\"\r\n          (click)=\"toggleActions()\"\r\n          title=\"Hide actions\"\r\n        >\r\n          <i class=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!actionsVisible\">\r\n        <button\r\n          class=\"btn btn-light\"\r\n          (click)=\"toggleActions()\"\r\n          title=\"Show actions\"\r\n        >\r\n          <i class=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n", "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport interface DiagramChange {\r\n  coordinates: any;\r\n  entityId: string;\r\n  entityType: string;\r\n  actionName: string;\r\n  actionGroupId: string;\r\n  actionDetails: string;\r\n  sequenceNumber: string;\r\n  timestamp: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DiagramStorageService {\r\n  private readonly STORAGE_KEY = 'bpmn_diagram_changes';\r\n  private readonly WORKFLOW_PREFIX = 'workflow_';\r\n\r\n  private hasUnsavedChangesSubject = new BehaviorSubject<boolean>(false);\r\n  public hasUnsavedChanges$ = this.hasUnsavedChangesSubject.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Store diagram changes temporarily in localStorage\r\n   */\r\n  storeChanges(workflowId: string, change: DiagramChange): void {\r\n    const key = this.getStorageKey(workflowId);\r\n    const existingChanges = this.getStoredChanges(workflowId);\r\n\r\n    // Add new change to existing changes\r\n    existingChanges.push(change);\r\n\r\n    // Store in localStorage\r\n    localStorage.setItem(key, JSON.stringify(existingChanges));\r\n\r\n    // Update the has unsaved changes flag\r\n    this.hasUnsavedChangesSubject.next(true);\r\n  }\r\n\r\n  /**\r\n   * Get all stored changes for a workflow\r\n   */\r\n  getStoredChanges(workflowId: string): DiagramChange[] {\r\n    const key = this.getStorageKey(workflowId);\r\n    const stored = localStorage.getItem(key);\r\n\r\n    if (!stored) {\r\n      return [];\r\n    }\r\n\r\n    try {\r\n      return JSON.parse(stored);\r\n    } catch (error) {\r\n      console.error('Error parsing stored diagram changes:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all stored changes for a workflow\r\n   */\r\n  clearChanges(workflowId: string): void {\r\n    const key = this.getStorageKey(workflowId);\r\n    localStorage.removeItem(key);\r\n    this.hasUnsavedChangesSubject.next(false);\r\n  }\r\n\r\n  /**\r\n   * Get the latest change for a workflow\r\n   */\r\n  getLatestChange(workflowId: string): DiagramChange | null {\r\n    const changes = this.getStoredChanges(workflowId);\r\n    return changes.length > 0 ? changes[changes.length - 1] : null;\r\n  }\r\n\r\n  /**\r\n   * Check if there are unsaved changes for a workflow\r\n   */\r\n  hasUnsavedChanges(workflowId: string): boolean {\r\n    const changes = this.getStoredChanges(workflowId);\r\n    return changes.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Get storage key for a specific workflow\r\n   */\r\n  private getStorageKey(workflowId: string): string {\r\n    return `${this.STORAGE_KEY}_${this.WORKFLOW_PREFIX}${workflowId}`;\r\n  }\r\n\r\n  /**\r\n   * Clear all diagram changes from localStorage (cleanup)\r\n   */\r\n  clearAllChanges(): void {\r\n    const keys = Object.keys(localStorage);\r\n    keys.forEach((key) => {\r\n      if (key.startsWith(this.STORAGE_KEY)) {\r\n        localStorage.removeItem(key);\r\n      }\r\n    });\r\n    this.hasUnsavedChangesSubject.next(false);\r\n  }\r\n\r\n  /**\r\n   * Get storage size for debugging\r\n   */\r\n  getStorageSize(workflowId: string): number {\r\n    const key = this.getStorageKey(workflowId);\r\n    const stored = localStorage.getItem(key);\r\n    return stored ? stored.length : 0;\r\n  }\r\n}\r\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { MetaData } from './models/wf.model';\r\nimport { WorkflowApiService } from './services/workflow-api.service';\r\nimport { DiagramService } from './services/diagram.service';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { NgIf, AsyncPipe } from '@angular/common';\r\nimport { DiagramComponent } from './components/diagram/diagram.component';\r\nimport { UtilService } from '@app/shared/services/util.service';\r\n\r\n@Component({\r\n  selector: 'app-wfd',\r\n  templateUrl: './wfd.component.html',\r\n  styleUrls: ['./wfd.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, DiagramComponent, AsyncPipe],\r\n})\r\nexport class WfdComponent implements OnInit {\r\n  metadata$: Observable<MetaData>;\r\n  private processName = sessionStorage.getItem('AppName');\r\n  backsImageUrl = UtilService.getUrlForImage(\r\n    '/assets/styles/images/back-icon-black.png'\r\n  );\r\n\r\n  constructor(\r\n    private service: WorkflowApiService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public serviceBpmn: DiagramService,\r\n    readonly titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.metadata$ = this.route.queryParamMap.pipe(\r\n      tap((params) => {\r\n        this.processName = params.get('processName');\r\n        sessionStorage.setItem('DisplayName', this.processName);\r\n        sessionStorage.setItem('AppName', this.processName);\r\n        this.updateDocumentTitle(this.processName);\r\n      }),\r\n      switchMap((params) =>\r\n        this.service.getWorkflowDiagram(this.processName, params.get('VerNo'))\r\n      )\r\n    );\r\n  }\r\n\r\n  private updateDocumentTitle(title: string) {\r\n    this.titleService.setTitle(title);\r\n  }\r\n  public handleDelete() {\r\n    this.router.navigate(['admin/wf']);\r\n  }\r\n\r\n  public routeBack() {\r\n    window.history.back();\r\n  }\r\n}\r\n", "<div\r\n  class=\"breadcrumbs p-1 mb-1\"\r\n  style=\"\r\n    background-color: #fff;\r\n    height: 35px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 0px;\r\n  \"\r\n>\r\n  <a (click)=\"routeBack()\">\r\n    <img\r\n      [src]=\"backsImageUrl\"\r\n      style=\"filter: var(--plx-app-list-icon-filter)\"\r\n      width=\"20px\"\r\n    />\r\n    <span>Back</span>\r\n  </a>\r\n</div>\r\n<div class=\"diagram-parent\">\r\n  <!-- <div class=\"enableDisable\" [ngStyle]=\"{ 'background-color': serviceBpmn.paletteIsOpen ? '#005996' : '#F2F2F2' }\">\r\n    <div style=\" padding: 8px 7px;\" (click)=\"serviceBpmn.togglePalette()\">\r\n    <div *ngIf=\"serviceBpmn.paletteIsOpen\">\r\n       <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"24\" viewBox=\"0 0 26 24\" fill=\"none\">\r\n        <rect x=\"0.75\" y=\"0.75\" width=\"22.3095\" height=\"16.3571\" fill=\"#005996\" stroke=\"white\" stroke-width=\"1.5\"/>\r\n        <circle cx=\"17.5\" cy=\"15.5\" r=\"7.75\" fill=\"#005996\" stroke=\"white\" stroke-width=\"1.5\" />\r\n      </svg>\r\n      </div>\r\n      <div *ngIf=\"!serviceBpmn.paletteIsOpen\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"24\" viewBox=\"0 0 26 24\" fill=\"none\">\r\n        <rect x=\"0.75\" y=\"0.75\" width=\"22.3095\" height=\"16.3571\" stroke=\"black\" stroke-width=\"1.5\"/>\r\n        <circle cx=\"17.5\" cy=\"15.5\" r=\"7.75\" fill=\"white\" stroke=\"black\" stroke-width=\"1.5\"/>\r\n        </svg>\r\n        </div>\r\n    </div>\r\n  \r\n  </div> -->\r\n\r\n  <app-diagram\r\n    *ngIf=\"metadata$ | async as metadata\"\r\n    [metadata]=\"metadata\"\r\n    (workflowDeleted)=\"handleDelete()\"\r\n  ></app-diagram>\r\n</div>\r\n\r\n<div class=\"modeler\"></div>\r\n", "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { WfdComponent } from './wfd.component';\r\n\r\nconst routes: Routes = [{ path: '', component: WfdComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class WfdRoutingModule {}\r\n", "import { NgModule } from '@angular/core';\r\nimport * as lib from '@app/admin/lib';\r\nimport { SharedModule } from '@app/shared';\r\n\r\nimport { DiagramComponent } from './components/diagram/diagram.component';\r\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\r\nimport { StageDetailComponent } from './components/stage-detail/stage-detail.component';\r\nimport { StateDetailComponent } from './components/state-detail/state-detail.component';\r\nimport { TimerDetailComponent } from './components/timer-detail/timer-detail.component';\r\nimport { TriggerConditionDetailComponent } from './components/trigger-condition-detail/trigger-condition-detail.component';\r\nimport { TriggerDetailComponent } from './components/trigger-detail/trigger-detail.component';\r\nimport { WorkflowDetailComponent } from './components/workflow-detail/workflow-detail.component';\r\nimport { DropzoneDirective } from './directives/dropzone.directive';\r\nimport { FileSizePipe } from './pipes/filesize.pipe';\r\nimport { WfdRoutingModule } from './wfd-routing.module';\r\nimport { WfdComponent } from './wfd.component';\r\nimport { GenerateXmlComponent } from './components/generatexml/generatexml.component';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n    WfdRoutingModule,\r\n    SharedModule,\r\n    WfdComponent,\r\n    DiagramComponent,\r\n    StageDetailComponent,\r\n    StateDetailComponent,\r\n    TriggerDetailComponent,\r\n    TriggerConditionDetailComponent,\r\n    TimerDetailComponent,\r\n    WorkflowDetailComponent,\r\n    FileUploaderComponent,\r\n    DropzoneDirective,\r\n    FileSizePipe,\r\n    GenerateXmlComponent,\r\n],\r\n})\r\nexport class WfdModule {}\r\n"],
  "mappings": "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",
  "names": ["_c0", "_c1", "t", "_c0", "_c1", "t", "_c0", "_c0", "_c1", "_c2", "_c1", "t", "res", "flow"]
}
