{
  "version": 3,
  "sources": ["src/app/admin/Shared/editor/editor.component.ts", "src/app/admin/Shared/editor/editor.component.html"],
  "sourcesContent": ["import { Component, ElementRef, forwardRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-editor',\r\n    templateUrl: './editor.component.html',\r\n    styleUrls: ['./editor.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => EditorComponent),\r\n            multi: true\r\n        }\r\n    ],\r\n    standalone: true,\r\n    imports: [ReactiveFormsModule, FormsModule]\r\n})\r\nexport class EditorComponent implements ControlValueAccessor, AfterViewInit {\r\n  @ViewChild('editor', { static: false }) editor!: ElementRef<HTMLDivElement>;\r\n\r\n  private onChange: (value: string) => void = () => {};\r\n  private onTouched: () => void = () => {};\r\n  value = '';\r\n  showSource = false;\r\n  history: string[] = [];\r\nhistoryIndex = -1;\r\n\r\nngAfterViewInit() {\r\n  if (!this.editor) {\r\n    console.error('Editor is not initialized!');\r\n    return;\r\n  }\r\n  \r\n  // Setup link hover behavior\r\n  this.setupLinkHoverHandlers();\r\n}\r\n\r\n  writeValue(value: string): void {\r\n    this.value = value || '';\r\n    setTimeout(() => {\r\n      if (this.editor) {\r\n        this.editor.nativeElement.innerHTML = this.value;\r\n      }\r\n    });\r\n  }\r\n\r\n  registerOnChange(fn: (value: string) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /*updateContent(): void {\r\n    if (this.editor) {\r\n      this.value = this.editor.nativeElement.innerHTML;\r\n      this.onChange(this.value);\r\n    }\r\n  }*/\r\n    alignText(align: string) {\r\n      const selection = window.getSelection();\r\n      if (!selection?.rangeCount) return;\r\n  \r\n      const range = selection.getRangeAt(0);\r\n      let currentNode: Node | null = range.startContainer;\r\n  \r\n      // Find the closest block-level element\r\n      while (currentNode?.parentElement) {\r\n          if (currentNode.parentElement instanceof HTMLDivElement || currentNode.parentElement instanceof HTMLParagraphElement) {\r\n              currentNode = currentNode.parentElement;\r\n              break;\r\n          }\r\n          currentNode = currentNode.parentElement;\r\n      }\r\n  \r\n      if (currentNode instanceof HTMLElement) {\r\n          currentNode.style.textAlign = align;\r\n          this.updateContent();\r\n      }\r\n  }\r\n  \r\n  \r\n\r\n  formatText(style: 'bold' | 'italic' | 'underline') {\r\n    const selection = window.getSelection();\r\n    if (!selection || selection.rangeCount === 0) return;\r\n  \r\n    const range = selection.getRangeAt(0);\r\n    if (range.collapsed) return; // No text selected\r\n  \r\n    const parentElement = this.getParentTag(range.commonAncestorContainer, style);\r\n  \r\n    if (parentElement) {\r\n      // Remove formatting but keep inline styles\r\n      const span = document.createElement('span');\r\n      span.innerHTML = parentElement.innerHTML;\r\n      span.style.cssText = parentElement.style.cssText; // Preserve styles\r\n      parentElement.replaceWith(span);\r\n    } else {\r\n      // Apply formatting without removing existing styles\r\n      let tagName;\r\n\r\n      if (style === 'bold') {\r\n        tagName = 'b';\r\n      } else if (style === 'italic') {\r\n        tagName = 'i';\r\n      } else {\r\n        tagName = 'u';\r\n      }\r\n\r\n      const element = document.createElement(tagName);\r\n\r\n  \r\n      // Extract content while preserving existing styles\r\n      const span = document.createElement('span');\r\n      span.appendChild(range.extractContents());\r\n      span.style.cssText = range.commonAncestorContainer.parentElement?.style.cssText || '';\r\n\r\n  \r\n      element.appendChild(span);\r\n      range.insertNode(element);\r\n    }\r\n  \r\n    this.updateContent();\r\n  }\r\n  \r\n  \r\n  /**\r\n   * Helper function to check if the selected text is already inside a specific tag (b, i, u).\r\n   */\r\n  getParentTag(node: Node, tag: string): HTMLElement | null {\r\n    let expectedTag: string;\r\n\r\n    if (tag === 'bold') {\r\n      expectedTag = 'b';\r\n    } else if (tag === 'italic') {\r\n      expectedTag = 'i';\r\n    } else {\r\n      expectedTag = 'u';\r\n    }\r\n\r\n    while (node && node !== this.editor?.nativeElement) {\r\n      if (\r\n        node instanceof HTMLElement &&\r\n        node.tagName.toLowerCase() === expectedTag\r\n      ) {\r\n        return node;\r\n      }\r\n      node = node.parentNode as Node;\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * Checks if the current selection has the specified format\r\n   * Used to highlight formatting buttons when formatted text is selected\r\n   */\r\n  isFormatActive(format: 'bold' | 'italic' | 'underline'): boolean {\r\n    const selection = window.getSelection();\r\n    if (!selection || selection.rangeCount === 0 || selection.isCollapsed) {\r\n      return false;\r\n    }\r\n    \r\n    const range = selection.getRangeAt(0);\r\n    let node = range.commonAncestorContainer;\r\n    \r\n    // Check if the selection is within a formatted element\r\n    return this.getParentTag(node, format) !== null;\r\n  }\r\n\r\n  changeTextColor(event: Event) {\r\n    const color = (event.target as HTMLInputElement).value;\r\n    this.applyStyle('color', color);\r\n  }\r\n\r\n  changeBgColor(event: Event) {\r\n    const color = (event.target as HTMLInputElement).value;\r\n    this.applyStyle('backgroundColor', color);\r\n  }\r\n\r\n  applyStyle(property: string, value: string) {\r\n    const selection = window.getSelection();\r\n    if (!selection || selection.rangeCount === 0) return;\r\n\r\n    const range = selection.getRangeAt(0);\r\n    if (range.collapsed) return; // No text selected\r\n\r\n    const span = document.createElement(\"span\");\r\n    span.style[property as any] = value;\r\n    span.innerHTML = range.toString();\r\n\r\n    range.deleteContents();\r\n    range.insertNode(span);\r\n    this.updateContent();\r\n  }\r\n\r\n\r\n  updateContent(): void {\r\n    if (this.editor) {\r\n      this.value = this.editor.nativeElement.innerHTML;\r\n      \r\n      this.onChange(this.value);\r\n      this.saveToHistory();\r\n    }\r\n  }\r\n  \r\n  saveToHistory(): void {\r\n    if (this.historyIndex < this.history.length - 1) {\r\n      this.history.splice(this.historyIndex + 1);\r\n    }\r\n    this.history.push(this.value);\r\n    this.historyIndex = this.history.length - 1;\r\n  }\r\n  \r\n  undo(): void {\r\n    if (this.historyIndex > 0) {\r\n      this.historyIndex--;\r\n      this.value = this.history[this.historyIndex];\r\n      this.editor.nativeElement.innerHTML = this.value;\r\n    }\r\n  }\r\n  \r\n  redo(): void {\r\n    if (this.historyIndex < this.history.length - 1) {\r\n      this.historyIndex++;\r\n      this.value = this.history[this.historyIndex];\r\n      this.editor.nativeElement.innerHTML = this.value;\r\n    }\r\n  }\r\n\r\n  insertList(type: 'ul' | 'ol') {\r\n    const selection = window.getSelection();\r\n    if (!selection || selection.rangeCount === 0) return;\r\n  \r\n    const range = selection.getRangeAt(0);\r\n    const list = document.createElement(type);\r\n    const listItem = document.createElement('li');\r\n  \r\n    listItem.textContent = selection.toString();\r\n    list.appendChild(listItem);\r\n  \r\n    range.deleteContents();\r\n    range.insertNode(list);\r\n  \r\n    this.updateContent();\r\n  }\r\n  \r\n  applyBlockFormat(tag: string): void {\r\n    const selection = window.getSelection();\r\n    if (!selection || selection.rangeCount === 0) return;\r\n  \r\n    const range = selection.getRangeAt(0);\r\n    const selectedContent = range.extractContents();\r\n  \r\n    // Create a new block element (paragraph or heading)\r\n    const blockElement = document.createElement(tag);\r\n    blockElement.appendChild(selectedContent);\r\n  \r\n    range.insertNode(blockElement);\r\n  \r\n    // Move cursor inside the newly created block\r\n    selection.removeAllRanges();\r\n    const newRange = document.createRange();\r\n    newRange.selectNodeContents(blockElement);\r\n    newRange.collapse(false);\r\n    selection.addRange(newRange);\r\n  }\r\n  \r\n\r\n\r\n  execCommand(command: string, value?: string) {\r\n    const selection = window.getSelection();\r\n    if (!selection || selection.rangeCount === 0) return;\r\n\r\n    const range = selection.getRangeAt(0);\r\n    const span = document.createElement(\"span\");\r\n\r\n    switch (command) {\r\n        case \"bold\":\r\n            span.style.fontWeight = \"bold\";\r\n            break;\r\n        case \"italic\":\r\n            span.style.fontStyle = \"italic\";\r\n            break;\r\n        case \"underline\":\r\n            span.style.textDecoration = \"underline\";\r\n            break;\r\n        default:\r\n            console.warn(`Unsupported command: ${command}`);\r\n            return;\r\n    }\r\n\r\n    span.textContent = range.toString();\r\n    range.deleteContents();\r\n    range.insertNode(span);\r\n\r\n    this.updateContent();\r\n}\r\n\r\n\r\ninsertLink() {\r\n  const url = prompt('Enter URL:');\r\n  if (!url) return;\r\n\r\n  const selection = window.getSelection();\r\n  if (!selection || selection.rangeCount === 0) return;\r\n\r\n  const range = selection.getRangeAt(0);\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.textContent = selection.toString() || url;\r\n  link.target = '_blank'; \r\n  link.style.wordBreak = 'break-word'; // Prevents long URLs from breaking the layout\r\n\r\n  range.deleteContents();\r\n  range.insertNode(link);\r\n\r\n  this.updateContent();\r\n}\r\n\r\n\r\n\r\n  insertTable() {\r\n    const rows = Number(prompt('Enter number of rows:', '2'));\r\n    const cols = Number(prompt('Enter number of columns:', '2'));\r\n\r\n    if (rows > 0 && cols > 0) {\r\n      let table = '<table border=\"1\" style=\"border-collapse: collapse; width: 100%;\">';\r\n      for (let i = 0; i < rows; i++) {\r\n        table += '<tr>';\r\n        for (let j = 0; j < cols; j++) {\r\n          table += '<td contenteditable=\"true\">&nbsp;</td>';\r\n        }\r\n        table += '</tr>';\r\n      }\r\n      table += '</table>';\r\n      this.editor.nativeElement.insertAdjacentHTML('beforeend', table);\r\n      this.updateContent();\r\n    }\r\n  }\r\n \r\n\r\n  \r\n\r\n  toggleSource() {\r\n    this.showSource = !this.showSource;\r\n\r\n    if (this.showSource) {\r\n      // Save the current HTML content to value\r\n      this.value = this.editor.nativeElement.innerHTML;\r\n    } else {\r\n      // Restore HTML content from value\r\n      this.editor.nativeElement.innerHTML = this.value;\r\n      \r\n      // Re-setup link hover handlers when switching from source mode\r\n      this.setupLinkHoverHandlers();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Setup event listeners for link hover behavior\r\n   */\r\n  private setupLinkHoverHandlers(): void {\r\n    // Use a mutation observer to detect new links added to the editor\r\n    const observer = new MutationObserver(() => {\r\n      this.attachLinkHoverHandlers();\r\n    });\r\n    \r\n    observer.observe(this.editor.nativeElement, {\r\n      childList: true,\r\n      subtree: true,\r\n      characterData: true\r\n    });\r\n    \r\n    // Initial setup for existing links\r\n    this.attachLinkHoverHandlers();\r\n  }\r\n  \r\n  /**\r\n   * Attach hover handlers to all links in the editor\r\n   */\r\n  private attachLinkHoverHandlers(): void {\r\n    const links = this.editor.nativeElement.querySelectorAll('a');\r\n    \r\n    links.forEach((link: HTMLAnchorElement) => {\r\n      // Skip links that already have event listeners\r\n      if (link.hasAttribute('data-hover-attached')) {\r\n        return;\r\n      }\r\n      \r\n      link.setAttribute('data-hover-attached', 'true');\r\n      \r\n      link.addEventListener('mouseenter', () => {\r\n        // Create launch button if it doesn't exist\r\n        if (!link.querySelector('.link-launch-icon')) {\r\n          const launchIcon = document.createElement('span');\r\n          launchIcon.className = 'link-launch-icon';\r\n          launchIcon.innerHTML = '🔗';\r\n          launchIcon.title = 'Open link in new tab';\r\n          launchIcon.style.cursor = 'pointer';\r\n          \r\n          // Position the launch icon\r\n          launchIcon.style.marginLeft = '4px';\r\n          \r\n          // Attach click event to launch icon\r\n          launchIcon.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            window.open(link.href, '_blank');\r\n          });\r\n          \r\n          link.appendChild(launchIcon);\r\n        }\r\n      });\r\n      \r\n      link.addEventListener('mouseleave', (e) => {\r\n        // Check if we're not hovering over the launch icon\r\n        const relatedTarget = e.relatedTarget as HTMLElement;\r\n        if (!relatedTarget || !link.contains(relatedTarget)) {\r\n          // Remove launch icon\r\n          const icon = link.querySelector('.link-launch-icon');\r\n          if (icon) {\r\n            link.removeChild(icon);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n}\r\n", "<div class=\"toolbar\">\r\n  <!-- Paragraph & Headings -->\r\n  <select (change)=\"applyBlockFormat($event.target.value)\">\r\n    <option value=\"p\">Paragraph</option>\r\n    <option value=\"h1\">Heading 1</option>\r\n    <option value=\"h2\">Heading 2</option>\r\n    <option value=\"h3\">Heading 3</option>\r\n    <option value=\"h4\">Heading 4</option>\r\n    <option value=\"h5\">Heading 5</option>\r\n  </select>\r\n  \r\n  <!-- Bold, Italic, Underline -->\r\n  <button (click)=\"formatText('bold')\" [class.active]=\"isFormatActive('bold')\"><b>B</b></button>\r\n  <button (click)=\"formatText('italic')\" [class.active]=\"isFormatActive('italic')\"><i>I</i></button>\r\n  <button (click)=\"formatText('underline')\" [class.active]=\"isFormatActive('underline')\"><u>U</u></button>\r\n\r\n  <!-- Text Alignment -->\r\n  <button (click)=\"alignText('left')\" title=\"Align Left\"><i class=\"fas fa-align-left\"></i></button>\r\n  <button (click)=\"alignText('center')\" title=\"Align Center\"><i class=\"fas fa-align-center\"></i></button>\r\n  <button (click)=\"alignText('right')\" title=\"Align Right\"><i class=\"fas fa-align-right\"></i></button>\r\n\r\n\r\n  <!-- Lists -->\r\n  <button (click)=\"insertList('ul')\" title=\"Unordered List\"><i class=\"fas fa-list-ul\"></i></button>\r\n  <button (click)=\"insertList('ol')\" title=\"Ordered List\"><i class=\"fas fa-list-ol\"></i></button>\r\n\r\n  <!-- Insert Table & Link -->\r\n  <button (click)=\"insertTable()\" title=\"Insert Table\"><i class=\"fas fa-table\"></i></button>\r\n  <button (click)=\"insertLink()\" title=\"Insert Link\"><i class=\"fas fa-link\"></i></button>\r\n\r\n  <!-- Text & Background Color -->\r\n  <input type=\"color\" (input)=\"changeTextColor($event)\" title=\"Text Color\">\r\n  <input type=\"color\" (input)=\"changeBgColor($event)\" title=\"Background Color\">\r\n\r\n  <!-- Undo & Redo -->\r\n  <button (click)=\"undo()\">↩ Undo</button>\r\n  <button (click)=\"redo()\">↪ Redo</button>\r\n\r\n  <!-- Toggle Source Code -->\r\n  <button (click)=\"toggleSource()\">📝 Source</button>\r\n</div>\r\n\r\n<!-- Content Editable Div -->\r\n<div [hidden]=\"showSource\" #editor contenteditable=\"true\" class=\"editor\" (input)=\"updateContent()\"></div>\r\n\r\n<!-- Source Code Mode -->\r\n<textarea [(ngModel)]=\"value\" class=\"source-code\" [hidden]=\"!showSource\"></textarea>\r\n"],
  "mappings": "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",
  "names": []
}
