{"version":3,"sources":["src/app/ai-flow-builder/components/ai-diagram/ai-diagram.component.ts","src/app/ai-flow-builder/components/ai-diagram/ai-diagram.component.html","node_modules/@angular/material/fesm2022/slider.mjs","src/app/ai-flow-builder/services/aiflow-builder.service.ts","src/app/ai-flow-builder/components/entity-detail/entity-detail.component.ts","src/app/ai-flow-builder/components/entity-detail/entity-detail.component.html","src/app/ai-flow-builder/page/webhook-config/webhook-config.component.ts","src/app/ai-flow-builder/page/webhook-config/webhook-config.component.html","src/app/ai-flow-builder/page/builder-entity/builder-entity.component.ts","src/app/ai-flow-builder/page/builder-entity/builder-entity.component.html","src/app/ai-flow-builder/components/flow-save-update/flow-save-update.component.ts","src/app/ai-flow-builder/components/flow-save-update/flow-save-update.component.html","src/app/ai-flow-builder/page/flow-builder/flow-builder.component.ts","src/app/ai-flow-builder/page/flow-builder/flow-builder.component.html","src/app/ai-flow-builder/ai-flow-builder.routing.ts"],"sourcesContent":["import { NgFor, NgIf } from '@angular/common';\r\nimport { AfterContentInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CompanyAssociationComponent } from '@app/admin/Shared/company-association/company-association.component';\r\nimport { GenerateXmlComponent } from '@app/admin/wf/wfd/components/generatexml/generatexml.component';\r\nimport { StateDetailComponent } from '@app/admin/wf/wfd/components/state-detail/state-detail.component';\r\nimport { TimerDetailComponent } from '@app/admin/wf/wfd/components/timer-detail/timer-detail.component';\r\nimport { TriggerConditionDetailComponent } from '@app/admin/wf/wfd/components/trigger-condition-detail/trigger-condition-detail.component';\r\nimport { TriggerDetailComponent } from '@app/admin/wf/wfd/components/trigger-detail/trigger-detail.component';\r\nimport { WorkflowDetailComponent } from '@app/admin/wf/wfd/components/workflow-detail/workflow-detail.component';\r\nimport { WFTriggerConditionDetail } from '@app/admin/wf/wfd/models';\r\nimport { ConnectionReconnectContext, ConnectionShape, ConnectionShapeWithProps, DiagramEl, ElementType, EventDef, StateShapeType, TriggerConditionConnection } from '@app/admin/wf/wfd/models/bpmn';\r\nimport { DetailConfig } from '@app/admin/wf/wfd/models/element-detail.class';\r\nimport { ElementsIds } from '@app/admin/wf/wfd/models/elements-ids.model';\r\nimport { Coordinates, MetaData, Stage, State, Trigger, TriggerCondition, Workflow } from '@app/admin/wf/wfd/models/wf.model';\r\nimport { BpmnService } from '@app/admin/wf/wfd/services/bpmn.service';\r\nimport { DiagramService } from '@app/admin/wf/wfd/services/diagram.service';\r\nimport { WFSaveResponse, WorkflowApiService } from '@app/admin/wf/wfd/services/workflow-api.service';\r\nimport { getEventDef, isStateType } from '@app/admin/wf/wfd/util/bpmn';\r\nimport { getTriggerType } from '@app/admin/wf/wfd/util/bridge';\r\nimport { constructId } from '@app/admin/wf/wfd/util/helpers';\r\nimport { AIFlowBuilderService } from '@app/ai-flow-builder/services/aiflow-builder.service';\r\nimport { ICompanyAssociatedWFObject, MessageService, WFAssociatedCompaniesPayload } from '@app/core';\r\nimport { FormViewApiService } from '@app/core/services/form-view-api.service';\r\nimport { NgbDropdown, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Guid } from 'guid-typescript';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { firstValueFrom, Observable, Subject, switchMap, takeUntil } from 'rxjs';\r\nimport { EntityDetailComponent } from '../entity-detail/entity-detail.component';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { SharedData } from '@app/admin/wf/wfd/custom/share-data';\r\nimport { WebhookConfigComponent } from '@app/ai-flow-builder/page/webhook-config/webhook-config.component';\r\n\r\nconst t = ElementType;\r\ninterface WfosIdToWfoIdMap {\r\n  [key: string]: string; // This defines a mapping of string keys to string values\r\n}\r\n@Component({\r\n  selector: 'app-ai-diagram',\r\n  standalone: true,\r\n  imports: [     NgbDropdown,\r\n        NgbDropdownToggle,\r\n        NgIf,\r\n        NgbDropdownMenu,\r\n        NgFor,\r\n        NgbDropdownItem,],\r\n  templateUrl: './ai-diagram.component.html',\r\n  styleUrl: './ai-diagram.component.scss'\r\n})\r\nexport class AiDiagramComponent implements AfterContentInit, OnDestroy {\r\n  @ViewChild('ref', { static: true }) private elDiagram: ElementRef;\r\n  @Input() metadata: MetaData;\r\n  @Output() workflowDeleted = new EventEmitter<boolean>();\r\n  private running = true;\r\n  public actionsVisible = true;\r\n  public actionsDisabled = false;\r\n  showWfdOnly = false; // Default state\r\n   metadata$: Observable<MetaData>;\r\n   private destroy$ = new Subject<void>();\r\n   previousLength: number = 0;\r\n   coordinatesChangePoints: Coordinates; // Store the points where the length changes\r\n   previousCords: Coordinates;\r\n  processName: any;\r\n  IsRedoAllowed: boolean;\r\n  IsUndoAllowed: boolean;\r\n  reloadData: boolean = false; \r\n\r\n  EntityId: string ='' ;\r\n  EntityType: string='' ;\r\n  ActionName: string ='';\r\n  ActionGroupId: string ='';\r\n  ActionDetails: string ='';\r\n  clearDetail:boolean=false;\r\n  totalComponentLenth: number;\r\n  keyColorArrayPrevious: [string, string | undefined][] = [];\r\n  alertMsgTxt: string[] = [];\r\n  trgConditionDetail: boolean = false;\r\n  undoredoactive = false;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    public service: DiagramService,\r\n    public wfapi: WorkflowApiService,\r\n    private formViewApi: FormViewApiService,\r\n    private msg: MessageService,\r\n    private cdr:ChangeDetectorRef,\r\n    private route: ActivatedRoute,\r\n    private bpmnService: BpmnService,\r\n    readonly toastr: ToastrService,\r\n    readonly titleService: Title,\r\n    private readonly aiFlowBuilderService: AIFlowBuilderService,\r\n    private readonly sharedData: SharedData\r\n  ) {  \r\n\r\n    this.registerEventHandlers();\r\n  }\r\n\r\n\r\n  private registerEventHandlers(): void {\r\n    this.service.onUpdateElement\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((el) => this.onUpdateElement(el));\r\n\r\n    this.service.onCreateElement\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((el) => this.onCreateElement(el));\r\n\r\n    this.service.onDeleteElement\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((res) => this.onDeleteElement(res));\r\n  \r\n\r\n    this.service.onDiagramChange\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((coords) => {\r\n\r\n        if(this.ActionName==='Delete' ||!this.ActionName.trim()){\r\n          this.EntityId=' ';\r\n          this.EntityType=' ';\r\n          this.ActionName=' ';\r\n          this.ActionGroupId=' ';\r\n        }\r\n         \r\n        const currentCordsdetail=Object.keys(coords);\r\n        const previousCordsdetail = this.coordinatesChangePoints \r\n        ? Object.keys(this.coordinatesChangePoints) \r\n        : [];\r\n        const storedEvent = this.getStoredEvent();\r\n        let isUndoRedo=false;\r\n\r\n        if (storedEvent !==\"ElementMoved\" && this.totalComponentLenth > currentCordsdetail.length || this.undoredoactive) {\r\n          if(this.undoredoactive){\r\n            isUndoRedo =true;  \r\n          }\r\n          if(this.ActionName !==\"Edit\"){\r\n            this.ActionName = '';\r\n           this.undoredoactive = false;\r\n          }  \r\n          \r\n    \r\n        } else if (!this.ActionName.trim()|| this.ActionName ===\"FilledColor\") {\r\n          this.ActionName = 'ElementMoved';\r\n        }\r\n           \r\n        const newKeyColorArray: [string, string | undefined][] = Object.entries(coords)\r\n        .map(([key, value]) => [key, (value as any).color])\r\n        .filter((entry): entry is [string, string] =>\r\n          !!entry[1] && entry[1] !== 'none' && entry[1] !== ''\r\n        );\r\n      \r\n        const hasColorChanged =\r\n        this.keyColorArrayPrevious.length !== newKeyColorArray.length ||\r\n        newKeyColorArray.some(([key, color]) => {\r\n          const match = this.keyColorArrayPrevious.find(([prevKey]) => prevKey === key);\r\n          return !match || match[1] !== color;\r\n        });\r\n      \r\n      if (hasColorChanged) {\r\n        this.keyColorArrayPrevious = newKeyColorArray;\r\n        this.ActionName = \"FilledColor\";\r\n      }\r\n\r\n      if(isUndoRedo)\r\n      {\r\n         this.ActionName =''; \r\n      }\r\n        this.totalComponentLenth = currentCordsdetail.length;\r\n        const removedGateway = previousCordsdetail.some(\r\n          item => item.includes(\"bpmn:ExclusiveGateway\") && !currentCordsdetail.includes(item)\r\n        );\r\n        \r\n        const removedCondition = previousCordsdetail.some(\r\n          item => item.includes(\"Cond_\") && !currentCordsdetail.includes(item)\r\n        );\r\n        \r\n        if (removedGateway && removedCondition) {\r\n          this.EntityType = 'diamond';\r\n          this.ActionGroupId= Guid.raw() \r\n        } else if (removedGateway) {\r\n          this.EntityType = 'diamond';\r\n          this.ActionGroupId=Guid.raw() \r\n        } else if (removedCondition) {\r\n          this.EntityType = 'TriggerCondition';\r\n          this.ActionGroupId=Guid.raw() \r\n        }\r\n        const currentLength = Object.keys(coords).length;\r\n        // Check if the length has changed\r\n        this.coordinatesChangePoints=coords;\r\n\r\n        // if (this.previousLength > currentLength) {\r\n         \r\n        // }     \r\n        this.previousLength = currentLength;  \r\n        \r\n        this.persistWorkflowDataArray();\r\n        \r\n        this.aiFlowBuilderService.updateAiFlow(this.metadata.Workflow.WFID, {\r\n          ID: this.metadata.Workflow.WFID,\r\n          FlowName: this.metadata.Workflow.FriendlyName,\r\n          FlowDescription: this.metadata.Workflow.FriendlyName,\r\n          CoordJson: { Coordinates: coords }\r\n        }).subscribe({\r\n          next: (response: any) => { \r\n           this.IsRedoAllowed = !!response?.Redo && response.Redo > 0;\r\n          this.IsUndoAllowed = !!response?.Undo && response.Undo > 0;\r\n          },\r\n          error: (error) => {\r\n            console.error(\"Error saving diagram coordinates:\", error);\r\n          }\r\n        });\r\n\r\n        if(this.clearDetail){\r\n          this.EntityId=' ';\r\n          this.EntityType=' ';\r\n          this.ActionName=' ';\r\n          this.ActionGroupId=' ';\r\n          this.ActionDetails=' ';\r\n          this.clearDetail=false;\r\n        }\r\n        this.clearStoredEvent();\r\n      });\r\n\r\n    this.service.onReconnect\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((context) => this.onConnectionReconnect(context));\r\n\r\n    this.service.onRestoreElement\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((element) => {\r\n        this.wfapi.restoreElement(this.metadata.Workflow.WFID, element).subscribe();\r\n      });\r\n  }\r\n\r\n  changeUndoRedo(id: string, type: string, Action: string) {\r\n\r\n    type = type.replace('bpmn:', ''); \r\n    this.EntityId = id;\r\n    this.ActionName = Action;\r\n    this.ActionGroupId=Guid.raw();\r\n\r\n    switch (type) {\r\n      case 'Task':\r\n        this.EntityType ='State';  \r\n        break;\r\n      case 'Participant':\r\n        this.EntityType ='Pool'; \r\n        break; \r\n      case 'Lane':\r\n        this.EntityType ='Stage';\r\n        break;  \r\n      case 'StartEvent':\r\n        this.EntityType ='StartState';\r\n        break;  \r\n      case 'EndEvent':\r\n        this.EntityType ='EndState'; \r\n        break; \r\n      case 'ExclusiveGateway':\r\n        this.EntityType ='Gateway';\r\n        this.clearDetail=true;\r\n        break; \r\n      case 'SequenceFlow':\r\n        this.EntityType ='Trigger';\r\n        break;  \r\n      case 'IntermediateCatchEvent':\r\n        this.EntityType ='TriggerExtension';\r\n        this.clearDetail=true;\r\n        break; \r\n      case 'TimerEventDefinition' :\r\n         this.EntityType ='Timer';\r\n         this.clearDetail=true;\r\n        break; \r\n      case 'Association':\r\n        this.EntityType ='Association'; \r\n        break;\r\n      case 'TextAnnotation':\r\n        this.EntityType ='Annotation'; \r\n        this.clearDetail=true;\r\n        break; \r\n      case 'SubProcess':\r\n        this.EntityType ='SubProcess';\r\n        break; \r\n      case 'label' :  \r\n        this.EntityType ='Label';\r\n        break; \r\n      default:\r\n        this.EntityType = ''; \r\n        break; \r\n    }\r\n  }\r\n\r\n  deleteWfCall(ids: ElementsIds) {\r\n\r\n    const deletedIds = {\r\n      workflowIds: ids.workflowIds,\r\n      stageIds: ids.stageIds,\r\n      stateIds: ids.stateIds,\r\n      triggerIds: ids.triggerIds,\r\n      conditionIds: ids.conditionIds,\r\n      PrevStageIds:[],\r\n    };\r\n  \r\n    const deletedIdsString = JSON.stringify(deletedIds); // Convert object to string\r\n    this.ActionName = 'Delete';\r\n    this.ActionGroupId = (this.EntityType !== 'diamond' && this.EntityType !== 'TriggerCondition') ? Guid.raw() : this.ActionGroupId;\r\n    \r\n    // Determine EntityType\r\n    this.EntityType =\r\n      this.EntityType === 'diamond' ||  this.EntityType ==='TriggerCondition'\r\n        ? this.EntityType\r\n        : ids.stageIds?.[0]\r\n        ? 'Stage'\r\n        : ids.stateIds?.[0]\r\n        ? 'State'\r\n        : ids.triggerIds?.[0]\r\n        ? 'Trigger'\r\n        : '';\r\n        this.persistWorkflowDataArray();\r\n  \r\n    this.wfapi\r\n      .saveDiagramCoordinates(this.metadata.Workflow.WFID, this.coordinatesChangePoints, {\r\n        EntityId: ids.stageIds[0] ?? ids.stateIds[0] ?? ids.triggerIds[0] ?? ids.conditionIds[0] ?? '',\r\n        EntityType: this.EntityType,\r\n        ActionName: this.ActionName,\r\n        ActionGroupId: this.ActionGroupId,\r\n        ActionDetails: deletedIdsString,\r\n        SequenceNumber:this.getWorkflowValue(this.metadata.Workflow.WFID).toString()\r\n      })\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          this.IsRedoAllowed = !!response?.Redo && response.Redo > 0;\r\n          this.IsUndoAllowed = !!response?.Undo && response.Undo > 0;\r\n          \r\n          // Reset values **after** successful API call\r\n          this.resetValues();\r\n        },\r\n        error: (error) => {\r\n          this.resetValues();\r\n          console.error('Error saving diagram coordinates:', error);\r\n        },\r\n      });\r\n  }\r\n  \r\n  // Helper method to reset values after API call\r\n  private resetValues(): void {\r\n    this.EntityId = '';\r\n    this.EntityType = '';\r\n    this.ActionName = '';\r\n    this.ActionGroupId = '';\r\n    this.ActionDetails = '';\r\n    this.clearDetail = false;\r\n  }\r\n  \r\n  \r\n\r\n  private async onCreateElement(el: DiagramEl) {\r\n    this.changeUndoRedo('',el.type,'Insert');\r\n    try {\r\n      const details = await this.getDetails(el, true);\r\n      if (details) {\r\n        const props = await this.openDialog({\r\n          element: el,\r\n          newElement: true,\r\n          ...details,\r\n        });\r\n\r\n        // this.service.updateElementProperties(el, {});\r\n        // if (props) {\r\n        //   try {\r\n           this.saveDetailsv2(el, props);      \r\n        //     if (res.statuscode === 200) {\r\n       \r\n        //       this.clearDetail=true;   \r\n        //       this.EntityId = res.result.ConditionId ?? res.result.TriggerId ?? res.result.WfoId ?? res.result.WfosId; \r\n        //     //  this.ActionDetails = res.result.TriggerId ? JSON.stringify(Object.keys(res.result.TrgConditions)) : '';\r\n        //       this.ActionDetails = res.result.TriggerId\r\n        //        ? JSON.stringify({\r\n        //          workflowIds: [],\r\n        //         stageIds: [],\r\n        //         stateIds: [],\r\n        //         PrevStageIds:[],\r\n        //         triggerIds: [res.result.TriggerId], \r\n        //         conditionIds: Object.keys(res.result.TrgConditions ?? []).filter(key => key)\r\n        //         })\r\n        //        : '';\r\n        //       // trg_cond\r\n        //       this.handleSaveResponse(el, res, props);\r\n        //     }\r\n        //     // else {\r\n \r\n        //     //   if(this.reloadData){\r\n        //     //     this.reloadData=false;\r\n        //     //   }\r\n        //     //   this.clearDetail=true;\r\n        //     //   this.service.deleteElement(el);\r\n        //     // }\r\n        //   } catch (_) {\r\n        //     this.clearDetail=true;\r\n        //     this.service.deleteElement(el);\r\n        //   }\r\n        //   this.clearDetail=true;\r\n        // }\r\n     \r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.service.undo();\r\n    }\r\n  }\r\n\r\n  public async UndoRedo(functionality: string) {\r\n      try {\r\n          this.undoredoactive = true;\r\n          if (functionality === 'Undo') {\r\n              if (this.metadata.Workflow) {\r\n                  this.wfapi.UndoWfdWorkflow(this.metadata.Workflow.WFID).pipe(\r\n                      switchMap(() => this.loadWfData())\r\n                  ).subscribe(metadata => {\r\n                      this.mappingData(metadata);\r\n                      this.refreshXML();\r\n                  });\r\n              }\r\n\r\n          } else if (functionality === 'Redo') {\r\n              this.wfapi.RedoWfdWorkflow(this.metadata.Workflow.WFID).pipe(\r\n                  switchMap(() => this.loadWfData())\r\n              ).subscribe(metadata => {\r\n                  this.mappingData(metadata);\r\n                  this.refreshXML();\r\n              });\r\n          }\r\n\r\n      } catch (error) {\r\n          console.error(`Error during ${functionality} operation:`, error);\r\n      }\r\n  }\r\n\r\n  private loadWfData() {\r\n    var processName: string;\r\n    var verNo: string;\r\n    this.route.queryParams.subscribe(params => {\r\n     processName = params['processName'];\r\n      verNo = params['VerNo'];\r\n    });\r\n    this.metadata$ = this.wfapi.getWorkflowDiagram(processName, verNo);\r\n    return this.metadata$;\r\n  }\r\n\r\n  private mappingData(metadata) {\r\n      this.metadata = metadata;\r\n      \r\n      this.IsRedoAllowed = !!this.metadata.Workflow.IsRedoAllowed;\r\n      this.IsUndoAllowed = !!this.metadata.Workflow.IsUndoAllowed;\r\n\r\n  }\r\n  \r\n\r\n\r\nprivate async onUpdateElement(el: DiagramEl) {\r\n  let isExclusiveGateway;\r\n   if( el.type === \"bpmn:SequenceFlow\"){\r\n    isExclusiveGateway = el.source.type === \"bpmn:ExclusiveGateway\";\r\n   }else{\r\n    isExclusiveGateway=false\r\n   }\r\n\r\n  this.trgConditionDetail = isExclusiveGateway;\r\n  let friendlyName = isExclusiveGateway\r\n  ? el?.props?.Description ?? ''\r\n  : el.type === 'bpmn:SequenceFlow'\r\n    ? el.friendlyName ?? ''\r\n    : el?.props?.FriendlyName ?? '';\r\n  if (el.type === 'bpmn:IntermediateCatchEvent') {\r\n    friendlyName = '';\r\n  }\r\n\r\n\r\n  const newElement = !el.props && el.type !== t.TriggerExtension;\r\n  const details = await this.getDetails(el, newElement);\r\n  if (!details) return;\r\n\r\n  const props = await this.openDialog({ element: el, newElement, ...details });\r\n\r\n  if (!props) return this.trgConditionDetail = false;\r\n\r\n  const element = this.bpmnService.allElements;\r\n  // this.updateElementProperties(el, props, props.EntityName);\r\n  if(element.map(e => e.id).includes(props.EntityName)){\r\n     this.service.updateElementProperties(el, {\r\n        name: props.EntityName\r\n      });\r\n  }else{\r\n    this.service.updateElementProperties(el, {\r\n          id: props.EntityName,\r\n          name: props.EntityName\r\n        });\r\n  }\r\n  // await this.saveAndUpdateElement(el, props, newElement);\r\n}\r\n\r\nprivate updateElementProperties(el: DiagramEl, props: any, prev: any): void {\r\n  const stateTypes = [\"bpmn:Task\", \"bpmn:StartEvent\", \"bpmn:EndEvent\", \"bpmn:SubProcess\"];\r\n  if (stateTypes.includes(el.type)) {\r\n    this.changeUndoRedo(el.props.WfosId, el.type, 'Edit');\r\n  } else if (el.type === \"bpmn:Lane\") {\r\n    this.changeUndoRedo(el.props.WfoId, el.type, 'Edit');\r\n  } else if (el.type === \"bpmn:SequenceFlow\") {\r\n    if (this.trgConditionDetail) {\r\n      this.EntityId = props.conditionId;\r\n      this.ActionName = 'Edit';\r\n      this.ActionGroupId = Guid.raw();\r\n      this.EntityType='TriggerCondition'\r\n    } else {\r\n      this.changeUndoRedo(el.props.TriggerId, el.type, 'Edit');\r\n    }\r\n  }else if(el.def===\"bpmn:TimerEventDefinition\"){\r\n    this.changeUndoRedo('', el.def, 'Edit');\r\n  }\r\n   else {\r\n    this.changeUndoRedo(el.id, el.type, 'Edit');\r\n  }\r\n\r\n  const UpdatedData = {\r\n    workflowIds: [],\r\n    stageIds: [],\r\n    stateIds: [],\r\n    PrevStageIds: [],\r\n    triggerIds: [],\r\n    conditionIds: [],\r\n    PrevDispName: prev,\r\n    CurrentDispName: this.trgConditionDetail ? props.conditionDescription : props.friendlyName,\r\n  };\r\n \r\n\r\n  this.ActionDetails = JSON.stringify(UpdatedData);\r\n  this.clearDetail = true;\r\n\r\n  el.props = el.props || {};\r\n  el.props.FriendlyName = props.friendlyName;\r\n\r\n  if (el.type === \"bpmn:SequenceFlow\") {\r\n    el.friendlyName = this.trgConditionDetail ? props.conditionDescription : props.friendlyName;\r\n    this.trgConditionDetail = false;\r\n  }\r\n}\r\n  \r\n  // private async saveAndUpdateElement(el: DiagramEl, props: any, newElement: boolean): Promise<void> {\r\n  //   const saveResponse = await this.saveDetails(el, props).toPromise();\r\n  \r\n  //   if (el.type === \"bpmn:SubProcess\") {\r\n  //     el.props.SubProcessName = saveResponse.result.SubProcessName;\r\n  //     el.props.SubProcessWFVersionNo = saveResponse.result.SubProcessWFVersionNo;\r\n  //   }\r\n  \r\n  //   if (!newElement) return;\r\n  \r\n  //   if (saveResponse.statuscode === 200) {\r\n  //     this.handleSaveResponse(el, saveResponse, props);\r\n  //   } else {\r\n  //     this.service.deleteElement(el);\r\n  //   }\r\n  // }\r\n  \r\n\r\n  private async onDeleteElement(ids: ElementsIds) {\r\n    const workflowId = this.metadata.Workflow.WFID;\r\n    const stateIds = ids?.stateIds ?? []\r\n    try {\r\n\r\n      stateIds.forEach(id =>{\r\n         firstValueFrom(this.aiFlowBuilderService.deleteAIFlowEntity(id));\r\n      })\r\n    \r\n      if (ids.workflowIds.length > 0) {   \r\n        this.workflowDeleted.emit(true);\r\n      }\r\n\r\n    } catch (_) {\r\n      this.service.undo(); \r\n    }\r\n \r\n  }\r\n\r\n  private async onConnectionReconnect(ctx: ConnectionReconnectContext) {\r\n    const {\r\n      connection,\r\n      hints: { docking },\r\n    } = ctx;\r\n    try {\r\n      let res;\r\n      let flow = connection;\r\n      if (docking === 'source') {\r\n        res = await this.getDetails(connection);\r\n      } else {\r\n        const condition = Object.values(connection.props.TrgConditions)[0];\r\n        (flow as unknown) = {\r\n          type: t.Trigger,\r\n          id: constructId('Cond_', condition.Name),\r\n          props: condition,\r\n          source: { type: t.Gateway },\r\n          target: connection.target,\r\n        } as TriggerConditionConnection;\r\n        res = await this.getDetails(flow);\r\n      }\r\n      if (res) {\r\n        const { data, component } = res;\r\n        const props = await this.openDialog({ element: flow, data, component });\r\n        if (props) {\r\n          // await this.saveDetails(flow, props).toPromise();\r\n        } else {\r\n          this.service.undo();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.service.undo();\r\n    }\r\n  }\r\n\r\n  private async onElementsMove(el: DiagramEl) {\r\n    const res = await this.getDetails(el);\r\n    if (res) {\r\n      const props = await this.openDialog({ element: el, ...res });\r\n      if (props) {\r\n        // const res = await this.saveDetails(el, props).toPromise();\r\n        // if (res.statuscode === 200) {\r\n        //   this.handleSaveResponse(el, res, props);\r\n        // } else {\r\n        //   this.service.deleteElement(el);\r\n        // }\r\n      } else {\r\n        this.service.undo();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** THIS REQUIRES API CHANGES\r\n   * SAVE RESPONSE MUST CONTAIN THE OBJECT CREATED\r\n   */\r\n  private handleSaveResponse(el: DiagramEl, res: WFSaveResponse, payload: any) {\r\n    const props = { ...res.result };\r\n    let id = props.Guid;\r\n    if (\r\n      el.type === t.Trigger &&\r\n      (el.source.type === t.Gateway || el.source.type === t.TriggerExtension)\r\n    ) {\r\n      id = constructId('Cond_', payload.conditionName);\r\n    }\r\n    if (res.statuscode === 200) {\r\n      if (el.type === t.Trigger) {\r\n        const flow = el as ConnectionShapeWithProps;\r\n        const { source, target } = flow;\r\n        if (isStateType(source)) {\r\n          // id = props.TriggerId;\r\n          props.WfosId = (source.props as State).WfosId;\r\n        } else if (\r\n          source.type === t.Gateway ||\r\n          source.type === t.TriggerExtension\r\n        ) {\r\n          // id = props.ConditionId;\r\n          props.TriggerId = payload.triggerId;\r\n        }\r\n\r\n        let targetId = null;\r\n        if (target.type === t.TriggerExtension) {\r\n          const triggerType = getTriggerType(flow);\r\n          targetId = constructId(triggerType, props.Guid);\r\n        } else if (target.type === t.Gateway) {\r\n          targetId = constructId(t.Gateway, props.Guid);\r\n        }\r\n        if (targetId) {\r\n          this.service.updateElementProperties(target, { id: targetId });\r\n        }\r\n      } else if (el.type === t.TriggerExtension) {\r\n        return;\r\n      } else if (isStateType(el)) {\r\n        // id = props.WfosId;\r\n        props.WfoId = payload.wfoId;\r\n      } else if (el.type === t.Stage) {\r\n        // id = props.WfoId;\r\n      }\r\n\r\n      if (el.props) {\r\n        (el as any).props = { ...el.props, ...props };\r\n      } else {\r\n        (el as any).props = { ...props, Status: payload.status };\r\n      }\r\n\r\n      const updateId = id !== el.id ? { id } : {};\r\n      this.service.updateElementProperties(el, { ...updateId, props });\r\n    }\r\n  }\r\n\r\n  public toggleActions() {\r\n    this.actionsVisible = !this.actionsVisible;\r\n  }\r\n\r\n  private async openDialog(config: DetailConfig) {\r\n    const ref = this.msg.showComponent(config.component, {\r\n      workflow: this.metadata?.Workflow,\r\n      config: config,\r\n      ...config.data\r\n    });\r\n\r\n    return ref.result;\r\n  }\r\n\r\n  private async getDetails(element: DiagramEl, newElement?: boolean) {\r\n    const props = element.props || ({} as any);\r\n    this.sharedData.removeConnectionType();\r\n    switch (element.type) {\r\n      case t.Pool:\r\n        return this._getWorkflowDetails(props, newElement);\r\n      case t.Stage:\r\n        return this._getStageDetails(props, newElement);\r\n      case t.StartState:\r\n      case t.State:\r\n      case t.EndState:\r\n      case t.SubProcess:\r\n      case t.API:\r\n      case t.DataSchema:\r\n      case t.HumanInLoop:\r\n      case t.LLM:\r\n      case t.PromptVariable:\r\n      case t.Scheduler:\r\n      case t.SqlQuery:\r\n      case t.Vector:\r\n        return this._getStateDetails(element, newElement);\r\n        \r\n      case t.TriggerExtension: {\r\n        const def = element.businessObject.eventDefinitions[0];\r\n        const flow = element.incoming[0];\r\n        if (flow && def?.$type === EventDef.Timer) {\r\n          return this._getTriggerDetails(flow, newElement, true);\r\n        }\r\n        return null;\r\n      }\r\n      case t.Trigger:\r\n        const flow = element as ConnectionShapeWithProps;\r\n        if (\r\n          flow.source.type === t.Gateway ||\r\n          (flow.source.type === t.TriggerExtension &&\r\n            (getEventDef(flow.source) === EventDef.System || getEventDef(flow.source) === EventDef.Timer))\r\n        ) {\r\n          \r\n          return this._getTriggerConditionDetails(flow, newElement);\r\n        } else {\r\n\r\n          if (flow.target && (flow.target.type === 'bpmn:IntermediateCatchEvent'||flow.target.type ==='bpmn:ExclusiveGateway') ) {\r\n            this.reloadData = true;\r\n          }\r\n          return this._getTriggerDetails(flow, newElement);\r\n        }\r\n      \r\n      case t.DottedFlow:{\r\n         return this._getDottedTriggerDetails(element, newElement);\r\n      }\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  private async _getWorkflowDetails(props: Workflow, newElement?: boolean) {\r\n    const component = WorkflowDetailComponent;\r\n    let data = {};\r\n    if (!newElement) {\r\n      [data] = await this.wfapi.getWorkflowDetails(props.WFID).toPromise();\r\n    }\r\n    return { component, data };\r\n  }\r\n\r\n  private async _getStageDetails(props: Stage, newElement?: boolean) {\r\n\r\n    const component = EntityDetailComponent;\r\n    let data = {};\r\n    if(newElement){\r\n     const initialData = await firstValueFrom(this.aiFlowBuilderService.getAIFlowAttributeJsonByType('Stage'));\r\n     const { WfoId: stageId } = props as Stage;\r\n      data = {\r\n        entityType: 'Stage',\r\n        parentEntityId: stageId,\r\n        newElement,\r\n        formConfig: initialData\r\n      };\r\n    }else{\r\n      // const { WfosId, WfoId: stageId } = element.props as State;\r\n      const { WfoId: stageId } = props as Stage;\r\n\r\n      const initaliData = await firstValueFrom(this.aiFlowBuilderService\r\n        .getAIFlowEntityById(stageId));\r\n\r\n      data = {\r\n        entityType: 'Stage',\r\n        parentEntityId: stageId,\r\n        entityID: stageId,\r\n        formConfig: initaliData.AttributeJson\r\n      }\r\n      }\r\n    return { component, data };\r\n  }\r\n\r\n  private async _getStateDetails(\r\n    element: StateShapeType,\r\n    newElement?: boolean\r\n  ) {\r\n    const { WfoId: stageId } = element.parent.props as any;\r\n    const component = EntityDetailComponent;\r\n    let entityType: string;\r\n    switch (element.type) {\r\n      case t.StartState:\r\n      entityType = 'StartState';\r\n      break;\r\n    case t.EndState:\r\n      entityType = 'EndState';\r\n      break;\r\n    case t.API:\r\n      entityType = 'API';\r\n      break;\r\n    case t.DataSchema:\r\n      entityType = 'DataSchema';\r\n      break;\r\n    case t.HumanInLoop:\r\n      entityType = 'HumanInLoop';\r\n      break;\r\n    case t.LLM:\r\n      entityType = 'LLM';\r\n      break;\r\n    case t.PromptVariable:\r\n      entityType = 'PromptVariable';\r\n      break;\r\n    case t.Scheduler:\r\n      entityType = 'Scheduler';\r\n      break;\r\n    case t.SqlQuery:\r\n      entityType = 'SqlQuery';\r\n      break;\r\n    case t.Vector:\r\n      entityType = 'Vector';\r\n      break;\r\n    default:\r\n      entityType = 'Agent';\r\n      break;\r\n}\r\n    let data = {};\r\n    if(newElement){\r\n      const initialData = await firstValueFrom(this.aiFlowBuilderService.getAIFlowAttributeJsonByType(entityType));\r\n      data = {\r\n        newElement,\r\n        entityType: entityType,\r\n        parentEntityId: stageId,\r\n        formConfig: initialData\r\n      };\r\n    }else{\r\n      const { WfosId } = element.props as any;\r\n\r\n      const initaliData = await firstValueFrom(this.aiFlowBuilderService\r\n        .getAIFlowEntityById(WfosId));\r\n\r\n      data = {\r\n        entityType: entityType,\r\n        parentEntityId: stageId,\r\n        entityID: WfosId,\r\n        formConfig: initaliData.AttributeJson\r\n      }\r\n\r\n    }\r\n    return { component, data };\r\n  }\r\n\r\n  private async _getTriggerConditionDetails(flow: ConnectionShape, newElement, isTimer?: boolean) {\r\n    const triggerId = this.bpmnService.allElements.find(alfa => alfa?.target?.id == flow.source.id)?.props?.TriggerId;\r\n    // const { WfosId: stateId } = flow.source.props || {} as State;\r\n    const { WfosId: endingStateId } = flow.target?.props || {} as State;\r\n\r\n    const component = EntityDetailComponent;\r\n    let data = {};\r\n    \r\n    if(newElement){\r\n     const initialData = await firstValueFrom(this.aiFlowBuilderService.getAIFlowAttributeJsonByType('TriggerCondition'));\r\n\r\n      data = {\r\n        entityType: 'TriggerCondition',\r\n        parentEntityId: triggerId,\r\n        endParentEntityId: endingStateId,\r\n        newElement,\r\n        formConfig: initialData\r\n\r\n      };\r\n    }else{\r\n      const { ConditionId } = flow.props as any;\r\n\r\n      const initaliData = await firstValueFrom(this.aiFlowBuilderService\r\n        .getAIFlowEntityById(ConditionId));\r\n      data = {\r\n        entityType: 'TriggerCondition',\r\n        parentEntityId: triggerId,\r\n        entityID: ConditionId,\r\n        newElement,\r\n        formConfig: initaliData.AttributeJson\r\n\r\n      }\r\n    }\r\n\r\n    return { component, data };\r\n  }\r\n\r\n    private async _getDottedTriggerDetails(flow, newElement) {\r\n    const { WfosId: stateId } = flow.source.props as State;\r\n    const { WfosId: endingStateId } = flow.target.props as State;\r\n\r\n    this.aiFlowBuilderService.createAIFlowEntity({\r\n      FlowId: this.metadata?.Workflow?.WFID,\r\n      EntityName: flow.id,\r\n      EntityType: 'DottedTrigger',\r\n      ParentEntityId: stateId,\r\n      EndParentEntityId: endingStateId,\r\n    }).subscribe();\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  private async _getTriggerDetails(flow: ConnectionShape, newElement, isTimer?: boolean) {\r\n    const { WfosId: stateId } = flow.source.props as State;\r\n    const { WfosId: endingStateId } = flow.target?.props || {} as State;\r\n\r\n    const component = EntityDetailComponent;\r\n    let data = {};\r\n    \r\n    if(newElement){\r\n     const initialData = await firstValueFrom(this.aiFlowBuilderService.getAIFlowAttributeJsonByType('Trigger'));\r\n\r\n      data = {\r\n        entityType: 'Trigger',\r\n        parentEntityId: stateId,\r\n        endParentEntityId: endingStateId,\r\n        newElement,\r\n        formConfig: initialData\r\n\r\n      };\r\n    }else{\r\n      const { TriggerId } = flow.props as any;\r\n\r\n      const initaliData = await firstValueFrom(this.aiFlowBuilderService\r\n        .getAIFlowEntityById(TriggerId));\r\n      data = {\r\n        entityType: 'Trigger',\r\n        parentEntityId: stateId,\r\n        entityID: TriggerId,\r\n        newElement,\r\n        formConfig: initaliData.AttributeJson\r\n\r\n      }\r\n    }\r\n\r\n    return { component, data };\r\n  }\r\n\r\n  // private saveDetails(element: DiagramEl, props: any) {\r\n  //   debugger;\r\n  //   if (element.props && props.status) {\r\n  //     element.props.Status = props.status;\r\n  //   }\r\n\r\n  //   if (element.type !== t.Trigger) {\r\n  //     this.service.updateElementProperties(element, {\r\n  //       name: props.friendlyName,\r\n  //     });\r\n  //   } else {\r\n  //     this.service.updateElementProperties(element, {});\r\n  //   }\r\n  //   const { ProcessName, WFID } = this.metadata.Workflow;\r\n  //   return this.wfapi.updateElement(element, props, ProcessName, WFID);\r\n  // }\r\n\r\n    private saveDetailsv2(element: DiagramEl, props: any) {\r\n    element.props = props;\r\n    if (element.props && props.status) {\r\n      element.props.Status = props.status;\r\n    }\r\n\r\n    if(element.source?.type === t.Gateway){\r\n       this.service.updateElementProperties(element, {\r\n        id: constructId('Cond_', props.entityname)\r\n       });\r\n    }\r\n    if(element.target?.type === t.Gateway){\r\n       this.service.updateElementProperties(element.target, {\r\n        id: constructId(t.Gateway, props.entityname)\r\n       });\r\n    }\r\n\r\n    if (element.type !== t.Trigger) {\r\n      // element.id = props.entityname \r\n      this.service.updateElementProperties(element, {\r\n        id: props.entityname,\r\n        name: props.entityname\r\n      });\r\n    } else {\r\n      this.service.updateElementProperties(element, {\r\n        id: props.entityname\r\n      });\r\n    }\r\n    return;\r\n  }\r\n\r\n  public changeMode(mode: 'Edit' | 'Published') {\r\n    this.wfapi\r\n      .changeMode(this.metadata.Workflow.WFID, mode)\r\n      .subscribe((success) => {\r\n        if (success && mode !== this.metadata.Workflow.WorkflowMode) {\r\n          location.reload();\r\n        }\r\n      });\r\n  }\r\n\r\n  public refreshXML(){\r\n        this.service.toDiagram(this.metadata, this.elDiagram.nativeElement).subscribe();\r\n  }\r\n\r\n  public generateXML() {\r\n    this.aiFlowBuilderService.getAIFGeneratedJson(this.metadata.Workflow.WFID).subscribe(_ =>{\r\n      console.log(_ );\r\n    });\r\n\r\n  }\r\n\r\n\r\nprivate showErrorModal(): void {\r\n  const dialogRef = this.dialog.open(GenerateXmlComponent, {\r\n    width: '656px',\r\n    disableClose: true,\r\n    panelClass: 'custom-dialog-container',\r\n    data: {\r\n      type: 'wf',\r\n      processName: this.metadata.Workflow.ProcessName,\r\n      verNo: this.metadata.Workflow.Ver,\r\n      alertMsgTxt: this.alertMsgTxt\r\n    }\r\n  });\r\n\r\n  dialogRef.componentInstance.closeModal.subscribe(() => {\r\n    dialogRef.close(); // Close the modal when any action is triggered\r\n  });\r\n}\r\nwfosIdToWfoIdMap: WfosIdToWfoIdMap = {};\r\n\r\n\r\ncreateWfosIdToWfoIdMap(data: MetaData): WfosIdToWfoIdMap {\r\n\r\n    const stages = data.Workflow.Stages;\r\n\r\n    for (const stageKey in stages) {\r\n      const states = stages[stageKey].States;\r\n      for (const stateKey in states) {\r\n        const state = states[stateKey];\r\n        this.wfosIdToWfoIdMap[state.WfosId] = state.WfoId; // Store WfosId as key and WfoId as value\r\n      }\r\n    }\r\n    sessionStorage.setItem('StateJson', JSON.stringify(this.wfosIdToWfoIdMap));\r\n\r\n\r\n    return this.wfosIdToWfoIdMap; // Return the mapping\r\n  }\r\n\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.metadata.Workflow) {\r\n      this.previousLength = this.metadata?.Coordinates ? Object.keys(this.metadata.Coordinates).length: 0;    \r\n      this.coordinatesChangePoints = this.metadata?.Coordinates;\r\n      this.totalComponentLenth = Object.keys(this.metadata?.Coordinates ?? {}).length;\r\n      this.keyColorArrayPrevious = Object.entries(this.metadata?.Coordinates ?? {})\r\n    .map(([key, value]) => {\r\n      const color = 'color' in value ? value.color : undefined;\r\n      return [key, color];\r\n    })\r\n    .filter((entry): entry is [string, string] =>\r\n      !!entry[1] && entry[1] !== 'none' && entry[1] !== ''\r\n    );\r\n      this.IsRedoAllowed = !!this.metadata.Workflow.IsRedoAllowed;\r\n      this.IsUndoAllowed = !!this.metadata.Workflow.IsUndoAllowed;\r\n      this.actionsVisible = this.metadata.Workflow.WorkflowMode !== 'Published';\r\n      this.actionsDisabled = !this.actionsVisible;\r\n      this.metadata.FlowType = 'ai';\r\n      this.createWfosIdToWfoIdMap(this.metadata);\r\n      this.service.toDiagram(this.metadata, this.elDiagram.nativeElement).subscribe();\r\n    } else {\r\n      this.workflowDeleted.emit(true);\r\n    }\r\n  }\r\n  workflowDataArray:any;\r\n\r\n  persistWorkflowDataArray(): void {\r\n    const storageKey = 'workflowDataArray';\r\n    const stored = sessionStorage.getItem(storageKey);\r\n  \r\n    // Load existing data or initialize empty array\r\n    this.workflowDataArray = stored ? JSON.parse(stored) : [];\r\n  \r\n    const wfid = this.metadata?.Workflow?.WFID;\r\n    if (!wfid) return;\r\n  \r\n    const index = this.workflowDataArray.findIndex(([key]) => key === wfid);\r\n    if (index !== -1) {\r\n      // Update existing\r\n      this.workflowDataArray[index][1] += 1;\r\n    } else {\r\n      // Add new\r\n      this.workflowDataArray.push([wfid, 1]);\r\n    }\r\n  \r\n    // Save back to sessionStorage\r\n    sessionStorage.setItem(storageKey, JSON.stringify(this.workflowDataArray));\r\n  }\r\n\r\n\r\n  getWorkflowValue(wfid: string): number {\r\n    // Load from sessionStorage\r\n    const stored = sessionStorage.getItem('workflowDataArray');\r\n    const array: [string, number][] = stored ? JSON.parse(stored) : [];\r\n  \r\n    // Find entry\r\n    const found = array.find(([key]) => key === wfid);\r\n    return found ? found[1] : 0; // return 0 if not found\r\n  }\r\n  \r\n\r\n  async onCompanyAssociation() {\r\n\r\n    const obj = this.metadata.Workflow;\r\n      const modal = this.msg.showComponent(CompanyAssociationComponent, {\r\n        displayWith: (item: ICompanyAssociatedWFObject) => `${item.WFDISPNAME} > ${item.WFODISPNAME} > ${item.WFOSDISPNAME} > ${item.TRGDISPNAME}`,\r\n        uniqueWith: (item: ICompanyAssociatedWFObject) => `${item.WFNAM}${item.WFOGUID}${item.WFOSGUID}${item.TRGGUID}`,\r\n        getAssociationsWith: (groupId: string) => this.formViewApi.getWFObjectsForCompanyAssociation(groupId, obj.TypeID, obj.WFID), \r\n        checkBy: 'isAlreadySelected',\r\n      });\r\n      const res = await modal.result;\r\n      if (res) {\r\n        const success = await this.updateCompanyAssociatedRecords(obj, res) === 1;\r\n        if (success) {\r\n         this.toastr.success('Success');\r\n        }\r\n      }\r\n    \r\n  }\r\n\r\n  private updateCompanyAssociatedRecords(wf: any, res: any) {\r\n  const stageGuids = new Set(), stateGuids = new Set(), triggerGuids = new Set();\r\n\r\n  const selectedItems = Array.isArray(res?.selectedItems)\r\n    ? res.selectedItems\r\n    : res?.selectedItems\r\n      ? [res.selectedItems] // convert single item to array\r\n      : [];\r\n\r\n  (selectedItems as ICompanyAssociatedWFObject[]).forEach(item => {\r\n    stageGuids.add(item.WFOGUID);\r\n    stateGuids.add(item.WFOSGUID);\r\n    triggerGuids.add(item.TRGGUID);\r\n  });\r\n\r\n  const payload: WFAssociatedCompaniesPayload = {\r\n    WFId: wf?.WFID ?? null,\r\n    ProcessId: wf?.TypeID ?? null,\r\n    CompanyId: res?.companyId ?? null,\r\n    groupName: res?.groupName ?? '',\r\n    WFOGUIDS: [...stageGuids].toString(),\r\n    WFOSGUIDS: [...stateGuids].toString(),\r\n    TrigGUIDS: [...triggerGuids].toString(),\r\n    IsAllComp: res?.IsAllComp ?? false\r\n  };\r\n\r\n  return firstValueFrom(this.formViewApi.updateWFObjectsForCompanyAssociation(payload));\r\n}\r\n\r\n  private clearStoredEvent(): void {\r\n    const key = 'event';\r\n    sessionStorage.removeItem(key);\r\n  }\r\n\r\n  private getStoredEvent(): string | null {\r\n    const key = 'event';\r\n    const storedValue = sessionStorage.getItem(key);\r\n    return storedValue ? JSON.parse(storedValue) : null;\r\n  }\r\n \r\n  openWebhook() {\r\n    // Read query params once\r\n    const flowName = this.route.snapshot.queryParamMap.get('flowName') || '';\r\n    const id = this.route.snapshot.queryParamMap.get('id') || '';\r\n\r\n    console.log('Flow Name:', flowName);\r\n    console.log('ID:', id);\r\n\r\n    const modal = this.msg.showComponent(WebhookConfigComponent, {\r\n      id: id,\r\n      FlowName: flowName\r\n    }, { size: 'lg' });\r\n\r\n    modal.result.then(async (result) => {\r\n      if (result) {\r\n        this.toastr.success('Data saved successfully');\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.service.destroy();\r\n    \r\n  }\r\n}\r\n\r\n","\r\n<div #ref class=\"diagram-container\" style=\"position: relative;\">\r\n  <div>\r\n    <div class=\"header W-100 d-flex align-items-center\">\r\n      <div class=\"headerText\">{{ 'Agentic Flow Designer' + ' ' + '(' + titleService.getTitle() + ')' }}</div>\r\n      <div class=\"d-flex justify-content-between w-100\">   \r\n      <div class=\" d-flex \">\r\n       <div class=\"d-none\">\r\n        <button style=\"  border-left: 1px solid #E0E0E0;  border-right: 1px solid #E0E0E0;\">\r\n          <svg width=\"20\" height=\"35\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M18 7.54383V3.81576C18 2.58039 17.0486 1.57892 15.875 1.57892H12.3334M18 7.54383H12.3334M18 7.54383V13.5088M12.3334 1.57892V7.54383M12.3334 1.57892H6.66666M12.3334 7.54383H6.66666M12.3334 7.54383V13.5088M18 13.5088V17.2368C18 18.4722 17.0486 19.4737 15.875 19.4737H12.3334M18 13.5088H12.3334M1 7.54383V3.81576C1 2.58039 1.95139 1.57892 3.125 1.57892H6.66666M1 7.54383H6.66666M1 7.54383V13.5088M6.66666 1.57892V7.54383M6.66666 7.54383V13.5088M1 13.5088V17.2368C1 18.4722 1.95139 19.4737 3.125 19.4737H6.66666M1 13.5088H6.66666M12.3334 13.5088H6.66666M12.3334 13.5088V19.4737M6.66666 13.5088V19.4737M12.3334 19.4737H6.66666\" stroke=\"#555555\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>            \r\n        </button>\r\n       </div>\r\n       <div class=\"mt-1 d-none\" *ngIf=\"service.paletteIsOpen\"> \r\n        <button  style=\"border-left: 1px solid #E0E0E0; cursor: pointer;\" (click)=\"this.IsUndoAllowed ?UndoRedo('Undo'):null\"  [title]=\"IsUndoAllowed ? 'Undo' : 'Undo not allowed'\">\r\n          <svg width=\"20\" height=\"14\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M1 5.18422H13.375C16.4816 5.18422 19 7.83516 19 11.1053C19 14.3754 16.4816 17.0263 13.375 17.0263H5.50001M1 5.18422L4.375 1.63159M1 5.18422L4.375 8.73686\" stroke=\"#555555\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>\r\n            <span class=\"newBtnDesin\">Undo</span>          \r\n        </button>\r\n       </div>\r\n       <div class=\"mt-1 d-none\" *ngIf=\"service.paletteIsOpen\">\r\n        <button  style=\"border-right: 1px solid #E0E0E0; cursor: pointer;\" (click)=\"this.IsRedoAllowed ?UndoRedo('Redo'):null\"  [title]=\"IsRedoAllowed ? 'Redo' : 'Redo not allowed'\">\r\n          <svg width=\"20\" height=\"14\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M19 5.18422H6.625C3.51843 5.18422 1 7.83516 1 11.1053C1 14.3754 3.51843 17.0263 6.625 17.0263H14.5M19 5.18422L15.625 1.63159M19 5.18422L15.625 8.73686\" stroke=\"#555555\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>\r\n            <span class=\"newBtnDesin\">Redo</span>      \r\n        </button>\r\n       </div>\r\n       <div class=\"d-none\">\r\n        <button>\r\n          <svg width=\"20\" height=\"38\" viewBox=\"0 0 21 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <line y1=\"0.881592\" x2=\"16\" y2=\"0.881592\" stroke=\"#555555\" stroke-width=\"1.5\"/>\r\n            <path d=\"M8.53033 2.99602C8.23744 2.70312 7.76256 2.70312 7.46967 2.99602L2.6967 7.76899C2.40381 8.06188 2.40381 8.53675 2.6967 8.82965C2.98959 9.12254 3.46447 9.12254 3.75736 8.82965L8 4.58701L12.2426 8.82965C12.5355 9.12254 13.0104 9.12254 13.3033 8.82965C13.5962 8.53675 13.5962 8.06188 13.3033 7.76899L8.53033 2.99602ZM8.75 20.579L8.75 3.52635L7.25 3.52635L7.25 20.579L8.75 20.579Z\" fill=\"#555555\"/>\r\n            </svg>\r\n        </button>\r\n       </div>\r\n       <div class=\"d-none\">\r\n        <button >\r\n          <svg width=\"20\" height=\"38\" viewBox=\"0 0 21 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <line y1=\"-0.75\" x2=\"14\" y2=\"-0.75\" transform=\"matrix(1 0 0 -1 0 11.1659)\" stroke=\"#555555\" stroke-width=\"1.5\"/>\r\n            <path d=\"M6.46967 9.2935C6.76256 9.58639 7.23744 9.58639 7.53033 9.2935L12.3033 4.52053C12.5962 4.22763 12.5962 3.75276 12.3033 3.45987C12.0104 3.16697 11.5355 3.16697 11.2426 3.45987L7 7.70251L2.75736 3.45987C2.46447 3.16697 1.98959 3.16697 1.6967 3.45987C1.40381 3.75276 1.40381 4.22763 1.6967 4.52053L6.46967 9.2935ZM6.25 0.473694L6.25 8.76317L7.75 8.76317L7.75 0.473694L6.25 0.473694Z\" fill=\"#555555\"/>\r\n            <path d=\"M7.53033 14.6802C7.23744 14.3873 6.76256 14.3873 6.46967 14.6802L1.6967 19.4532C1.40381 19.7461 1.40381 20.2209 1.6967 20.5138C1.98959 20.8067 2.46447 20.8067 2.75736 20.5138L7 16.2712L11.2426 20.5138C11.5355 20.8067 12.0104 20.8067 12.3033 20.5138C12.5962 20.2209 12.5962 19.7461 12.3033 19.4532L7.53033 14.6802ZM7.75 23.5L7.75 15.2105L6.25 15.2105L6.25 23.5L7.75 23.5Z\" fill=\"#555555\"/>\r\n            </svg>\r\n        </button>\r\n       </div>\r\n       <div class=\"d-none\">\r\n        <button style=\"border-right: 1px solid #E0E0E0;\" >\r\n        <svg width=\"20\" height=\"38\" viewBox=\"0 0 21 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <line y1=\"-0.75\" x2=\"16\" y2=\"-0.75\" transform=\"matrix(1 0 0 -1 0 19.4737)\" stroke=\"#555555\" stroke-width=\"1.5\"/>\r\n          <path d=\"M8.53033 18.1093C8.23744 18.4022 7.76256 18.4022 7.46967 18.1093L2.6967 13.3363C2.40381 13.0434 2.40381 12.5685 2.6967 12.2756C2.98959 11.9827 3.46447 11.9827 3.75736 12.2756L8 16.5183L12.2426 12.2756C12.5355 11.9827 13.0104 11.9827 13.3033 12.2756C13.5962 12.5685 13.5962 13.0434 13.3033 13.3363L8.53033 18.1093ZM8.75 0.526306L8.75 17.5789L7.25 17.5789L7.25 0.526306L8.75 0.526306Z\" fill=\"#555555\"/>\r\n          </svg>\r\n       </button>\r\n       </div>\r\n      </div>\r\n\r\n      <div div=\"d-flex\">\r\n        <div class=\"row mr-1\" style=\"margin-right: 7px;\">\r\n        <button class=\"btn btn-light me-4\" (click)=\"generateXML()\" title=\"Generate JSON\"><svg class=\"svgDesign\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\">\r\n          <path d=\"M10.8497 0.358643L12.77 0.742704L9.14066 17.6414L7.22036 17.2573L10.8497 0.358643ZM17.2828 9.00002L13.8358 5.55307V2.83584L20 9.00002L13.8358 15.1546V12.4374L17.2828 9.00002ZM0 9.00002L6.15458 2.83584V5.55307L2.70763 9.00002L6.15458 12.4374V15.1546L0 9.00002Z\" fill=\"white\"/>\r\n          </svg><span> Generate JSON</span></button>\r\n         <button class=\"btn btn-primary-special btn-small compAssocation\" title=\"Webhook Settings\" type=\"button\" (click)=\"openWebhook()\" ><i class= \"linkPadding\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-settings-icon lucide-settings\"><path d=\"M9.671 4.136a2.34 2.34 0 0 1 4.659 0 2.34 2.34 0 0 0 3.319 1.915 2.34 2.34 0 0 1 2.33 4.033 2.34 2.34 0 0 0 0 3.831 2.34 2.34 0 0 1-2.33 4.033 2.34 2.34 0 0 0-3.319 1.915 2.34 2.34 0 0 1-4.659 0 2.34 2.34 0 0 0-3.32-1.915 2.34 2.34 0 0 1-2.33-4.033 2.34 2.34 0 0 0 0-3.831A2.34 2.34 0 0 1 6.35 6.051a2.34 2.34 0 0 0 3.319-1.915\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n         </i>Webhook settings</button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"enableDisable\">\r\n      <div style=\" padding: 8px 7px;\" (click)=\"service.togglePalette()\">\r\n      <div *ngIf=\"service.paletteIsOpen\">\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"24\" viewBox=\"0 0 26 24\" fill=\"none\">\r\n          <rect x=\"0.75\" y=\"0.75\" width=\"22.3095\" height=\"16.3571\" fill=\"#005996\" stroke=\"white\" stroke-width=\"1.5\"/>\r\n          <circle cx=\"17.5\" cy=\"15.5\" r=\"7.75\" fill=\"#005996\" stroke=\"white\" stroke-width=\"1.5\" />\r\n        </svg>\r\n        </div>\r\n        <div *ngIf=\"!service.paletteIsOpen\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"24\" viewBox=\"0 0 26 24\" fill=\"none\">\r\n          <rect x=\"0.75\" y=\"0.75\" width=\"22.3095\" height=\"16.3571\" stroke=\"black\" stroke-width=\"1.5\"/>\r\n          <circle cx=\"17.5\" cy=\"15.5\" r=\"7.75\" fill=\"white\" stroke=\"black\" stroke-width=\"1.5\"/>\r\n          </svg>\r\n          </div>\r\n      </div>\r\n    \r\n    </div> -->\r\n  </div>\r\n\r\n<!-- <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\r\n   -->\r\n</div>\r\n\r\n<ng-template #actions>\r\n  <div class=\"actions\">\r\n    <div class=\"mode\" ngbDropdown>\r\n      <button class=\"btn btn-light\" ngbDropdownToggle>\r\n        <i class=\"fas fa-edit\" *ngIf=\"!actionsDisabled\"></i>\r\n        <i class=\"fas fa-lock\" *ngIf=\"actionsDisabled\"></i>\r\n        {{metadata?.Workflow?.WorkflowMode}}\r\n      </button>\r\n      <ul ngbDropdownMenu>\r\n        <li ngbDropdownItem *ngFor=\"let mode of ['Edit', 'Published']\" (click)=\"changeMode(mode)\">\r\n          {{mode}}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <ng-container *ngIf=\"!actionsDisabled\">\r\n      <ng-container *ngIf=\"actionsVisible\">\r\n        <button class=\"btn btn-light\" (click)=\"service.togglePalette()\">\r\n          <i class=\"fas fa-toggle-on\" title=\"Hide palette\" *ngIf=\"service.paletteIsOpen\"></i>\r\n          <i class=\"fas fa-toggle-off\" title=\"Show palette\" *ngIf=\"!service.paletteIsOpen\"></i>\r\n        </button>\r\n        <button class=\"btn btn-light\" (click)=\"generateXML()\" title=\"Generate JSON\"><i class=\"fas fa-code\"></i></button>\r\n        <button class=\"btn btn-light\" (click)=\"toggleActions()\" title=\"Hide actions\"><i class=\"fas fa-chevron-right\"></i></button>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!actionsVisible\">\r\n        <button class=\"btn btn-light\" (click)=\"toggleActions()\" title=\"Show actions\"><i class=\"fas fa-chevron-left\"></i></button>\r\n      </ng-container>  \r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n","import * as i1 from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, signal, Directive, Output, NgModule } from '@angular/core';\nimport { RippleState, MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * Thumb types: range slider has two thumbs (START, END) whereas single point\n * slider only has one thumb (END).\n */\nconst _c0 = [\"knob\"];\nconst _c1 = [\"valueIndicatorContainer\"];\nfunction MatSliderVisualThumb_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2, 1)(2, \"div\", 5)(3, \"span\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.valueIndicatorText);\n  }\n}\nconst _c2 = [\"trackActive\"];\nconst _c3 = [\"*\"];\nfunction MatSlider_Conditional_6_Conditional_2_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const tickMark_r1 = ctx.$implicit;\n    const ɵ$index_14_r2 = ctx.$index;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(tickMark_r1 === 0 ? \"mdc-slider__tick-mark--active\" : \"mdc-slider__tick-mark--inactive\");\n    i0.ɵɵstyleProp(\"transform\", ctx_r2._calcTickMarkTransform(ɵ$index_14_r2));\n  }\n}\nfunction MatSlider_Conditional_6_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, MatSlider_Conditional_6_Conditional_2_For_1_Template, 1, 4, \"div\", 8, i0.ɵɵrepeaterTrackByIndex);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵrepeater(ctx_r2._tickMarks);\n  }\n}\nfunction MatSlider_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6, 1);\n    i0.ɵɵtemplate(2, MatSlider_Conditional_6_Conditional_2_Template, 2, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r2._cachedWidth ? 2 : -1);\n  }\n}\nfunction MatSlider_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-slider-visual-thumb\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"discrete\", ctx_r2.discrete)(\"thumbPosition\", 1)(\"valueIndicatorText\", ctx_r2.startValueIndicatorText);\n  }\n}\nvar _MatThumb;\n(function (_MatThumb) {\n  _MatThumb[_MatThumb[\"START\"] = 1] = \"START\";\n  _MatThumb[_MatThumb[\"END\"] = 2] = \"END\";\n})(_MatThumb || (_MatThumb = {}));\n/** Tick mark enum, for discrete sliders. */\nvar _MatTickMark;\n(function (_MatTickMark) {\n  _MatTickMark[_MatTickMark[\"ACTIVE\"] = 0] = \"ACTIVE\";\n  _MatTickMark[_MatTickMark[\"INACTIVE\"] = 1] = \"INACTIVE\";\n})(_MatTickMark || (_MatTickMark = {}));\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://v17.material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {}\n\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nclass MatSliderVisualThumb {\n  constructor(_cdr, _ngZone, _elementRef, _slider) {\n    this._cdr = _cdr;\n    this._ngZone = _ngZone;\n    this._slider = _slider;\n    /** Whether the slider thumb is currently being hovered. */\n    this._isHovered = false;\n    /** Whether the slider thumb is currently being pressed. */\n    this._isActive = false;\n    /** Whether the value indicator tooltip is visible. */\n    this._isValueIndicatorVisible = false;\n    this._platform = inject(Platform);\n    this._onPointerMove = event => {\n      if (this._sliderInput._isFocused) {\n        return;\n      }\n      const rect = this._hostElement.getBoundingClientRect();\n      const isHovered = this._slider._isCursorOnSliderThumb(event, rect);\n      this._isHovered = isHovered;\n      if (isHovered) {\n        this._showHoverRipple();\n      } else {\n        this._hideRipple(this._hoverRippleRef);\n      }\n    };\n    this._onMouseLeave = () => {\n      this._isHovered = false;\n      this._hideRipple(this._hoverRippleRef);\n    };\n    this._onFocus = () => {\n      // We don't want to show the hover ripple on top of the focus ripple.\n      // Happen when the users cursor is over a thumb and then the user tabs to it.\n      this._hideRipple(this._hoverRippleRef);\n      this._showFocusRipple();\n      this._hostElement.classList.add('mdc-slider__thumb--focused');\n    };\n    this._onBlur = () => {\n      // Happens when the user tabs away while still dragging a thumb.\n      if (!this._isActive) {\n        this._hideRipple(this._focusRippleRef);\n      }\n      // Happens when the user tabs away from a thumb but their cursor is still over it.\n      if (this._isHovered) {\n        this._showHoverRipple();\n      }\n      this._hostElement.classList.remove('mdc-slider__thumb--focused');\n    };\n    this._onDragStart = event => {\n      if (event.button !== 0) {\n        return;\n      }\n      this._isActive = true;\n      this._showActiveRipple();\n    };\n    this._onDragEnd = () => {\n      this._isActive = false;\n      this._hideRipple(this._activeRippleRef);\n      // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n      if (!this._sliderInput._isFocused) {\n        this._hideRipple(this._focusRippleRef);\n      }\n      // On Safari we need to immediately re-show the hover ripple because\n      // sliders do not retain focus from pointer events on that platform.\n      if (this._platform.SAFARI) {\n        this._showHoverRipple();\n      }\n    };\n    this._hostElement = _elementRef.nativeElement;\n  }\n  ngAfterViewInit() {\n    const sliderInput = this._slider._getInput(this.thumbPosition);\n    // No-op if the slider isn't configured properly. `MatSlider` will\n    // throw an error instructing the user how to set up the slider.\n    if (!sliderInput) {\n      return;\n    }\n    this._ripple.radius = 24;\n    this._sliderInput = sliderInput;\n    this._sliderInputEl = this._sliderInput._hostElement;\n    // These listeners don't update any data bindings so we bind them outside\n    // of the NgZone to prevent Angular from needlessly running change detection.\n    this._ngZone.runOutsideAngular(() => {\n      const input = this._sliderInputEl;\n      input.addEventListener('pointermove', this._onPointerMove);\n      input.addEventListener('pointerdown', this._onDragStart);\n      input.addEventListener('pointerup', this._onDragEnd);\n      input.addEventListener('pointerleave', this._onMouseLeave);\n      input.addEventListener('focus', this._onFocus);\n      input.addEventListener('blur', this._onBlur);\n    });\n  }\n  ngOnDestroy() {\n    const input = this._sliderInputEl;\n    if (input) {\n      input.removeEventListener('pointermove', this._onPointerMove);\n      input.removeEventListener('pointerdown', this._onDragStart);\n      input.removeEventListener('pointerup', this._onDragEnd);\n      input.removeEventListener('pointerleave', this._onMouseLeave);\n      input.removeEventListener('focus', this._onFocus);\n      input.removeEventListener('blur', this._onBlur);\n    }\n  }\n  /** Handles displaying the hover ripple. */\n  _showHoverRipple() {\n    if (!this._isShowingRipple(this._hoverRippleRef)) {\n      this._hoverRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      });\n      this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n    }\n  }\n  /** Handles displaying the focus ripple. */\n  _showFocusRipple() {\n    // Show the focus ripple event if noop animations are enabled.\n    if (!this._isShowingRipple(this._focusRippleRef)) {\n      this._focusRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      }, true);\n      this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n    }\n  }\n  /** Handles displaying the active ripple. */\n  _showActiveRipple() {\n    if (!this._isShowingRipple(this._activeRippleRef)) {\n      this._activeRippleRef = this._showRipple({\n        enterDuration: 225,\n        exitDuration: 400\n      });\n      this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n    }\n  }\n  /** Whether the given rippleRef is currently fading in or visible. */\n  _isShowingRipple(rippleRef) {\n    return rippleRef?.state === RippleState.FADING_IN || rippleRef?.state === RippleState.VISIBLE;\n  }\n  /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n  _showRipple(animation, ignoreGlobalRippleConfig) {\n    if (this._slider.disabled) {\n      return;\n    }\n    this._showValueIndicator();\n    if (this._slider._isRange) {\n      const sibling = this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n      sibling._showValueIndicator();\n    }\n    if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n      return;\n    }\n    return this._ripple.launch({\n      animation: this._slider._noopAnimations ? {\n        enterDuration: 0,\n        exitDuration: 0\n      } : animation,\n      centered: true,\n      persistent: true\n    });\n  }\n  /**\n   * Fades out the given ripple.\n   * Also hides the value indicator if no ripple is showing.\n   */\n  _hideRipple(rippleRef) {\n    rippleRef?.fadeOut();\n    if (this._isShowingAnyRipple()) {\n      return;\n    }\n    if (!this._slider._isRange) {\n      this._hideValueIndicator();\n    }\n    const sibling = this._getSibling();\n    if (!sibling._isShowingAnyRipple()) {\n      this._hideValueIndicator();\n      sibling._hideValueIndicator();\n    }\n  }\n  /** Shows the value indicator ui. */\n  _showValueIndicator() {\n    this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n  }\n  /** Hides the value indicator ui. */\n  _hideValueIndicator() {\n    this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n  }\n  _getSibling() {\n    return this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n  }\n  /** Gets the value indicator container's native HTML element. */\n  _getValueIndicatorContainer() {\n    return this._valueIndicatorContainer?.nativeElement;\n  }\n  /** Gets the native HTML element of the slider thumb knob. */\n  _getKnob() {\n    return this._knob.nativeElement;\n  }\n  _isShowingAnyRipple() {\n    return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);\n  }\n  static {\n    this.ɵfac = function MatSliderVisualThumb_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSliderVisualThumb)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSliderVisualThumb,\n      selectors: [[\"mat-slider-visual-thumb\"]],\n      viewQuery: function MatSliderVisualThumb_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatRipple, 5);\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._ripple = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._knob = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueIndicatorContainer = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mdc-slider__thumb\", \"mat-mdc-slider-visual-thumb\"],\n      inputs: {\n        discrete: \"discrete\",\n        thumbPosition: \"thumbPosition\",\n        valueIndicatorText: \"valueIndicatorText\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_SLIDER_VISUAL_THUMB,\n        useExisting: MatSliderVisualThumb\n      }]), i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 2,\n      consts: [[\"knob\", \"\"], [\"valueIndicatorContainer\", \"\"], [1, \"mdc-slider__value-indicator-container\"], [1, \"mdc-slider__thumb-knob\"], [\"matRipple\", \"\", 1, \"mat-mdc-focus-indicator\", 3, \"matRippleDisabled\"], [1, \"mdc-slider__value-indicator\"], [1, \"mdc-slider__value-indicator-text\"]],\n      template: function MatSliderVisualThumb_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, MatSliderVisualThumb_Conditional_0_Template, 5, 1, \"div\", 2);\n          i0.ɵɵelement(1, \"div\", 3, 0)(3, \"div\", 4);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.discrete ? 0 : -1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"matRippleDisabled\", true);\n        }\n      },\n      dependencies: [MatRipple],\n      styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderVisualThumb, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider-visual-thumb',\n      host: {\n        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_SLIDER_VISUAL_THUMB,\n        useExisting: MatSliderVisualThumb\n      }],\n      standalone: true,\n      imports: [MatRipple],\n      template: \"@if (discrete) {\\n  <div class=\\\"mdc-slider__value-indicator-container\\\" #valueIndicatorContainer>\\n    <div class=\\\"mdc-slider__value-indicator\\\">\\n      <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n    </div>\\n  </div>\\n}\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\",\n      styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_SLIDER]\n    }]\n  }], {\n    discrete: [{\n      type: Input\n    }],\n    thumbPosition: [{\n      type: Input\n    }],\n    valueIndicatorText: [{\n      type: Input\n    }],\n    _ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    _knob: [{\n      type: ViewChild,\n      args: ['knob']\n    }],\n    _valueIndicatorContainer: [{\n      type: ViewChild,\n      args: ['valueIndicatorContainer']\n    }]\n  });\n})();\n\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider {\n  /** Whether the slider is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(v) {\n    this._disabled = v;\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    if (endInput) {\n      endInput.disabled = this._disabled;\n    }\n    if (startInput) {\n      startInput.disabled = this._disabled;\n    }\n  }\n  /** Whether the slider displays a numeric value label upon pressing the thumb. */\n  get discrete() {\n    return this._discrete;\n  }\n  set discrete(v) {\n    this._discrete = v;\n    this._updateValueIndicatorUIs();\n  }\n  /** The minimum value that the slider can have. */\n  get min() {\n    return this._min;\n  }\n  set min(v) {\n    const min = isNaN(v) ? this._min : v;\n    if (this._min !== min) {\n      this._updateMin(min);\n    }\n  }\n  _updateMin(min) {\n    const prevMin = this._min;\n    this._min = min;\n    this._isRange ? this._updateMinRange({\n      old: prevMin,\n      new: min\n    }) : this._updateMinNonRange(min);\n    this._onMinMaxOrStepChange();\n  }\n  _updateMinRange(min) {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    startInput.min = min.new;\n    endInput.min = Math.max(min.new, startInput.value);\n    startInput.max = Math.min(endInput.max, endInput.value);\n    startInput._updateWidthInactive();\n    endInput._updateWidthInactive();\n    min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateMinNonRange(min) {\n    const input = this._getInput(_MatThumb.END);\n    if (input) {\n      const oldValue = input.value;\n      input.min = min;\n      input._updateThumbUIByValue();\n      this._updateTrackUI(input);\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The maximum value that the slider can have. */\n  get max() {\n    return this._max;\n  }\n  set max(v) {\n    const max = isNaN(v) ? this._max : v;\n    if (this._max !== max) {\n      this._updateMax(max);\n    }\n  }\n  _updateMax(max) {\n    const prevMax = this._max;\n    this._max = max;\n    this._isRange ? this._updateMaxRange({\n      old: prevMax,\n      new: max\n    }) : this._updateMaxNonRange(max);\n    this._onMinMaxOrStepChange();\n  }\n  _updateMaxRange(max) {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    endInput.max = max.new;\n    startInput.max = Math.min(max.new, endInput.value);\n    endInput.min = startInput.value;\n    endInput._updateWidthInactive();\n    startInput._updateWidthInactive();\n    max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateMaxNonRange(max) {\n    const input = this._getInput(_MatThumb.END);\n    if (input) {\n      const oldValue = input.value;\n      input.max = max;\n      input._updateThumbUIByValue();\n      this._updateTrackUI(input);\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The values at which the thumb will snap. */\n  get step() {\n    return this._step;\n  }\n  set step(v) {\n    const step = isNaN(v) ? this._step : v;\n    if (this._step !== step) {\n      this._updateStep(step);\n    }\n  }\n  _updateStep(step) {\n    this._step = step;\n    this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n    this._onMinMaxOrStepChange();\n  }\n  _updateStepRange() {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    const prevStartValue = startInput.value;\n    endInput.min = this._min;\n    startInput.max = this._max;\n    endInput.step = this._step;\n    startInput.step = this._step;\n    if (this._platform.SAFARI) {\n      endInput.value = endInput.value;\n      startInput.value = startInput.value;\n    }\n    endInput.min = Math.max(this._min, startInput.value);\n    startInput.max = Math.min(this._max, endInput.value);\n    startInput._updateWidthInactive();\n    endInput._updateWidthInactive();\n    endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateStepNonRange() {\n    const input = this._getInput(_MatThumb.END);\n    if (input) {\n      const oldValue = input.value;\n      input.step = this._step;\n      if (this._platform.SAFARI) {\n        input.value = input.value;\n      }\n      input._updateThumbUIByValue();\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  constructor(_ngZone, _cdr, _elementRef, _dir, _globalRippleOptions, animationMode) {\n    this._ngZone = _ngZone;\n    this._cdr = _cdr;\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    this._globalRippleOptions = _globalRippleOptions;\n    this._disabled = false;\n    this._discrete = false;\n    /** Whether the slider displays tick marks along the slider track. */\n    this.showTickMarks = false;\n    this._min = 0;\n    /** Whether ripples are disabled in the slider. */\n    this.disableRipple = false;\n    this._max = 100;\n    this._step = 1;\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     */\n    this.displayWith = value => `${value}`;\n    this._rippleRadius = 24;\n    // The value indicator tooltip text for the visual slider thumb(s).\n    /** @docs-private */\n    this.startValueIndicatorText = '';\n    /** @docs-private */\n    this.endValueIndicatorText = '';\n    this._isRange = false;\n    /** Whether the slider is rtl. */\n    this._isRtl = false;\n    this._hasViewInitialized = false;\n    /**\n     * The width of the tick mark track.\n     * The tick mark track width is different from full track width\n     */\n    this._tickMarkTrackWidth = 0;\n    this._hasAnimation = false;\n    this._resizeTimer = null;\n    this._platform = inject(Platform);\n    /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n    this._knobRadius = 8;\n    /** Whether or not the slider thumbs overlap. */\n    this._thumbsOverlap = false;\n    this._noopAnimations = animationMode === 'NoopAnimations';\n    this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n    this._isRtl = this._dir.value === 'rtl';\n  }\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._updateDimensions();\n    }\n    const eInput = this._getInput(_MatThumb.END);\n    const sInput = this._getInput(_MatThumb.START);\n    this._isRange = !!eInput && !!sInput;\n    this._cdr.detectChanges();\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      _validateInputs(this._isRange, this._getInput(_MatThumb.END), this._getInput(_MatThumb.START));\n    }\n    const thumb = this._getThumb(_MatThumb.END);\n    this._rippleRadius = thumb._ripple.radius;\n    this._inputPadding = this._rippleRadius - this._knobRadius;\n    this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput);\n    this._updateTrackUI(eInput);\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._observeHostResize();\n    this._cdr.detectChanges();\n  }\n  _initUINonRange(eInput) {\n    eInput.initProps();\n    eInput.initUI();\n    this._updateValueIndicatorUI(eInput);\n    this._hasViewInitialized = true;\n    eInput._updateThumbUIByValue();\n  }\n  _initUIRange(eInput, sInput) {\n    eInput.initProps();\n    eInput.initUI();\n    sInput.initProps();\n    sInput.initUI();\n    eInput._updateMinMax();\n    sInput._updateMinMax();\n    eInput._updateStaticStyles();\n    sInput._updateStaticStyles();\n    this._updateValueIndicatorUIs();\n    this._hasViewInitialized = true;\n    eInput._updateThumbUIByValue();\n    sInput._updateThumbUIByValue();\n  }\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._resizeObserver?.disconnect();\n    this._resizeObserver = null;\n  }\n  /** Handles updating the slider ui after a dir change. */\n  _onDirChange() {\n    this._isRtl = this._dir.value === 'rtl';\n    this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n    this._updateTickMarkUI();\n  }\n  _onDirChangeRange() {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    endInput._setIsLeftThumb();\n    startInput._setIsLeftThumb();\n    endInput.translateX = endInput._calcTranslateXByValue();\n    startInput.translateX = startInput._calcTranslateXByValue();\n    endInput._updateStaticStyles();\n    startInput._updateStaticStyles();\n    endInput._updateWidthInactive();\n    startInput._updateWidthInactive();\n    endInput._updateThumbUIByValue();\n    startInput._updateThumbUIByValue();\n  }\n  _onDirChangeNonRange() {\n    const input = this._getInput(_MatThumb.END);\n    input._updateThumbUIByValue();\n  }\n  /** Starts observing and updating the slider if the host changes its size. */\n  _observeHostResize() {\n    if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n      return;\n    }\n    this._ngZone.runOutsideAngular(() => {\n      this._resizeObserver = new ResizeObserver(() => {\n        if (this._isActive()) {\n          return;\n        }\n        if (this._resizeTimer) {\n          clearTimeout(this._resizeTimer);\n        }\n        this._onResize();\n      });\n      this._resizeObserver.observe(this._elementRef.nativeElement);\n    });\n  }\n  /** Whether any of the thumbs are currently active. */\n  _isActive() {\n    return this._getThumb(_MatThumb.START)._isActive || this._getThumb(_MatThumb.END)._isActive;\n  }\n  _getValue(thumbPosition = _MatThumb.END) {\n    const input = this._getInput(thumbPosition);\n    if (!input) {\n      return this.min;\n    }\n    return input.value;\n  }\n  _skipUpdate() {\n    return !!(this._getInput(_MatThumb.START)?._skipUIUpdate || this._getInput(_MatThumb.END)?._skipUIUpdate);\n  }\n  /** Stores the slider dimensions. */\n  _updateDimensions() {\n    this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n    this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n  }\n  /** Sets the styles for the active portion of the track. */\n  _setTrackActiveStyles(styles) {\n    const trackStyle = this._trackActive.nativeElement.style;\n    trackStyle.left = styles.left;\n    trackStyle.right = styles.right;\n    trackStyle.transformOrigin = styles.transformOrigin;\n    trackStyle.transform = styles.transform;\n  }\n  /** Returns the translateX positioning for a tick mark based on it's index. */\n  _calcTickMarkTransform(index) {\n    // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n    const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n    return `translateX(${translateX}px`;\n  }\n  // Handlers for updating the slider ui.\n  _onTranslateXChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateThumbUI(source);\n    this._updateTrackUI(source);\n    this._updateOverlappingThumbUI(source);\n  }\n  _onTranslateXChangeBySideEffect(input1, input2) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    input1._updateThumbUIByValue();\n    input2._updateThumbUIByValue();\n  }\n  _onValueChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateValueIndicatorUI(source);\n    this._updateTickMarkUI();\n    this._cdr.detectChanges();\n  }\n  _onMinMaxOrStepChange() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._cdr.markForCheck();\n  }\n  _onResize() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateDimensions();\n    if (this._isRange) {\n      const eInput = this._getInput(_MatThumb.END);\n      const sInput = this._getInput(_MatThumb.START);\n      eInput._updateThumbUIByValue();\n      sInput._updateThumbUIByValue();\n      eInput._updateStaticStyles();\n      sInput._updateStaticStyles();\n      eInput._updateMinMax();\n      sInput._updateMinMax();\n      eInput._updateWidthInactive();\n      sInput._updateWidthInactive();\n    } else {\n      const eInput = this._getInput(_MatThumb.END);\n      if (eInput) {\n        eInput._updateThumbUIByValue();\n      }\n    }\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._cdr.detectChanges();\n  }\n  /** Returns true if the slider knobs are overlapping one another. */\n  _areThumbsOverlapping() {\n    const startInput = this._getInput(_MatThumb.START);\n    const endInput = this._getInput(_MatThumb.END);\n    if (!startInput || !endInput) {\n      return false;\n    }\n    return endInput.translateX - startInput.translateX < 20;\n  }\n  /**\n   * Updates the class names of overlapping slider thumbs so\n   * that the current active thumb is styled to be on \"top\".\n   */\n  _updateOverlappingThumbClassNames(source) {\n    const sibling = source.getSibling();\n    const sourceThumb = this._getThumb(source.thumbPosition);\n    const siblingThumb = this._getThumb(sibling.thumbPosition);\n    siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n    sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n  }\n  /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n  _updateOverlappingThumbUI(source) {\n    if (!this._isRange || this._skipUpdate()) {\n      return;\n    }\n    if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n      this._thumbsOverlap = !this._thumbsOverlap;\n      this._updateOverlappingThumbClassNames(source);\n    }\n  }\n  // _MatThumb styles update conditions\n  //\n  // 1. TranslateX, resize, or dir change\n  //    - Reason: The thumb styles need to be updated according to the new translateX.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n  /** Updates the translateX of the given thumb. */\n  _updateThumbUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    const thumb = this._getThumb(source.thumbPosition === _MatThumb.END ? _MatThumb.END : _MatThumb.START);\n    thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n  }\n  // Value indicator text update conditions\n  //\n  // 1. Value\n  //    - Reason: The value displayed needs to be updated.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n  /** Updates the value indicator tooltip ui for the given thumb. */\n  _updateValueIndicatorUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    const valuetext = this.displayWith(source.value);\n    this._hasViewInitialized ? source._valuetext.set(valuetext) : source._hostElement.setAttribute('aria-valuetext', valuetext);\n    if (this.discrete) {\n      source.thumbPosition === _MatThumb.START ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;\n      const visualThumb = this._getThumb(source.thumbPosition);\n      valuetext.length < 3 ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value') : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n    }\n  }\n  /** Updates all value indicator UIs in the slider. */\n  _updateValueIndicatorUIs() {\n    const eInput = this._getInput(_MatThumb.END);\n    const sInput = this._getInput(_MatThumb.START);\n    if (eInput) {\n      this._updateValueIndicatorUI(eInput);\n    }\n    if (sInput) {\n      this._updateValueIndicatorUI(sInput);\n    }\n  }\n  // Update Tick Mark Track Width\n  //\n  // 1. Min, max, or step\n  //    - Reason: The maximum reachable value may have changed.\n  //    - Side note: The maximum reachable value is different from the maximum value set by the\n  //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n  //      reachable value of 95.\n  // 2. Resize\n  //    - Reason: The position for the maximum reachable value needs to be recalculated.\n  /** Updates the width of the tick mark track. */\n  _updateTickMarkTrackUI() {\n    if (!this.showTickMarks || this._skipUpdate()) {\n      return;\n    }\n    const step = this._step && this._step > 0 ? this._step : 1;\n    const maxValue = Math.floor(this.max / step) * step;\n    const percentage = (maxValue - this.min) / (this.max - this.min);\n    this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n  }\n  // Track active update conditions\n  //\n  // 1. TranslateX\n  //    - Reason: The track active should line up with the new thumb position.\n  // 2. Min or max\n  //    - Reason #1: The 'active' percentage needs to be recalculated.\n  //    - Reason #2: The value may have silently changed.\n  // 3. Step\n  //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n  // 4. Dir change\n  //    - Reason: The track active will need to be updated according to the new thumb position(s).\n  // 5. Resize\n  //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n  /** Updates the scale on the active portion of the track. */\n  _updateTrackUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source);\n  }\n  _updateTrackUIRange(source) {\n    const sibling = source.getSibling();\n    if (!sibling || !this._cachedWidth) {\n      return;\n    }\n    const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n    if (source._isLeftThumb && this._cachedWidth) {\n      this._setTrackActiveStyles({\n        left: 'auto',\n        right: `${this._cachedWidth - sibling.translateX}px`,\n        transformOrigin: 'right',\n        transform: `scaleX(${activePercentage})`\n      });\n    } else {\n      this._setTrackActiveStyles({\n        left: `${sibling.translateX}px`,\n        right: 'auto',\n        transformOrigin: 'left',\n        transform: `scaleX(${activePercentage})`\n      });\n    }\n  }\n  _updateTrackUINonRange(source) {\n    this._isRtl ? this._setTrackActiveStyles({\n      left: 'auto',\n      right: '0px',\n      transformOrigin: 'right',\n      transform: `scaleX(${1 - source.fillPercentage})`\n    }) : this._setTrackActiveStyles({\n      left: '0px',\n      right: 'auto',\n      transformOrigin: 'left',\n      transform: `scaleX(${source.fillPercentage})`\n    });\n  }\n  // Tick mark update conditions\n  //\n  // 1. Value\n  //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n  // 2. Min, max, or step\n  //    - Reason #1: the number of tick marks may have changed.\n  //    - Reason #2: The value may have silently changed.\n  /** Updates the dots along the slider track. */\n  _updateTickMarkUI() {\n    if (!this.showTickMarks || this.step === undefined || this.min === undefined || this.max === undefined) {\n      return;\n    }\n    const step = this.step > 0 ? this.step : 1;\n    this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n    if (this._isRtl) {\n      this._tickMarks.reverse();\n    }\n  }\n  _updateTickMarkUINonRange(step) {\n    const value = this._getValue();\n    let numActive = Math.max(Math.round((value - this.min) / step), 0);\n    let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n    this._isRtl ? numActive++ : numInactive++;\n    this._tickMarks = Array(numActive).fill(_MatTickMark.ACTIVE).concat(Array(numInactive).fill(_MatTickMark.INACTIVE));\n  }\n  _updateTickMarkUIRange(step) {\n    const endValue = this._getValue();\n    const startValue = this._getValue(_MatThumb.START);\n    const numInactiveBeforeStartThumb = Math.max(Math.round((startValue - this.min) / step), 0);\n    const numActive = Math.max(Math.round((endValue - startValue) / step) + 1, 0);\n    const numInactiveAfterEndThumb = Math.max(Math.round((this.max - endValue) / step), 0);\n    this._tickMarks = Array(numInactiveBeforeStartThumb).fill(_MatTickMark.INACTIVE).concat(Array(numActive).fill(_MatTickMark.ACTIVE), Array(numInactiveAfterEndThumb).fill(_MatTickMark.INACTIVE));\n  }\n  /** Gets the slider thumb input of the given thumb position. */\n  _getInput(thumbPosition) {\n    if (thumbPosition === _MatThumb.END && this._input) {\n      return this._input;\n    }\n    if (this._inputs?.length) {\n      return thumbPosition === _MatThumb.START ? this._inputs.first : this._inputs.last;\n    }\n    return;\n  }\n  /** Gets the slider thumb HTML input element of the given thumb position. */\n  _getThumb(thumbPosition) {\n    return thumbPosition === _MatThumb.END ? this._thumbs?.last : this._thumbs?.first;\n  }\n  _setTransition(withAnimation) {\n    this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations;\n    this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n  }\n  /** Whether the given pointer event occurred within the bounds of the slider pointer's DOM Rect. */\n  _isCursorOnSliderThumb(event, rect) {\n    const radius = rect.width / 2;\n    const centerX = rect.x + radius;\n    const centerY = rect.y + radius;\n    const dx = event.clientX - centerX;\n    const dy = event.clientY - centerY;\n    return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n  }\n  static {\n    this.ɵfac = function MatSlider_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSlider)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSlider,\n      selectors: [[\"mat-slider\"]],\n      contentQueries: function MatSlider_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_THUMB, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_RANGE_THUMB, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._input = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputs = _t);\n        }\n      },\n      viewQuery: function MatSlider_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c2, 5);\n          i0.ɵɵviewQuery(MAT_SLIDER_VISUAL_THUMB, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._trackActive = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._thumbs = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-slider\", \"mdc-slider\"],\n      hostVars: 12,\n      hostBindings: function MatSlider_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n          i0.ɵɵclassProp(\"mdc-slider--range\", ctx._isRange)(\"mdc-slider--disabled\", ctx.disabled)(\"mdc-slider--discrete\", ctx.discrete)(\"mdc-slider--tick-marks\", ctx.showTickMarks)(\"_mat-animation-noopable\", ctx._noopAnimations);\n        }\n      },\n      inputs: {\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        discrete: [2, \"discrete\", \"discrete\", booleanAttribute],\n        showTickMarks: [2, \"showTickMarks\", \"showTickMarks\", booleanAttribute],\n        min: [2, \"min\", \"min\", numberAttribute],\n        color: \"color\",\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        max: [2, \"max\", \"max\", numberAttribute],\n        step: [2, \"step\", \"step\", numberAttribute],\n        displayWith: \"displayWith\"\n      },\n      exportAs: [\"matSlider\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_SLIDER,\n        useExisting: MatSlider\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c3,\n      decls: 9,\n      vars: 5,\n      consts: [[\"trackActive\", \"\"], [\"tickMarkContainer\", \"\"], [1, \"mdc-slider__track\"], [1, \"mdc-slider__track--inactive\"], [1, \"mdc-slider__track--active\"], [1, \"mdc-slider__track--active_fill\"], [1, \"mdc-slider__tick-marks\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\"], [3, \"class\", \"transform\"]],\n      template: function MatSlider_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n          i0.ɵɵelementStart(1, \"div\", 2);\n          i0.ɵɵelement(2, \"div\", 3);\n          i0.ɵɵelementStart(3, \"div\", 4);\n          i0.ɵɵelement(4, \"div\", 5, 0);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, MatSlider_Conditional_6_Template, 3, 1, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, MatSlider_Conditional_7_Template, 1, 3, \"mat-slider-visual-thumb\", 7);\n          i0.ɵɵelement(8, \"mat-slider-visual-thumb\", 7);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵconditional(ctx.showTickMarks ? 6 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._isRange ? 7 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"discrete\", ctx.discrete)(\"thumbPosition\", 2)(\"valueIndicatorText\", ctx.endValueIndicatorText);\n        }\n      },\n      dependencies: [MatSliderVisualThumb],\n      styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mdc-slider-inactive-track-height)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mdc-slider-active-track-shape, var(--mat-app-corner-full));height:var(--mdc-slider-active-track-height);top:calc((var(--mdc-slider-inactive-track-height) - var(--mdc-slider-active-track-height))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mdc-slider-active-track-color, var(--mat-app-primary));border-top-width:var(--mdc-slider-active-track-height)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mat-app-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mdc-slider-inactive-track-color, var(--mat-app-surface-variant));height:var(--mdc-slider-inactive-track-height);border-radius:var(--mdc-slider-inactive-track-shape, var(--mat-app-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mat-app-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-slider__track--inactive::before{border-color:CanvasText}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:translateX(-50%);transform:var(--mat-slider-value-indicator-container-transform)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;border-radius:4px;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom;opacity:1;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mdc-slider-label-container-color, var(--mat-app-primary));color:var(--mdc-slider-label-label-text-color, var(--mat-app-on-primary));width:var(--mat-slider-value-indicator-width);height:var(--mat-slider-value-indicator-height);padding:var(--mat-slider-value-indicator-padding);opacity:var(--mat-slider-value-indicator-opacity);border-radius:var(--mat-slider-value-indicator-border-radius)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display);border-top-color:var(--mdc-slider-label-container-color, var(--mat-app-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-slider__value-indicator::after{border-color:CanvasText}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width);transform:var(--mat-slider-value-indicator-text-transform);font-family:var(--mdc-slider-label-label-text-font, var(--mat-app-label-medium-font));font-size:var(--mdc-slider-label-label-text-size, var(--mat-app-label-medium-size));font-weight:var(--mdc-slider-label-label-text-weight, var(--mat-app-label-medium-weight));line-height:var(--mdc-slider-label-label-text-line-height, var(--mat-app-label-medium-line-height));letter-spacing:var(--mdc-slider-label-label-text-tracking, var(--mat-app-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mdc-slider-handle-width);height:var(--mdc-slider-handle-height);border-width:calc(var(--mdc-slider-handle-height)/2) calc(var(--mdc-slider-handle-width)/2);box-shadow:var(--mdc-slider-handle-elevation, var(--mat-app-level1));background-color:var(--mdc-slider-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-handle-color, var(--mat-app-primary));border-radius:var(--mdc-slider-handle-shape, var(--mat-app-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-hover-handle-color, var(--mat-app-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-focus-handle-color, var(--mat-app-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mat-app-on-surface));border-color:var(--mdc-slider-disabled-handle-color, var(--mat-app-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mdc-slider-with-overlap-handle-outline-color, var(--mat-app-on-primary));border-width:var(--mdc-slider-with-overlap-handle-outline-width)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mdc-slider-with-tick-marks-container-size);height:var(--mdc-slider-with-tick-marks-container-size);border-radius:var(--mdc-slider-with-tick-marks-container-shape, var(--mat-app-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity);background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mat-app-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity);background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mat-app-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mdc-slider-with-tick-marks-active-container-opacity);background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mat-app-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-app-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      host: {\n        'class': 'mat-mdc-slider mdc-slider',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mdc-slider--range]': '_isRange',\n        '[class.mdc-slider--disabled]': 'disabled',\n        '[class.mdc-slider--discrete]': 'discrete',\n        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n        '[class._mat-animation-noopable]': '_noopAnimations'\n      },\n      exportAs: 'matSlider',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_SLIDER,\n        useExisting: MatSlider\n      }],\n      standalone: true,\n      imports: [MatSliderVisualThumb],\n      template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  @if (showTickMarks) {\\n    <div class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n      @if (_cachedWidth) {\\n        @for (tickMark of _tickMarks; track i; let i = $index) {\\n          <div\\n            [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n            [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n        }\\n      }\\n    </div>\\n  }\\n</div>\\n\\n<!-- Thumbs -->\\n@if (_isRange) {\\n  <mat-slider-visual-thumb\\n    [discrete]=\\\"discrete\\\"\\n    [thumbPosition]=\\\"1\\\"\\n    [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n  </mat-slider-visual-thumb>\\n}\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\",\n      styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mdc-slider-inactive-track-height)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mdc-slider-active-track-shape, var(--mat-app-corner-full));height:var(--mdc-slider-active-track-height);top:calc((var(--mdc-slider-inactive-track-height) - var(--mdc-slider-active-track-height))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mdc-slider-active-track-color, var(--mat-app-primary));border-top-width:var(--mdc-slider-active-track-height)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mat-app-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mdc-slider-inactive-track-color, var(--mat-app-surface-variant));height:var(--mdc-slider-inactive-track-height);border-radius:var(--mdc-slider-inactive-track-shape, var(--mat-app-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mat-app-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-slider__track--inactive::before{border-color:CanvasText}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:translateX(-50%);transform:var(--mat-slider-value-indicator-container-transform)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;border-radius:4px;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom;opacity:1;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mdc-slider-label-container-color, var(--mat-app-primary));color:var(--mdc-slider-label-label-text-color, var(--mat-app-on-primary));width:var(--mat-slider-value-indicator-width);height:var(--mat-slider-value-indicator-height);padding:var(--mat-slider-value-indicator-padding);opacity:var(--mat-slider-value-indicator-opacity);border-radius:var(--mat-slider-value-indicator-border-radius)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display);border-top-color:var(--mdc-slider-label-container-color, var(--mat-app-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-slider__value-indicator::after{border-color:CanvasText}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width);transform:var(--mat-slider-value-indicator-text-transform);font-family:var(--mdc-slider-label-label-text-font, var(--mat-app-label-medium-font));font-size:var(--mdc-slider-label-label-text-size, var(--mat-app-label-medium-size));font-weight:var(--mdc-slider-label-label-text-weight, var(--mat-app-label-medium-weight));line-height:var(--mdc-slider-label-label-text-line-height, var(--mat-app-label-medium-line-height));letter-spacing:var(--mdc-slider-label-label-text-tracking, var(--mat-app-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mdc-slider-handle-width);height:var(--mdc-slider-handle-height);border-width:calc(var(--mdc-slider-handle-height)/2) calc(var(--mdc-slider-handle-width)/2);box-shadow:var(--mdc-slider-handle-elevation, var(--mat-app-level1));background-color:var(--mdc-slider-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-handle-color, var(--mat-app-primary));border-radius:var(--mdc-slider-handle-shape, var(--mat-app-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-hover-handle-color, var(--mat-app-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-focus-handle-color, var(--mat-app-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mat-app-on-surface));border-color:var(--mdc-slider-disabled-handle-color, var(--mat-app-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mdc-slider-with-overlap-handle-outline-color, var(--mat-app-on-primary));border-width:var(--mdc-slider-with-overlap-handle-outline-width)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mdc-slider-with-tick-marks-container-size);height:var(--mdc-slider-with-tick-marks-container-size);border-radius:var(--mdc-slider-with-tick-marks-container-shape, var(--mat-app-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity);background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mat-app-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity);background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mat-app-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mdc-slider-with-tick-marks-active-container-opacity);background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mat-app-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-app-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i1.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _trackActive: [{\n      type: ViewChild,\n      args: ['trackActive']\n    }],\n    _thumbs: [{\n      type: ViewChildren,\n      args: [MAT_SLIDER_VISUAL_THUMB]\n    }],\n    _input: [{\n      type: ContentChild,\n      args: [MAT_SLIDER_THUMB]\n    }],\n    _inputs: [{\n      type: ContentChildren,\n      args: [MAT_SLIDER_RANGE_THUMB, {\n        descendants: false\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    discrete: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showTickMarks: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    min: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    max: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    step: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    displayWith: [{\n      type: Input\n    }]\n  });\n})();\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n  const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n  const endValid = endInputElement?._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n  if (!startValid || !endValid) {\n    _throwInvalidInputConfigurationError();\n  }\n}\nfunction _throwInvalidInputConfigurationError() {\n  throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderThumb),\n  multi: true\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderRangeThumb),\n  multi: true\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nclass MatSliderThumb {\n  get value() {\n    return numberAttribute(this._hostElement.value, 0);\n  }\n  set value(value) {\n    value = isNaN(value) ? 0 : value;\n    const stringValue = value + '';\n    if (!this._hasSetInitialValue) {\n      this._initialValue = stringValue;\n      return;\n    }\n    if (this._isActive) {\n      return;\n    }\n    this._setValue(stringValue);\n  }\n  /**\n   * Handles programmatic value setting. This has been split out to\n   * allow the range thumb to override it and add additional necessary logic.\n   */\n  _setValue(value) {\n    this._hostElement.value = value;\n    this._updateThumbUIByValue();\n    this._slider._onValueChange(this);\n    this._cdr.detectChanges();\n    this._slider._cdr.markForCheck();\n  }\n  /**\n   * The current translateX in px of the slider visual thumb.\n   * @docs-private\n   */\n  get translateX() {\n    if (this._slider.min >= this._slider.max) {\n      this._translateX = this._tickMarkOffset;\n      return this._translateX;\n    }\n    if (this._translateX === undefined) {\n      this._translateX = this._calcTranslateXByValue();\n    }\n    return this._translateX;\n  }\n  set translateX(v) {\n    this._translateX = v;\n  }\n  /** @docs-private */\n  get min() {\n    return numberAttribute(this._hostElement.min, 0);\n  }\n  set min(v) {\n    this._hostElement.min = v + '';\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n  get max() {\n    return numberAttribute(this._hostElement.max, 0);\n  }\n  set max(v) {\n    this._hostElement.max = v + '';\n    this._cdr.detectChanges();\n  }\n  get step() {\n    return numberAttribute(this._hostElement.step, 0);\n  }\n  set step(v) {\n    this._hostElement.step = v + '';\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n  get disabled() {\n    return booleanAttribute(this._hostElement.disabled);\n  }\n  set disabled(v) {\n    this._hostElement.disabled = v;\n    this._cdr.detectChanges();\n    if (this._slider.disabled !== this.disabled) {\n      this._slider.disabled = this.disabled;\n    }\n  }\n  /** The percentage of the slider that coincides with the value. */\n  get percentage() {\n    if (this._slider.min >= this._slider.max) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n    return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n  }\n  /** @docs-private */\n  get fillPercentage() {\n    if (!this._slider._cachedWidth) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n    if (this._translateX === 0) {\n      return 0;\n    }\n    return this.translateX / this._slider._cachedWidth;\n  }\n  /** Used to relay updates to _isFocused to the slider visual thumbs. */\n  _setIsFocused(v) {\n    this._isFocused = v;\n  }\n  constructor(_ngZone, _elementRef, _cdr, _slider) {\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._cdr = _cdr;\n    this._slider = _slider;\n    /** Event emitted when the `value` is changed. */\n    this.valueChange = new EventEmitter();\n    /** Event emitted when the slider thumb starts being dragged. */\n    this.dragStart = new EventEmitter();\n    /** Event emitted when the slider thumb stops being dragged. */\n    this.dragEnd = new EventEmitter();\n    /**\n     * Indicates whether this thumb is the start or end thumb.\n     * @docs-private\n     */\n    this.thumbPosition = _MatThumb.END;\n    /** The aria-valuetext string representation of the input's value. */\n    this._valuetext = signal('');\n    /** The radius of a native html slider's knob. */\n    this._knobRadius = 8;\n    /** The distance in px from the start of the slider track to the first tick mark. */\n    this._tickMarkOffset = 3;\n    /** Whether user's cursor is currently in a mouse down state on the input. */\n    this._isActive = false;\n    /** Whether the input is currently focused (either by tab or after clicking). */\n    this._isFocused = false;\n    /**\n     * Whether the initial value has been set.\n     * This exists because the initial value cannot be immediately set because the min and max\n     * must first be relayed from the parent MatSlider component, which can only happen later\n     * in the component lifecycle.\n     */\n    this._hasSetInitialValue = false;\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /**\n     * Indicates whether UI updates should be skipped.\n     *\n     * This flag is used to avoid flickering\n     * when correcting values on pointer up/down.\n     */\n    this._skipUIUpdate = false;\n    /** Callback called when the slider input has been touched. */\n    this._onTouchedFn = () => {};\n    /**\n     * Whether the NgModel has been initialized.\n     *\n     * This flag is used to ignore ghost null calls to\n     * writeValue which can break slider initialization.\n     *\n     * See https://github.com/angular/angular/issues/14988.\n     */\n    this._isControlInitialized = false;\n    this._platform = inject(Platform);\n    this._hostElement = _elementRef.nativeElement;\n    this._ngZone.runOutsideAngular(() => {\n      this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n      this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n      this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n    });\n  }\n  ngOnDestroy() {\n    this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n    this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n    this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.dragStart.complete();\n    this.dragEnd.complete();\n  }\n  /** @docs-private */\n  initProps() {\n    this._updateWidthInactive();\n    // If this or the parent slider is disabled, just make everything disabled.\n    if (this.disabled !== this._slider.disabled) {\n      // The MatSlider setter for disabled will relay this and disable both inputs.\n      this._slider.disabled = true;\n    }\n    this.step = this._slider.step;\n    this.min = this._slider.min;\n    this.max = this._slider.max;\n    this._initValue();\n  }\n  /** @docs-private */\n  initUI() {\n    this._updateThumbUIByValue();\n  }\n  _initValue() {\n    this._hasSetInitialValue = true;\n    if (this._initialValue === undefined) {\n      this.value = this._getDefaultValue();\n    } else {\n      this._hostElement.value = this._initialValue;\n      this._updateThumbUIByValue();\n      this._slider._onValueChange(this);\n      this._cdr.detectChanges();\n    }\n  }\n  _getDefaultValue() {\n    return this.min;\n  }\n  _onBlur() {\n    this._setIsFocused(false);\n    this._onTouchedFn();\n  }\n  _onFocus() {\n    this._slider._setTransition(false);\n    this._slider._updateTrackUI(this);\n    this._setIsFocused(true);\n  }\n  _onChange() {\n    this.valueChange.emit(this.value);\n    // only used to handle the edge case where user\n    // mousedown on the slider then uses arrow keys.\n    if (this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n  }\n  _onInput() {\n    this._onChangeFn?.(this.value);\n    // handles arrowing and updating the value when\n    // a step is defined.\n    if (this._slider.step || !this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n    this._slider._onValueChange(this);\n  }\n  _onNgControlValueChange() {\n    // only used to handle when the value change\n    // originates outside of the slider.\n    if (!this._isActive || !this._isFocused) {\n      this._slider._onValueChange(this);\n      this._updateThumbUIByValue();\n    }\n    this._slider.disabled = this._formControl.disabled;\n  }\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n    // On IOS, dragging only works if the pointer down happens on the\n    // slider thumb and the slider does not receive focus from pointer events.\n    if (this._platform.IOS) {\n      const isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());\n      this._isActive = isCursorOnSliderThumb;\n      this._updateWidthActive();\n      this._slider._updateDimensions();\n      return;\n    }\n    this._isActive = true;\n    this._setIsFocused(true);\n    this._updateWidthActive();\n    this._slider._updateDimensions();\n    // Does nothing if a step is defined because we\n    // want the value to snap to the values on input.\n    if (!this._slider.step) {\n      this._updateThumbUIByPointerEvent(event, {\n        withAnimation: true\n      });\n    }\n    if (!this.disabled) {\n      this._handleValueCorrection(event);\n      this.dragStart.emit({\n        source: this,\n        parent: this._slider,\n        value: this.value\n      });\n    }\n  }\n  /**\n   * Corrects the value of the slider on pointer up/down.\n   *\n   * Called on pointer down and up because the value is set based\n   * on the inactive width instead of the active width.\n   */\n  _handleValueCorrection(event) {\n    // Don't update the UI with the current value! The value on pointerdown\n    // and pointerup is calculated in the split second before the input(s)\n    // resize. See _updateWidthInactive() and _updateWidthActive() for more\n    // details.\n    this._skipUIUpdate = true;\n    // Note that this function gets triggered before the actual value of the\n    // slider is updated. This means if we were to set the value here, it\n    // would immediately be overwritten. Using setTimeout ensures the setting\n    // of the value happens after the value has been updated by the\n    // pointerdown event.\n    setTimeout(() => {\n      this._skipUIUpdate = false;\n      this._fixValue(event);\n    }, 0);\n  }\n  /** Corrects the value of the slider based on the pointer event's position. */\n  _fixValue(event) {\n    const xPos = event.clientX - this._slider._cachedLeft;\n    const width = this._slider._cachedWidth;\n    const step = this._slider.step === 0 ? 1 : this._slider.step;\n    const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n    const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n    // To ensure the percentage is rounded to the necessary number of decimals.\n    const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n    const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n    const value = Math.round(impreciseValue / step) * step;\n    const prevValue = this.value;\n    if (value === prevValue) {\n      // Because we prevented UI updates, if it turns out that the race\n      // condition didn't happen and the value is already correct, we\n      // have to apply the ui updates now.\n      this._slider._onValueChange(this);\n      this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n        withAnimation: this._slider._hasAnimation\n      });\n      return;\n    }\n    this.value = value;\n    this.valueChange.emit(this.value);\n    this._onChangeFn?.(this.value);\n    this._slider._onValueChange(this);\n    this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n      withAnimation: this._slider._hasAnimation\n    });\n  }\n  _onPointerMove(event) {\n    // Again, does nothing if a step is defined because\n    // we want the value to snap to the values on input.\n    if (!this._slider.step && this._isActive) {\n      this._updateThumbUIByPointerEvent(event);\n    }\n  }\n  _onPointerUp() {\n    if (this._isActive) {\n      this._isActive = false;\n      if (this._platform.SAFARI) {\n        this._setIsFocused(false);\n      }\n      this.dragEnd.emit({\n        source: this,\n        parent: this._slider,\n        value: this.value\n      });\n      // This setTimeout is to prevent the pointerup from triggering a value\n      // change on the input based on the inactive width. It's not clear why\n      // but for some reason on IOS this race condition is even more common so\n      // the timeout needs to be increased.\n      setTimeout(() => this._updateWidthInactive(), this._platform.IOS ? 10 : 0);\n    }\n  }\n  _clamp(v) {\n    const min = this._tickMarkOffset;\n    const max = this._slider._cachedWidth - this._tickMarkOffset;\n    return Math.max(Math.min(v, max), min);\n  }\n  _calcTranslateXByValue() {\n    if (this._slider._isRtl) {\n      return (1 - this.percentage) * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n    }\n    return this.percentage * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n  }\n  _calcTranslateXByPointerEvent(event) {\n    return event.clientX - this._slider._cachedLeft;\n  }\n  /**\n   * Used to set the slider width to the correct\n   * dimensions while the user is dragging.\n   */\n  _updateWidthActive() {}\n  /**\n   * Sets the slider input to disproportionate dimensions to allow for touch\n   * events to be captured on touch devices.\n   */\n  _updateWidthInactive() {\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding - this._tickMarkOffset * 2}px)`;\n    this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n  }\n  _updateThumbUIByValue(options) {\n    this.translateX = this._clamp(this._calcTranslateXByValue());\n    this._updateThumbUI(options);\n  }\n  _updateThumbUIByPointerEvent(event, options) {\n    this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n    this._updateThumbUI(options);\n  }\n  _updateThumbUI(options) {\n    this._slider._setTransition(!!options?.withAnimation);\n    this._slider._onTranslateXChange(this);\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n  writeValue(value) {\n    if (this._isControlInitialized || value !== null) {\n      this.value = value;\n    }\n  }\n  /**\n   * Registers a callback to be invoked when the input's value changes from user input.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChangeFn = fn;\n    this._isControlInitialized = true;\n  }\n  /**\n   * Registers a callback to be invoked when the input is blurred by the user.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouchedFn = fn;\n  }\n  /**\n   * Sets the disabled state of the slider.\n   * @param isDisabled The new disabled state\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  focus() {\n    this._hostElement.focus();\n  }\n  blur() {\n    this._hostElement.blur();\n  }\n  static {\n    this.ɵfac = function MatSliderThumb_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSliderThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSliderThumb,\n      selectors: [[\"input\", \"matSliderThumb\", \"\"]],\n      hostAttrs: [\"type\", \"range\", 1, \"mdc-slider__input\"],\n      hostVars: 1,\n      hostBindings: function MatSliderThumb_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function MatSliderThumb_change_HostBindingHandler() {\n            return ctx._onChange();\n          })(\"input\", function MatSliderThumb_input_HostBindingHandler() {\n            return ctx._onInput();\n          })(\"blur\", function MatSliderThumb_blur_HostBindingHandler() {\n            return ctx._onBlur();\n          })(\"focus\", function MatSliderThumb_focus_HostBindingHandler() {\n            return ctx._onFocus();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-valuetext\", ctx._valuetext());\n        }\n      },\n      inputs: {\n        value: [2, \"value\", \"value\", numberAttribute]\n      },\n      outputs: {\n        valueChange: \"valueChange\",\n        dragStart: \"dragStart\",\n        dragEnd: \"dragEnd\"\n      },\n      exportAs: [\"matSliderThumb\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_THUMB,\n        useExisting: MatSliderThumb\n      }]), i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderThumb]',\n      exportAs: 'matSliderThumb',\n      host: {\n        'class': 'mdc-slider__input',\n        'type': 'range',\n        '[attr.aria-valuetext]': '_valuetext()',\n        '(change)': '_onChange()',\n        '(input)': '_onInput()',\n        // TODO(wagnermaciel): Consider using a global event listener instead.\n        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n        '(blur)': '_onBlur()',\n        '(focus)': '_onFocus()'\n      },\n      providers: [MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_THUMB,\n        useExisting: MatSliderThumb\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_SLIDER]\n    }]\n  }], {\n    value: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }]\n  });\n})();\nclass MatSliderRangeThumb extends MatSliderThumb {\n  /** @docs-private */\n  getSibling() {\n    if (!this._sibling) {\n      this._sibling = this._slider._getInput(this._isEndThumb ? _MatThumb.START : _MatThumb.END);\n    }\n    return this._sibling;\n  }\n  /**\n   * Returns the minimum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n  getMinPos() {\n    const sibling = this.getSibling();\n    if (!this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n    return this._tickMarkOffset;\n  }\n  /**\n   * Returns the maximum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n  getMaxPos() {\n    const sibling = this.getSibling();\n    if (this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n    return this._slider._cachedWidth - this._tickMarkOffset;\n  }\n  _setIsLeftThumb() {\n    this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;\n  }\n  constructor(_ngZone, _slider, _elementRef, _cdr) {\n    super(_ngZone, _elementRef, _cdr, _slider);\n    this._cdr = _cdr;\n    this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n    this._setIsLeftThumb();\n    this.thumbPosition = this._isEndThumb ? _MatThumb.END : _MatThumb.START;\n  }\n  _getDefaultValue() {\n    return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n  }\n  _onInput() {\n    super._onInput();\n    this._updateSibling();\n    if (!this._isActive) {\n      this._updateWidthInactive();\n    }\n  }\n  _onNgControlValueChange() {\n    super._onNgControlValueChange();\n    this.getSibling()?._updateMinMax();\n  }\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n    if (this._sibling) {\n      this._sibling._updateWidthActive();\n      this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n    }\n    super._onPointerDown(event);\n  }\n  _onPointerUp() {\n    super._onPointerUp();\n    if (this._sibling) {\n      setTimeout(() => {\n        this._sibling._updateWidthInactive();\n        this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n      });\n    }\n  }\n  _onPointerMove(event) {\n    super._onPointerMove(event);\n    if (!this._slider.step && this._isActive) {\n      this._updateSibling();\n    }\n  }\n  _fixValue(event) {\n    super._fixValue(event);\n    this._sibling?._updateMinMax();\n  }\n  _clamp(v) {\n    return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n  }\n  _updateMinMax() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    if (this._isEndThumb) {\n      this.min = Math.max(this._slider.min, sibling.value);\n      this.max = this._slider.max;\n    } else {\n      this.min = this._slider.min;\n      this.max = Math.min(this._slider.max, sibling.value);\n    }\n  }\n  _updateWidthActive() {\n    const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n    const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth - this._tickMarkOffset * 2;\n    const percentage = this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1;\n    const width = maxWidth * percentage + minWidth;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n  }\n  _updateWidthInactive() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    const maxWidth = this._slider._cachedWidth - this._tickMarkOffset * 2;\n    const midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2;\n    const _percentage = this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min);\n    const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n    // Extend the native input width by the radius of the ripple\n    let ripplePadding = this._slider._rippleRadius;\n    // If one of the inputs is maximally sized (the value of both thumbs is\n    // equal to the min or max), make that input take up all of the width and\n    // make the other unselectable.\n    if (percentage === 1) {\n      ripplePadding = 48;\n    } else if (percentage === 0) {\n      ripplePadding = 0;\n    }\n    const width = maxWidth * percentage + ripplePadding;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = '0px';\n    if (this._isLeftThumb) {\n      this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n      this._hostElement.style.right = 'auto';\n    } else {\n      this._hostElement.style.left = 'auto';\n      this._hostElement.style.right = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n    }\n  }\n  _updateStaticStyles() {\n    this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n  }\n  _updateSibling() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    sibling._updateMinMax();\n    if (this._isActive) {\n      sibling._updateWidthActive();\n    } else {\n      sibling._updateWidthInactive();\n    }\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n  writeValue(value) {\n    if (this._isControlInitialized || value !== null) {\n      this.value = value;\n      this._updateWidthInactive();\n      this._updateSibling();\n    }\n  }\n  _setValue(value) {\n    super._setValue(value);\n    this._updateWidthInactive();\n    this._updateSibling();\n  }\n  static {\n    this.ɵfac = function MatSliderRangeThumb_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSliderRangeThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_SLIDER), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSliderRangeThumb,\n      selectors: [[\"input\", \"matSliderStartThumb\", \"\"], [\"input\", \"matSliderEndThumb\", \"\"]],\n      exportAs: [\"matSliderRangeThumb\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_RANGE_THUMB,\n        useExisting: MatSliderRangeThumb\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderRangeThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n      exportAs: 'matSliderRangeThumb',\n      providers: [MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_RANGE_THUMB,\n        useExisting: MatSliderRangeThumb\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_SLIDER]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }], null);\n})();\nclass MatSliderModule {\n  static {\n    this.ɵfac = function MatSliderModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSliderModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSliderModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatRippleModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb],\n      exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { BaseHttpService } from '@lib/services';\r\nimport { map, Observable, of, tap } from 'rxjs';\r\nimport { AiFlow, AiFlowRequest, WebhookConfigDto } from '../models/ai-flow.model';\r\nimport { AIFlowEntity, AIFlowEntityRequest } from '../models/ai-flow-entity.model';\r\nimport { AIJSON } from '../models/metadata.model';\r\nimport { SAMPLE_RESPONSE, SAMPLE_RESPONSE2 } from './sampleresponse';\r\nimport { AiAttributeJson } from '../models/Ai-attribute-json.model';\r\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { head } from 'lodash';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AIFlowBuilderService extends BaseHttpService{\r\n  readonly #gatewayAPIUrl = `${environment.Setting.GatewayAPIUrl}/wfapiwf/aiflow`;\r\n  readonly #consoleApiUrl = environment.Setting.C2M_Console_API_URL;\r\n\r\n  getAiFlows(): Observable<AiFlow[]> {\r\n    const url = `${this.#gatewayAPIUrl}/aiflows`;\r\n    const headers = this.setHeaders();\r\n    return this.get<AiFlow[]>(url,null, headers)\r\n  }\r\n\r\n  getAIFlowEntityById(flowEntityId: string): Observable<AIFlowEntity>{\r\n    const url = `${this.#gatewayAPIUrl}/entities/${flowEntityId}`;\r\n      const headers = this.setHeaders();\r\n    return this.get<AIFlowEntity>(url,null, headers);\r\n  }\r\n\r\n  getAiFlowById(flowId: string): Observable<AIJSON>{\r\n    const url = `${this.#gatewayAPIUrl}/aiflows/${flowId}`;\r\n    const headers = this.setHeaders();\r\n    return this.get<AIJSON>(url,null, headers);\r\n  }\r\n\r\n  getAIFlowAttributeJsonByType(type: string): Observable<AiAttributeJson>{\r\n    const url = `${this.#gatewayAPIUrl}/aiflows/attributejson/${type}`;\r\n    const headers = this.setHeaders();\r\n    return this.get<AiAttributeJson>(url,null,headers);\r\n  }\r\n  \r\n  createAiFlow(request: AiFlowRequest): Observable<{ id: string, message: string }>{\r\n    const url = `${this.#gatewayAPIUrl}/aiflows/create`;\r\n     const headers = this.setHeaders();\r\n    return this.post<{ id: string, message: string }>(url, request,null, headers)\r\n  }\r\n\r\n  createAIFlowEntity(request: AIFlowEntityRequest): Observable<{ id: string, message: string }>{\r\n    const url = `${this.#gatewayAPIUrl}/entities`;\r\n    const headers = this.setHeaders();\r\n    return this.post<{ id: string, message: string }>(url, request,null, headers)\r\n  }\r\n  \r\n  updateAiFlow(id: string, request: AiFlowRequest): Observable<boolean>{\r\n    const url = `${this.#gatewayAPIUrl}/aiflows/update/${id}`;\r\n    const headers = this.setHeaders();\r\n    return this.put<boolean>(url, request,null, headers);\r\n\r\n  }\r\n\r\n  updateAIFlowEntity(request: AIFlowEntityRequest){\r\n    const url = `${this.#gatewayAPIUrl}/aiflow/entities/${request.FlowId}`;\r\n    const headers = this.setHeaders();\r\n    return this.put<boolean>(url, request,null, headers);\r\n  }\r\n\r\n  deleteAIFlow(id: string): Observable<string>{\r\n   const url = `${this.#gatewayAPIUrl}/flows/${id}`;\r\n   const headers = this.setHeaders();\r\n   return this.delete<string>(url,null, headers);\r\n  }\r\n\r\n  deleteAIFlowEntity(id: string): Observable<string>{\r\n   const url = `${this.#gatewayAPIUrl}/entities/${id}`;\r\n   const headers = this.setHeaders();\r\n   return this.delete<string>(url,null,headers);\r\n  }\r\n  \r\n  getAIFGeneratedJson(flowId: string){\r\n   const url = `${this.#gatewayAPIUrl}/aiflows/generateAFDjson/${flowId}`;\r\n    const headers = this.setHeaders();\r\n   return this.get(url,null,headers);\r\n  }\r\n  \r\n  getMyThingsChannels(){\r\n    const url =  `${this.#consoleApiUrl}api/v1/apps/GetMyThingsChannels`;\r\n    const tryRequest = {\r\n      PageNumber: 1,\r\n      PageSize: 200,\r\n      sortBy: \"\",\r\n      orderBy: \"Most Recent\",\r\n      searchText: \"\",\r\n      EncWorkspaceId: \"MYoiubXv1tdVQ/QqJ1CJXg==\"\r\n    }\r\n     const headers = this.setHeaders();\r\n        return this.post(url, tryRequest,null,headers)\r\n        .pipe(\r\n            map((result: any) => result.data),\r\n            map(data => data.root),\r\n            map(root => root.channel),\r\n            map((channel: any) => {\r\n                if (Array.isArray(channel)) {\r\n                    return channel.map(item => {\r\n                        return {\r\n                            id: item.encChId,\r\n                            name: item.chName?.['#cdata-section'],\r\n                            type: item.chType\r\n                        };\r\n                    });\r\n                } else if (channel && typeof channel === 'object') {\r\n                    return [{\r\n                        id: channel.encChId,\r\n                        name: channel.chName?.['#cdata-section'],\r\n                        type: channel.chType\r\n                    }];\r\n                }\r\n            })\r\n        );\r\n  }\r\n\r\n  getMoreChannelInstance(channelId){\r\n   const url =  `${this.#consoleApiUrl}api/v1/apps/GetMoreChannelInstance`;\r\n    const tryRequest = {\r\n      channelID: channelId,\r\n      channelInsIds: \"\",\r\n      searchKey: \"-1$-1\",\r\n      pageDetails: \"1$10\",\r\n      EncWorkspaceId: \"MYoiubXv1tdVQ/QqJ1CJXg==\"\r\n    }\r\n     const headers = this.setHeaders();\r\n     return this.post(url, tryRequest,null,headers)\r\n        .pipe(\r\n            map((result: any) => result.data),\r\n            map(data => data.root),\r\n            map(root => root.channelIns),\r\n            map(channel =>{\r\n              return channel.map(item =>{\r\n                return {\r\n                  id: item.encChInsId,\r\n                  name: item.chFName,\r\n                }\r\n              })\r\n            }))\r\n  }\r\n\r\n  saveWebhook(request: AiFlowRequest): Observable<{ id: string, message: string }>{\r\n    const url = `${this.#gatewayAPIUrl}/aiflows/saveWebhook`;\r\n     const headers = this.setHeaders();\r\n    return this.post<{ id: string, message: string }>(url, request,null, headers)\r\n  }\r\n\r\n   GetWebhook(id:string,flowName:string): Observable<WebhookConfigDto[]> {\r\n    const url = `${this.#gatewayAPIUrl}/aiflows/GetWebhook/${id}/${flowName}`;\r\n     const headers = this.setHeaders();\r\n    return this.get<WebhookConfigDto[]>(url,null,headers);\r\n  }\r\n\r\n\r\n private setHeaders(parameters?: any): { [key: string]: string } {\r\n  let processName: string | null = null;\r\n\r\n  if (parameters?.ProcessName) {\r\n    processName = parameters.ProcessName;\r\n  } else {\r\n    processName = sessionStorage.getItem('AppName');\r\n  }\r\n\r\n  const headers: { [key: string]: string } = {};\r\n\r\n  const accessToken = localStorage.getItem('AccessToken');\r\n  if (accessToken) {\r\n    headers['AccessToken'] = accessToken;\r\n  }\r\n\r\n  if (processName) {\r\n    headers['processName'] = processName;\r\n  }\r\n\r\n  return headers;\r\n}\r\n\r\nsetParams(parameters) {\r\n      let params = new HttpParams();\r\n      if (parameters) {\r\n        for (const i in parameters) {\r\n          if (parameters[i] != null) {\r\n            params = params.append(i, parameters[i]);\r\n          }\r\n        }\r\n      }\r\n      return params;\r\n}\r\n\r\n\r\n}\r\n","import { CommonModule, NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { Component, inject, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatSliderModule, MatSliderThumb } from '@angular/material/slider';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EditorComponent } from '@app/admin/Shared/editor/editor.component';\r\nimport { SaveStagePayload } from '@app/admin/wf/wfd/models';\r\nimport { AiAttributeJson } from '@app/ai-flow-builder/models/Ai-attribute-json.model';\r\nimport { AIFlowBuilderService } from '@app/ai-flow-builder/services/aiflow-builder.service';\r\nimport { MessageService } from '@app/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectComponent, NgSelectModule } from '@ng-select/ng-select';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-entity-detail',\r\n  standalone: true,\r\n  imports: [\r\n            CommonModule,\r\n            NgIf,\r\n            ReactiveFormsModule,\r\n            NgClass,\r\n            QuillModule,\r\n            NgSelectModule,\r\n            NgFor,\r\n            MatSliderModule,\r\n            MatSliderThumb\r\n  ],\r\n  templateUrl: './entity-detail.component.html',\r\n  styleUrl: './entity-detail.component.scss'\r\n})\r\nexport class EntityDetailComponent  {\r\n  newElement = false;\r\n  entityID: string;\r\n  entityType: string;\r\n  entityName: string;\r\n  parentEntityId: string;\r\n  endParentEntityId: string;\r\n  id: string;\r\n  form: UntypedFormGroup = new FormGroup({});\r\n  fb: UntypedFormBuilder;\r\n  submitted = false;\r\n  #ref = inject(NgbActiveModal);\r\n  #aIFlowBuilderService = inject(AIFlowBuilderService)\r\n  workflow: any;\r\n  formConfig: AiAttributeJson;\r\n  populateDataMapper = {\r\n    'GetMyThingsChannels': this.#aIFlowBuilderService.getMyThingsChannels.bind(this.#aIFlowBuilderService),\r\n    'GetMoreChannelInstance': this.#aIFlowBuilderService.getMoreChannelInstance.bind(this.#aIFlowBuilderService)\r\n  }\r\n  fieldMapper = {};\r\n  constructor(\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchFormConfig(this.formConfig);  \r\n  }\r\n\r\n  fetchFormConfig(response): void {\r\n    if (response && response.Attributes) {\r\n        response.Attributes.forEach(attribute => {\r\n        const controlName = attribute.ControlName.toLowerCase();\r\n        const controlType = attribute.ControlType.toLowerCase();\r\n\r\n        if (!this.form.controls[controlName] && controlType !== 'label') {\r\n          const formControlValue = attribute.Value;\r\n          const formControl = new FormControl(formControlValue);\r\n          if(attribute.Required){\r\n            formControl.setValidators([Validators.required]);\r\n          }\r\n          this.form.addControl(controlName, formControl);\r\n          \r\n        }\r\n      });\r\n    }\r\n    this.form.valueChanges.subscribe(values => {\r\n      this.updateFormConfig(values);\r\n    });\r\n  }\r\n\r\n   updateFormConfig(values: any): void {\r\n    if (this.formConfig && this.formConfig.Attributes) {\r\n      this.formConfig.Attributes.forEach(attribute => {\r\n        const controlName = this.getControlName(attribute);\r\n        if (values[controlName] !== undefined) {\r\n          const updatedAttribute = this.formConfig.Attributes.find(attr => this.getControlName(attr) === controlName);\r\n          if (updatedAttribute) {\r\n            updatedAttribute.Value = values[controlName];\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n getColClass(width: string): string {\r\n    return width === 'half' ? 'col-6' : 'col-12';\r\n  }\r\n  \r\ngetAutomaticData(attribute){\r\n  if(!attribute.Api) return;\r\n  const { Name, ParameterFromControl } = attribute.Api || {}; \r\n  const id = this.fieldMapper[ParameterFromControl]?.id;\r\n  (this.populateDataMapper[Name] as Function)(id).subscribe(response =>{\r\n    attribute.Options = response?.map(r => r.name);\r\n    this.fieldMapper = { [attribute.ControlName]: response}\r\n  })\r\n}\r\n\r\nselectionChange(event, attribute){\r\n  if(!attribute.Api) return;\r\n  this.fieldMapper[attribute.ControlName] = this.fieldMapper[attribute.ControlName].find(f => f.name === event); \r\n}\r\n  onSubmit() {\r\n    const { WFID} = this.workflow;\r\n    if(this.form.invalid){\r\n      this.submitted = true;    \r\n      return;\r\n    }\r\n\r\n    const rawValues = this.form.getRawValue();\r\n\r\n    const payload = {\r\n      ID: this.entityID,\r\n      FlowId: WFID,\r\n      EntityName: rawValues?.entityname,\r\n      EntityType: this.entityType,\r\n      ParentEntityId: this.parentEntityId,\r\n      EndParentEntityId: this.endParentEntityId,\r\n      AttributeJson: this.formConfig\r\n    };\r\n    if(this.newElement){\r\n      this.#aIFlowBuilderService.createAIFlowEntity(payload).subscribe(_ =>{\r\n         const payload: SaveStagePayload = {\r\n                ...this.form.value,\r\n                WfoId: !rawValues?.EntityType || rawValues?.EntityType === 'Stage' ? _.id : WFID || '',\r\n                WorkFlowId: this.workflow.WFID,\r\n                WfosId: _.id,\r\n                TriggerId:_.id\r\n              };\r\n              \r\n        this.#ref.close(payload);\r\n      });\r\n    }else{\r\n      this.#aIFlowBuilderService.updateAIFlowEntity(payload).subscribe(_=>{\r\n           this.#ref.close(payload);\r\n      })\r\n    }\r\n  }\r\n  onCancel(){\r\n    this.#ref.close();\r\n  }\r\n  \r\n  getControlName(attribute): string {\r\n    return attribute.ControlName;\r\n  }\r\n\r\n  showIfCondition(condition){\r\n    if(!condition) return true;\r\n    const controlName = condition.ControlName;\r\n    const value = condition.Value;\r\n    return this.form.get(controlName).value === value?.toLowerCase();\r\n  }\r\n\r\n  get formControls(){\r\n    return this.form.controls;\r\n  }\r\n\r\n\r\n}","<div class=\"popup\">\r\n  <div class=\"popup__header\">\r\n    <h2><b>{{ formConfig.Guid }}</b></h2>\r\n    <span class=\"popup__close\"><i class=\"fas fa-times-circle fa-fw\" (click)=\"onCancel()\"></i></span>\r\n  </div>\r\n  <p>{{ formConfig.Description }}</p>\r\n  <hr>\r\n  \r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row gy-4\">\r\n          <div *ngFor=\"let attribute of formConfig?.Attributes\" \r\n               [ngClass]=\"getColClass(attribute.Width)\" \r\n               class=\"form-group\">\r\n               <ng-container *ngIf=\"showIfCondition(attribute.Condition)\">\r\n                 <span class=\"d-flex\">\r\n                   <label>{{ attribute.Label }}</label>\r\n                   <span *ngIf=\"attribute.Required\" style=\"color: red\">&nbsp;*</span>\r\n                 </span>\r\n                 <div>\r\n                   @if(attribute.ControlType === 'label'){\r\n                     <div [style.margin-top.px]=\"-20\"></div>\r\n                   }\r\n                   @else if(attribute.ControlType === 'textbox'){\r\n                     <input type=\"text\" \r\n                            class=\"form-control\"\r\n                            [name]=\"getControlName(attribute)\"\r\n                            [formControlName]=\"getControlName(attribute)\" \r\n                            [ngClass]=\"{'is-invalid': submitted && formControls[getControlName(attribute)].errors }\"\r\n                             />\r\n                     <span\r\n                       [style.color]=\"'red'\"\r\n                       [style.font-size.px]=\"12\" \r\n                       *ngIf=\"submitted && formControls[getControlName(attribute)].errors?.required\">\r\n                       This field is required\r\n                     </span>\r\n                   }\r\n                   @else if (attribute.ControlType === 'textarea') {\r\n                     <textarea \r\n                       class=\"form-control custom-text-area\"\r\n                       [name]=\"getControlName(attribute)\"\r\n                       [formControlName]=\"getControlName(attribute)\"\r\n                       [ngClass]=\"{'is-invalid': submitted && formControls[getControlName(attribute)].errors }\">\r\n                     </textarea>\r\n                     <span\r\n                       [style.color]=\"'red'\"\r\n                       [style.font-size.px]=\"12\" \r\n                       *ngIf=\"submitted && formControls[getControlName(attribute)].errors?.required\">\r\n                       This field is required\r\n                     </span>\r\n                   }\r\n                   @else if (attribute.ControlType === 'dropdownlist') {\r\n                     <ng-select\r\n                       class=\"select-control\"\r\n                       bindLabel=\"name\"\r\n                       bindValue=\"id\" \r\n                       [items]=\"attribute.Options\"\r\n                       [name]=\"getControlName(attribute)\"\r\n                       [formControlName]=\"getControlName(attribute)\"\r\n                       [ngClass]=\"{'is-invalid': submitted && formControls[getControlName(attribute)].errors }\"\r\n                       (open)=\"getAutomaticData(attribute)\"\r\n                       (change)=\"selectionChange($event, attribute)\"\r\n                       >\r\n                     </ng-select>\r\n                     <span\r\n                       [style.color]=\"'red'\"\r\n                       [style.font-size.px]=\"12\" \r\n                       *ngIf=\"submitted && formControls[getControlName(attribute)].errors?.required\">\r\n                       This field is required\r\n                     </span>\r\n                   }\r\n                   @else if (attribute.ControlType === 'slider') {\r\n                     <mat-slider \r\n                       [style.margin-left.px]=\"0\"\r\n                       [style.margin-top.px]=\"-20\"\r\n                       thumbLabel>\r\n                       <input matSliderThumb [formControlName]=\"getControlName(attribute)\">\r\n                     </mat-slider>\r\n                     <div class=\"d-flex justify-content-between\" \r\n                       [style.opacity]=\"0.4\"\r\n                       [style.margin-top.px]=\"-15\"\r\n                       [style.font-size.px]=\"12\">\r\n                       <span>{{ attribute.MinValue | number:'1.1-1' }}</span>\r\n                       <span>{{ attribute.MaxValue | number:'1.1-1' }}</span>\r\n                     </div>\r\n                   }\r\n                   @else if (attribute.ControlType === 'radio'){\r\n                     <span>\r\n                       <span class=\"me-2\">\r\n                           <input type=\"radio\" [formControlName]=\"getControlName(attribute)\" value=\"yes\" />\r\n                           <span class=\"ms-2\">Yes</span>\r\n                         </span>\r\n                       <span class=\"ms-2\">\r\n                         <input type=\"radio\" [formControlName]=\"getControlName(attribute)\" value=\"no\" />\r\n                         <span class=\"ms-2\">No</span>\r\n                       </span>\r\n                     </span>\r\n                   }\r\n                   @else if (attribute.ControlType === 'custom-dropdownlist'){\r\n                     <ng-select [items]=\"[{ \r\n                         header: 'C2M Get process Data', \r\n                         description: 'Retrieves comprehensive blah blah' \r\n                       },\r\n                       {\r\n                         header: 'C2MAR Get process Data', \r\n                         description: 'Retrieves comprehensive blah blah' \r\n                       }]\" [clearable]=\"true\" placeholder=\"Select an option\">\r\n                       <ng-template ng-label-tmp let-item=\"item\">\r\n                         {{ item.header }}\r\n                       </ng-template>\r\n                       <ng-template ng-option-tmp let-item=\"item\">\r\n                         <div [style.padding.px]=\"5\">\r\n                           <h6 [style.font-weight]=\"'bold'\">{{ item.header }}</h6>\r\n                           <p>{{ item.description }}</p>\r\n                         </div>\r\n                       </ng-template>\r\n                     </ng-select>\r\n                  }\r\n                 </div>\r\n              </ng-container>\r\n              </div>\r\n    </div>\r\n    <div class=\"popup__actions mt-4\">\r\n      <button class=\"btn btn-light btn-sm\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n      <button class=\"btn btn-primary btn-sm\" type=\"submit\" (click)=\"onSubmit()\">Save</button>\r\n    </div>\r\n  </form>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { Component, Input, input, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AIFlowBuilderService } from '@app/ai-flow-builder/services/aiflow-builder.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-webhook-config',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, CommonModule,\r\n    FormsModule,   ],\r\n\r\n  templateUrl: './webhook-config.component.html',\r\n  styleUrl: './webhook-config.component.scss'\r\n})\r\nexport class WebhookConfigComponent implements OnInit {\r\n  form: FormGroup;\r\n  @Input() id: string | null = null;\r\n  @Input() FlowName: string | null = null;\r\n\r\n  topTabs = ['Webhook', 'Chat', 'SMS', 'Scheduler'];\r\n  activeTopTab = 'Webhook';\r\n\r\n  subTabs = ['Params', 'Headers', 'Body'];\r\n  activeSubTab = 'Params';\r\n\r\n  methods = ['POST', 'GET', 'PUT', 'DELETE', 'PATCH'];\r\n\r\n  bodyContentMode: 'JSON_SCHEMA' | 'TEXT' = 'JSON_SCHEMA';\r\n\r\n  constructor(private fb: FormBuilder,\r\n     public activeModal: NgbActiveModal,\r\n     readonly aiFlowBuilderService: AIFlowBuilderService\r\n  ) {\r\n    this.form = this.fb.group({\r\n      method: ['POST', Validators.required],\r\n      url: ['', Validators.required],\r\n      bodyContentMode: ['JSON_SCHEMA'], \r\n      params: this.fb.array([]),\r\n      headers: this.fb.array([]),\r\n      bodyText: [''],\r\n      bodyJsonSchema: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.aiFlowBuilderService.GetWebhook(this.id??'',this.FlowName??'').subscribe({\r\n      next: (response) => {\r\n        this.loadWebhookData(response);\r\n      }\r\n    });\r\n\r\n     this.form.get('bodyContentMode')?.valueChanges.subscribe(value => {   \r\n      this.bodyContentMode = value;\r\n    });\r\n  }\r\n\r\n  loadWebhookData(data: any) {\r\n  // Clear params/headers first\r\n  (this.form.get('params') as FormArray).clear();\r\n  (this.form.get('headers') as FormArray).clear();\r\n\r\n  this.form.patchValue({\r\n    method: data.Method || 'POST',\r\n    url: data.Url || '',\r\n    bodyContentMode: this.isJson(data.Body) ? 'JSON_SCHEMA' : 'TEXT',\r\n    bodyJsonSchema: this.isJson(data.Body) ? data.Body : '',\r\n    bodyText: !this.isJson(data.Body) ? data.Body : ''\r\n  });\r\n\r\n  // Map Params\r\n  if (data.Params) {\r\n    Object.keys(data.Params).forEach(key => {\r\n      (this.form.get('params') as FormArray).push(\r\n        this.fb.group({\r\n          key: [key],\r\n          value: [data.Params[key]]\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  // Map Headers\r\n  if (data.Headers) {\r\n    Object.keys(data.Headers).forEach(key => {\r\n      (this.form.get('headers') as FormArray).push(\r\n        this.fb.group({\r\n          key: [key],\r\n          value: [data.Headers[key]]\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\n// Helper: check if body is valid JSON\r\nprivate isJson(str: string): boolean {\r\n  try {\r\n    JSON.parse(str);\r\n    this.bodyContentMode='JSON_SCHEMA';\r\n    return true;\r\n  } catch {\r\n     this.bodyContentMode='TEXT';\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n  // helpers for form arrays\r\n  get params(): FormArray {\r\n    return this.form.get('params') as FormArray;\r\n  }\r\n\r\n  get headers(): FormArray {\r\n    return this.form.get('headers') as FormArray;\r\n  }\r\n\r\n  private createKeyValue(key = '', value = ''): FormGroup {\r\n    return this.fb.group({\r\n      key: [key],\r\n      value: [value]\r\n    });\r\n  }\r\n\r\n  addParam() {\r\n    this.params.push(this.createKeyValue());\r\n  }\r\n\r\n  removeParam(index: number) {\r\n    this.params.removeAt(index);\r\n  }\r\n\r\n  addHeader() {\r\n    this.headers.push(this.createKeyValue());\r\n  }\r\n\r\n  removeHeader(index: number) {\r\n    this.headers.removeAt(index);\r\n  }\r\n\r\n  setTopTab(tab: string) {\r\n    this.activeTopTab = tab;\r\n  }\r\n\r\n  setSubTab(tab: string) {\r\n    this.activeSubTab = tab;\r\n  }\r\n\r\n  toggleBodyMode(): void {\r\n    const current = this.form.get('bodyContentMode')?.value;\r\n    this.form.get('bodyContentMode')?.setValue(\r\n      current === 'JSON_SCHEMA' ? 'TEXT' : 'JSON_SCHEMA'\r\n    );\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      this.form.markAllAsTouched();\r\n      return;\r\n    }\r\n    \r\n    this.aiFlowBuilderService.saveWebhook({\r\n      ID: this.id ?? '',\r\n      FlowName: this.FlowName ?? '',\r\n      webhookData: {\r\n        method: this.form.value.method,\r\n        url: this.form.value.url,\r\n\r\n        params: this.form.value.params.reduce((acc: any, cur: any) => {\r\n          if (cur.key?.trim() && cur.value?.toString().trim()) {\r\n            acc[cur.key] = cur.value;\r\n          }\r\n          return acc;\r\n        }, {}),\r\n\r\n        headers: this.form.value.headers.reduce((acc: any, cur: any) => {\r\n          if (cur.key?.trim() && cur.value?.toString().trim()) {\r\n            acc[cur.key] = cur.value;\r\n          }\r\n          return acc;\r\n        }, {}),\r\n\r\n        body: this.bodyContentMode === 'JSON_SCHEMA'\r\n          ? (this.form.value.bodyJsonSchema || '')\r\n          : (this.form.value.bodyText || '')\r\n      }\r\n    }).subscribe({\r\n      next: (response) => {\r\n        console.log('Webhook saved successfully', response);\r\n       // alert('Webhook saved successfully');\r\n      },\r\n      error: (error) => {\r\n        console.error('Error saving webhook', error);\r\n        // alert('Error saving webhook');\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<!-- <div class=\"card\">\r\n  <div class=\"top-tabs\">\r\n    <button *ngFor=\"let t of topTabs\" (click)=\"setTopTab(t)\" [class.active]=\"activeTopTab===t\">{{t}}</button>\r\n  </div>\r\n\r\n  <div class=\"panel\">\r\n    <div class=\"form-row\">\r\n      <label>Method</label>\r\n      <select formControlName=\"method\">\r\n        <option *ngFor=\"let m of methods\" [value]=\"m\">{{m}}</option>\r\n      </select>\r\n\r\n      <label style=\"margin-left:16px\">URL</label>\r\n      <input type=\"text\" formControlName=\"url\" placeholder=\"http://webhook.c2m.net/...\" />\r\n    </div>\r\n\r\n    <div class=\"sub-tabs\">\r\n      <button *ngFor=\"let s of subTabs\" (click)=\"setSubTab(s)\" [class.active]=\"activeSubTab===s\">{{s}}</button>\r\n    </div>\r\n\r\n    <div class=\"sub-panel\" *ngIf=\"activeSubTab==='Params'\">\r\n      <div class=\"kv-table\">\r\n        <div class=\"kv-row header\">\r\n          <div>Key</div>\r\n          <div>Value</div>\r\n          <div></div>\r\n        </div>\r\n\r\n        <div class=\"kv-row\" *ngFor=\"let p of params.controls; let i = index\" [formGroup]=\"p\">\r\n          <input formControlName=\"key\" placeholder=\"processName\" />\r\n          <input formControlName=\"value\" placeholder=\"value\" />\r\n          <button type=\"button\" class=\"btn-remove\" (click)=\"removeParam(i)\">✕</button>\r\n        </div>\r\n\r\n        <div class=\"kv-add\">\r\n          <button type=\"button\" (click)=\"addParam()\">+ Add</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"sub-panel\" *ngIf=\"activeSubTab==='Headers'\">\r\n      <div class=\"kv-table\">\r\n        <div class=\"kv-row header\">\r\n          <div>Key</div>\r\n          <div>Value</div>\r\n          <div></div>\r\n        </div>\r\n\r\n        <div class=\"kv-row\" *ngFor=\"let h of headers.controls; let i = index\" [formGroup]=\"h\">\r\n          <input formControlName=\"key\" placeholder=\"accessToken\" />\r\n          <input formControlName=\"value\" placeholder=\"value\" />\r\n          <button type=\"button\" class=\"btn-remove\" (click)=\"removeHeader(i)\">✕</button>\r\n        </div>\r\n\r\n        <div class=\"kv-add\">\r\n          <button type=\"button\" (click)=\"addHeader()\">+ Add</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"sub-panel\" *ngIf=\"activeSubTab==='Body'\">\r\n      <div class=\"body-controls\">\r\n        <label>Content</label>\r\n        <button type=\"button\" (click)=\"toggleBodyMode()\">{{bodyContentMode==='JSON_SCHEMA'? 'JSON_SCHEMA' : 'TEXT'}}</button>\r\n      </div>\r\n\r\n      <div *ngIf=\"bodyContentMode==='JSON_SCHEMA'\">\r\n        <textarea formControlName=\"bodyJsonSchema\" class=\"big-editor\" rows=\"12\"></textarea>\r\n      </div>\r\n\r\n      <div *ngIf=\"bodyContentMode==='TEXT'\">\r\n        <textarea formControlName=\"bodyText\" class=\"big-editor\" rows=\"12\"></textarea>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-actions\">\r\n      <button (click)=\"submit()\">Save / Send</button>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<form [formGroup]=\"form\" class=\"p-4\">\r\n    <div>\r\n        <div class=\"modal-header\" style=\"justify-content: space-between;\">\r\n            <h4 class=\"modal-title\">Webhook Details</h4>\r\n            <button type=\"button\" aria-label=\"Close\" class=\"close-button\" (click)=\"activeModal.close(false)\">\r\n                <span aria-hidden=\"true\" class=\"fas fa-times-circle fa-fw\"></span>\r\n            </button>\r\n        </div>\r\n\r\n        <!-- Top Tabs -->\r\n        <div class=\"top-tabs mt-3\" style=\"border-bottom: 1px solid #f2f2f2\">\r\n            <button *ngFor=\"let t of topTabs\" (click)=\"setTopTab(t)\" [class.active]=\"activeTopTab===t\">{{t}}</button>\r\n        </div>\r\n\r\n        <div *ngIf=\"activeTopTab==='Webhook'\">\r\n            <div class=\"form-row mt-3\" style=\"justify-content: space-between;\">\r\n                <div>\r\n                    <label class=\"input-label\">Method<span class=\"text-danger\">*</span></label>\r\n                    <select formControlName=\"method\" style=\"font-size: 12px;height: 28px;margin-left: 5px;\">\r\n                        <option *ngFor=\"let m of methods\" [value]=\"m\">{{m}}</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <label class=\"input-label\">URL<span class=\"text-danger\">*</span></label>\r\n                    <input type=\"text\" formControlName=\"url\" style=\"margin-left: 5px; width: 500px;\" class=\"input-24\"   [ngClass]=\"{'is-invalid': form.get('url')?.invalid && form.get('url')?.touched}\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Sub Tabs -->\r\n            <div class=\"sub-tabs mt-2\" style=\"border-bottom: 1px solid #f2f2f2\">\r\n                <button *ngFor=\"let s of subTabs\" (click)=\"setSubTab(s)\"\r\n                    [class.active]=\"activeSubTab===s\">{{s}}</button>\r\n            </div>\r\n\r\n            <!-- Params Panel -->\r\n            <div class=\"sub-panel\" *ngIf=\"activeSubTab==='Params'\">\r\n                <div class=\"kv-table\">\r\n                    <div class=\"kv-row header\">\r\n                        <div class=\"input-label\">Key</div>\r\n                        <div class=\"input-label\">Value</div>\r\n                        <div></div>\r\n                    </div>\r\n\r\n                    <div class=\"kv-row\" *ngFor=\"let p of params.controls; let i = index\" [formGroup]=\"p\">\r\n                        <input formControlName=\"key\" placeholder=\"key\" class=\"input-24\" />\r\n                        <input formControlName=\"value\" placeholder=\"value\" class=\"input-24\" />\r\n                        <button type=\"button\" class=\"btn-remove\" (click)=\"removeParam(i)\">✕</button>\r\n                    </div>\r\n\r\n                    <div class=\"kv-add d-flex justify-content-end\">\r\n                        <button type=\"button\" class=\"btn-primary\" (click)=\"addParam()\">+ Add</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Headers Panel -->\r\n            <div class=\"sub-panel\" *ngIf=\"activeSubTab==='Headers'\">\r\n                <div class=\"kv-table\">\r\n                    <div class=\"kv-row header\">\r\n                        <div class=\"input-label\">Key</div>\r\n                        <div class=\"input-label\">Value</div>\r\n                        <div></div>\r\n                    </div>\r\n\r\n                    <div class=\"kv-row\" *ngFor=\"let h of headers.controls; let i = index\" [formGroup]=\"h\">\r\n                        <input formControlName=\"key\" placeholder=\"key\" class=\"input-24\" />\r\n                        <input formControlName=\"value\" placeholder=\"value\" class=\"input-24\" />\r\n                        <button type=\"button\" class=\"btn-remove\" (click)=\"removeHeader(i)\">✕</button>\r\n                    </div>\r\n\r\n                    <div class=\"kv-add d-flex justify-content-end\">\r\n                        <button type=\"button\" class=\"btn-primary\" (click)=\"addHeader()\">+ Add</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Body Panel -->\r\n            <div class=\"sub-panel\" *ngIf=\"activeSubTab==='Body'\">\r\n                <div class=\"body-controls mb-2\">\r\n                  <label for=\"bodyMode\" class=\"input-label\">Content</label>\r\n                  <select formControlName=\"bodyContentMode\" style=\"font-size: 12px; height: 28px; margin-left: 5px;\">\r\n                    <option value=\"JSON_SCHEMA\">JSON_SCHEMA</option>\r\n                    <option value=\"TEXT\">TEXT</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div *ngIf=\"form.get('bodyContentMode')?.value === 'JSON_SCHEMA'\">\r\n                    <textarea formControlName=\"bodyJsonSchema\" class=\"big-editor\" rows=\"12\"></textarea>\r\n                </div>\r\n\r\n                <div *ngIf=\"form.get('bodyContentMode')?.value === 'TEXT'\">\r\n                    <textarea formControlName=\"bodyText\" class=\"big-editor\" rows=\"12\"></textarea>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <!-- Form Actions -->\r\n            <div class=\"form-actions d-flex justify-content-end\">\r\n                <button (click)=\"submit()\" class=\"btn-primary\">Save / Send</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>","import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DiagramService } from '@app/admin/wf/wfd/services/diagram.service';\r\nimport { AiDiagramComponent } from '@app/ai-flow-builder/components/ai-diagram/ai-diagram.component';\r\nimport { AiFlow } from '@app/ai-flow-builder/models/ai-flow.model';\r\nimport { AIFlowBuilderService } from '@app/ai-flow-builder/services/aiflow-builder.service';\r\nimport { map, Observable, switchMap, tap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-builder-entity',\r\n  standalone: true,\r\n  imports: [\r\n            NgIf,\r\n            AiDiagramComponent,\r\n            AsyncPipe,\r\n  ],\r\n  templateUrl: './builder-entity.component.html',\r\n  styleUrl: './builder-entity.component.scss'\r\n})\r\nexport class BuilderEntityComponent implements OnInit {\r\n  metadata$: Observable<AiFlow>;\r\n\r\n  constructor(\r\n    private service: AIFlowBuilderService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public serviceBpmn: DiagramService,\r\n    readonly titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n  this.metadata$ = this.route.queryParamMap.pipe(\r\n    tap(params => {\r\n        const flowName = params.get('flowName');\r\n        // sessionStorage.setItem('DisplayName', this.id);\r\n        // sessionStorage.setItem('AppName', this.id);\r\n        this.updateDocumentTitle(flowName);\r\n      \r\n    }),\r\n    switchMap(params => this.service.getAiFlowById(params.get('id')).pipe(map(flow => flow.MetaData)))\r\n  )\r\n}\r\n\r\n\r\nprivate updateDocumentTitle(title: string) {\r\n  this.titleService.setTitle(title);\r\n}\r\npublic handleDelete() {\r\n    this.router.navigate(['admin/wf'])\r\n}\r\n\r\n}","<div class=\"diagram-parent\">\r\n  <app-ai-diagram \r\n    *ngIf=\"metadata$ | async as metadata\"\r\n    [metadata]=\"metadata\"\r\n    (workflowDeleted)=\"handleDelete()\"\r\n  ></app-ai-diagram>\r\n</div>\r\n\r\n<div class=\"modeler\"></div>\r\n","import { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { AIFlowBuilderService } from '@app/ai-flow-builder/services/aiflow-builder.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-flow-save-update',\r\n  standalone: true,\r\n  imports: [NgIf, ReactiveFormsModule, NgClass, NgFor],\r\n  templateUrl: './flow-save-update.component.html',\r\n  styleUrl: './flow-save-update.component.scss'\r\n})\r\nexport class FlowSaveUpdateComponent implements OnInit {\r\n  submitted: boolean = false;\r\n  processName: string;\r\n  dataList:any;\r\n  id: string;\r\n  isEdit:boolean=false;\r\n  currentMode: any;\r\n  error: string='';\r\n  currState: any;\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    private fb: UntypedFormBuilder,\r\n    private aIFlowBuilderService: AIFlowBuilderService\r\n  ) { }\r\n  aiFlowForm: UntypedFormGroup;\r\n  ngOnInit() {\r\n    this.processName = sessionStorage.getItem('AppName');\r\n    this.aiFlowForm = this.getFormGroup(this.dataList);\r\n  \r\n  }\r\n  \r\n  get f() {\r\n    return this.aiFlowForm.controls;\r\n  }  \r\n  \r\n  getFormGroup(values){\r\n    return this.fb.group({\r\n      ID: values?.ID,\r\n      flowName: [values?.FlowName, [Validators.required, Validators.pattern('^[a-zA-Z0-9_]+$'), Validators.maxLength(25)]],  \r\n      flowDescription: [values?.FlowDescription, Validators.required],\r\n    });\r\n  }\r\n   onSubmit() {\r\n    const rawData = {...this.aiFlowForm.getRawValue(), accessToken: localStorage.getItem('AccessToken') };\r\n       if (this.aiFlowForm.invalid) {\r\n           this.submitted = true;\r\n           return;\r\n       }\r\n\r\n      this.isUpdate ?\r\n          this.aIFlowBuilderService.updateAiFlow(rawData.ID, rawData).subscribe(_ => {\r\n              this.activeModal.close(true);\r\n          }) :\r\n          this.aIFlowBuilderService.createAiFlow(rawData).subscribe(_ => {\r\n              this.activeModal.close(true);\r\n          })\r\n      }\r\n\r\n   get isUpdate(){\r\n    return !!this.id;\r\n   }\r\n}\r\n\r\n","<form [formGroup]=\"aiFlowForm\" class=\"p-4\">\r\n<div>\r\n  <div class=\"modal-header\" style=\"justify-content: space-between;\">\r\n      <h4 class=\"modal-title\">Flow Details</h4>\r\n      <button type=\"button\" aria-label=\"Close\" class=\"close-button\" (click)=\"activeModal.close(false)\">\r\n        <span aria-hidden=\"true\" class=\"fas fa-times-circle fa-fw\"></span>\r\n    </button>   \r\n  </div>\r\n<hr>\r\n      <div class=\"row gy-4\">       \r\n        <div class=\"col-sm-12\">\r\n          <label class=\"input-label\" for=\"ex2\">Name</label>\r\n          <span [style.color]=\"'red'\">&nbsp;*</span>\r\n          <input class=\"form-control\" id=\"flowName\"\r\n            [ngClass]=\"{'is-invalid': (submitted && (f.flowName.errors?.required || f.flowName.errors?.pattern))}\"\r\n            formControlName=\"flowName\"\r\n            [value]=\"aiFlowForm.get('flowName').value\"\r\n            type=\"text\">\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n          <label class=\"input-label\" for=\"ex3\">Description</label>\r\n          <span [style.color]=\"'red'\">&nbsp;*</span>\r\n          <textarea class=\"form-control custom-text-area\" id=\"flowDescription\"\r\n            [ngClass]=\"{'is-invalid': (submitted && f.flowDescription.errors?.required)}\"\r\n            formControlName=\"flowDescription\"\r\n            [value]=\"aiFlowForm.get('flowDescription').value\"\r\n            type=\"text\">\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n</div>\r\n\r\n<div class=\"update_detail mt-4\">\r\n  <button type=\"button\" class=\"btn btn-primary\"  (click)=\"activeModal.close(false)\">Cancel</button>\r\n  <button type=\"submit\" *ngIf=\"currentMode !== 'Published'\" (click)=\"onSubmit()\" class=\"btn btn-primary\">Save</button>\r\n</div>\r\n</form>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { WFService } from '@app/admin/core/services/wfservice.service';\r\nimport { GenericGridComponent } from '@app/admin/Shared/generic-grid/generic-grid.component';\r\nimport { GridExportComponent } from '@app/admin/Shared/grid-export/grid-export.component';\r\nimport { WorkflowBmAssociationComponent } from '@app/admin/Shared/workflow-bm-association/workflow-bm-association.component';\r\nimport { AdditionalPermissionComponent } from '@app/admin/wf/components/additional-permission/additional-permission.component';\r\nimport { GridConfigStaticColComponent } from '@app/admin/wf/components/grid-config-static-col/grid-config-static-col.component';\r\nimport { WfEmailTemplateComponent } from '@app/admin/wf/wfemailtemplate/components/wf-email-template/wf-email-template.component';\r\nimport { WfRoleGridComponent } from '@app/admin/wf/wfroles/components/wf-role-grid/wf-role-grid.component';\r\nimport { FlowSaveUpdateComponent } from '@app/ai-flow-builder/components/flow-save-update/flow-save-update.component';\r\nimport { AiFlow } from '@app/ai-flow-builder/models/ai-flow.model';\r\nimport { AIFlowBuilderService } from '@app/ai-flow-builder/services/aiflow-builder.service';\r\nimport { IHeaderMap, MessageService } from '@app/core';\r\nimport { UserDetail } from '@app/core/models/user-detail';\r\nimport { environment } from '@env/environment';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { WebhookConfigComponent } from '../webhook-config/webhook-config.component';\r\n\r\n@Component({\r\n  selector: 'app-flow-builder',\r\n  standalone: true,\r\n    imports: [\r\n          NgIf,\r\n          ReactiveFormsModule,\r\n          GenericGridComponent,\r\n          FormsModule,\r\n      ],\r\n  templateUrl: './flow-builder.component.html',\r\n  styleUrl: './flow-builder.component.scss'\r\n})\r\nexport class FlowBuilderComponent implements OnInit {\r\n  @ViewChild('jsonFileInput', { static: false }) jsonModalTemplate!: ElementRef;\r\n  \r\n  file: File = null;\r\n  IsValidFile = false;\r\n  fileName = '';\r\n  errorMsg = '';\r\n  dataSource: AiFlow[] = [];\r\n  itemsCount: number;\r\n  bodyData = {\r\n    PageSize: 10,\r\n    PageNumber: 1,\r\n    SortColumn: 'CRTDON',\r\n    SortOrder: 'desc',\r\n    TimeZone: 0,\r\n    GridFilters: []    \r\n  };  \r\n\r\n  HeaderMap: IHeaderMap = {\r\n    config: {\r\n      header: {\r\n        columns: [\r\n          {\r\n            objectKey: 'FlowName',\r\n            displayName: 'Flow Name',\r\n            width: '18%'\r\n          },\r\n          {\r\n            objectKey: 'FlowDescription',\r\n            displayName: 'Flow Description',\r\n            width: '19%'\r\n          },\r\n          {\r\n            objectKey: 'CrtdOn',\r\n            displayName: 'Date Added',\r\n            dataType: 'Date',\r\n            format: environment.Setting.dateTimeFormatNoSeconds,\r\n            timeZone: this.userDetail?.TimeZone?.toString(),\r\n            width: '23%'\r\n          },{\r\n            objectKey: 'ModfOn',\r\n            displayName: 'Date Modified',\r\n            dataType: 'Date',\r\n            format: environment.Setting.dateTimeFormatNoSeconds,\r\n            timeZone: this.userDetail?.TimeZone?.toString(),\r\n            width: '23%'\r\n          },\r\n          {\r\n            objectKey: 'ID',\r\n            displayName: 'Designer',\r\n            dataType: 'LinkWithSpecialChar',\r\n            SpecialChar: 'Click here',\r\n            width: '15%'\r\n          }\r\n        ],\r\n        action: {\r\n          Edit: true,\r\n          Delete: true,\r\n          aiSetting: true,\r\n          Checkbox: true\r\n        },\r\n        columnFilter: false,\r\n      },\r\n      paging: false,\r\n    }\r\n  };\r\n  processName: string;\r\n  wfmode: any;\r\n  ID: any;\r\n  DisplayName:any;\r\n  Version:any;\r\n  WFForm: UntypedFormGroup;\r\n  alertMsgTxt: string[] = [];\r\n\r\n  constructor(\r\n    private wfsrvc: WFService,\r\n    private dialog: MatDialog,\r\n    private userDetail: UserDetail,\r\n    private toastr: ToastrService,\r\n    private msg: MessageService,\r\n    private fb: UntypedFormBuilder,\r\n    private modalService: NgbModal,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router : Router,\r\n    private aiFlowBuilderService: AIFlowBuilderService\r\n\r\n  ) {}\r\n\r\n  ngOnInit() {    \r\n  this.activatedRoute.queryParams.subscribe(qParams =>{\r\n      this.initialize(qParams)\r\n    });\r\n    \r\n  }\r\n\r\n  initialize(queryParams){\r\n    const lowerKeyCase = [];\r\n    Object.keys(queryParams).forEach(param =>{\r\n      const lowerCaseParam = param.toLocaleLowerCase();\r\n      lowerKeyCase.push({ key: lowerCaseParam, value: queryParams[param] });\r\n    })\r\n\r\n    const pName = lowerKeyCase.find(lk => lk.key === 'pname')?.value;\r\n    const dname = lowerKeyCase.find(lk => lk.key === 'dname')?.value;\r\n\r\n    if(pName && dname){\r\n      this.processName = pName\r\n      this.DisplayName = dname;\r\n    }else{\r\n      this.processName = sessionStorage.getItem('AppName');\r\n      this.DisplayName = sessionStorage.getItem('DisplayName');\r\n    }\r\n\r\n    this.WFForm = this.fb.group({  \r\n      CangeStatus: ['-1'],\r\n      ChangeMode: ['-1']\r\n    });\r\n\r\n    this.LoadData();\r\n  }\r\n\r\n  actionClick(event) {    \r\n    switch (event.action) {\r\n      case 'Edit':\r\n        this.CreateNewRecord(event.rowIndex);\r\n        break;\r\n      case 'Delete':\r\n        this.showDeleteMessage(event.rowIndex);\r\n        break;   \r\n      case 'aiSetting':\r\n       this.openWebhook(event.rowIndex);\r\n        break;   \r\n      case 'SpecialCharClick':        \r\n        if (event.ColumnFilterDropdown === 'Role') {\r\n          this.CreateWFRoles(event.rowIndex);\r\n        }\r\n        else if (event.ColumnFilterDropdown === 'BM') {\r\n          this.CreateWFBM(event.rowIndex);\r\n        }\r\n        else if (event.ColumnFilterDropdown === 'EmailTemplate') {\r\n          this.CreateWFEmailTemplate(event.rowIndex);\r\n        } else {\r\n          if(window.location.href.includes('wfadmin')){\r\n            this.router.navigate(['wfadmin/admin/ai-flow/builder-entity'], { queryParams: { flowName: this.processName, id: this.dataSource[event.rowIndex].ID } });\r\n          }\r\n          else{\r\n            this.router.navigate(['admin/ai-flow/builder-entity'], { queryParams: { flowName: this.dataSource[event.rowIndex].FlowName, id: this.dataSource[event.rowIndex].ID } });\r\n          }\r\n        }\r\n        break;\r\n        // case 'Link':\r\n        //   const wfid = this.dataSource[event.rowIndex].WFID;\r\n        //   const version = this.dataSource[event.rowIndex].Ver;\r\n        //   sessionStorage.setItem('WFVersion',version);          \r\n        //     window.open('/admin/wf/wfcondition?id='+wfid,'_blank');                   \r\n        //   break;\r\n    }\r\n  }\r\n  \r\n  LoadData() {        \r\n    this.aiFlowBuilderService.getAiFlows().subscribe(aiFlows => {      \r\n      this.dataSource = aiFlows || [];\r\n  })\r\n  }\r\n\r\n  ChangeStatus(event:any){                  \r\n    // const selectedStatus = this.dataSource.filter(x => x.selected === true).map(x => x.WFID).join(',');\r\n    // if(event.target.value !== \"-1\" && !!selectedStatus){\r\n    //   this.wfsrvc.ChangeWfStatus(selectedStatus,event.target.value).subscribe(\r\n    //     result => {\r\n    //       if (result) {\r\n    //         this.LoadData();\r\n    //         this.WFForm.get('CangeStatus').patchValue('-1');\r\n    //         this.toastr.success('Status Changed successfully');\r\n    //       }\r\n    //     });\r\n    // } else{  \r\n    //   if(event.target.value !== \"-1\" && (selectedStatus === undefined || selectedStatus === '')){\r\n    //     this.WFForm.get('CangeStatus').patchValue('-1');\r\n    //     this.toastr.warning('Please select at least one record.');\r\n    //   }         \r\n    // } \r\n  }\r\n\r\n  ChangeMode(event:any){\r\n    // this.wfmode = event.target.value;\r\n    // const selectedStatus = this.dataSource.filter(x => x.selected === true).map(x => x.WFID).join(',');\r\n    // if(this.wfmode !== \"-1\" && !!selectedStatus){\r\n    //   this.wfsrvc.ChangeWfMode(selectedStatus,this.wfmode).subscribe(\r\n    //     result => {\r\n    //       if (result) {\r\n    //         this.LoadData();\r\n    //         this.WFForm.get('ChangeMode').patchValue('-1');\r\n    //         this.toastr.success('Mode Changed successfully');\r\n    //       }\r\n    //     });\r\n    // } else{  \r\n    //   if(this.wfmode !== \"-1\" && (selectedStatus === undefined || selectedStatus === '')){\r\n    //     this.WFForm.get('ChangeMode').patchValue('-1');\r\n    //     this.toastr.warning('Please select at least one record.');\r\n    //   }         \r\n    // }\r\n  }\r\n  OpenAdditionalPermission(){    \r\n    this.msg.showComponent(AdditionalPermissionComponent, {}, {size: 'xl'});   \r\n  }\r\n\r\n  CreateNewRecord(index){\r\n    const item = index !== null ? this.dataSource[index] : null;\r\n    const modal = this.msg.showComponent(FlowSaveUpdateComponent, {\r\n      id: item ? item.ID: null,\r\n      dataList: item,\r\n      // currentMode: item?.WorflowMode,\r\n    });\r\n    modal.result.then(async (result) => {      \r\n      if (result) {\r\n        this.toastr.success('Data saved successfully');\r\n        this.LoadData();\r\n      }\r\n    });\r\n  }\r\n\r\n   openWebhook(index){\r\n    const item = index !== null ? this.dataSource[index] : null;\r\n    const modal = this.msg.showComponent(WebhookConfigComponent, {\r\n      id: item ? item.ID: null,\r\n      FlowName: item ? item.FlowName: null,\r\n      // dataList: item,\r\n      // currentMode: item?.WorflowMode,\r\n    },{ size: 'lg' });\r\n    modal.result.then(async (result) => {      \r\n      if (result) {\r\n        this.toastr.success('Data saved successfully');\r\n        this.LoadData();\r\n      }\r\n    });\r\n  }\r\n\r\n   showDeleteMessage(Index:any) {    \r\n    if (Index > -1) {\r\n      this.ID = this.dataSource[Index].ID;\r\n      this.msg.showMessage('Warning', {\r\n        header: 'Delete Selected Item',\r\n        body: 'Do you want to delete selected item?',\r\n        btnText: 'Delete',\r\n        checkboxText: 'Yes, delete selected item',\r\n        isDelete: true,\r\n        isNewDesign : true,\r\n        callback: this.deleteSelectedConfirmation,\r\n        caller: this,\r\n      })\r\n    } else {\r\n      this.msg.showMessage('Warning', { body: 'At least one record must be selected in order to delete' });     \r\n    }\r\n  }\r\n  deleteSelectedConfirmation(modelRef: NgbModalRef, Caller: FlowBuilderComponent) {    \r\n      Caller.aiFlowBuilderService.deleteAIFlow(Caller.ID).subscribe(\r\n        (result: any) => {     \r\n          Caller.LoadData();           \r\n          modelRef.close();\r\n        }, error => {      \r\n          Caller.msg.showMessage('Fail', {body: error.error });    \r\n        });\r\n  }\r\n\r\n\r\n  openExportGridConfigurationPopup(ExportType: string) {\r\n    this.msg.showComponent(GridExportComponent, {\r\n      ProcessName: this.processName,\r\n      objBaseGrid: this,\r\n      ExportType: ExportType.toUpperCase(),\r\n      WFIds: this.dataSource.filter((rec: any) => rec.selected).map(rec => rec.ID).join(),\r\n      ExportUserData: (original) => {\r\n        return {\r\n          ...original,\r\n          SortColumn: this.bodyData.SortColumn,\r\n          SortOrder: this.bodyData.SortOrder,\r\n          ProcessName: this.processName,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n    CreateWFRoles(index){    \r\n    const item = this.dataSource[index];\r\n    const modal = this.msg.showComponent(WfRoleGridComponent, {\r\n      WFID: item.ID,\r\n      WFName: item.FlowName,\r\n    });\r\n    modal.result.then(res => {\r\n      res &&  this.toastr.success('Data saved successfully.');\r\n    })\r\n  }\r\n\r\n  CreateWFBM(index){      \r\n    const item = this.dataSource[index];\r\n    const modal = this.msg.showComponent(WorkflowBmAssociationComponent, {\r\n      WFID: item.ID,\r\n      WFName: item.FlowName,\r\n      // Version: item.Ver,\r\n    });\r\n    modal.result.then(res => res && this.toastr.success('Workflow BM saved successfully.'));\r\n  }\r\n\r\n  CreateWFEmailTemplate(index){    \r\n    const item = this.dataSource[index];\r\n    const modal = this.msg.showComponent(WfEmailTemplateComponent, {\r\n      WFId: item.ID,\r\n      WFName: item.FlowName,\r\n      // Version: item.Ver,\r\n    });\r\n    modal.result.then(res => res && this.toastr.success('Email Template saved successfully.'));\r\n  }\r\n  \r\n  OpenGridConfigStaticCol(){    \r\n    this.msg.showComponent(GridConfigStaticColComponent, {ProcessName:this.processName}, {size: 'lg'});   \r\n  }\r\n\r\nopenJsonImportModal(jsonModalTemplate: any): void {\r\n  this.resetFileDetails();\r\n  const modalRef = this.modalService?.open(jsonModalTemplate, { \r\n    ariaLabelledBy: 'modal-basic-title', \r\n    backdrop: 'static', \r\n    keyboard: false \r\n  });\r\n\r\n  if (modalRef) {\r\n    modalRef.result?.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  } else {\r\n  }\r\n}\r\n\r\nresetFileDetails(): void {\r\n  this.fileName = '';\r\n  this.errorMsg = '';\r\n  this.IsValidFile = true;\r\n  this.file = null;  \r\n}\r\n\r\n}\r\n\r\n","<div class=\"p-3\">\r\n    <div class=\"d-flex justify-content-between flex-column flex-md-row align-items-center\">  \r\n      <div class=\"display-name\">Ai Flow</div>\r\n      <button type=\"button\" class=\"btn btn-warning text-white open-popup-btn\" (click)=\"CreateNewRecord(null)\">\r\n        <i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"p-2\"></div>\r\n\r\n    <div class=\"grid\">\r\n      <generic-grid\r\n       [dataSource]=\"dataSource\"\r\n       [headerMap]=\"HeaderMap\"\r\n       [itemsCount]=\"itemsCount\"\r\n       (actionClick)=\"actionClick($event)\" \r\n       [sNo]=\"false\">\r\n     </generic-grid>\r\n  </div>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { BuilderEntityComponent, FlowBuilderComponent } from './page';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FlowBuilderComponent\r\n  },\r\n  {\r\n    path: 'builder-entity',\r\n    component: BuilderEntityComponent\r\n  }\r\n];"],"mappings":"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","names":["_MatThumb","_MatTickMark","_c0","_c3","_c1","_c2","payload","_c0","_c1","flow","_c0"],"x_google_ignoreList":[2]}