{
  "version": 3,
  "sources": ["src/app/admin/core/services/wfservice.service.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ProcessListItem } from '@app/admin/models/process-list-item.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { ApiService } from './api.service';\r\nimport { SimpleLoaderService } from '@app/shared/services/simple-loader.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WFService {\r\n  constructor(\r\n    private api: ApiService,\r\n    private http: HttpClient,\r\n    private simpleLoader: SimpleLoaderService\r\n  ) {}\r\n\r\n  private withLoader<T>(url: string, request$: Observable<T>): Observable<T> {\r\n    this.simpleLoader.show(url, true);\r\n    return request$.pipe(finalize(() => this.simpleLoader.hide()));\r\n  }\r\n\r\n  getWFGrid(processName: string, bodyData: any) {\r\n    const url = `wfapiwf/wf/getwfgrid?processName=${processName}`;\r\n    return this.withLoader(url, this.api.postGatway(url, bodyData));\r\n  }\r\n\r\n  ChangeWfStatus(wfID: any, Status: any) {\r\n    const url = `wfapiwf/wf/changewfStatus`;\r\n    return this.withLoader(\r\n      url,\r\n      this.api.postGatway(url, { wfID, status: Status })\r\n    );\r\n  }\r\n\r\n  generateXML(processname: any, Version: any) {\r\n    const url = `formview/SaveWFJson/${processname}?Version=${Version}`;\r\n    return this.withLoader(url, this.api.post(url, null));\r\n  }\r\n\r\n  ChangeWfMode(wfID: any, Mode: any) {\r\n    const url = `wfapiwf/wf/changewfMode`;\r\n    return this.withLoader(url, this.api.postGatway(url, { wfID, Mode }));\r\n  }\r\n\r\n  GetAdditionalPermission(processName: string) {\r\n    const url = `wfapiwf/wf/GetAdditionalPermission`;\r\n    return this.withLoader(url, this.api.getGateway(url, { processName }));\r\n  }\r\n\r\n  AddUpdateAdditionalPermission(processName: any, item: any) {\r\n    const url = `wfapiwf/wf/AddUpdateAdditionalPermission?processname=${processName}`;\r\n    return this.withLoader(url, this.api.postGatway(url, item));\r\n  }\r\n\r\n  CreateWFVersion(wfID: any, timezone: any) {\r\n    const url = `wfapiwf/wf/CreateWFVersion?wfID=${wfID}&timezone=${timezone}`;\r\n    return this.withLoader(url, this.api.postGatway(url, null));\r\n  }\r\n\r\n  ExportWFData(wfID: string) {\r\n    const url = `wfapiwf/wf/ExportWFData?wfID=${wfID}`;\r\n    return this.withLoader(url, this.api.postGetFileGateway(url, null, 'blob'));\r\n  }\r\n\r\n  AddUpdateWorkflow(form: any) {\r\n    const url = `wfapiwf/wf/AddUpdateWorkflow`;\r\n    return this.withLoader(url, this.api.postGatway(url, form));\r\n  }\r\n\r\n  DeleteWF(id: string) {\r\n    const url = `wfapiwf/wf/DeleteWF?wfIDs=${id}`;\r\n    return this.withLoader(url, this.api.deleteGridGateway(url));\r\n  }\r\n\r\n  GetWFStagePercentages(wfid: string) {\r\n    const url = `wfapiwf/wf/GetWFStagePercentages?wfid=${wfid}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  getWFColumns() {\r\n    return [\r\n      { DisplayName: 'Workflow Name', Name: 'nam', IsAdd: '0' },\r\n      { DisplayName: 'Friendly Name', Name: 'DISPNAME', IsAdd: '0' },\r\n      { DisplayName: 'Version', Name: 'Ver', IsAdd: '0' },\r\n      { DisplayName: 'Mode', Name: 'LiveSTATUS', IsAdd: '0' },\r\n      { DisplayName: 'Date Added', Name: 'crtdon', IsAdd: '0' },\r\n      { DisplayName: 'Date Modified', Name: 'modfon', IsAdd: '0' },\r\n      { DisplayName: 'Condition', Name: 'stgBMcondition', IsAdd: '0' },\r\n    ];\r\n  }\r\n\r\n  getEndPoint(ExportType: string): string {\r\n    return this.api.endpoint + '/wf/ExportWFGrid';\r\n  }\r\n\r\n  dmoListOrderByDMO(processData: any, CanvasType?: any) {\r\n    if (CanvasType === null || CanvasType === undefined) {\r\n      CanvasType = 'AdminView';\r\n    }\r\n    const url = `listview/getDmo/${processData}?isSortByDMO=true&CanvasType=${CanvasType}`;\r\n    return this.withLoader(url, this.api.get(url));\r\n  }\r\n\r\n  ExportToExcel(processName: any, wfData: any, WFIds: any) {\r\n    const url = `wfapiwf/wf/ExportWFGrid?processname=${processName}&WFIds=${WFIds}`;\r\n    return this.withLoader(\r\n      url,\r\n      this.api.postGetFileGateway(url, wfData, 'blob')\r\n    );\r\n  }\r\n\r\n  ExportFileWithEndPointURL(userData: any, url: any) {\r\n    return this.withLoader(\r\n      url,\r\n      this.api.postGetFileWithEndPoint(url, userData, 'blob')\r\n    );\r\n  }\r\n\r\n  GetWFConditions(wfid: string, wfosId?: string, WfoId?: string) {\r\n    const url = `wfapiwf/wf/GetWFConditions?wfID=${wfid}&tz=0${\r\n      wfosId ? `&wfosId=${wfosId}` : ''\r\n    }${WfoId ? `&WfoId=${WfoId}` : ''}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  GetWFAppList() {\r\n    const url = `wfapiwf/wf/GetWFProcessList`;\r\n    return this.withLoader(\r\n      url,\r\n      this.api.getGateway(url).pipe(map((res) => res.Data as ProcessListItem[]))\r\n    );\r\n  }\r\n\r\n  getwfBM(wfid: any) {\r\n    const url = `wfapiwf/wf/GetWFBM?WFId=${wfid}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  getBMOGList(bmid: any) {\r\n    const url = `wfapiwf/wf/GetBMOGListBasedOnBM?BMId=${bmid}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  GetStageStateByWFID(wfId: any, condlevel: any) {\r\n    const url = `wfapiwf/wf/GetStageStateByWFID?WFId=${wfId}&CondLevel=${condlevel}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  getDmoBasedOnBMId(bmid: any) {\r\n    const url = `wfapiwf/wf/GetDmoBasedOnBM?BMId=${bmid}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  GetWFConditionAreaControls(bmid: any, bmogname: any, condArea: any) {\r\n    const url = `wfapiwf/wf/GetWFConditionAreaControls?bmId=${bmid}&bmogName=${bmogname}&conditionArea=${condArea}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  SaveWFCondition(bodyData: any) {\r\n    const url = `wfapiwf/wf/WFConditionUpsert`;\r\n    return this.withLoader(url, this.api.postGatway(url, bodyData));\r\n  }\r\n\r\n  GetWFConditionDetail(CondId: any) {\r\n    const url = `wfapiwf/wf/GetWFConditionDetail?conditionID=${CondId}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  DeleteWFCondition(id: string) {\r\n    const url = `wfapiwf/wf/DeleteWFConditions?condIds=${id}`;\r\n    return this.withLoader(url, this.api.deleteGridGateway(url));\r\n  }\r\n\r\n  DeleteBmWfAssociation(AssociationId: string) {\r\n    const url = `wfapiwf/wf/DeleteBmWfAssociation?AssociationId=${AssociationId}`;\r\n    return this.withLoader(url, this.api.deleteGridGateway(url));\r\n  }\r\n\r\n  UploadFile(formData: FormData, processName: any) {\r\n    const url = `wfapiwf/wf/Upload/WF?processName=${processName}`;\r\n    return this.withLoader(url, this.api.UploadFileGateway(url, formData));\r\n  }\r\n\r\n  DownloadWFTemp(processName: any) {\r\n    const url = `wfapiwf/wf/DownloadTemplate/WF?processName=${processName}`;\r\n    return this.withLoader(url, this.api.postGetFileGateway(url, null, 'Blob'));\r\n  }\r\n\r\n  ChangeWfConditionStatus(condIds: any, Status: any) {\r\n    const url = `wfapiwf/wf/ChangeStatusWFConditions?condIds=${condIds}&status=${Status}`;\r\n    return this.withLoader(url, this.api.postGatway(url, null));\r\n  }\r\n\r\n  GetWFRoles(wfId: any) {\r\n    const url = `wfapiwf/wf/GetWFRoles?wfId=${wfId}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  SaveWFRoleAssociation(roleguid: any, wfId: any, associatedId: any) {\r\n    const url = `wfapiwf/wf/SaveWFRoleAssociation?roleguid=${roleguid}&wfId=${wfId}&associatedId=${associatedId}`;\r\n    return this.withLoader(url, this.api.postGatway(url, null));\r\n  }\r\n\r\n  DeleteWFRoles(id: any) {\r\n    const url = `wfapiwf/wf/DeleteWFRoles?associatedIds=${id}`;\r\n    return this.withLoader(url, this.api.deleteGridGateway(url));\r\n  }\r\n\r\n  ChangeWfBMZone(id: any, processName: any) {\r\n    const url = `wfapiwf/wf/ChangeWfBMZone?associatedId=${id}&processName=${processName}`;\r\n    return this.withLoader(url, this.api.postGatway(url, null));\r\n  }\r\n\r\n  SaveWFEmailTemplate(bodyData: any) {\r\n    const url = `wfapiwf/wf/SaveWFEmailTemplate`;\r\n    return this.withLoader(url, this.api.postGatway(url, bodyData));\r\n  }\r\n\r\n  GetWFEmailTemplate(wfId: any) {\r\n    const url = `wfapiwf/wf/GetWFEmailTemplate?wfId=${wfId}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  GetBMFWFAssociation(wfId: any) {\r\n    const url = `wfapiwf/wf/GetBMFWFAssociation?wfId=${wfId}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  SaveWFBMAssociation(wfId: any, bmIds: any) {\r\n    const url = `wfapiwf/wf/SaveWFBMAssociation?wfId=${wfId}&bmIds=${bmIds}`;\r\n    return this.withLoader(url, this.api.postGatway(url, null));\r\n  }\r\n\r\n  GetLiveEnvironmentWF(processName: any) {\r\n    const url = `wfapiwf/wf/GetLiveEnvironmentWF?processname=${processName}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  GetLiveEnvirmentBM(processName: any, wfId: any) {\r\n    const url = `wfapiwf/wf/GetLiveEnvirmentBM?processname=${processName}&wfId=${wfId}`;\r\n    return this.withLoader(url, this.api.getGateway(url));\r\n  }\r\n\r\n  AddWfBMPair(wfId: any, bmId: any) {\r\n    const url = `wfapiwf/wf/AddWfBMPair?wfId=${wfId}&bmId=${bmId}`;\r\n    return this.withLoader(url, this.api.postGatway(url, null));\r\n  }\r\n\r\n  GetWFCondtionGrid(wfId: any, bodyData: any) {\r\n    const url = `wfapiwf/wf/GetWFConditionsGrid?wfId=${wfId}&tz=0`;\r\n    return this.withLoader(url, this.api.postGatway(url, bodyData));\r\n  }\r\n\r\n  GetGridConfigStaticCol(processName: string) {\r\n    const url = `wfapiwf/wf/GetGridConfigStaticCol`;\r\n    return this.withLoader(url, this.api.getGateway(url, { processName }));\r\n  }\r\n\r\n  SaveGridConfigStaticCol(processName: any, colData: any) {\r\n    const url = `wfapiwf/wf/SaveGridConfigStaticCol?processname=${processName}`;\r\n    return this.withLoader(url, this.api.postGatway(url, colData));\r\n  }\r\n\r\n  ImportJsonBM(processName: any, BMID: any, parsedData: any) {\r\n    const url = `wfapiwf/compare/ImportJsonBM?importBMID=${BMID}&processName=${processName}`;\r\n    return this.withLoader(url, this.api.ImportBM(url, parsedData));\r\n  }\r\n\r\n  ImportJsonWF(processName: any, WFID: any, parsedData: any) {\r\n    const url = `wfapiwf/compare/ImportJsonWF?importWFID=${WFID}&processName=${processName}`;\r\n    return this.withLoader(url, this.api.ImportWF(url, parsedData));\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
