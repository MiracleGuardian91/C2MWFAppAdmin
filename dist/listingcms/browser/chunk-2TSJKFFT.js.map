{
  "version": 3,
  "sources": ["src/app/modules/gateway/gateway.resolver.ts", "src/app/modules/gateway/gateway-routing.module.ts", "src/app/modules/gateway/gateway.module.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GatewayResolver implements Resolve<any> {\r\n\r\n    constructor(private readonly router: Router) {}\r\n    \r\n    resolve(route: ActivatedRouteSnapshot): void {\r\n        const appName = sessionStorage.getItem('AppName') || route.queryParamMap.get('AppName');\r\n        appName && this.router.navigate(['/process_control', appName]);\r\n    }\r\n}\r\n", "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GatewayResolver } from './gateway.resolver';\r\n\r\n\r\nconst routes: Routes = [{ path: '',  resolve: {res: GatewayResolver}}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GatewayRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GatewayRoutingModule } from './gateway-routing.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    GatewayRoutingModule\r\n  ]\r\n})\r\nexport class GatewayModule { }\r\n"],
  "mappings": ";;;;;;;;;;;;AAMM,IAAO,kBAAP,MAAO,iBAAe;EAExB,YAA6B,QAAc;AAAd,SAAA,SAAA;EAAiB;EAE9C,QAAQ,OAA6B;AACjC,UAAM,UAAU,eAAe,QAAQ,SAAS,KAAK,MAAM,cAAc,IAAI,SAAS;AACtF,eAAW,KAAK,OAAO,SAAS,CAAC,oBAAoB,OAAO,CAAC;EACjE;;;uCAPS,kBAAe,mBAAA,MAAA,CAAA;IAAA;EAAA;;4EAAf,kBAAe,SAAf,iBAAe,WAAA,YAFZ,OAAM,CAAA;EAAA;;;;ACCtB,IAAM,SAAiB,CAAC,EAAE,MAAM,IAAK,SAAS,EAAC,KAAK,gBAAe,EAAC,CAAC;AAM/D,IAAO,uBAAP,MAAO,sBAAoB;;;uCAApB,uBAAoB;IAAA;EAAA;;wEAApB,sBAAoB,CAAA;EAAA;;4EAHrB,aAAa,SAAS,MAAM,GAC5B,YAAY,EAAA,CAAA;EAAA;;;;ACGlB,IAAO,gBAAP,MAAO,eAAa;;;uCAAb,gBAAa;IAAA;EAAA;;wEAAb,eAAa,CAAA;EAAA;;;MAJtB;MACA;IAAoB,EAAA,CAAA;EAAA;;",
  "names": []
}
