{
  "version": 3,
  "sources": ["../../../../../../node_modules/diagram-js/lib/features/auto-resize/AutoResize.js"],
  "sourcesContent": ["import inherits from 'inherits-browser';\nimport { getBBox as getBoundingBox } from '../../util/Elements';\nimport { asTRBL, asBounds } from '../../layout/LayoutUtil';\nimport { assign, flatten, find, forEach, groupBy, isArray, matchPattern, pick, values } from 'min-dash';\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n/**\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('../../model/Types').Shape} Shape\n *\n * @typedef {import('../../util/Types').Direction} Direction\n * @typedef {import('../../util/Types').Rect} Rect\n * @typedef {import('../../util/Types').RectTRBL} RectTRBL\n *\n * @typedef {import('../../core/ElementRegistry').default} ElementRegistry\n * @typedef {import('../../core/EventBus').default} EventBus\n * @typedef {import('../modeling/Modeling').default} Modeling\n * @typedef {import('../rules/Rules').default} Rules\n */\n\n/**\n * An auto resize component that takes care of expanding a parent element\n * if child elements are created or moved close the parents edge.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Modeling} modeling\n * @param {Rules} rules\n */\nexport default function AutoResize(eventBus, elementRegistry, modeling, rules) {\n  CommandInterceptor.call(this, eventBus);\n  this._elementRegistry = elementRegistry;\n  this._modeling = modeling;\n  this._rules = rules;\n  var self = this;\n  this.postExecuted(['shape.create'], function (event) {\n    var context = event.context,\n      hints = context.hints || {},\n      shape = context.shape,\n      parent = context.parent || context.newParent;\n    if (hints.autoResize === false) {\n      return;\n    }\n    self._expand([shape], parent);\n  });\n  this.postExecuted(['elements.move'], function (event) {\n    var context = event.context,\n      elements = flatten(values(context.closure.topLevel)),\n      hints = context.hints;\n    var autoResize = hints ? hints.autoResize : true;\n    if (autoResize === false) {\n      return;\n    }\n    var expandings = groupBy(elements, function (element) {\n      return element.parent.id;\n    });\n    forEach(expandings, function (elements, parentId) {\n      // optionally filter elements to be considered when resizing\n      if (isArray(autoResize)) {\n        elements = elements.filter(function (element) {\n          return find(autoResize, matchPattern({\n            id: element.id\n          }));\n        });\n      }\n      self._expand(elements, parentId);\n    });\n  });\n  this.postExecuted(['shape.toggleCollapse'], function (event) {\n    var context = event.context,\n      hints = context.hints,\n      shape = context.shape;\n    if (hints && hints.autoResize === false) {\n      return;\n    }\n    if (shape.collapsed) {\n      return;\n    }\n    self._expand(shape.children || [], shape);\n  });\n  this.postExecuted(['shape.resize'], function (event) {\n    var context = event.context,\n      hints = context.hints,\n      shape = context.shape,\n      parent = shape.parent;\n    if (hints && hints.autoResize === false) {\n      return;\n    }\n    if (parent) {\n      self._expand([shape], parent);\n    }\n  });\n}\nAutoResize.$inject = ['eventBus', 'elementRegistry', 'modeling', 'rules'];\ninherits(AutoResize, CommandInterceptor);\n\n/**\n * Calculate the new bounds of the target shape, given\n * a number of elements have been moved or added into the parent.\n *\n * This method considers the current size, the added elements as well as\n * the provided padding for the new bounds.\n *\n * @param {Shape[]} elements\n * @param {Shape} target\n */\nAutoResize.prototype._getOptimalBounds = function (elements, target) {\n  var offset = this.getOffset(target),\n    padding = this.getPadding(target);\n  var elementsTrbl = asTRBL(getBoundingBox(elements)),\n    targetTrbl = asTRBL(target);\n  var newTrbl = {};\n  if (elementsTrbl.top - targetTrbl.top < padding.top) {\n    newTrbl.top = elementsTrbl.top - offset.top;\n  }\n  if (elementsTrbl.left - targetTrbl.left < padding.left) {\n    newTrbl.left = elementsTrbl.left - offset.left;\n  }\n  if (targetTrbl.right - elementsTrbl.right < padding.right) {\n    newTrbl.right = elementsTrbl.right + offset.right;\n  }\n  if (targetTrbl.bottom - elementsTrbl.bottom < padding.bottom) {\n    newTrbl.bottom = elementsTrbl.bottom + offset.bottom;\n  }\n  return asBounds(assign({}, targetTrbl, newTrbl));\n};\n\n/**\n * Expand the target shape respecting rules, offset and padding\n *\n * @param {Shape[]} elements\n * @param {Shape|string} target The target or its ID.\n */\nAutoResize.prototype._expand = function (elements, target) {\n  if (typeof target === 'string') {\n    target = this._elementRegistry.get(target);\n  }\n  var allowed = this._rules.allowed('element.autoResize', {\n    elements: elements,\n    target: target\n  });\n  if (!allowed) {\n    return;\n  }\n\n  // calculate the new bounds\n  var newBounds = this._getOptimalBounds(elements, target);\n  if (!boundsChanged(newBounds, target)) {\n    return;\n  }\n  var resizeDirections = getResizeDirections(pick(target, ['x', 'y', 'width', 'height']), newBounds);\n\n  // resize the parent shape\n  this.resize(target, newBounds, {\n    autoResize: resizeDirections\n  });\n  var parent = target.parent;\n\n  // recursively expand parent elements\n  if (parent) {\n    this._expand([target], parent);\n  }\n};\n\n/**\n * Get the amount to expand the given shape in each direction.\n *\n * @param {Shape} shape\n *\n * @return {RectTRBL}\n */\nAutoResize.prototype.getOffset = function (shape) {\n  return {\n    top: 60,\n    bottom: 60,\n    left: 100,\n    right: 100\n  };\n};\n\n/**\n * Get the activation threshold for each side for which\n * resize triggers.\n *\n * @param {Shape} shape\n *\n * @return {RectTRBL}\n */\nAutoResize.prototype.getPadding = function (shape) {\n  return {\n    top: 2,\n    bottom: 2,\n    left: 15,\n    right: 15\n  };\n};\n\n/**\n * Perform the actual resize operation.\n *\n * @param {Shape} shape\n * @param {Rect} newBounds\n * @param {Object} [hints]\n * @param {string} [hints.autoResize]\n */\nAutoResize.prototype.resize = function (shape, newBounds, hints) {\n  this._modeling.resizeShape(shape, newBounds, null, hints);\n};\nfunction boundsChanged(newBounds, oldBounds) {\n  return newBounds.x !== oldBounds.x || newBounds.y !== oldBounds.y || newBounds.width !== oldBounds.width || newBounds.height !== oldBounds.height;\n}\n\n/**\n * Get directions of resize as {n|w|s|e} e.g. \"nw\".\n *\n * @param {Rect} oldBounds\n * @param {Rect} newBounds\n *\n * @return {Direction} Resize directions as {n|w|s|e}.\n */\nfunction getResizeDirections(oldBounds, newBounds) {\n  var directions = '';\n  oldBounds = asTRBL(oldBounds);\n  newBounds = asTRBL(newBounds);\n  if (oldBounds.top > newBounds.top) {\n    directions = directions.concat('n');\n  }\n  if (oldBounds.right < newBounds.right) {\n    directions = directions.concat('w');\n  }\n  if (oldBounds.bottom < newBounds.bottom) {\n    directions = directions.concat('s');\n  }\n  if (oldBounds.left > newBounds.left) {\n    directions = directions.concat('e');\n  }\n  return directions;\n}"],
  "mappings": "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",
  "names": ["elements"]
}
