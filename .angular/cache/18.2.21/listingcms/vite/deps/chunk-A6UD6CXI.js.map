{
  "version": 3,
  "sources": ["../../../../../../node_modules/diagram-js/lib/util/RenderUtil.js"],
  "sourcesContent": ["import { isNumber } from 'min-dash';\nimport { attr as svgAttr, create as svgCreate } from 'tiny-svg';\n\n/**\n * @typedef {(string|number)[]} Component\n *\n * @typedef {import('../util/Types').Point} Point\n */\n\n/**\n * @param {Component[] | Component[][]} elements\n *\n * @return {string}\n */\nexport function componentsToPath(elements) {\n  return elements.flat().join(',').replace(/,?([A-Za-z]),?/g, '$1');\n}\n\n/**\n * @param {Point[]} points\n *\n * @return {string}\n */\nexport function toSVGPoints(points) {\n  var result = '';\n  for (var i = 0, p; p = points[i]; i++) {\n    result += p.x + ',' + p.y + ' ';\n  }\n  return result;\n}\n\n/**\n * @param {Point} point\n *\n * @return {Component[]}\n */\nfunction move(point) {\n  return ['M', point.x, point.y];\n}\n\n/**\n * @param {Point} point\n *\n * @return {Component[]}\n */\nfunction lineTo(point) {\n  return ['L', point.x, point.y];\n}\n\n/**\n * @param {Point} p1\n * @param {Point} p2\n * @param {Point} p3\n *\n * @return {Component[]}\n */\nfunction curveTo(p1, p2, p3) {\n  return ['C', p1.x, p1.y, p2.x, p2.y, p3.x, p3.y];\n}\n\n/**\n * @param {Point[]} waypoints\n * @param {number} [cornerRadius]\n * @return {Component[][]}\n */\nfunction drawPath(waypoints, cornerRadius) {\n  const pointCount = waypoints.length;\n  const path = [move(waypoints[0])];\n  for (let i = 1; i < pointCount; i++) {\n    const pointBefore = waypoints[i - 1];\n    const point = waypoints[i];\n    const pointAfter = waypoints[i + 1];\n    if (!pointAfter || !cornerRadius) {\n      path.push(lineTo(point));\n      continue;\n    }\n    const effectiveRadius = Math.min(cornerRadius, vectorLength(point.x - pointBefore.x, point.y - pointBefore.y), vectorLength(pointAfter.x - point.x, pointAfter.y - point.y));\n    if (!effectiveRadius) {\n      path.push(lineTo(point));\n      continue;\n    }\n    const beforePoint = getPointAtLength(point, pointBefore, effectiveRadius);\n    const beforePoint2 = getPointAtLength(point, pointBefore, effectiveRadius * .5);\n    const afterPoint = getPointAtLength(point, pointAfter, effectiveRadius);\n    const afterPoint2 = getPointAtLength(point, pointAfter, effectiveRadius * .5);\n    path.push(lineTo(beforePoint));\n    path.push(curveTo(beforePoint2, afterPoint2, afterPoint));\n  }\n  return path;\n}\nfunction getPointAtLength(start, end, length) {\n  const deltaX = end.x - start.x;\n  const deltaY = end.y - start.y;\n  const totalLength = vectorLength(deltaX, deltaY);\n  const percent = length / totalLength;\n  return {\n    x: start.x + deltaX * percent,\n    y: start.y + deltaY * percent\n  };\n}\nfunction vectorLength(x, y) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n}\n\n/**\n * @param {Point[]} points\n * @param {number|Object} [attrs]\n * @param {number} [radius]\n *\n * @return {SVGElement}\n */\nexport function createLine(points, attrs, radius) {\n  if (isNumber(attrs)) {\n    radius = attrs;\n    attrs = null;\n  }\n  if (!attrs) {\n    attrs = {};\n  }\n  const line = svgCreate('path', attrs);\n  if (isNumber(radius)) {\n    line.dataset.cornerRadius = String(radius);\n  }\n  return updateLine(line, points);\n}\n\n/**\n * @param {SVGElement} gfx\n * @param {Point[]} points\n *\n * @return {SVGElement}\n */\nexport function updateLine(gfx, points) {\n  const cornerRadius = parseInt(gfx.dataset.cornerRadius, 10) || 0;\n  svgAttr(gfx, {\n    d: componentsToPath(drawPath(points, cornerRadius))\n  });\n  return gfx;\n}"],
  "mappings": "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",
  "names": []
}
