{
  "version": 3,
  "sources": ["../../../../../../node_modules/object-refs/dist/index.js", "../../../../../../node_modules/diagram-js/lib/model/index.js", "../../../../../../node_modules/diagram-js/lib/core/ElementFactory.js", "../../../../../../node_modules/bpmn-js/lib/util/CompatibilityUtil.js", "../../../../../../node_modules/bpmn-js/lib/features/modeling/ElementFactory.js"],
  "sourcesContent": ["/**\n * Extends a collection with {@link Refs} aware methods\n *\n * @param {Array<Object>} collection\n * @param {Refs} refs instance\n * @param {Object} property represented by the collection\n * @param {Object} target object the collection is attached to\n *\n * @return {RefsCollection<Object>} the extended array\n */\nfunction extend(collection, refs, property, target) {\n  var inverseProperty = property.inverse;\n\n  /**\n   * Removes the given element from the array and returns it.\n   *\n   * @method RefsCollection#remove\n   *\n   * @param {Object} element the element to remove\n   */\n  Object.defineProperty(collection, 'remove', {\n    value: function (element) {\n      var idx = this.indexOf(element);\n      if (idx !== -1) {\n        this.splice(idx, 1);\n\n        // unset inverse\n        refs.unset(element, inverseProperty, target);\n      }\n      return element;\n    }\n  });\n\n  /**\n   * Returns true if the collection contains the given element\n   *\n   * @method RefsCollection#contains\n   *\n   * @param {Object} element the element to check for\n   */\n  Object.defineProperty(collection, 'contains', {\n    value: function (element) {\n      return this.indexOf(element) !== -1;\n    }\n  });\n\n  /**\n   * Adds an element to the array, unless it exists already (set semantics).\n   *\n   * @method RefsCollection#add\n   *\n   * @param {Object} element the element to add\n   * @param {Number} optional index to add element to\n   *                 (possibly moving other elements around)\n   */\n  Object.defineProperty(collection, 'add', {\n    value: function (element, idx) {\n      var currentIdx = this.indexOf(element);\n      if (typeof idx === 'undefined') {\n        if (currentIdx !== -1) {\n          // element already in collection (!)\n          return;\n        }\n\n        // add to end of array, as no idx is specified\n        idx = this.length;\n      }\n\n      // handle already in collection\n      if (currentIdx !== -1) {\n        // remove element from currentIdx\n        this.splice(currentIdx, 1);\n      }\n\n      // add element at idx\n      this.splice(idx, 0, element);\n      if (currentIdx === -1) {\n        // set inverse, unless element was\n        // in collection already\n        refs.set(element, inverseProperty, target);\n      }\n    }\n  });\n\n  // a simple marker, identifying this element\n  // as being a refs collection\n  Object.defineProperty(collection, '__refs_collection', {\n    value: true\n  });\n  return collection;\n}\n\n/**\n * Checks if a given collection is extended\n *\n * @param {Array<Object>} collection\n *\n * @return {boolean}\n */\nfunction isExtended(collection) {\n  return collection.__refs_collection === true;\n}\nvar collection = {\n  __proto__: null,\n  extend: extend,\n  isExtended: isExtended\n};\nfunction hasOwnProperty(e, property) {\n  return Object.prototype.hasOwnProperty.call(e, property.name || property);\n}\nfunction defineCollectionProperty(ref, property, target) {\n  var collection = extend(target[property.name] || [], ref, property, target);\n  Object.defineProperty(target, property.name, {\n    enumerable: property.enumerable,\n    value: collection\n  });\n  if (collection.length) {\n    collection.forEach(function (o) {\n      ref.set(o, property.inverse, target);\n    });\n  }\n}\nfunction defineProperty(ref, property, target) {\n  var inverseProperty = property.inverse;\n  var _value = target[property.name];\n  Object.defineProperty(target, property.name, {\n    configurable: property.configurable,\n    enumerable: property.enumerable,\n    get: function () {\n      return _value;\n    },\n    set: function (value) {\n      // return if we already performed all changes\n      if (value === _value) {\n        return;\n      }\n      var old = _value;\n\n      // temporary set null\n      _value = null;\n      if (old) {\n        ref.unset(old, inverseProperty, target);\n      }\n\n      // set new value\n      _value = value;\n\n      // set inverse value\n      ref.set(_value, inverseProperty, target);\n    }\n  });\n}\n\n/**\n * Creates a new references object defining two inversly related\n * attribute descriptors a and b.\n *\n * <p>\n *   When bound to an object using {@link Refs#bind} the references\n *   get activated and ensure that add and remove operations are applied\n *   reversely, too.\n * </p>\n *\n * <p>\n *   For attributes represented as collections {@link Refs} provides the\n *   {@link RefsCollection#add}, {@link RefsCollection#remove} and {@link RefsCollection#contains} extensions\n *   that must be used to properly hook into the inverse change mechanism.\n * </p>\n *\n * @class Refs\n *\n * @classdesc A bi-directional reference between two attributes.\n *\n * @param {Refs.AttributeDescriptor} a property descriptor\n * @param {Refs.AttributeDescriptor} b property descriptor\n *\n * @example\n *\n * var refs = Refs({ name: 'wheels', collection: true, enumerable: true }, { name: 'car' });\n *\n * var car = { name: 'toyota' };\n * var wheels = [{ pos: 'front-left' }, { pos: 'front-right' }];\n *\n * refs.bind(car, 'wheels');\n *\n * car.wheels // []\n * car.wheels.add(wheels[0]);\n * car.wheels.add(wheels[1]);\n *\n * car.wheels // [{ pos: 'front-left' }, { pos: 'front-right' }]\n *\n * wheels[0].car // { name: 'toyota' };\n * car.wheels.remove(wheels[0]);\n *\n * wheels[0].car // undefined\n */\nfunction Refs(a, b) {\n  if (!(this instanceof Refs)) {\n    return new Refs(a, b);\n  }\n\n  // link\n  a.inverse = b;\n  b.inverse = a;\n  this.props = {};\n  this.props[a.name] = a;\n  this.props[b.name] = b;\n}\n\n/**\n * Binds one side of a bi-directional reference to a\n * target object.\n *\n * @memberOf Refs\n *\n * @param  {Object} target\n * @param  {String} property\n */\nRefs.prototype.bind = function (target, property) {\n  if (typeof property === 'string') {\n    if (!this.props[property]) {\n      throw new Error('no property <' + property + '> in ref');\n    }\n    property = this.props[property];\n  }\n  if (property.collection) {\n    defineCollectionProperty(this, property, target);\n  } else {\n    defineProperty(this, property, target);\n  }\n};\nRefs.prototype.ensureRefsCollection = function (target, property) {\n  var collection = target[property.name];\n  if (!isExtended(collection)) {\n    defineCollectionProperty(this, property, target);\n  }\n  return collection;\n};\nRefs.prototype.ensureBound = function (target, property) {\n  if (!hasOwnProperty(target, property)) {\n    this.bind(target, property);\n  }\n};\nRefs.prototype.unset = function (target, property, value) {\n  if (target) {\n    this.ensureBound(target, property);\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).remove(value);\n    } else {\n      target[property.name] = undefined;\n    }\n  }\n};\nRefs.prototype.set = function (target, property, value) {\n  if (target) {\n    this.ensureBound(target, property);\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).add(value);\n    } else {\n      target[property.name] = value;\n    }\n  }\n};\n\n/**\n * An attribute descriptor to be used specify an attribute in a {@link Refs} instance\n *\n * @typedef {Object} Refs.AttributeDescriptor\n * @property {String} name\n * @property {boolean} [collection=false]\n * @property {boolean} [enumerable=false]\n */\n\nexport { collection as Collection, Refs };", "import { assign } from 'min-dash';\nimport inherits from 'inherits-browser';\nimport { Refs } from 'object-refs';\nvar parentRefs = new Refs({\n    name: 'children',\n    enumerable: true,\n    collection: true\n  }, {\n    name: 'parent'\n  }),\n  labelRefs = new Refs({\n    name: 'labels',\n    enumerable: true,\n    collection: true\n  }, {\n    name: 'labelTarget'\n  }),\n  attacherRefs = new Refs({\n    name: 'attachers',\n    collection: true\n  }, {\n    name: 'host'\n  }),\n  outgoingRefs = new Refs({\n    name: 'outgoing',\n    collection: true\n  }, {\n    name: 'source'\n  }),\n  incomingRefs = new Refs({\n    name: 'incoming',\n    collection: true\n  }, {\n    name: 'target'\n  });\n\n/**\n * @typedef {import('./Types').Element} Element\n * @typedef {import('./Types').Shape} Shape\n * @typedef {import('./Types').Root} Root\n * @typedef {import('./Types').Label} Label\n * @typedef {import('./Types').Connection} Connection\n */\n\n/**\n * The basic graphical representation\n *\n * @class\n * @constructor\n */\nfunction ElementImpl() {\n  /**\n   * The object that backs up the shape\n   *\n   * @name Element#businessObject\n   * @type Object\n   */\n  Object.defineProperty(this, 'businessObject', {\n    writable: true\n  });\n\n  /**\n   * Single label support, will mapped to multi label array\n   *\n   * @name Element#label\n   * @type Object\n   */\n  Object.defineProperty(this, 'label', {\n    get: function () {\n      return this.labels[0];\n    },\n    set: function (newLabel) {\n      var label = this.label,\n        labels = this.labels;\n      if (!newLabel && label) {\n        labels.remove(label);\n      } else {\n        labels.add(newLabel, 0);\n      }\n    }\n  });\n\n  /**\n   * The parent shape\n   *\n   * @name Element#parent\n   * @type Shape\n   */\n  parentRefs.bind(this, 'parent');\n\n  /**\n   * The list of labels\n   *\n   * @name Element#labels\n   * @type Label\n   */\n  labelRefs.bind(this, 'labels');\n\n  /**\n   * The list of outgoing connections\n   *\n   * @name Element#outgoing\n   * @type Array<Connection>\n   */\n  outgoingRefs.bind(this, 'outgoing');\n\n  /**\n   * The list of incoming connections\n   *\n   * @name Element#incoming\n   * @type Array<Connection>\n   */\n  incomingRefs.bind(this, 'incoming');\n}\n\n/**\n * A graphical object\n *\n * @class\n * @constructor\n *\n * @extends ElementImpl\n */\nfunction ShapeImpl() {\n  ElementImpl.call(this);\n\n  /**\n   * Indicates frame shapes\n   *\n   * @name ShapeImpl#isFrame\n   * @type boolean\n   */\n\n  /**\n   * The list of children\n   *\n   * @name ShapeImpl#children\n   * @type Element[]\n   */\n  parentRefs.bind(this, 'children');\n\n  /**\n   * @name ShapeImpl#host\n   * @type Shape\n   */\n  attacherRefs.bind(this, 'host');\n\n  /**\n   * @name ShapeImpl#attachers\n   * @type Shape\n   */\n  attacherRefs.bind(this, 'attachers');\n}\ninherits(ShapeImpl, ElementImpl);\n\n/**\n * A root graphical object\n *\n * @class\n * @constructor\n *\n * @extends ElementImpl\n */\nfunction RootImpl() {\n  ElementImpl.call(this);\n\n  /**\n   * The list of children\n   *\n   * @name RootImpl#children\n   * @type Element[]\n   */\n  parentRefs.bind(this, 'children');\n}\ninherits(RootImpl, ShapeImpl);\n\n/**\n * A label for an element\n *\n * @class\n * @constructor\n *\n * @extends ShapeImpl\n */\nfunction LabelImpl() {\n  ShapeImpl.call(this);\n\n  /**\n   * The labeled element\n   *\n   * @name LabelImpl#labelTarget\n   * @type Element\n   */\n  labelRefs.bind(this, 'labelTarget');\n}\ninherits(LabelImpl, ShapeImpl);\n\n/**\n * A connection between two elements\n *\n * @class\n * @constructor\n *\n * @extends ElementImpl\n */\nfunction ConnectionImpl() {\n  ElementImpl.call(this);\n\n  /**\n   * The element this connection originates from\n   *\n   * @name ConnectionImpl#source\n   * @type Element\n   */\n  outgoingRefs.bind(this, 'source');\n\n  /**\n   * The element this connection points to\n   *\n   * @name ConnectionImpl#target\n   * @type Element\n   */\n  incomingRefs.bind(this, 'target');\n}\ninherits(ConnectionImpl, ElementImpl);\nvar types = {\n  connection: ConnectionImpl,\n  shape: ShapeImpl,\n  label: LabelImpl,\n  root: RootImpl\n};\n\n/**\n * Creates a root element.\n *\n * @overlord\n *\n * @example\n *\n * ```javascript\n * import * as Model from 'diagram-js/lib/model';\n *\n * const root = Model.create('root', {\n *   x: 100,\n *   y: 100,\n *   width: 100,\n *   height: 100\n * });\n * ```\n *\n * @param {'root'} type\n * @param {any} [attrs]\n *\n * @return {Root}\n */\n\n/**\n * Creates a connection.\n *\n * @overlord\n *\n * @example\n *\n * ```javascript\n * import * as Model from 'diagram-js/lib/model';\n *\n * const connection = Model.create('connection', {\n *   waypoints: [\n *     { x: 100, y: 100 },\n *     { x: 200, y: 100 }\n *   ]\n * });\n * ```\n *\n * @param {'connection'} type\n * @param {any} [attrs]\n *\n * @return {Connection}\n */\n\n/**\n * Creates a shape.\n *\n * @overlord\n *\n * @example\n *\n * ```javascript\n * import * as Model from 'diagram-js/lib/model';\n *\n * const shape = Model.create('shape', {\n *   x: 100,\n *   y: 100,\n *   width: 100,\n *   height: 100\n * });\n * ```\n *\n * @param {'shape'} type\n * @param {any} [attrs]\n *\n * @return {Shape}\n */\n\n/**\n * Creates a label.\n *\n * @example\n *\n * ```javascript\n * import * as Model from 'diagram-js/lib/model';\n *\n * const label = Model.create('label', {\n *   x: 100,\n *   y: 100,\n *   width: 100,\n *   height: 100,\n *   labelTarget: shape\n * });\n * ```\n *\n * @param {'label'} type\n * @param {Object} [attrs]\n *\n * @return {Label}\n */\nexport function create(type, attrs) {\n  var Type = types[type];\n  if (!Type) {\n    throw new Error('unknown type: <' + type + '>');\n  }\n  return assign(new Type(), attrs);\n}\n\n/**\n * Checks whether an object is a model instance.\n *\n * @param {any} obj\n *\n * @return {boolean}\n */\nexport function isModelElement(obj) {\n  return obj instanceof ElementImpl;\n}", "import { create } from '../model';\nimport { assign } from 'min-dash';\n\n/**\n * @typedef {import('../model/Types').Element} Element\n * @typedef {import('../model/Types').Connection} Connection\n * @typedef {import('../model/Types').Label} Label\n * @typedef {import('../model/Types').Root} Root\n * @typedef {import('../model/Types').Shape} Shape\n */\n\n/**\n * A factory for model elements.\n *\n * @template {Connection} [T=Connection]\n * @template {Label} [U=Label]\n * @template {Root} [V=Root]\n * @template {Shape} [W=Shape]\n */\nexport default function ElementFactory() {\n  this._uid = 12;\n}\n\n/**\n * Create a root element.\n *\n * @param {Partial<Root>} [attrs]\n *\n * @return {V} The created root element.\n */\nElementFactory.prototype.createRoot = function (attrs) {\n  return this.create('root', attrs);\n};\n\n/**\n * Create a label.\n *\n * @param {Partial<Label>} [attrs]\n *\n * @return {U} The created label.\n */\nElementFactory.prototype.createLabel = function (attrs) {\n  return this.create('label', attrs);\n};\n\n/**\n * Create a shape.\n *\n * @param {Partial<Shape>} [attrs]\n *\n * @return {W} The created shape.\n */\nElementFactory.prototype.createShape = function (attrs) {\n  return this.create('shape', attrs);\n};\n\n/**\n * Create a connection.\n *\n * @param {Partial<Connection>} [attrs]\n *\n * @return {T} The created connection.\n */\nElementFactory.prototype.createConnection = function (attrs) {\n  return this.create('connection', attrs);\n};\n\n/**\n * Create a root element.\n *\n * @overlord\n * @param {'root'} type\n * @param {Partial<Root>} [attrs]\n * @return {V}\n */\n/**\n * Create a shape.\n *\n * @overlord\n * @param {'shape'} type\n * @param {Partial<Shape>} [attrs]\n * @return {W}\n */\n/**\n * Create a connection.\n *\n * @overlord\n * @param {'connection'} type\n * @param {Partial<Connection>} [attrs]\n * @return {T}\n */\n/**\n * Create a label.\n *\n * @param {'label'} type\n * @param {Partial<Label>} [attrs]\n * @return {U}\n */\nElementFactory.prototype.create = function (type, attrs) {\n  attrs = assign({}, attrs || {});\n  if (!attrs.id) {\n    attrs.id = type + '_' + this._uid++;\n  }\n  return create(type, attrs);\n};", "import { has } from 'min-dash';\n\n/**\n * @typedef {import('../model/Types').ModdleElement} ModdleElement\n */\n\n// TODO(nikku): remove with future bpmn-js version\n\nvar DI_ERROR_MESSAGE = 'Tried to access di from the businessObject. The di is available through the diagram element only. For more information, see https://github.com/bpmn-io/bpmn-js/issues/1472';\n\n/**\n * @private\n *\n * @param {ModdleElement} businessObject\n */\nexport function ensureCompatDiRef(businessObject) {\n  // bpmnElement can have multiple independent DIs\n  if (!has(businessObject, 'di')) {\n    Object.defineProperty(businessObject, 'di', {\n      enumerable: false,\n      get: function () {\n        throw new Error(DI_ERROR_MESSAGE);\n      }\n    });\n  }\n}", "import { assign, forEach, has, isDefined, isObject, omit } from 'min-dash';\nimport inherits from 'inherits-browser';\nimport { getBusinessObject, getDi, is } from '../../util/ModelUtil';\nimport { isAny } from '../modeling/util/ModelingUtil';\nimport { isExpanded } from '../../util/DiUtil';\nimport BaseElementFactory from 'diagram-js/lib/core/ElementFactory';\nimport { DEFAULT_LABEL_SIZE } from '../../util/LabelUtil';\nimport { ensureCompatDiRef } from '../../util/CompatibilityUtil';\n\n/**\n * @typedef {import('diagram-js/lib/util/Types').Dimensions} Dimensions\n *\n * @typedef {import('./BpmnFactory').default} BpmnFactory\n *\n * @typedef {import('../../model/Types').BpmnAttributes} BpmnAttributes\n * @typedef {import('../../model/Types').Connection} Connection\n * @typedef {import('../../model/Types').Element} Element\n * @typedef {import('../../model/Types').Label} Label\n * @typedef {import('../../model/Types').Root} Root\n * @typedef {import('../../model/Types').Shape} Shape\n * @typedef {import('../../model/Types').Moddle} Moddle\n * @typedef {import('../../model/Types').ModdleElement} ModdleElement\n */\n\n/**\n * A BPMN-specific element factory.\n *\n * @template {Connection} [T=Connection]\n * @template {Label} [U=Label]\n * @template {Root} [V=Root]\n * @template {Shape} [W=Shape]\n *\n * @extends {BaseElementFactory<T, U, V, W>}\n *\n * @param {BpmnFactory} bpmnFactory\n * @param {Moddle} moddle\n */\nexport default function ElementFactory(bpmnFactory, moddle) {\n  BaseElementFactory.call(this);\n  this._bpmnFactory = bpmnFactory;\n  this._moddle = moddle;\n}\ninherits(ElementFactory, BaseElementFactory);\nElementFactory.$inject = ['bpmnFactory', 'moddle'];\nElementFactory.prototype._baseCreate = BaseElementFactory.prototype.create;\n\n/**\n * Create a root element.\n *\n * @overlord\n * @param {'root'} elementType\n * @param {Partial<Root> & Partial<BpmnAttributes>} [attrs]\n * @return {V}\n */\n\n/**\n * Create a shape.\n *\n * @overlord\n * @param {'shape'} elementType\n * @param {Partial<Shape> & Partial<BpmnAttributes>} [attrs]\n * @return {W}\n */\n\n/**\n * Create a connection.\n *\n * @overlord\n * @param {'connection'} elementType\n * @param {Partial<Connection> & Partial<BpmnAttributes>} [attrs]\n * @return {T}\n */\n\n/**\n * Create a label.\n *\n * @param {'label'} elementType\n * @param {Partial<Label> & Partial<BpmnAttributes>} [attrs]\n * @return {U}\n */\nElementFactory.prototype.create = function (elementType, attrs) {\n  // no special magic for labels,\n  // we assume their businessObjects have already been created\n  // and wired via attrs\n  if (elementType === 'label') {\n    var di = attrs.di || this._bpmnFactory.createDiLabel();\n    return this._baseCreate(elementType, assign({\n      type: 'label',\n      di: di\n    }, DEFAULT_LABEL_SIZE, attrs));\n  }\n  return this.createElement(elementType, attrs);\n};\n\n/**\n * Create a BPMN root element.\n *\n * @overlord\n * @param {'root'} elementType\n * @param {Partial<Root> & Partial<BpmnAttributes>} [attrs]\n * @return {V}\n */\n\n/**\n * Create a BPMN shape.\n *\n * @overlord\n * @param {'shape'} elementType\n * @param {Partial<Shape> & Partial<BpmnAttributes>} [attrs]\n * @return {W}\n */\n\n/**\n * Create a BPMN connection.\n *\n * @param {'connection'} elementType\n * @param {Partial<Connection> & Partial<BpmnAttributes>} [attrs]\n * @return {T}\n */\nElementFactory.prototype.createElement = function (elementType, attrs) {\n  attrs = assign({}, attrs || {});\n  var size;\n  var businessObject = attrs.businessObject,\n    di = attrs.di;\n  if (!businessObject) {\n    if (!attrs.type) {\n      throw new Error('no shape type specified');\n    }\n    businessObject = this._bpmnFactory.create(attrs.type);\n    ensureCompatDiRef(businessObject);\n  }\n  if (!isModdleDi(di)) {\n    var diAttrs = assign({}, di || {}, {\n      id: businessObject.id + '_di'\n    });\n    if (elementType === 'root') {\n      di = this._bpmnFactory.createDiPlane(businessObject, diAttrs);\n    } else if (elementType === 'connection') {\n      di = this._bpmnFactory.createDiEdge(businessObject, diAttrs);\n    } else {\n      di = this._bpmnFactory.createDiShape(businessObject, diAttrs);\n    }\n  }\n  if (is(businessObject, 'bpmn:Group')) {\n    attrs = assign({\n      isFrame: true\n    }, attrs);\n  }\n  attrs = applyAttributes(businessObject, attrs, ['processRef', 'isInterrupting', 'associationDirection', 'isForCompensation']);\n  if (attrs.isExpanded) {\n    attrs = applyAttribute(di, attrs, 'isExpanded');\n  }\n  if (isAny(businessObject, ['bpmn:Lane', 'bpmn:Participant'])) {\n    attrs = applyAttribute(di, attrs, 'isHorizontal');\n  }\n  if (is(businessObject, 'bpmn:SubProcess')) {\n    attrs.collapsed = !isExpanded(businessObject, di);\n  }\n  if (is(businessObject, 'bpmn:ExclusiveGateway')) {\n    if (has(di, 'isMarkerVisible')) {\n      if (di.isMarkerVisible === undefined) {\n        di.isMarkerVisible = false;\n      }\n    } else {\n      di.isMarkerVisible = true;\n    }\n  }\n  if (isDefined(attrs.triggeredByEvent)) {\n    businessObject.triggeredByEvent = attrs.triggeredByEvent;\n    delete attrs.triggeredByEvent;\n  }\n  if (isDefined(attrs.cancelActivity)) {\n    businessObject.cancelActivity = attrs.cancelActivity;\n    delete attrs.cancelActivity;\n  }\n  var eventDefinitions, newEventDefinition;\n  if (attrs.eventDefinitionType) {\n    eventDefinitions = businessObject.get('eventDefinitions') || [];\n    newEventDefinition = this._bpmnFactory.create(attrs.eventDefinitionType, attrs.eventDefinitionAttrs);\n    if (attrs.eventDefinitionType === 'bpmn:ConditionalEventDefinition') {\n      newEventDefinition.condition = this._bpmnFactory.create('bpmn:FormalExpression');\n    }\n    eventDefinitions.push(newEventDefinition);\n    newEventDefinition.$parent = businessObject;\n    businessObject.eventDefinitions = eventDefinitions;\n    delete attrs.eventDefinitionType;\n  }\n  size = this.getDefaultSize(businessObject, di);\n  attrs = assign({\n    id: businessObject.id\n  }, size, attrs, {\n    businessObject: businessObject,\n    di: di\n  });\n  return this._baseCreate(elementType, attrs);\n};\n\n/**\n * Get the default size of a diagram element.\n *\n * @param {Element} element The element.\n * @param {ModdleElement} di The DI.\n *\n * @return {Dimensions} Default width and height of the element.\n */\nElementFactory.prototype.getDefaultSize = function (element, di) {\n  var bo = getBusinessObject(element);\n  di = di || getDi(element);\n  if (is(bo, 'bpmn:SubProcess')) {\n    if (isExpanded(bo, di)) {\n      return {\n        width: 350,\n        height: 200\n      };\n    } else {\n      return {\n        width: 100,\n        height: 80\n      };\n    }\n  }\n  if (is(bo, 'bpmn:Task')) {\n    return {\n      width: 100,\n      height: 80\n    };\n  }\n  if (is(bo, 'bpmn:Gateway')) {\n    return {\n      width: 50,\n      height: 50\n    };\n  }\n  if (is(bo, 'bpmn:Event')) {\n    return {\n      width: 36,\n      height: 36\n    };\n  }\n  if (is(bo, 'bpmn:Participant')) {\n    var isHorizontalPool = di.isHorizontal === undefined || di.isHorizontal === true;\n    if (isExpanded(bo, di)) {\n      if (isHorizontalPool) {\n        return {\n          width: 600,\n          height: 250\n        };\n      }\n      return {\n        width: 250,\n        height: 600\n      };\n    } else {\n      if (isHorizontalPool) {\n        return {\n          width: 400,\n          height: 60\n        };\n      }\n      return {\n        width: 60,\n        height: 400\n      };\n    }\n  }\n  if (is(bo, 'bpmn:Lane')) {\n    return {\n      width: 400,\n      height: 100\n    };\n  }\n  if (is(bo, 'bpmn:DataObjectReference')) {\n    return {\n      width: 36,\n      height: 50\n    };\n  }\n  if (is(bo, 'bpmn:DataStoreReference')) {\n    return {\n      width: 50,\n      height: 50\n    };\n  }\n  if (is(bo, 'bpmn:TextAnnotation')) {\n    return {\n      width: 100,\n      height: 30\n    };\n  }\n  if (is(bo, 'bpmn:Group')) {\n    return {\n      width: 300,\n      height: 300\n    };\n  }\n  return {\n    width: 100,\n    height: 80\n  };\n};\n\n/**\n * Create participant.\n *\n * @param {boolean|Partial<Shape> & Partial<BpmnAttributes>} [attrs]\n * Attributes or whether the participant is expanded.\n *\n * @return {W} The created participant.\n */\nElementFactory.prototype.createParticipantShape = function (attrs) {\n  if (!isObject(attrs)) {\n    attrs = {\n      isExpanded: attrs\n    };\n  }\n  attrs = assign({\n    type: 'bpmn:Participant'\n  }, attrs || {});\n\n  // participants are expanded by default\n  if (attrs.isExpanded !== false) {\n    attrs.processRef = this._bpmnFactory.create('bpmn:Process');\n  }\n  return this.createShape(attrs);\n};\n\n// helpers //////////////////////\n\n/**\n * Apply attributes from a map to the given element, remove attribute from the\n * map on application.\n *\n * @param {Element} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {string[]} attributeNames name of attributes to apply\n *\n * @return {Object} changed attrs\n */\nfunction applyAttributes(element, attrs, attributeNames) {\n  forEach(attributeNames, function (property) {\n    attrs = applyAttribute(element, attrs, property);\n  });\n  return attrs;\n}\n\n/**\n * Apply named property to element and drain it from the attrs collection.\n *\n * @param {Element} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {string} attributeName to apply\n *\n * @return {Object} changed attrs\n */\nfunction applyAttribute(element, attrs, attributeName) {\n  if (attrs[attributeName] === undefined) {\n    return attrs;\n  }\n  element[attributeName] = attrs[attributeName];\n  return omit(attrs, [attributeName]);\n}\n\n/**\n * @param {Element} element\n *\n * @return {boolean}\n */\nfunction isModdleDi(element) {\n  return isAny(element, ['bpmndi:BPMNShape', 'bpmndi:BPMNEdge', 'bpmndi:BPMNDiagram', 'bpmndi:BPMNPlane']);\n}"],
  "mappings": "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",
  "names": ["e", "ElementFactory"]
}
