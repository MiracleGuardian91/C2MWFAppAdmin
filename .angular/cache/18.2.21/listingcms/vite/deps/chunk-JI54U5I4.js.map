{
  "version": 3,
  "sources": ["../../../../../../node_modules/diagram-js/lib/command/CommandInterceptor.js"],
  "sourcesContent": ["import { forEach, isFunction, isArray, isNumber, isObject } from 'min-dash';\n\n/**\n * @typedef {import('../core/Types').ElementLike} ElementLike\n * @typedef {import('../core/EventBus').default} EventBus\n * @typedef {import('./CommandStack').CommandContext} CommandContext\n *\n * @typedef {string|string[]} Events\n * @typedef { (context: CommandContext) => ElementLike[] | void } HandlerFunction\n * @typedef { (context: CommandContext) => void } ComposeHandlerFunction\n */\n\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * A utility that can be used to plug into the command execution for\n * extension and/or validation.\n *\n * @class\n * @constructor\n *\n * @example\n *\n * ```javascript\n * import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n *\n * class CommandLogger extends CommandInterceptor {\n *   constructor(eventBus) {\n *     super(eventBus);\n *\n *   this.preExecute('shape.create', (event) => {\n *     console.log('commandStack.shape-create.preExecute', event);\n *   });\n * }\n * ```\n *\n * @param {EventBus} eventBus\n */\nexport default function CommandInterceptor(eventBus) {\n  /**\n   * @type {EventBus}\n   */\n  this._eventBus = eventBus;\n}\nCommandInterceptor.$inject = ['eventBus'];\nfunction unwrapEvent(fn, that) {\n  return function (event) {\n    return fn.call(that || null, event.context, event.command, event);\n  };\n}\n\n/**\n * Intercept a command during one of the phases.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {string} [hook] phase to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.on = function (events, hook, priority, handlerFn, unwrap, that) {\n  if (isFunction(hook) || isNumber(hook)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = hook;\n    hook = null;\n  }\n  if (isFunction(priority)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n  if (isObject(unwrap)) {\n    that = unwrap;\n    unwrap = false;\n  }\n  if (!isFunction(handlerFn)) {\n    throw new Error('handlerFn must be a function');\n  }\n  if (!isArray(events)) {\n    events = [events];\n  }\n  var eventBus = this._eventBus;\n  forEach(events, function (event) {\n    // concat commandStack(.event)?(.hook)?\n    var fullEvent = ['commandStack', event, hook].filter(function (e) {\n      return e;\n    }).join('.');\n    eventBus.on(fullEvent, priority, unwrap ? unwrapEvent(handlerFn, that) : handlerFn, that);\n  });\n};\n\n/**\n * Add a <canExecute> phase of command interceptor.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.canExecute = createHook('canExecute');\n\n/**\n * Add a <preExecute> phase of command interceptor.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.preExecute = createHook('preExecute');\n\n/**\n * Add a <preExecuted> phase of command interceptor.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.preExecuted = createHook('preExecuted');\n\n/**\n * Add a <execute> phase of command interceptor.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.execute = createHook('execute');\n\n/**\n * Add a <executed> phase of command interceptor.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.executed = createHook('executed');\n\n/**\n * Add a <postExecute> phase of command interceptor.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.postExecute = createHook('postExecute');\n\n/**\n * Add a <postExecuted> phase of command interceptor.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.postExecuted = createHook('postExecuted');\n\n/**\n * Add a <revert> phase of command interceptor.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.revert = createHook('revert');\n\n/**\n * Add a <reverted> phase of command interceptor.\n *\n * @param {Events} [events] command(s) to intercept\n * @param {number} [priority]\n * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n * @param {boolean} [unwrap] whether the event should be unwrapped\n * @param {any} [that]\n */\nCommandInterceptor.prototype.reverted = createHook('reverted');\n\n/*\n * Add prototype methods for each phase of command execution (e.g. execute,\n * revert).\n *\n * @param {string} hook\n *\n * @return { (\n *   events?: Events,\n *   priority?: number,\n *   handlerFn: ComposeHandlerFunction|HandlerFunction,\n *   unwrap?: boolean\n * ) => any }\n */\nfunction createHook(hook) {\n  /**\n   * @this {CommandInterceptor}\n   *\n   * @param {Events} [events]\n   * @param {number} [priority]\n   * @param {ComposeHandlerFunction|HandlerFunction} handlerFn\n   * @param {boolean} [unwrap]\n   * @param {any} [that]\n   */\n  const hookFn = function (events, priority, handlerFn, unwrap, that) {\n    if (isFunction(events) || isNumber(events)) {\n      that = unwrap;\n      unwrap = handlerFn;\n      handlerFn = priority;\n      priority = events;\n      events = null;\n    }\n    this.on(events, hook, priority, handlerFn, unwrap, that);\n  };\n  return hookFn;\n}"],
  "mappings": ";;;;;;;;;AAYA,IAAI,mBAAmB;AA0BR,SAAR,mBAAoC,UAAU;AAInD,OAAK,YAAY;AACnB;AACA,mBAAmB,UAAU,CAAC,UAAU;AACxC,SAAS,YAAY,IAAI,MAAM;AAC7B,SAAO,SAAU,OAAO;AACtB,WAAO,GAAG,KAAK,QAAQ,MAAM,MAAM,SAAS,MAAM,SAAS,KAAK;AAAA,EAClE;AACF;AAYA,mBAAmB,UAAU,KAAK,SAAU,QAAQ,MAAM,UAAU,WAAW,QAAQ,MAAM;AAC3F,MAAI,WAAW,IAAI,KAAK,SAAS,IAAI,GAAG;AACtC,WAAO;AACP,aAAS;AACT,gBAAY;AACZ,eAAW;AACX,WAAO;AAAA,EACT;AACA,MAAI,WAAW,QAAQ,GAAG;AACxB,WAAO;AACP,aAAS;AACT,gBAAY;AACZ,eAAW;AAAA,EACb;AACA,MAAI,SAAS,MAAM,GAAG;AACpB,WAAO;AACP,aAAS;AAAA,EACX;AACA,MAAI,CAAC,WAAW,SAAS,GAAG;AAC1B,UAAM,IAAI,MAAM,8BAA8B;AAAA,EAChD;AACA,MAAI,CAAC,QAAQ,MAAM,GAAG;AACpB,aAAS,CAAC,MAAM;AAAA,EAClB;AACA,MAAI,WAAW,KAAK;AACpB,UAAQ,QAAQ,SAAU,OAAO;AAE/B,QAAI,YAAY,CAAC,gBAAgB,OAAO,IAAI,EAAE,OAAO,SAAU,GAAG;AAChE,aAAO;AAAA,IACT,CAAC,EAAE,KAAK,GAAG;AACX,aAAS,GAAG,WAAW,UAAU,SAAS,YAAY,WAAW,IAAI,IAAI,WAAW,IAAI;AAAA,EAC1F,CAAC;AACH;AAWA,mBAAmB,UAAU,aAAa,WAAW,YAAY;AAWjE,mBAAmB,UAAU,aAAa,WAAW,YAAY;AAWjE,mBAAmB,UAAU,cAAc,WAAW,aAAa;AAWnE,mBAAmB,UAAU,UAAU,WAAW,SAAS;AAW3D,mBAAmB,UAAU,WAAW,WAAW,UAAU;AAW7D,mBAAmB,UAAU,cAAc,WAAW,aAAa;AAWnE,mBAAmB,UAAU,eAAe,WAAW,cAAc;AAWrE,mBAAmB,UAAU,SAAS,WAAW,QAAQ;AAWzD,mBAAmB,UAAU,WAAW,WAAW,UAAU;AAe7D,SAAS,WAAW,MAAM;AAUxB,QAAM,SAAS,SAAU,QAAQ,UAAU,WAAW,QAAQ,MAAM;AAClE,QAAI,WAAW,MAAM,KAAK,SAAS,MAAM,GAAG;AAC1C,aAAO;AACP,eAAS;AACT,kBAAY;AACZ,iBAAW;AACX,eAAS;AAAA,IACX;AACA,SAAK,GAAG,QAAQ,MAAM,UAAU,WAAW,QAAQ,IAAI;AAAA,EACzD;AACA,SAAO;AACT;",
  "names": []
}
