{
  "version": 3,
  "sources": ["../../../../../../node_modules/ids/dist/index.esm.js"],
  "sourcesContent": ["function createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\nvar hat_1 = createCommonjsModule(function (module) {\n  var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n      digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    var rem = digits - Math.floor(digits);\n    var res = '';\n    for (var i = 0; i < Math.floor(digits); i++) {\n      var x = Math.floor(Math.random() * base).toString(base);\n      res = x + res;\n    }\n    if (rem) {\n      var b = Math.pow(base, rem);\n      var x = Math.floor(Math.random() * b).toString(base);\n      res = x + res;\n    }\n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n      return hat(bits, base);\n    } else return res;\n  };\n  hat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n      var iters = 0;\n      do {\n        if (iters++ > 10) {\n          if (expandBy) bits += expandBy;else throw new Error('too many ID collisions, use more bits');\n        }\n        var id = hat(bits, base);\n      } while (Object.hasOwnProperty.call(hats, id));\n      hats[id] = data;\n      return id;\n    };\n    var hats = fn.hats = {};\n    fn.get = function (id) {\n      return fn.hats[id];\n    };\n    fn.set = function (id, value) {\n      fn.hats[id] = value;\n      return fn;\n    };\n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n  };\n});\n\n/**\n * Create a new id generator / cache instance.\n *\n * You may optionally provide a seed that is used internally.\n *\n * @param {Seed} seed\n */\nfunction Ids(seed) {\n  if (!(this instanceof Ids)) {\n    return new Ids(seed);\n  }\n  seed = seed || [128, 36, 1];\n  this._seed = seed.length ? hat_1.rack(seed[0], seed[1], seed[2]) : seed;\n}\n\n/**\n * Generate a next id.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\nIds.prototype.next = function (element) {\n  return this._seed(element || true);\n};\n\n/**\n * Generate a next id with a given prefix.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\nIds.prototype.nextPrefixed = function (prefix, element) {\n  var id;\n  do {\n    id = prefix + this.next(true);\n  } while (this.assigned(id));\n\n  // claim {prefix}{random}\n  this.claim(id, element);\n\n  // return\n  return id;\n};\n\n/**\n * Manually claim an existing id.\n *\n * @param {String} id\n * @param {String} [element] element the id is claimed by\n */\nIds.prototype.claim = function (id, element) {\n  this._seed.set(id, element || true);\n};\n\n/**\n * Returns true if the given id has already been assigned.\n *\n * @param  {String} id\n * @return {Boolean}\n */\nIds.prototype.assigned = function (id) {\n  return this._seed.get(id) || false;\n};\n\n/**\n * Unclaim an id.\n *\n * @param  {String} id the id to unclaim\n */\nIds.prototype.unclaim = function (id) {\n  delete this._seed.hats[id];\n};\n\n/**\n * Clear all claimed ids.\n */\nIds.prototype.clear = function () {\n  var hats = this._seed.hats,\n    id;\n  for (id in hats) {\n    this.unclaim(id);\n  }\n};\nexport default Ids;\n"],
  "mappings": "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",
  "names": []
}
