{
  "version": 3,
  "sources": ["../../../../../../node_modules/tiny-svg/dist/index.esm.js"],
  "sourcesContent": ["function ensureImported(element, target) {\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n\n      // ignore\n    }\n  }\n  return element;\n}\n\n/**\n * appendTo utility\n */\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the appended node\n */\nfunction appendTo(element, target) {\n  return target.appendChild(ensureImported(element, target));\n}\n\n/**\n * append utility\n */\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\nfunction append(target, node) {\n  appendTo(node, target);\n  return target;\n}\n\n/**\n * attribute accessor utility\n */\n\nvar LENGTH_ATTR = 2;\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  var type = CSS_PROPERTIES[hyphenated];\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\nfunction setAttributes(node, attrs) {\n  var names = Object.keys(attrs),\n    i,\n    name;\n  for (i = 0, name; name = names[i]; i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n  return node;\n}\n\n/**\r\n * Taken from https://github.com/component/classes\r\n *\r\n * Without the component bits.\r\n */\n\n/**\r\n * toString reference.\r\n */\n\nconst toString = Object.prototype.toString;\n\n/**\r\n  * Wrap `el` in a `ClassList`.\r\n  *\r\n  * @param {Element} el\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nfunction classes(el) {\n  return new ClassList(el);\n}\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\r\n  * Add class `name` if not already present.\r\n  *\r\n  * @param {String} name\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nClassList.prototype.add = function (name) {\n  this.list.add(name);\n  return this;\n};\n\n/**\r\n  * Remove class `name` when present, or\r\n  * pass a regular expression to remove\r\n  * any which match.\r\n  *\r\n  * @param {String|RegExp} name\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n  this.list.remove(name);\n  return this;\n};\n\n/**\r\n  * Remove all classes matching `re`.\r\n  *\r\n  * @param {RegExp} re\r\n  * @return {ClassList}\r\n  * @api private\r\n  */\n\nClassList.prototype.removeMatching = function (re) {\n  const arr = this.array();\n  for (let i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\r\n  * Toggle class `name`, can force state via `force`.\r\n  *\r\n  * For browsers that support classList, but do not support `force` yet,\r\n  * the mistake will be detected and corrected.\r\n  *\r\n  * @param {String} name\r\n  * @param {Boolean} force\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nClassList.prototype.toggle = function (name, force) {\n  if ('undefined' !== typeof force) {\n    if (force !== this.list.toggle(name, force)) {\n      this.list.toggle(name); // toggle again to correct\n    }\n  } else {\n    this.list.toggle(name);\n  }\n  return this;\n};\n\n/**\r\n  * Return an array of classes.\r\n  *\r\n  * @return {Array}\r\n  * @api public\r\n  */\n\nClassList.prototype.array = function () {\n  return Array.from(this.list);\n};\n\n/**\r\n  * Check if class `name` is present.\r\n  *\r\n  * @param {String} name\r\n  * @return {ClassList}\r\n  * @api public\r\n  */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list.contains(name);\n};\n\n/**\n * Clear utility\n */\n\n/**\n * Removes all children from the given element\n *\n * @param  {SVGElement} element\n * @return {Element} the element (for chaining)\n */\nfunction clear(element) {\n  var child;\n  while (child = element.firstChild) {\n    element.removeChild(child);\n  }\n  return element;\n}\nfunction clone(element) {\n  return element.cloneNode(true);\n}\nvar ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\n/**\n * DOM parsing utility\n */\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\nfunction parse(svg) {\n  var unwrap = false;\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n    unwrap = true;\n  }\n  var parsed = parseDocument(svg);\n  if (!unwrap) {\n    return parsed;\n  }\n  var fragment = document.createDocumentFragment();\n  var parent = parsed.firstChild;\n  while (parent.firstChild) {\n    fragment.appendChild(parent.firstChild);\n  }\n  return fragment;\n}\nfunction parseDocument(svg) {\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n  return parser.parseFromString(svg, 'text/xml');\n}\n\n/**\n * Create utility for SVG elements\n */\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\nfunction create(name, attrs) {\n  var element;\n  name = name.trim();\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n  if (attrs) {\n    attr(element, attrs);\n  }\n  return element;\n}\n\n/**\n * Events handling utility\n */\n\nfunction on(node, event, listener, useCapture) {\n  node.addEventListener(event, listener, useCapture);\n}\nfunction off(node, event, listener, useCapture) {\n  node.removeEventListener(event, listener, useCapture);\n}\n\n/**\n * Geometry helpers\n */\n\n// fake node used to instantiate svg geometry elements\nvar node = null;\nfunction getNode() {\n  if (node === null) {\n    node = create('svg');\n  }\n  return node;\n}\nfunction extend(object, props) {\n  var i,\n    k,\n    keys = Object.keys(props);\n  for (i = 0; k = keys[i]; i++) {\n    object[k] = props[k];\n  }\n  return object;\n}\nfunction createPoint(x, y) {\n  var point = getNode().createSVGPoint();\n  switch (arguments.length) {\n    case 0:\n      return point;\n    case 2:\n      x = {\n        x: x,\n        y: y\n      };\n      break;\n  }\n  return extend(point, x);\n}\n\n/**\n * Create matrix via args.\n *\n * @example\n *\n * createMatrix({ a: 1, b: 1 });\n * createMatrix();\n * createMatrix(1, 2, 0, 0, 30, 20);\n *\n * @return {SVGMatrix}\n */\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = getNode().createSVGMatrix();\n  switch (arguments.length) {\n    case 0:\n      return matrix;\n    case 1:\n      return extend(matrix, a);\n    case 6:\n      return extend(matrix, {\n        a: a,\n        b: b,\n        c: c,\n        d: d,\n        e: e,\n        f: f\n      });\n  }\n}\nfunction createTransform(matrix) {\n  if (matrix) {\n    return getNode().createSVGTransformFromMatrix(matrix);\n  } else {\n    return getNode().createSVGTransform();\n  }\n}\n\n/**\n * Serialization util\n */\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([&<>\\n\\r\"]{1})/g;\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '\\''\n};\nfunction escape(str, pattern) {\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n  return str.replace(pattern, replaceFn);\n}\nfunction serialize(node, output) {\n  var i, len, attrMap, attrNode, childNodes;\n  switch (node.nodeType) {\n    // TEXT\n    case 3:\n      // replace special XML characters\n      output.push(escape(node.textContent, TEXT_ENTITIES));\n      break;\n\n    // ELEMENT\n    case 1:\n      output.push('<', node.tagName);\n      if (node.hasAttributes()) {\n        attrMap = node.attributes;\n        for (i = 0, len = attrMap.length; i < len; ++i) {\n          attrNode = attrMap.item(i);\n          output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n        }\n      }\n      if (node.hasChildNodes()) {\n        output.push('>');\n        childNodes = node.childNodes;\n        for (i = 0, len = childNodes.length; i < len; ++i) {\n          serialize(childNodes.item(i), output);\n        }\n        output.push('</', node.tagName, '>');\n      } else {\n        output.push('/>');\n      }\n      break;\n\n    // COMMENT\n    case 8:\n      output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n      break;\n\n    // CDATA\n    case 4:\n      output.push('<![CDATA[', node.nodeValue, ']]>');\n      break;\n    default:\n      throw new Error('unable to handle node ' + node.nodeType);\n  }\n  return output;\n}\n\n/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\nfunction set(element, svg) {\n  var parsed = parse(svg);\n\n  // clear element contents\n  clear(element);\n  if (!svg) {\n    return;\n  }\n  if (!isFragment(parsed)) {\n    // extract <svg> from parsed document\n    parsed = parsed.documentElement;\n  }\n  var nodes = slice(parsed.childNodes);\n\n  // import + append each node\n  for (var i = 0; i < nodes.length; i++) {\n    appendTo(nodes[i], element);\n  }\n}\nfunction get(element) {\n  var child = element.firstChild,\n    output = [];\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n  return output.join('');\n}\nfunction isFragment(node) {\n  return node.nodeName === '#document-fragment';\n}\nfunction innerSVG(element, svg) {\n  if (svg !== undefined) {\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n    return element;\n  } else {\n    return get(element);\n  }\n}\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\n/**\n * Selection utilities\n */\n\nfunction select(node, selector) {\n  return node.querySelector(selector);\n}\nfunction selectAll(node, selector) {\n  var nodes = node.querySelectorAll(selector);\n  return [].map.call(nodes, function (element) {\n    return element;\n  });\n}\n\n/**\n * prependTo utility\n */\n\n/**\n * Prepend a node to a target element and return the prepended node.\n *\n * @param  {SVGElement} node\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the prepended node\n */\nfunction prependTo(node, target) {\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\n}\n\n/**\n * prepend utility\n */\n\n/**\n * Prepend a node to a target element\n *\n * @param  {SVGElement} target\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the target element\n */\nfunction prepend(target, node) {\n  prependTo(node, target);\n  return target;\n}\nfunction remove(element) {\n  var parent = element.parentNode;\n  if (parent) {\n    parent.removeChild(element);\n  }\n  return element;\n}\n\n/**\n * Replace utility\n */\n\nfunction replace(element, replacement) {\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\n  return replacement;\n}\n\n/**\n * transform accessor utility\n */\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  }\n  return transform;\n}\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n  transformList.clear();\n  for (i = 0; t = transforms[i]; i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n}\n\n/**\n * Get or set the transforms on the given node.\n *\n * @param {SVGElement} node\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\n *\n * @return {SVGTransform} the consolidated transform\n */\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n  if (transforms) {\n    if (!Array.isArray(transforms)) {\n      transforms = [transforms];\n    }\n    setTransforms(transformList, transforms);\n  }\n  return transformList.consolidate();\n}\nexport { append, appendTo, attr, classes, clear, clone, create, createMatrix, createPoint, createTransform, innerSVG, off, on, prepend, prependTo, remove, replace, select, selectAll, transform };"],
  "mappings": "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",
  "names": ["node", "transform"]
}
